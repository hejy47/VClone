Source Block: hdl/library/axi_dmac/request_arb.v@568:653@HdlStmIf
assign fifo_rd_dout = 'h0;
assign fifo_rd_underflow = 1'b0;

end endgenerate

generate if (C_DMA_TYPE_SRC == DMA_TYPE_MM_AXI) begin

assign src_clk = m_src_axi_aclk;
assign src_resetn = m_src_axi_aresetn;

wire [C_ID_WIDTH-1:0] src_data_id;
wire [C_ID_WIDTH-1:0] src_address_id;
wire src_address_eot = eot_mem_src[src_address_id];
wire src_data_eot = eot_mem_src[src_data_id];

assign dbg_src_address_id = src_address_id;
assign dbg_src_data_id = src_data_id;

dmac_src_mm_axi #(
	.C_ID_WIDTH(C_ID_WIDTH),
	.C_DMA_DATA_WIDTH(C_DMA_DATA_WIDTH_SRC),
	.C_ADDR_ALIGN_BITS(C_ADDR_ALIGN_BITS),
	.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)
) i_src_dma_mm (
	.m_axi_aclk(m_src_axi_aclk),
	.m_axi_aresetn(m_src_axi_aresetn),

	.pause(pause),
	.enable(src_enable),
	.enabled(src_enabled),
	.sync_id(src_sync_id),
	.sync_id_ret(src_sync_id_ret),

	.req_valid(src_req_valid),
	.req_ready(src_req_ready),
	.req_address(src_req_address),
	.req_last_burst_length(src_req_last_burst_length),

	.response_valid(src_response_valid),
	.response_ready(src_response_ready),
	.response_resp(src_response_resp),

	.request_id(src_request_id),
	.response_id(src_response_id),
	.address_id(src_address_id),
	.data_id(src_data_id),

	.address_eot(src_address_eot),
	.data_eot(src_data_eot),

	.fifo_valid(src_valid),
	.fifo_ready(src_ready),
	.fifo_data(src_data),

	.m_axi_arready(m_axi_arready),
	.m_axi_arvalid(m_axi_arvalid),
	.m_axi_araddr(m_axi_araddr),
	.m_axi_arlen(m_axi_arlen),
	.m_axi_arsize(m_axi_arsize),
	.m_axi_arburst(m_axi_arburst),
	.m_axi_arprot(m_axi_arprot),
	.m_axi_arcache(m_axi_arcache),

	.m_axi_rready(m_axi_rready),
	.m_axi_rvalid(m_axi_rvalid),
	.m_axi_rdata(m_axi_rdata),
	.m_axi_rresp(m_axi_rresp)
);

end else begin

assign m_axi_arvalid = 1'b0;
assign m_axi_araddr = 'h00;
assign m_axi_arlen = 'h00;
assign m_axi_arsize = 'h00;
assign m_axi_arburst = 'h00;
assign m_axi_arcache = 'h00;
assign m_axi_arprot = 'h00;
assign m_axi_rready = 1'b0;

end 

if (C_DMA_TYPE_SRC == DMA_TYPE_STREAM_AXI) begin

assign src_clk = s_axis_aclk;


Diff Content:
- 589 	.C_ADDR_ALIGN_BITS(C_ADDR_ALIGN_BITS),
- 590 	.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)
+ 590 	.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC),
+ 590 	.C_BYTES_PER_BEAT_WIDTH(C_BYTES_PER_BEAT_WIDTH_SRC)

Clone Blocks:
