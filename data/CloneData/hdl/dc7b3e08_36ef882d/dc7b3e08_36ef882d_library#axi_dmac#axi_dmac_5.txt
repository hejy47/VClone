Source Block: hdl/library/axi_dmac/axi_dmac.v@280:332@HdlStmProcess
end

// Register Interface
assign up_write = up_wr & up_sel;

always @(posedge s_axi_aclk)
begin
	if (s_axi_aresetn == 1'b0) begin
		up_enable <= 'h00;
		up_pause <= 'h00;
		up_dma_src_address <= 'h00;
		up_dma_dest_address <= 'h00;
		up_dma_y_length <= 'h00;
		up_dma_x_length <= 'h00;
		up_dma_dest_stride <= 'h00;
		up_dma_src_stride <= 'h00;
		up_irq_mask <= 3'b11;
		up_dma_req_valid <= 1'b0;
		up_scratch <= 'h00;
		up_ack <= 1'b0;
	end else begin
		up_ack <= up_sel;
		if (up_enable == 1'b1) begin
			if (up_write && up_addr[11:0] == 12'h102) begin
				up_dma_req_valid <= up_dma_req_valid | up_wdata[0];
			end else if (up_sot) begin
				up_dma_req_valid <= 1'b0;
			end
		end else begin
			up_dma_req_valid <= 1'b0;
		end

		if (up_write) begin
			case (up_addr[11:0])
			12'h002: up_scratch <= up_wdata;
			12'h020: up_irq_mask <= up_wdata;
			12'h100: {up_pause, up_enable} <= up_wdata[1:0];
			12'h103: if (C_CYCLIC) up_dma_cyclic <= up_wdata[0];
			12'h104: up_dma_dest_address <= up_wdata[31:C_ADDR_ALIGN_BITS];
			12'h105: up_dma_src_address <= up_wdata[31:C_ADDR_ALIGN_BITS];
			12'h106: up_dma_x_length <= up_wdata[C_DMA_LENGTH_WIDTH-1:0];
			12'h107: up_dma_y_length <= up_wdata[C_DMA_LENGTH_WIDTH-1:0];
			12'h108: up_dma_dest_stride <= up_wdata[C_DMA_LENGTH_WIDTH-1:0];
			12'h109: up_dma_src_stride <= up_wdata[C_DMA_LENGTH_WIDTH-1:0];
			endcase
		end
	end
end

always @(posedge s_axi_aclk)
begin
	if (s_axi_aresetn == 1'b0) begin
		up_rdata <= 'h00;

Diff Content:
- 318 			12'h104: up_dma_dest_address <= up_wdata[31:C_ADDR_ALIGN_BITS];
- 319 			12'h105: up_dma_src_address <= up_wdata[31:C_ADDR_ALIGN_BITS];
+ 319 			12'h104: up_dma_dest_address <= up_wdata[31:BYTES_PER_BEAT_WIDTH_DEST];
+ 319 			12'h105: up_dma_src_address <= up_wdata[31:BYTES_PER_BEAT_WIDTH_SRC];

Clone Blocks:
