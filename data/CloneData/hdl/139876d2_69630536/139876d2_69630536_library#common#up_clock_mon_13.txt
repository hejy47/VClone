Source Block: hdl/library/common/up_clock_mon.v@55:65@HdlStmAssign
  wire            up_count_toggle_s;
  wire            d_count_toggle_s;

  // processor reference

  assign up_count_toggle_s = up_count_toggle_m3 ^ up_count_toggle_m2;

  always @(negedge up_rstn or posedge up_clk) begin
    if (up_rstn == 0) begin
      up_count <= 'd0;
      up_count_toggle <= 'd0;

Diff Content:
- 60   assign up_count_toggle_s = up_count_toggle_m3 ^ up_count_toggle_m2;
+ 60   assign up_count_capture_s = up_count_running_m3 == 1'b1 && up_count_running_m2 == 1'b0;
+ 60   always @(negedge up_rstn or posedge up_clk) begin
+ 60     if (up_rstn == 0) begin
+ 60       up_count_running_m1 <= 1'b0;
+ 60       up_count_running_m2 <= 1'b0;
+ 60       up_count_running_m3 <= 1'b0;
+ 60     end else begin
+ 60       up_count_running_m1 <= d_count_run_m3;
+ 60       up_count_running_m2 <= up_count_running_m1;
+ 60       up_count_running_m3 <= up_count_running_m2;
+ 60     end
+ 60   end

Clone Blocks:
Clone Blocks 1:
hdl/library/common/up_clock_mon.v@50:60
  reg     [31:0]  d_count_hold = 'd0;
  reg     [32:0]  d_count = 'd0;

  // internal signals

  wire            up_count_toggle_s;
  wire            d_count_toggle_s;

  // processor reference

  assign up_count_toggle_s = up_count_toggle_m3 ^ up_count_toggle_m2;

Clone Blocks 2:
hdl/library/common/up_clock_mon.v@51:61
  reg     [32:0]  d_count = 'd0;

  // internal signals

  wire            up_count_toggle_s;
  wire            d_count_toggle_s;

  // processor reference

  assign up_count_toggle_s = up_count_toggle_m3 ^ up_count_toggle_m2;


