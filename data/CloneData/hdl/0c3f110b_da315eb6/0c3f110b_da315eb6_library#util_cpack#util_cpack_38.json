{"Source Block": ["hdl/library/util_cpack/util_cpack.v@272:296@HdlStmFor", "  end\n\n  // store & fwd\n\n  generate\n  for (n = 0; n < NUM_OF_CHANNELS_P; n = n + 1) begin: g_dsf\n  util_cpack_dsf #(\n    .NUM_OF_CHANNELS_M (NUM_OF_CHANNELS_M),\n    .NUM_OF_CHANNELS_P (NUM_OF_CHANNELS_P),\n    .CHANNEL_DATA_WIDTH (CHANNEL_DATA_WIDTH),\n    .NUM_OF_CHANNELS_I ((n+1)))\n  i_dsf (\n    .adc_clk (adc_clk),\n    .adc_valid (adc_mux_valid),\n    .adc_enable (adc_mux_enable[n]),\n    .adc_data (adc_mux_data[((CH_SCNT*16*((11*n)+1))-1):(CH_SCNT*16*10*n)]),\n    .adc_dsf_valid (adc_dsf_valid_s[n]),\n    .adc_dsf_sync (adc_dsf_sync_s[n]),\n    .adc_dsf_data (adc_dsf_data_s[n]));\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_CHANNELS_M > NUM_OF_CHANNELS_P) begin\n  for (n = NUM_OF_CHANNELS_P; n < NUM_OF_CHANNELS_M; n = n + 1) begin: g_def\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[287, "    .adc_data (adc_mux_data[((CH_SCNT*16*((11*n)+1))-1):(CH_SCNT*16*10*n)]),\n"]], "Add": [[287, "    .adc_data (adc_mux_data[((SAMPLES_PCHANNEL*16*((11*n)+1))-1):(SAMPLES_PCHANNEL*16*10*n)]),\n"]]}}