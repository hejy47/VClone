Source Block: hdl/library/axi_adrv9001/axi_adrv9001_core.v@517:607@HdlStmIf
    .up_raddr (up_raddr),
    .up_rdata (up_rdata_s[5]),
    .up_rack (up_rack_s[5]));

  generate
  if (TDD_DISABLE == 0) begin

  wire tdd_rx2_rf_en_loc;
  wire tdd_tx2_rf_en_loc;
  wire tdd_if2_mode_loc;

  axi_adrv9001_tdd #(
    .BASE_ADDRESS (6'h12)
  ) i_tdd_1 (
    .clk (rx1_clk),
    .rst (rx1_rst),
    .tdd_rx_vco_en (),
    .tdd_tx_vco_en (),
    .tdd_rx_rf_en (tdd_rx1_rf_en),
    .tdd_tx_rf_en (tdd_tx1_rf_en),
    .tdd_enabled (tdd_if1_mode),
    .tdd_status (8'h0),
    .tdd_sync (tdd_sync),
    .tdd_sync_cntr (tdd_sync_cntr1),
    .tdd_tx_valid (tdd_tx1_valid),
    .tdd_rx_valid (tdd_rx1_valid),
    .up_rstn (up_rstn),
    .up_clk (up_clk),
    .up_wreq (up_wreq),
    .up_waddr (up_waddr),
    .up_wdata (up_wdata),
    .up_wack (up_wack_s[6]),
    .up_rreq (up_rreq),
    .up_raddr (up_raddr),
    .up_rdata (up_rdata_s[6]),
    .up_rack (up_rack_s[6]));

  axi_adrv9001_tdd #(
    .BASE_ADDRESS (6'h13)
  ) i_tdd_2 (
    .clk (rx2_clk),
    .rst (rx2_rst),
    .tdd_rx_vco_en (),
    .tdd_tx_vco_en (),
    .tdd_rx_rf_en (tdd_rx2_rf_en_loc),
    .tdd_tx_rf_en (tdd_tx2_rf_en_loc),
    .tdd_enabled (tdd_if2_mode_loc),
    .tdd_status (8'h0),
    .tdd_sync (tdd_sync),
    .tdd_sync_cntr (tdd_sync_cntr2),
    .tdd_tx_valid (tdd_tx2_valid),
    .tdd_rx_valid (tdd_rx2_valid),
    .up_rstn (up_rstn),
    .up_clk (up_clk),
    .up_wreq (up_wreq),
    .up_waddr (up_waddr),
    .up_wdata (up_wdata),
    .up_wack (up_wack_s[7]),
    .up_rreq (up_rreq),
    .up_raddr (up_raddr),
    .up_rdata (up_rdata_s[7]),
    .up_rack (up_rack_s[7]));

  assign tdd_rx2_rf_en = tx1_r1_mode&rx1_r1_mode ? tdd_rx2_rf_en_loc : tdd_rx1_rf_en;
  assign tdd_tx2_rf_en = tx1_r1_mode&rx1_r1_mode ? tdd_tx2_rf_en_loc : tdd_tx1_rf_en;
  assign tdd_if2_mode = tx1_r1_mode&rx1_r1_mode ? tdd_if2_mode_loc : tdd_if1_mode;

  assign tdd_sync_cntr = tdd_sync_cntr1 | tdd_sync_cntr2;

  end else begin
    assign up_wack_s[6] = 1'b0;
    assign up_rack_s[6] = 1'b0;
    assign up_rdata_s[6] = 32'h0;
    assign up_wack_s[7] = 1'b0;
    assign up_rack_s[7] = 1'b0;
    assign up_rdata_s[7] = 32'h0;
    assign tdd_rx1_rf_en = 1'b1;
    assign tdd_tx1_rf_en = 1'b1;
    assign tdd_if1_mode = 1'b0;
    assign tdd_tx1_valid = 1'b1;
    assign tdd_rx1_valid = 1'b1;
    assign tdd_rx2_rf_en = 1'b1;
    assign tdd_tx2_rf_en = 1'b1;
    assign tdd_if2_mode = 1'b0;
    assign tdd_tx2_valid = 1'b1;
    assign tdd_rx2_valid = 1'b1;
  end
  endgenerate

endmodule


Diff Content:
- 580   assign tdd_rx2_rf_en = tx1_r1_mode&rx1_r1_mode ? tdd_rx2_rf_en_loc : tdd_rx1_rf_en;
- 581   assign tdd_tx2_rf_en = tx1_r1_mode&rx1_r1_mode ? tdd_tx2_rf_en_loc : tdd_tx1_rf_en;
- 582   assign tdd_if2_mode = tx1_r1_mode&rx1_r1_mode ? tdd_if2_mode_loc : tdd_if1_mode;
+ 582   assign tdd_rx2_rf_en = rx1_r1_mode ? tdd_rx2_rf_en_loc : tdd_rx1_rf_en;
+ 582   assign tdd_tx2_rf_en = tx1_r1_mode ? tdd_tx2_rf_en_loc : tdd_tx1_rf_en;
+ 582   assign tdd_if2_mode = tx1_r1_mode||rx1_r1_mode ? tdd_if2_mode_loc : tdd_if1_mode;

Clone Blocks:
