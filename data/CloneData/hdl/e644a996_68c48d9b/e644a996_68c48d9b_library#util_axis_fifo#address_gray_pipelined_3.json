{"Source Block": ["hdl/library/util_axis_fifo/address_gray_pipelined.v@117:139@HdlStmProcess", "  .out_resetn(s_axis_aresetn),\n  .in_count(_m_axis_raddr),\n  .out_count(_s_axis_raddr)\n);\n\nalways @(posedge s_axis_aclk)\nbegin\n  if (s_axis_aresetn == 1'b0) begin\n    s_axis_ready <= 1'b1;\n    s_axis_empty <= 1'b1;\n    s_axis_room <= 2**ADDRESS_WIDTH;\n  end else begin\n    s_axis_ready <= (_s_axis_raddr[ADDRESS_WIDTH] == _s_axis_waddr_next[ADDRESS_WIDTH] ||\n      _s_axis_raddr[ADDRESS_WIDTH-1:0] != _s_axis_waddr_next[ADDRESS_WIDTH-1:0]);\n    s_axis_empty <= _s_axis_raddr == _s_axis_waddr_next;\n    s_axis_room <= _s_axis_raddr - _s_axis_waddr_next + 2**ADDRESS_WIDTH;\n  end\nend\n\nalways @(posedge m_axis_aclk)\nbegin\n  if (m_axis_aresetn == 1'b0) begin\n    m_axis_valid <= 1'b0;\n"], "Clone Blocks": [["hdl/library/util_axis_fifo/address_gray.v@125:146", "  .out_resetn(s_axis_aresetn),\n  .in(m_axis_raddr_gray),\n  .out(s_axis_raddr_gray)\n);\n\nalways @(posedge s_axis_aclk)\nbegin\n  if (s_axis_aresetn == 1'b0) begin\n    s_axis_ready <= 1'b1;\n    s_axis_empty <= 1'b1;\n  end else begin\n    s_axis_ready <= (s_axis_raddr_gray[ADDRESS_WIDTH] == s_axis_waddr_gray_next[ADDRESS_WIDTH] ||\n      s_axis_raddr_gray[ADDRESS_WIDTH-1] == s_axis_waddr_gray_next[ADDRESS_WIDTH-1] ||\n      s_axis_raddr_gray[ADDRESS_WIDTH-2:0] != s_axis_waddr_gray_next[ADDRESS_WIDTH-2:0]);\n    s_axis_empty <= s_axis_raddr_gray == s_axis_waddr_gray_next;\n  end\nend\n\nalways @(posedge m_axis_aclk)\nbegin\n  if (s_axis_aresetn == 1'b0)\n    m_axis_valid <= 1'b0;\n"]], "Diff Content": {"Delete": [[127, "    s_axis_room <= 2**ADDRESS_WIDTH;\n"], [132, "    s_axis_room <= _s_axis_raddr - _s_axis_waddr_next + 2**ADDRESS_WIDTH;\n"]], "Add": [[127, "    s_axis_room <= MAX_ROOM;\n"], [132, "    s_axis_room <= _s_axis_raddr - _s_axis_waddr_next + MAX_ROOM;\n"]]}}