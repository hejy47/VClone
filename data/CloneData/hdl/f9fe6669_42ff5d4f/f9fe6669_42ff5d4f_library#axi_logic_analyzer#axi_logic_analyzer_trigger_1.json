{"Source Block": ["hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@70:94@HdlStmProcess", "\n  // trigger logic:\n  // 0 OR\n  // 1 AND\n\n  always @(*) begin\n    case (trigger_logic)\n      0: trigger_active = | ((edge_detect & edge_detect_enable) |\n                          (rise_edge & rise_edge_enable) |\n                          (fall_edge & fall_edge_enable) |\n                          (low_level & low_level_enable) |\n                          (high_level & high_level_enable));\n      1: trigger_active = | (((edge_detect & edge_detect_enable) | !(|edge_detect_enable)) &\n                          ((rise_edge & rise_edge_enable) | !(|rise_edge_enable)) &\n                          ((fall_edge & fall_edge_enable) | !(|fall_edge_enable)) &\n                          ((low_level & low_level_enable) | !(|low_level_enable)) &\n                          ((high_level & high_level_enable) | !(|high_level_enable)));\n      default: trigger_active = 1'b1;\n    endcase\n  end\n\n  // internal signals\n\n  always @(posedge clk) begin\n    if (reset == 1'b1) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[77, "      0: trigger_active = | ((edge_detect & edge_detect_enable) |\n"], [78, "                          (rise_edge & rise_edge_enable) |\n"], [79, "                          (fall_edge & fall_edge_enable) |\n"], [80, "                          (low_level & low_level_enable) |\n"], [81, "                          (high_level & high_level_enable));\n"], [82, "      1: trigger_active = | (((edge_detect & edge_detect_enable) | !(|edge_detect_enable)) &\n"], [83, "                          ((rise_edge & rise_edge_enable) | !(|rise_edge_enable)) &\n"], [84, "                          ((fall_edge & fall_edge_enable) | !(|fall_edge_enable)) &\n"], [85, "                          ((low_level & low_level_enable) | !(|low_level_enable)) &\n"], [86, "                          ((high_level & high_level_enable) | !(|high_level_enable)));\n"]], "Add": [[86, "      0: trigger_active = |((edge_detect & edge_detect_enable) |\n"], [86, "                            (rise_edge & rise_edge_enable) |\n"], [86, "                            (fall_edge & fall_edge_enable) |\n"], [86, "                            (low_level & low_level_enable) |\n"], [86, "                            (high_level & high_level_enable));\n"], [86, "      1: trigger_active = &((edge_detect | ~edge_detect_enable) &\n"], [86, "                            (rise_edge | ~rise_edge_enable) &\n"], [86, "                            (fall_edge | ~fall_edge_enable) &\n"], [86, "                            (low_level | ~low_level_enable) &\n"], [86, "                            (high_level | ~high_level_enable));\n"]]}}