Source Block: hdl/projects/daq2/a10gx/system_top.v@290:306@HdlStmFor
                    adc0_data_a_s}),
    .acq_trigger_in ({rx_sysref, rx_sync}));

  genvar n;
  generate
  for (n = 0; n < 4; n = n + 1) begin: g_align_1
  ad_jesd_align i_jesd_align (
    .rx_clk (rx_clk),
    .rx_sof (rx_ip_sof_s),
    .rx_ip_data (rx_ip_data_s[n*32+31:n*32]),
    .rx_data (rx_data_s[n*32+31:n*32]));
  end
  endgenerate

  assign rx_xcvr_status_s[15:15] = 1'd0;
  assign rx_xcvr_status_s[14:14] = rx_sync;
  assign rx_xcvr_status_s[13:13] = rx_ready_s;

Diff Content:
- 295   for (n = 0; n < 4; n = n + 1) begin: g_align_1
- 296   ad_jesd_align i_jesd_align (
- 297     .rx_clk (rx_clk),
- 298     .rx_sof (rx_ip_sof_s),
- 299     .rx_ip_data (rx_ip_data_s[n*32+31:n*32]),
- 300     .rx_data (rx_data_s[n*32+31:n*32]));
- 301   end

Clone Blocks:
Clone Blocks 1:
hdl/projects/usdrx1/a5gt/system_top.v@352:369
    .acq_data_in ({rx_sysref, rx_sync, dma_data}),
    .acq_trigger_in ({rx_sysref, rx_sync}));

  genvar n;
  generate
  for (n = 0; n < 8; n = n + 1) begin: g_align_1
  ad_jesd_align i_jesd_align (
    .rx_clk (rx_clk),
    .rx_ip_sof (rx_ip_sof_s),
    .rx_ip_data (rx_ip_data_s[n*32+31:n*32]),
    .rx_sof (rx_sof[n]),
    .rx_data (rx_data_s[n*32+31:n*32]));
  end
  endgenerate

  assign rx_xcvr_status_s[22:22] = rx_sync;
  assign rx_xcvr_status_s[21:21] = rx_ready_s;
  assign rx_xcvr_status_s[20:20] = rx_pll_locked_s;

Clone Blocks 2:
hdl/projects/fmcjesdadc1/a5gt/system_top.v@290:306
                    adc0_data_a_s}),
    .acq_trigger_in ({rx_sysref, rx_sync}));

  genvar n;
  generate
  for (n = 0; n < 4; n = n + 1) begin: g_align_1
  ad_jesd_align i_jesd_align (
    .rx_clk (rx_clk),
    .rx_sof (rx_ip_sof_s),
    .rx_ip_data (rx_ip_data_s[n*32+31:n*32]),
    .rx_data (rx_data_s[n*32+31:n*32]));
  end
  endgenerate

  assign rx_xcvr_status_s[15:15] = 1'd0;
  assign rx_xcvr_status_s[14:14] = rx_sync;
  assign rx_xcvr_status_s[13:13] = rx_ready_s;

Clone Blocks 3:
hdl/projects/fmcjesdadc1/a5soc/system_top.v@319:335
                    adc0_data_a_s}),
    .acq_trigger_in ({rx_sysref, rx_sync}));

  genvar n;
  generate
  for (n = 0; n < 4; n = n + 1) begin: g_align_1
  ad_jesd_align i_jesd_align (
    .rx_clk (rx_clk),
    .rx_sof (rx_ip_sof_s),
    .rx_ip_data (rx_ip_data_s[n*32+31:n*32]),
    .rx_data (rx_data_s[n*32+31:n*32]));
  end
  endgenerate

  assign rx_xcvr_status_s[15:15] = 1'd0;
  assign rx_xcvr_status_s[14:14] = rx_sync;
  assign rx_xcvr_status_s[13:13] = rx_ready_s;

