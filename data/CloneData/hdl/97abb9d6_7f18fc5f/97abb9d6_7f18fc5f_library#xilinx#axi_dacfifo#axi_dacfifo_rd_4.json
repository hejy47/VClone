{"Source Block": ["hdl/library/xilinx/axi_dacfifo/axi_dacfifo_rd.v@360:392@HdlStmProcess", "  end\n\n  assign dac_xfer_out = dac_xfer_req_m[2] & dac_mem_valid;\n\n  // CDC for write addresses from the DDRx clock domain\n  always @(posedge dac_clk) begin\n    if (dac_fifo_reset_s == 1'b1) begin\n      dac_mem_waddr <= 'b0;\n      dac_mem_waddr_m1 <= 'b0;\n      dac_mem_waddr_m2 <= 'b0;\n      dac_mem_laddr_toggle_m <= 4'b0;\n      dac_mem_laddr <= 'b0;\n      dac_dlast <= 1'b0;\n      dac_dlast_m1 <= 1'b0;\n      dac_dlast_m2 <= 1'b0;\n    end else begin\n      dac_mem_waddr_m1 <= axi_mem_waddr_g;\n      dac_mem_waddr_m2 <= dac_mem_waddr_m1;\n      dac_mem_waddr <= dac_mem_waddr_m2_g2b_s;\n      dac_mem_laddr_toggle_m <= {dac_mem_laddr_toggle_m[2:0], axi_mem_laddr_toggle};\n      dac_mem_laddr <= (dac_mem_laddr_toggle_m[2] ^ dac_mem_laddr_toggle_m[1]) ?\n                                                      axi_mem_laddr_s :\n                                                      dac_mem_laddr;\n      dac_dlast_m1 <= axi_dlast;\n      dac_dlast_m2 <= dac_dlast_m1;\n      dac_dlast <= dac_dlast_m2;\n    end\n  end\n\n  assign dac_laddr_wea = dac_mem_laddr_toggle_m[3] ^ dac_mem_laddr_toggle_m[2];\n  assign dac_laddr_rea = ((dac_mem_raddr == dac_mem_laddr_b) &&\n                          (dac_xfer_out == 1'b1)) ? 1'b1 :1'b0;\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[372, "      dac_dlast <= 1'b0;\n"], [373, "      dac_dlast_m1 <= 1'b0;\n"], [374, "      dac_dlast_m2 <= 1'b0;\n"], [383, "      dac_dlast_m1 <= axi_dlast;\n"], [384, "      dac_dlast_m2 <= dac_dlast_m1;\n"], [385, "      dac_dlast <= dac_dlast_m2;\n"]], "Add": []}}