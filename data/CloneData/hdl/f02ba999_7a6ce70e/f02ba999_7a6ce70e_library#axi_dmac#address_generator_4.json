{"Source Block": ["hdl/library/axi_dmac/address_generator.v@77:87@HdlIdDef", "assign cache = 4'b0011;\nassign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\nassign addr = {address, {C_ADDR_ALIGN_BITS{1'b0}}};\n\n// If we already asserted addr_valid we have to wait until it is accepted before\n// we can disable the address generator.\nalways @(posedge clk) begin\n"], "Clone Blocks": [["hdl/library/axi_dmac/address_generator.v@72:82", "\n`include \"inc_id.h\"\n\nassign burst = 2'b01;\nassign prot = 3'b000;\nassign cache = 4'b0011;\nassign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\n"], ["hdl/library/axi_dmac/address_generator.v@73:83", "`include \"inc_id.h\"\n\nassign burst = 2'b01;\nassign prot = 3'b000;\nassign cache = 4'b0011;\nassign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\nassign addr = {address, {C_ADDR_ALIGN_BITS{1'b0}}};\n"], ["hdl/library/axi_dmac/address_generator.v@76:86", "assign prot = 3'b000;\nassign cache = 4'b0011;\nassign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\nassign addr = {address, {C_ADDR_ALIGN_BITS{1'b0}}};\n\n// If we already asserted addr_valid we have to wait until it is accepted before\n// we can disable the address generator.\n"], ["hdl/library/axi_dmac/address_generator.v@74:84", "\nassign burst = 2'b01;\nassign prot = 3'b000;\nassign cache = 4'b0011;\nassign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\nassign addr = {address, {C_ADDR_ALIGN_BITS{1'b0}}};\n\n"], ["hdl/library/axi_dmac/address_generator.v@78:88", "assign len = eot ? req_last_burst_length : MAX_BURST_SIZE_BEATS - 1;\nassign size = 3'b011;\n\nreg [31-C_ADDR_ALIGN_BITS:0] address = 'h00;\nreg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\nassign addr = {address, {C_ADDR_ALIGN_BITS{1'b0}}};\n\n// If we already asserted addr_valid we have to wait until it is accepted before\n// we can disable the address generator.\nalways @(posedge clk) begin\n\tif (resetn == 1'b0) begin\n"]], "Diff Content": {"Delete": [[82, "reg [C_BURST_ALIGN_BITS-C_ADDR_ALIGN_BITS-1:0] last_burst_len = 'h00;\n"]], "Add": [[82, "reg [C_BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\n"]]}}