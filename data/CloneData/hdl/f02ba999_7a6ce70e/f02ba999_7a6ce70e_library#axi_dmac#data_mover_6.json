{"Source Block": ["hdl/library/axi_dmac/data_mover.v@77:87@HdlStmAssign", "reg pending_burst;\nreg active;\n\nassign response_id = id;\n\nassign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n"], "Clone Blocks": [["hdl/library/axi_dmac/data_mover.v@81:91", "\nassign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = s_axi_ready && s_axi_valid && last && eot;\n"], ["hdl/library/axi_dmac/data_mover.v@79:89", "\nassign response_id = id;\n\nassign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n"], ["hdl/library/axi_dmac/data_mover.v@80:90", "assign response_id = id;\n\nassign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\n"], ["hdl/library/axi_dmac/data_mover.v@82:92", "assign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = s_axi_ready && s_axi_valid && last && eot;\nassign req_ready = last_load || ~active;\n"], ["hdl/library/axi_dmac/data_mover.v@75:85", "wire last;\nwire last_load;\nreg pending_burst;\nreg active;\n\nassign response_id = id;\n\nassign last = beat_counter == (eot ? last_burst_length : 4'hf);\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\n"]], "Diff Content": {"Delete": [[82, "assign last = beat_counter == (eot ? last_burst_length : 4'hf);\n"]], "Add": [[82, "assign last = beat_counter == (eot ? last_burst_length : MAX_BEATS_PER_BURST - 1);\n"]]}}