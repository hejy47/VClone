{"Source Block": ["hdl/library/axi_dmac/request_arb.v@337:517@HdlStmIf", "end\n\nend endgenerate\n\n\ngenerate if (C_DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\n\nassign dest_clk = m_dest_axi_aclk;\nassign dest_resetn = m_dest_axi_aresetn;\n\nwire [C_ID_WIDTH-1:0] dest_data_id;\nwire [C_ID_WIDTH-1:0] dest_address_id;\nwire dest_address_eot = eot_mem_dest[dest_address_id];\nwire dest_data_eot = eot_mem_dest[dest_data_id];\nwire dest_response_eot = eot_mem_dest[dest_response_id];\n\nassign dbg_dest_address_id = dest_address_id;\nassign dbg_dest_data_id = dest_data_id;\n\ndmac_dest_mm_axi #(\n\t.C_ID_WIDTH(C_ID_WIDTH),\n\t.C_M_AXI_DATA_WIDTH(C_M_AXI_DATA_WIDTH),\n\t.C_ADDR_ALIGN_BITS(C_ADDR_ALIGN_BITS),\n\t.C_DMA_LENGTH_WIDTH(C_DMA_LENGTH_WIDTH)\n) i_dest_dma_mm (\n\t.m_axi_aclk(m_dest_axi_aclk),\n\t.m_axi_aresetn(m_dest_axi_aresetn),\n\n\t.enable(dest_enable),\n\t.enabled(dest_enabled),\n\t.pause(dest_pause),\n\n\t.req_valid(dest_req_valid),\n\t.req_ready(dest_req_ready),\n\t.req_address(dest_req_address),\n\t.req_last_burst_length(dest_req_last_burst_length),\n\t.req_last_beat_bytes(dest_req_last_beat_bytes),\n\n\t.response_valid(dest_response_valid),\n\t.response_ready(dest_response_ready),\n\t.response_resp(dest_response_resp),\n\t.response_resp_eot(dest_response_resp_eot),\n\n\t.request_id(dest_request_id),\n\t.response_id(dest_response_id),\n\t.sync_id(dest_sync_id),\n\t.sync_id_ret(dest_sync_id_ret),\n\n\t.data_id(dest_data_id),\n\t.address_id(dest_address_id),\n\n\t.address_eot(dest_address_eot),\n\t.data_eot(dest_data_eot),\n\t.response_eot(dest_response_eot),\n\n\t.fifo_valid(dest_valid),\n\t.fifo_ready(dest_ready),\n\t.fifo_data(dest_data),\n\n\t.m_axi_awready(m_axi_awready),\n\t.m_axi_awvalid(m_axi_awvalid),\n\t.m_axi_awaddr(m_axi_awaddr),\n\t.m_axi_awlen(m_axi_awlen),\n\t.m_axi_awsize(m_axi_awsize),\n\t.m_axi_awburst(m_axi_awburst),\n\t.m_axi_awprot(m_axi_awprot),\n\t.m_axi_awcache(m_axi_awcache),\n\t.m_axi_wready(m_axi_wready),\n\t.m_axi_wvalid(m_axi_wvalid),\n\t.m_axi_wdata(m_axi_wdata),\n\t.m_axi_wstrb(m_axi_wstrb),\n\t.m_axi_wlast(m_axi_wlast),\n\n\t.m_axi_bvalid(m_axi_bvalid),\n\t.m_axi_bresp(m_axi_bresp),\n\t.m_axi_bready(m_axi_bready)\n);\n\nend else if (C_DMA_TYPE_DEST == DMA_TYPE_STREAM_AXI) begin\n\n\nassign dest_clk = m_axis_aclk;\n\nwire [C_ID_WIDTH-1:0] data_id;\n\nwire data_eot = eot_mem_dest[data_id];\nwire response_eot = eot_mem_dest[dest_response_id];\n\nassign dbg_dest_address_id = dest_request_id;\nassign dbg_dest_data_id = data_id;\n\ndmac_dest_axi_stream #(\n\t.C_ID_WIDTH(C_ID_WIDTH),\n\t.C_S_AXIS_DATA_WIDTH(C_M_AXI_DATA_WIDTH)\n) i_dest_dma_stream (\n\t.s_axis_aclk(m_axis_aclk),\n\t.s_axis_aresetn(dest_resetn),\n\n\t.enable(dest_enable),\n\t.enabled(dest_enabled),\n\n\t.req_valid(dest_req_valid),\n\t.req_ready(dest_req_ready),\n\t.req_last_burst_length(dest_req_last_burst_length),\n\n\t.response_valid(dest_response_valid),\n\t.response_ready(dest_response_ready),\n\t.response_resp(dest_response_resp),\n\t.response_resp_eot(dest_response_resp_eot),\n\n\t.request_id(dest_request_id),\n\t.response_id(dest_response_id),\n\t.data_id(data_id),\n\t.sync_id(dest_sync_id),\n\t.sync_id_ret(dest_sync_id_ret),\n\n\t.data_eot(data_eot),\n\t.response_eot(response_eot),\n\n\t.fifo_valid(dest_valid),\n\t.fifo_ready(dest_ready),\n\t.fifo_data(dest_data),\n\n\t.m_axis_valid(m_axis_valid),\n\t.m_axis_ready(m_axis_ready),\n\t.m_axis_data(m_axis_data)\n);\n\nend else /* if (C_DMA_TYPE_DEST == DMA_TYPE_FIFO) */ begin\n\nassign dest_clk = fifo_rd_clk;\n\nwire [C_ID_WIDTH-1:0] data_id;\n\nwire data_eot = eot_mem_dest[data_id];\nwire response_eot = eot_mem_dest[dest_response_id];\n\ndmac_dest_fifo_inf #(\n\t.C_ID_WIDTH(C_ID_WIDTH),\n\t.C_DATA_WIDTH(C_M_AXI_DATA_WIDTH)\n) i_dest_dma_fifo (\n\t.clk(fifo_rd_clk),\n\t.resetn(dest_resetn),\n\n\t.enable(dest_enable),\n\t.enabled(dest_enabled),\n\n\t.req_valid(dest_req_valid),\n\t.req_ready(dest_req_ready),\n\t.req_last_burst_length(dest_req_last_burst_length),\n\n\t.response_valid(dest_response_valid),\n\t.response_ready(dest_response_ready),\n\t.response_resp(dest_response_resp),\n\t.response_resp_eot(dest_response_resp_eot),\n\n\t.request_id(dest_request_id),\n\t.response_id(dest_response_id),\n\t.data_id(data_id),\n\t.sync_id(dest_sync_id),\n\t.sync_id_ret(dest_sync_id_ret),\n\n\t.data_eot(data_eot),\n\t.response_eot(response_eot),\n\n\t.fifo_valid(dest_valid),\n\t.fifo_ready(dest_ready),\n\t.fifo_data(dest_data),\n\n\t.en(fifo_rd_en),\n\t.valid(fifo_rd_valid),\n\t.dout(fifo_rd_dout),\n\t.underflow(fifo_rd_underflow)\n);\n\nend endgenerate\n\ngenerate if (C_DMA_TYPE_SRC == DMA_TYPE_MM_AXI) begin\n\nassign src_clk = m_src_axi_aclk;\nassign src_resetn = m_src_axi_aresetn;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[358, "\t.C_M_AXI_DATA_WIDTH(C_M_AXI_DATA_WIDTH),\n"], [360, "\t.C_DMA_LENGTH_WIDTH(C_DMA_LENGTH_WIDTH)\n"], [425, "assign dbg_dest_address_id = dest_request_id;\n"], [430, "\t.C_S_AXIS_DATA_WIDTH(C_M_AXI_DATA_WIDTH)\n"], [476, "\t.C_DATA_WIDTH(C_M_AXI_DATA_WIDTH)\n"]], "Add": [[358, "\t.C_DMA_DATA_WIDTH(C_DMA_DATA_WIDTH_DEST),\n"], [360, "\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_DEST),\n"], [360, "\t.C_BYTES_PER_BEAT_WIDTH(BYTES_PER_BEAT_WIDTH_DEST)\n"], [425, "assign dbg_dest_address_id = 'h00;\n"], [430, "\t.C_S_AXIS_DATA_WIDTH(C_DMA_DATA_WIDTH_DEST),\n"], [430, "\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_DEST)\n"], [472, "assign dbg_dest_address_id = 'h00;\n"], [472, "assign dbg_dest_data_id = data_id;\n"], [476, "\t.C_DATA_WIDTH(C_DMA_DATA_WIDTH_DEST),\n"], [476, "\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_DEST)\n"]]}}