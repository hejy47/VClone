Source Block: hdl/library/util_adc_pack/util_adc_pack.v@143:192@HdlStmProcess
  assign enable_cnt_0 = chan_enable_0 + chan_enable_1 + chan_enable_2 + chan_enable_3;
  assign enable_cnt_1 = chan_enable_4 + chan_enable_5 + chan_enable_6 + chan_enable_7;
  assign chan_valid   = chan_valid_0 | chan_valid_1 | chan_valid_2 | chan_valid_3 | chan_valid_4 | chan_valid_5 | chan_valid_6 | chan_valid_7 ;
  assign dsync        = dvalid;

  always @(chan_data_0, chan_data_1, chan_data_2, chan_data_3, chan_enable_0, chan_enable_1, chan_enable_2, chan_enable_3, chan_valid)
  begin
    if(chan_valid == 1'b1)
    begin
      casex ({chan_enable_3,chan_enable_2,chan_enable_1,chan_enable_0})
        4'bxxx1: temp_data_0[15:0] = chan_data_0;
        4'bxx10: temp_data_0[15:0] = chan_data_1;
        4'bx100: temp_data_0[15:0] = chan_data_2;
        4'b1000: temp_data_0[15:0] = chan_data_3;
        default: temp_data_0 [15:0] = 16'h0000;
      endcase

       casex ({chan_enable_3,chan_enable_2,chan_enable_1,chan_enable_0})
        4'bxx11: temp_data_0[31:16] = chan_data_1;
        4'bx110: temp_data_0[31:16] = chan_data_2;
        4'bx101: temp_data_0[31:16] = chan_data_2;
        4'b1001: temp_data_0[31:16] = chan_data_3;
        4'b1010: temp_data_0[31:16] = chan_data_3;
        4'b1100: temp_data_0[31:16] = chan_data_3;
        default: temp_data_0[31:16] = 16'h0000;
      endcase

      casex ({chan_enable_3,chan_enable_2,chan_enable_1,chan_enable_0})
        4'bx111: temp_data_0[47:32] = chan_data_2;
        4'b1011: temp_data_0[47:32] = chan_data_3;
        4'b1101: temp_data_0[47:32] = chan_data_3;
        4'b1110: temp_data_0[47:32] = chan_data_3;
        default: temp_data_0[47:32] = 16'h0000;
      endcase

      case ({chan_enable_3,chan_enable_2,chan_enable_1,chan_enable_0})
        4'b1111: temp_data_0[63:48] = chan_data_3;
        default: temp_data_0[63:48] = 16'h0000;
      endcase
    end
    else
    begin
      temp_data_0 = 64'h0;
    end
  end

  always @(chan_data_4, chan_data_5, chan_data_6, chan_data_7, chan_enable_4, chan_enable_5, chan_enable_6, chan_enable_7, chan_valid)
  begin
    if(chan_valid == 1'b1)
    begin

Diff Content:
- 148   always @(chan_data_0, chan_data_1, chan_data_2, chan_data_3, chan_enable_0, chan_enable_1, chan_enable_2, chan_enable_3, chan_valid)
- 153         4'bxxx1: temp_data_0[15:0] = chan_data_0;
- 154         4'bxx10: temp_data_0[15:0] = chan_data_1;
- 155         4'bx100: temp_data_0[15:0] = chan_data_2;
- 156         4'b1000: temp_data_0[15:0] = chan_data_3;
- 161         4'bxx11: temp_data_0[31:16] = chan_data_1;
- 162         4'bx110: temp_data_0[31:16] = chan_data_2;
- 163         4'bx101: temp_data_0[31:16] = chan_data_2;
- 164         4'b1001: temp_data_0[31:16] = chan_data_3;
- 165         4'b1010: temp_data_0[31:16] = chan_data_3;
- 166         4'b1100: temp_data_0[31:16] = chan_data_3;
- 171         4'bx111: temp_data_0[47:32] = chan_data_2;
- 172         4'b1011: temp_data_0[47:32] = chan_data_3;
- 173         4'b1101: temp_data_0[47:32] = chan_data_3;
- 174         4'b1110: temp_data_0[47:32] = chan_data_3;
- 179         4'b1111: temp_data_0[63:48] = chan_data_3;
+ 148   always @(posedge clk)
+ 148   begin
+ 148     enable_cnt   = enable_cnt_0 + enable_cnt_1;
+ 148     enable_cnt_0 = chan_enable_0 + chan_enable_1 + chan_enable_2 + chan_enable_3;
+ 148     enable_cnt_1 = chan_enable_4 + chan_enable_5 + chan_enable_6 + chan_enable_7;
+ 148   end
+ 148   always @(posedge clk)
+ 148   begin
+ 148     chan_valid    <= chan_valid_0 | chan_valid_1 | chan_valid_2 | chan_valid_3 | chan_valid_4 | chan_valid_5 | chan_valid_6 | chan_valid_7 ;
+ 148     chan_data_0_r <= chan_data_0;
+ 148     chan_data_1_r <= chan_data_1;
+ 148     chan_data_2_r <= chan_data_2;
+ 148     chan_data_3_r <= chan_data_3;
+ 148     chan_data_4_r <= chan_data_4;
+ 148     chan_data_5_r <= chan_data_5;
+ 148     chan_data_6_r <= chan_data_6;
+ 148     chan_data_7_r <= chan_data_7;
+ 148   end
+ 148   always @(chan_data_0_r, chan_data_1_r, chan_data_2_r, chan_data_3_r, chan_enable_0, chan_enable_1, chan_enable_2, chan_enable_3, chan_valid)
+ 156         4'bxxx1: temp_data_0[15:0] = chan_data_0_r;
+ 156         4'bxx10: temp_data_0[15:0] = chan_data_1_r;
+ 156         4'bx100: temp_data_0[15:0] = chan_data_2_r;
+ 156         4'b1000: temp_data_0[15:0] = chan_data_3_r;
+ 166         4'bxx11: temp_data_0[31:16] = chan_data_1_r;
+ 166         4'bx110: temp_data_0[31:16] = chan_data_2_r;
+ 166         4'bx101: temp_data_0[31:16] = chan_data_2_r;
+ 166         4'b1001: temp_data_0[31:16] = chan_data_3_r;
+ 166         4'b1010: temp_data_0[31:16] = chan_data_3_r;
+ 166         4'b1100: temp_data_0[31:16] = chan_data_3_r;
+ 174         4'bx111: temp_data_0[47:32] = chan_data_2_r;
+ 174         4'b1011: temp_data_0[47:32] = chan_data_3_r;
+ 174         4'b1101: temp_data_0[47:32] = chan_data_3_r;
+ 174         4'b1110: temp_data_0[47:32] = chan_data_3_r;
+ 179         4'b1111: temp_data_0[63:48] = chan_data_3_r;

Clone Blocks:
