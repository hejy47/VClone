{"Source Block": ["hdl/library/data_offload/data_offload_fsm.v@280:346@HdlStmProcess", "      end\n    end\n  end\n\n  // Mealy state machine for read control\n  always @(posedge rd_clk) begin\n    if (rd_resetn_in == 1'b0) begin\n      rd_fsm_state <= RD_IDLE;\n    end else begin\n      case (rd_fsm_state)\n\n        RD_IDLE: begin\n          if (((!TX_OR_RXN_PATH) & rd_isfull_s) || (rd_wr_last_s)) begin\n            if (TX_OR_RXN_PATH) begin\n              rd_fsm_state <= RD_SYNC;\n            end else begin\n              rd_fsm_state <= RD_READ_FROM_MEM;\n            end\n          end else begin\n            rd_fsm_state <= RD_IDLE;\n          end\n        end\n\n        RD_SYNC : begin\n          // do not lock the FSM if something goes wrong\n          if (!TX_OR_RXN_PATH) begin\n            rd_fsm_state <= RD_READ_FROM_MEM;\n          end else begin // TX_OR_RXN_PATH\n            case (sync_config)\n              AUTOMATIC: begin\n                rd_fsm_state <= RD_READ_FROM_MEM;\n              end\n              HARDWARE: begin\n                if (rd_sync_external_s) begin\n                  rd_fsm_state <= RD_READ_FROM_MEM;\n                end\n              end\n              SOFTWARE: begin\n                if (rd_sync_internal_s) begin\n                  rd_fsm_state <= RD_READ_FROM_MEM;\n                end\n              end\n              default: begin\n                rd_fsm_state <= RD_READ_FROM_MEM;\n              end\n            endcase\n          end\n        end\n\n        // read until empty or next init_req\n        RD_READ_FROM_MEM : begin\n          if ((rd_empty_s && (rd_init_req_s || (rd_oneshot && rd_last)) && rd_ready)) begin\n            rd_fsm_state <= RD_IDLE;\n          end else begin\n            rd_fsm_state <= RD_READ_FROM_MEM;\n          end\n        end\n\n        default : rd_fsm_state <= RD_IDLE;\n      endcase\n    end\n  end\n\n  // the initialization interface (init_req) is edge sensitive\n  // TODO: This should be redefined! Will work only of init_req is active\n  // during the whole DMA transfer (use xfer_req for driving init_req)\n  always @(posedge rd_clk) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[318, "                if (rd_sync_internal_s) begin\n"]], "Add": [[318, "                if (sync_internal) begin\n"]]}}