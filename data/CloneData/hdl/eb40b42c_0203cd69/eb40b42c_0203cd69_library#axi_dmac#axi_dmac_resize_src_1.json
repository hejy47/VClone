{"Source Block": ["hdl/library/axi_dmac/axi_dmac_resize_src.v@52:99@HdlStmIf", "  output mem_data_valid,\n  output [DATA_WIDTH_MEM-1:0] mem_data,\n  output mem_data_last\n);\n\ngenerate if (DATA_WIDTH_SRC == DATA_WIDTH_MEM)  begin\n  assign mem_data_valid = src_data_valid;\n  assign mem_data = src_data;\n  assign mem_data_last = src_data_last;\nend else begin\n\n  localparam RATIO = DATA_WIDTH_MEM / DATA_WIDTH_SRC;\n\n  reg [RATIO-1:0] mask = 'h1;\n  reg valid = 1'b0;\n  reg last = 1'b0;\n  reg [DATA_WIDTH_MEM-1:0] data = 'h0;\n\n  always @(posedge clk) begin\n    if (reset == 1'b1) begin\n      valid <= 1'b0;\n      mask <= 'h1;\n    end else if (src_data_valid == 1'b1) begin\n      valid <= mask[RATIO-1];\n      mask <= {mask[RATIO-2:0],mask[RATIO-1]};\n    end else begin\n      valid <= 1'b0;\n    end\n  end\n\n  integer i;\n\n  always @(posedge clk) begin\n    for (i = 0; i < RATIO; i = i+1) begin\n      if (mask[i] == 1'b1) begin\n        data[i*DATA_WIDTH_SRC+:DATA_WIDTH_SRC] <= src_data;\n      end\n    end\n    last <= src_data_last;\n  end\n\n  assign mem_data_valid = valid;\n  assign mem_data = data;\n  assign mem_data_last = last;\n\nend endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[75, "      valid <= mask[RATIO-1];\n"], [76, "      mask <= {mask[RATIO-2:0],mask[RATIO-1]};\n"]], "Add": [[76, "      valid <= mask[RATIO-1] || src_data_last;\n"], [76, "      if (src_data_last) begin\n"], [76, "        mask <= 'h1;\n"], [76, "      end else begin\n"], [76, "        mask <= {mask[RATIO-2:0],mask[RATIO-1]};\n"], [76, "      end\n"]]}}