{"Source Block": ["hdl/library/axi_dmac/axi_dmac_regmap_request.v@184:207@HdlStmProcess", "\nassign request_valid = up_dma_req_valid;\nassign up_dma_req_ready = request_ready;\n\n// Request ID and Request done bitmap handling\nalways @(posedge clk) begin\n  if (ctrl_enable == 1'b0) begin\n    up_transfer_id <= 2'h0;\n    up_transfer_id_eot <= 2'h0;\n    up_transfer_done_bitmap <= 4'h0;\n  end else begin\n    if (up_sot == 1'b1) begin\n      up_transfer_id <= up_transfer_id + 1'b1;\n      up_transfer_done_bitmap[up_transfer_id] <= 1'b0;\n    end\n\n    if (up_eot == 1'b1) begin\n      up_transfer_id_eot <= up_transfer_id_eot + 1'b1;\n      up_transfer_done_bitmap[up_transfer_id_eot] <= 1'b1;\n    end\n  end\nend\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [], "Add": [[205, "assign up_tlf_rd = up_rreq && up_raddr == 'h114;\n"], [205, "assign up_bl_partial = response_valid & response_ready & response_partial & up_dma_enable_tlen_reporting;\n"], [205, "always @(posedge clk) begin\n"], [205, "  if (ctrl_enable == 1'b0) begin\n"], [205, "    up_partial_length_valid <= 1'b0;\n"], [205, "  end else begin\n"], [205, "    if (up_bl_partial == 1'b1) begin\n"], [205, "      up_partial_length_valid <= 1'b1;\n"], [205, "    end else if (up_tlf_rd == 1'b1) begin\n"], [205, "      up_partial_length_valid <= 1'b0;\n"], [205, "    end else if (up_tlf_valid == 1'b1) begin\n"], [205, "      up_partial_length_valid <= 1'b1;\n"], [205, "    end\n"], [205, "  end\n"], [205, "end\n"], [205, "always @(posedge clk)\n"], [205, "begin\n"], [205, "  if (response_valid == 1'b1 & response_ready == 1'b1) begin\n"], [205, "    up_measured_transfer_length <= up_measured_transfer_length + response_measured_burst_length + 1'b1;\n"], [205, "    up_transfer_id_eot_d <= up_transfer_id_eot;\n"], [205, "  end else if (up_clear_tl == 1'b1) begin\n"], [205, "    up_measured_transfer_length <= 'h0;\n"], [205, "  end\n"], [205, "end\n"], [205, "always @(posedge clk)\n"], [205, "begin\n"], [205, "  if (ctrl_enable == 1'b0) begin\n"], [205, "    response_ready <= 1'b1;\n"], [205, "  end else if (response_ready == 1'b1) begin\n"], [205, "    response_ready <= ~response_valid;\n"], [205, "  end else if (up_tlf_s_ready == 1'b1) begin\n"], [205, "    response_ready <= 1'b1;\n"], [205, "  end\n"], [205, "end\n"], [205, "always @(posedge clk)\n"], [205, "begin\n"], [205, "  if (response_valid == 1'b1 && response_ready == 1'b1) begin\n"], [205, "    up_tlf_s_valid <= up_bl_partial;\n"], [205, "    up_clear_tl <= up_eot;\n"], [205, "  end else if (up_tlf_s_ready == 1'b1) begin\n"], [205, "    up_tlf_s_valid <= 1'b0;\n"], [205, "  end\n"], [205, "end\n"], [205, "util_axis_fifo #(\n"], [205, "  .DATA_WIDTH(MEASURED_LENGTH_WIDTH + 2),\n"], [205, "  .ADDRESS_WIDTH(2),\n"], [205, "  .ASYNC_CLK(0)\n"], [205, ") i_transfer_lenghts_fifo (\n"], [205, "  .s_axis_aclk(clk),\n"], [205, "  .s_axis_aresetn(ctrl_enable),\n"], [205, "  .s_axis_valid(up_tlf_s_valid),\n"], [205, "  .s_axis_ready(up_tlf_s_ready),\n"], [205, "  .s_axis_empty(),\n"], [205, "  .s_axis_data({up_transfer_id_eot_d, up_measured_transfer_length}),\n"], [205, "  .s_axis_room(),\n"], [205, "  .m_axis_aclk(clk),\n"], [205, "  .m_axis_aresetn(ctrl_enable),\n"], [205, "  .m_axis_valid(up_tlf_valid),\n"], [205, "  .m_axis_ready(up_tlf_rd & up_tlf_valid),\n"], [205, "  .m_axis_data(up_tlf_data),\n"], [205, "  .m_axis_level()\n"], [205, ");\n"]]}}