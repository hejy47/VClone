{"Source Block": ["hdl/library/axi_dmac/axi_dmac_transfer.v@233:291@HdlStmIf", " * shutdown and reset phase.\n */\nassign req_valid_gated = req_enable & req_valid;\nassign req_ready = req_enable & req_ready_gated;\n\ngenerate if (DMA_2D_TRANSFER == 1) begin\n\ndmac_2d_transfer #(\n  .DMA_LENGTH_WIDTH (DMA_LENGTH_WIDTH),\n  .BYTES_PER_BEAT_WIDTH_DEST (BYTES_PER_BEAT_WIDTH_DEST),\n  .BYTES_PER_BEAT_WIDTH_SRC (BYTES_PER_BEAT_WIDTH_SRC)\n) i_2d_transfer (\n  .req_aclk (req_clk),\n  .req_aresetn (req_resetn),\n\n  .req_eot (req_eot),\n\n  .req_valid (req_valid_gated),\n  .req_ready (req_ready_gated),\n  .req_dest_address (req_dest_address),\n  .req_src_address (req_src_address),\n  .req_x_length (req_x_length),\n  .req_y_length (req_y_length),\n  .req_dest_stride (req_dest_stride),\n  .req_src_stride (req_src_stride),\n  .req_sync_transfer_start (req_sync_transfer_start),\n\n  .out_req_valid (dma_req_valid),\n  .out_req_ready (dma_req_ready),\n  .out_req_dest_address (dma_req_dest_address),\n  .out_req_src_address (dma_req_src_address),\n  .out_req_length (dma_req_length),\n  .out_req_sync_transfer_start (dma_req_sync_transfer_start),\n  .out_eot (dma_req_eot)\n);\n\nassign dma_req_last = 1'b0;\n\nend else begin\n\n/* Request */\nassign dma_req_valid = req_valid_gated;\nassign req_ready_gated = dma_req_ready;\n\nassign dma_req_dest_address = req_dest_address;\nassign dma_req_src_address = req_src_address;\nassign dma_req_length = req_x_length;\nassign dma_req_sync_transfer_start = req_sync_transfer_start;\nassign dma_req_last = req_last;\n\n/* Response */\nassign req_eot = dma_req_eot;\n\nend endgenerate\n\ndmac_request_arb #(\n  .DMA_DATA_WIDTH_SRC (DMA_DATA_WIDTH_SRC),\n  .DMA_DATA_WIDTH_DEST (DMA_DATA_WIDTH_DEST),\n  .DMA_LENGTH_WIDTH (DMA_LENGTH_WIDTH),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [], "Add": [[240, "  .DMA_AXI_ADDR_WIDTH(DMA_AXI_ADDR_WIDTH),\n"]]}}