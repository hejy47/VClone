{"Source Block": ["hdl/library/common/util_pulse_gen.v@93:108@HdlStmProcess", "  end\n  assign end_of_period_s = (pulse_period_cnt == 32'b0) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @ (posedge clk) begin\n    if ((end_of_period_s == 1'b1) || (rstn == 1'b0)) begin\n      pulse <= 1'b0;\n    end else if (pulse_period_cnt == pulse_width_d) begin\n      pulse <= 1'b1;\n    end\n  end\n\n  assign pulse_counter = pulse_period_cnt;\n\nendmodule\n"], "Clone Blocks": [["hdl/library/axi_pwm_gen/axi_pwm_gen_1.v@125:140", "  assign end_of_period = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;\n  assign end_of_pulse = (pulse_period_cnt == pulse_width_d) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @ (posedge clk) begin\n    if ((rstn == 1'b0) || (phase_align == 1'b1) || (end_of_pulse == 1'b1)) begin\n      pulse <= 1'b0;\n    end else if (end_of_period == 1'b1 && pulse_enable == 1'b1) begin\n      pulse <= 1'b1;\n    end\n  end\n\n  assign pulse_counter = pulse_period_cnt;\n\nendmodule\n"], ["hdl/library/axi_pwm_gen/axi_pwm_gen_1.v@120:130", "        pulse_period_cnt <= pulse_period_cnt + 1'b1;\n      end\n    end\n  end\n\n  assign end_of_period = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;\n  assign end_of_pulse = (pulse_period_cnt == pulse_width_d) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @ (posedge clk) begin\n"], ["hdl/library/common/util_pulse_gen.v@89:99", "      pulse_period_cnt <= pulse_period_d;\n    end else begin\n      pulse_period_cnt <= pulse_period_cnt - 1'b1;\n    end\n  end\n  assign end_of_period_s = (pulse_period_cnt == 32'b0) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @ (posedge clk) begin\n    if ((end_of_period_s == 1'b1) || (rstn == 1'b0)) begin\n"], ["hdl/library/common/util_pulse_gen.v@82:98", "    end\n  end\n\n  // a free running counter\n\n  always @(posedge clk) begin\n    if (pulse_period_cnt == 1'b0) begin\n      pulse_period_cnt <= pulse_period_d;\n    end else begin\n      pulse_period_cnt <= pulse_period_cnt - 1'b1;\n    end\n  end\n  assign end_of_period_s = (pulse_period_cnt == 32'b0) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @ (posedge clk) begin\n"]], "Diff Content": {"Delete": [[99, "    if ((end_of_period_s == 1'b1) || (rstn == 1'b0)) begin\n"]], "Add": [[99, "    if ((pulse_period_cnt == 'h0) || (rstn == 1'b0)) begin\n"]]}}