{"Source Block": ["hdl/library/common/util_pulse_gen.v@60:88@HdlStmProcess", "\n  wire                         end_of_period_s;\n\n  // flop the desired period\n\n  always @(posedge clk) begin\n    if (rstn == 1'b0) begin\n      pulse_period_d <= PULSE_PERIOD;\n      pulse_width_d <= PULSE_WIDTH;\n      pulse_period_read <= PULSE_PERIOD;\n      pulse_width_read <= PULSE_WIDTH;\n    end else begin\n      // latch the input period/width values\n      if (load_config) begin\n        pulse_period_read <= pulse_period;\n        pulse_width_read <= pulse_width;\n      end\n      // update the current period/width at the end of the period\n      if (end_of_period_s) begin\n        pulse_period_d <= pulse_period_read;\n        pulse_width_d <= pulse_width_read;\n      end\n    end\n  end\n\n  // a free running counter\n\n  always @(posedge clk) begin\n    if (pulse_period_cnt == 1'b0) begin\n"], "Clone Blocks": [["hdl/library/axi_pwm_gen/axi_pwm_gen_1.v@72:100", "\n  assign pulse_enable = (pulse_period_d != 32'd0) ? 1'b1 : 1'b0;\n\n  // flop the desired period\n\n  always @(posedge clk) begin\n    if (rstn == 1'b0) begin\n      pulse_period_d <= pulse_period;\n      pulse_width_d <= pulse_width;\n      pulse_period_read <= pulse_period;\n      pulse_width_read <= pulse_width;\n    end else begin\n      // load the input period/width values\n      if (load_config) begin\n        pulse_period_read <= pulse_period;\n        pulse_width_read <= pulse_width;\n      end\n      // update the current period/width at the end of the period\n      if (end_of_period | ~pulse_enable) begin\n        pulse_period_d <= pulse_period_read;\n        pulse_width_d <= pulse_width_read;\n      end\n    end\n  end\n\n  // phase align to the first sync pulse until another load_config\n\n  always @(posedge clk) begin\n    if (rstn == 1'b0) begin\n"]], "Diff Content": {"Delete": [[78, "      if (end_of_period_s) begin\n"]], "Add": [[78, "      if (pulse_period_cnt == 32'h1) begin\n"]]}}