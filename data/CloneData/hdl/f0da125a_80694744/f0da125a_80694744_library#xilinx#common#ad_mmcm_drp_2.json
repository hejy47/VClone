{"Source Block": ["hdl/library/xilinx/common/ad_mmcm_drp.v@172:241@HdlStmIf", "    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_7SERIES) begin\n  MMCME2_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n    .COMPENSATION (\"ZHOLD\"),\n    .STARTUP_WAIT (\"FALSE\"),\n    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n    .CLKFBOUT_PHASE (0.000),\n    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n    .CLKOUT0_DUTY_CYCLE (0.500),\n    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n    .CLKOUT1_DUTY_CYCLE (0.500),\n    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n    .CLKOUT2_DUTY_CYCLE (0.500),\n    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n    .REF_JITTER1 (0.010))\n  i_mmcm (\n    .CLKIN1 (clk),\n    .CLKFBIN (bufg_fb_clk_s),\n    .CLKFBOUT (mmcm_fb_clk_s),\n    .CLKOUT0 (mmcm_clk_0_s),\n    .CLKOUT1 (mmcm_clk_1_s),\n    .CLKOUT2 (mmcm_clk_2_s),\n    .LOCKED (mmcm_locked_s),\n    .DCLK (up_clk),\n    .DEN (up_drp_sel),\n    .DADDR (up_drp_addr[6:0]),\n    .DWE (up_drp_wr),\n    .DI (up_drp_wdata),\n    .DO (up_drp_rdata_s),\n    .DRDY (up_drp_ready_s),\n    .CLKFBOUTB (),\n    .CLKOUT0B (),\n    .CLKOUT1B (),\n    .CLKOUT2B (),\n    .CLKOUT3 (),\n    .CLKOUT3B (),\n    .CLKOUT4 (),\n    .CLKOUT5 (),\n    .CLKOUT6 (),\n    .CLKIN2 (clk2),\n    .CLKINSEL (clk_sel),\n    .PSCLK (1'b0),\n    .PSEN (1'b0),\n    .PSINCDEC (1'b0),\n    .PSDONE (),\n    .CLKINSTOPPED (),\n    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n  endgenerate\n\n  BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n  BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0)); \n  BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], "Clone Blocks": [["hdl/library/xilinx/common/ad_mmcm_drp.v@110:180", "  end\n\n  // instantiations\n\n  generate\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_VIRTEX6) begin\n  MMCM_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n    .CLOCK_HOLD (\"FALSE\"),\n    .COMPENSATION (\"ZHOLD\"),\n    .STARTUP_WAIT (\"FALSE\"),\n    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n    .CLKFBOUT_PHASE (0.000),\n    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n    .CLKOUT0_DUTY_CYCLE (0.500),\n    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n    .CLKOUT1_DUTY_CYCLE (0.500),\n    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n    .CLKOUT2_DUTY_CYCLE (0.500),\n    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n    .REF_JITTER1 (0.010))\n  i_mmcm (\n    .CLKIN1 (clk),\n    .CLKFBIN (bufg_fb_clk_s),\n    .CLKFBOUT (mmcm_fb_clk_s),\n    .CLKOUT0 (mmcm_clk_0_s),\n    .CLKOUT1 (mmcm_clk_1_s),\n    .CLKOUT2 (mmcm_clk_2_s),\n    .LOCKED (mmcm_locked_s),\n    .DCLK (up_clk),\n    .DEN (up_drp_sel),\n    .DADDR (up_drp_addr[6:0]),\n    .DWE (up_drp_wr),\n    .DI (up_drp_wdata),\n    .DO (up_drp_rdata_s),\n    .DRDY (up_drp_ready_s),\n    .CLKFBOUTB (),\n    .CLKOUT0B (),\n    .CLKOUT1B (),\n    .CLKOUT2B (),\n    .CLKOUT3 (),\n    .CLKOUT3B (),\n    .CLKOUT4 (),\n    .CLKOUT5 (),\n    .CLKOUT6 (),\n    .CLKIN2 (clk2),\n    .CLKINSEL (clk_sel),\n    .PSCLK (1'b0),\n    .PSEN (1'b0),\n    .PSINCDEC (1'b0),\n    .PSDONE (),\n    .CLKINSTOPPED (),\n    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_7SERIES) begin\n  MMCME2_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n"]], "Diff Content": {"Delete": [[178, "  MMCME2_ADV #(\n"], [179, "    .BANDWIDTH (\"OPTIMIZED\"),\n"], [180, "    .CLKOUT4_CASCADE (\"FALSE\"),\n"], [181, "    .COMPENSATION (\"ZHOLD\"),\n"], [182, "    .STARTUP_WAIT (\"FALSE\"),\n"], [183, "    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n"], [184, "    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n"], [185, "    .CLKFBOUT_PHASE (0.000),\n"], [186, "    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n"], [187, "    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n"], [188, "    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n"], [189, "    .CLKOUT0_DUTY_CYCLE (0.500),\n"], [190, "    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n"], [191, "    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n"], [192, "    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n"], [193, "    .CLKOUT1_DUTY_CYCLE (0.500),\n"], [194, "    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n"], [195, "    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n"], [196, "    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n"], [197, "    .CLKOUT2_DUTY_CYCLE (0.500),\n"], [198, "    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n"], [199, "    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n"], [200, "    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n"], [201, "    .REF_JITTER1 (0.010))\n"], [202, "  i_mmcm (\n"], [203, "    .CLKIN1 (clk),\n"], [204, "    .CLKFBIN (bufg_fb_clk_s),\n"], [205, "    .CLKFBOUT (mmcm_fb_clk_s),\n"], [206, "    .CLKOUT0 (mmcm_clk_0_s),\n"], [207, "    .CLKOUT1 (mmcm_clk_1_s),\n"], [208, "    .CLKOUT2 (mmcm_clk_2_s),\n"], [209, "    .LOCKED (mmcm_locked_s),\n"], [210, "    .DCLK (up_clk),\n"], [211, "    .DEN (up_drp_sel),\n"], [212, "    .DADDR (up_drp_addr[6:0]),\n"], [213, "    .DWE (up_drp_wr),\n"], [214, "    .DI (up_drp_wdata),\n"], [215, "    .DO (up_drp_rdata_s),\n"], [216, "    .DRDY (up_drp_ready_s),\n"], [217, "    .CLKFBOUTB (),\n"], [218, "    .CLKOUT0B (),\n"], [219, "    .CLKOUT1B (),\n"], [220, "    .CLKOUT2B (),\n"], [221, "    .CLKOUT3 (),\n"], [222, "    .CLKOUT3B (),\n"], [223, "    .CLKOUT4 (),\n"], [224, "    .CLKOUT5 (),\n"], [225, "    .CLKOUT6 (),\n"], [226, "    .CLKIN2 (clk2),\n"], [227, "    .CLKINSEL (clk_sel),\n"], [228, "    .PSCLK (1'b0),\n"], [229, "    .PSEN (1'b0),\n"], [230, "    .PSINCDEC (1'b0),\n"], [231, "    .PSDONE (),\n"], [232, "    .CLKINSTOPPED (),\n"], [233, "    .CLKFBSTOPPED (),\n"], [234, "    .PWRDWN (1'b0),\n"], [235, "    .RST (mmcm_rst));\n"]], "Add": [[235, "    MMCME2_ADV #(\n"], [235, "      .BANDWIDTH (\"OPTIMIZED\"),\n"], [235, "      .CLKOUT4_CASCADE (\"FALSE\"),\n"], [235, "      .COMPENSATION (\"ZHOLD\"),\n"], [235, "      .STARTUP_WAIT (\"FALSE\"),\n"], [235, "      .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n"], [235, "      .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n"], [235, "      .CLKFBOUT_PHASE (0.000),\n"], [235, "      .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n"], [235, "      .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n"], [235, "      .CLKOUT0_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n"], [235, "      .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n"], [235, "      .CLKOUT1_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n"], [235, "      .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n"], [235, "      .CLKOUT2_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n"], [235, "      .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n"], [235, "      .REF_JITTER1 (0.010))\n"], [235, "    i_mmcm (\n"], [235, "      .CLKIN1 (clk),\n"], [235, "      .CLKFBIN (bufg_fb_clk_s),\n"], [235, "      .CLKFBOUT (mmcm_fb_clk_s),\n"], [235, "      .CLKOUT0 (mmcm_clk_0_s),\n"], [235, "      .CLKOUT1 (mmcm_clk_1_s),\n"], [235, "      .CLKOUT2 (mmcm_clk_2_s),\n"], [235, "      .LOCKED (mmcm_locked_s),\n"], [235, "      .DCLK (up_clk),\n"], [235, "      .DEN (up_drp_sel),\n"], [235, "      .DADDR (up_drp_addr[6:0]),\n"], [235, "      .DWE (up_drp_wr),\n"], [235, "      .DI (up_drp_wdata),\n"], [235, "      .DO (up_drp_rdata_s),\n"], [235, "      .DRDY (up_drp_ready_s),\n"], [235, "      .CLKFBOUTB (),\n"], [235, "      .CLKOUT0B (),\n"], [235, "      .CLKOUT1B (),\n"], [235, "      .CLKOUT2B (),\n"], [235, "      .CLKOUT3 (),\n"], [235, "      .CLKOUT3B (),\n"], [235, "      .CLKOUT4 (),\n"], [235, "      .CLKOUT5 (),\n"], [235, "      .CLKOUT6 (),\n"], [235, "      .CLKIN2 (clk2),\n"], [235, "      .CLKINSEL (clk_sel),\n"], [235, "      .PSCLK (1'b0),\n"], [235, "      .PSEN (1'b0),\n"], [235, "      .PSINCDEC (1'b0),\n"], [235, "      .PSDONE (),\n"], [235, "      .CLKINSTOPPED (),\n"], [235, "      .CLKFBSTOPPED (),\n"], [235, "      .PWRDWN (1'b0),\n"], [235, "      .RST (mmcm_rst));\n"], [235, "      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n"], [235, "      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n"], [235, "      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], [235, "      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n"], [235, "  end else begin /* MMCM_DEVICE_TYPE == 1 */\n"], [235, "    MMCM_ADV #(\n"], [235, "      .BANDWIDTH (\"OPTIMIZED\"),\n"], [235, "      .CLKOUT4_CASCADE (\"FALSE\"),\n"], [235, "      .CLOCK_HOLD (\"FALSE\"),\n"], [235, "      .COMPENSATION (\"ZHOLD\"),\n"], [235, "      .STARTUP_WAIT (\"FALSE\"),\n"], [235, "      .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n"], [235, "      .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n"], [235, "      .CLKFBOUT_PHASE (0.000),\n"], [235, "      .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n"], [235, "      .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n"], [235, "      .CLKOUT0_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n"], [235, "      .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n"], [235, "      .CLKOUT1_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n"], [235, "      .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n"], [235, "      .CLKOUT2_DUTY_CYCLE (0.500),\n"], [235, "      .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n"], [235, "      .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n"], [235, "      .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n"], [235, "      .REF_JITTER1 (0.010))\n"], [235, "    i_mmcm (\n"], [235, "      .CLKIN1 (clk),\n"], [235, "      .CLKFBIN (bufg_fb_clk_s),\n"], [235, "      .CLKFBOUT (mmcm_fb_clk_s),\n"], [235, "      .CLKOUT0 (mmcm_clk_0_s),\n"], [235, "      .CLKOUT1 (mmcm_clk_1_s),\n"], [235, "      .CLKOUT2 (mmcm_clk_2_s),\n"], [235, "      .LOCKED (mmcm_locked_s),\n"], [235, "      .DCLK (up_clk),\n"], [235, "      .DEN (up_drp_sel),\n"], [235, "      .DADDR (up_drp_addr[6:0]),\n"], [235, "      .DWE (up_drp_wr),\n"], [235, "      .DI (up_drp_wdata),\n"], [235, "      .DO (up_drp_rdata_s),\n"], [235, "      .DRDY (up_drp_ready_s),\n"], [235, "      .CLKFBOUTB (),\n"], [235, "      .CLKOUT0B (),\n"], [235, "      .CLKOUT1B (),\n"], [235, "      .CLKOUT2B (),\n"], [235, "      .CLKOUT3 (),\n"], [235, "      .CLKOUT3B (),\n"], [235, "      .CLKOUT4 (),\n"], [235, "      .CLKOUT5 (),\n"], [235, "      .CLKOUT6 (),\n"], [235, "      .CLKIN2 (clk2),\n"], [235, "      .CLKINSEL (clk_sel),\n"], [235, "      .PSCLK (1'b0),\n"], [235, "      .PSEN (1'b0),\n"], [235, "      .PSINCDEC (1'b0),\n"], [235, "      .PSDONE (),\n"], [235, "      .CLKINSTOPPED (),\n"], [235, "      .CLKFBSTOPPED (),\n"], [235, "      .PWRDWN (1'b0),\n"], [235, "      .RST (mmcm_rst));\n"], [235, "      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n"], [235, "      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n"], [235, "      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], [235, "      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n"]]}}