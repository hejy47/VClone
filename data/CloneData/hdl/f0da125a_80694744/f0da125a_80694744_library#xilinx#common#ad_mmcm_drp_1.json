{"Source Block": ["hdl/library/xilinx/common/ad_mmcm_drp.v@110:180@HdlStmIf", "  end\n\n  // instantiations\n\n  generate\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_VIRTEX6) begin\n  MMCM_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n    .CLOCK_HOLD (\"FALSE\"),\n    .COMPENSATION (\"ZHOLD\"),\n    .STARTUP_WAIT (\"FALSE\"),\n    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n    .CLKFBOUT_PHASE (0.000),\n    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n    .CLKOUT0_DUTY_CYCLE (0.500),\n    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n    .CLKOUT1_DUTY_CYCLE (0.500),\n    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n    .CLKOUT2_DUTY_CYCLE (0.500),\n    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n    .REF_JITTER1 (0.010))\n  i_mmcm (\n    .CLKIN1 (clk),\n    .CLKFBIN (bufg_fb_clk_s),\n    .CLKFBOUT (mmcm_fb_clk_s),\n    .CLKOUT0 (mmcm_clk_0_s),\n    .CLKOUT1 (mmcm_clk_1_s),\n    .CLKOUT2 (mmcm_clk_2_s),\n    .LOCKED (mmcm_locked_s),\n    .DCLK (up_clk),\n    .DEN (up_drp_sel),\n    .DADDR (up_drp_addr[6:0]),\n    .DWE (up_drp_wr),\n    .DI (up_drp_wdata),\n    .DO (up_drp_rdata_s),\n    .DRDY (up_drp_ready_s),\n    .CLKFBOUTB (),\n    .CLKOUT0B (),\n    .CLKOUT1B (),\n    .CLKOUT2B (),\n    .CLKOUT3 (),\n    .CLKOUT3B (),\n    .CLKOUT4 (),\n    .CLKOUT5 (),\n    .CLKOUT6 (),\n    .CLKIN2 (clk2),\n    .CLKINSEL (clk_sel),\n    .PSCLK (1'b0),\n    .PSEN (1'b0),\n    .PSINCDEC (1'b0),\n    .PSDONE (),\n    .CLKINSTOPPED (),\n    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_7SERIES) begin\n  MMCME2_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n"], "Clone Blocks": [["hdl/library/xilinx/common/ad_mmcm_drp.v@172:241", "    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n\n  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_7SERIES) begin\n  MMCME2_ADV #(\n    .BANDWIDTH (\"OPTIMIZED\"),\n    .CLKOUT4_CASCADE (\"FALSE\"),\n    .COMPENSATION (\"ZHOLD\"),\n    .STARTUP_WAIT (\"FALSE\"),\n    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n    .CLKFBOUT_PHASE (0.000),\n    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n    .CLKOUT0_DUTY_CYCLE (0.500),\n    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n    .CLKOUT1_DUTY_CYCLE (0.500),\n    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n    .CLKOUT2_DUTY_CYCLE (0.500),\n    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n    .REF_JITTER1 (0.010))\n  i_mmcm (\n    .CLKIN1 (clk),\n    .CLKFBIN (bufg_fb_clk_s),\n    .CLKFBOUT (mmcm_fb_clk_s),\n    .CLKOUT0 (mmcm_clk_0_s),\n    .CLKOUT1 (mmcm_clk_1_s),\n    .CLKOUT2 (mmcm_clk_2_s),\n    .LOCKED (mmcm_locked_s),\n    .DCLK (up_clk),\n    .DEN (up_drp_sel),\n    .DADDR (up_drp_addr[6:0]),\n    .DWE (up_drp_wr),\n    .DI (up_drp_wdata),\n    .DO (up_drp_rdata_s),\n    .DRDY (up_drp_ready_s),\n    .CLKFBOUTB (),\n    .CLKOUT0B (),\n    .CLKOUT1B (),\n    .CLKOUT2B (),\n    .CLKOUT3 (),\n    .CLKOUT3B (),\n    .CLKOUT4 (),\n    .CLKOUT5 (),\n    .CLKOUT6 (),\n    .CLKIN2 (clk2),\n    .CLKINSEL (clk_sel),\n    .PSCLK (1'b0),\n    .PSEN (1'b0),\n    .PSINCDEC (1'b0),\n    .PSDONE (),\n    .CLKINSTOPPED (),\n    .CLKFBSTOPPED (),\n    .PWRDWN (1'b0),\n    .RST (mmcm_rst));\n  end\n  endgenerate\n\n  BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n  BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0)); \n  BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"]], "Diff Content": {"Delete": [[115, "  if (MMCM_DEVICE_TYPE == MMCM_DEVICE_VIRTEX6) begin\n"], [116, "  MMCM_ADV #(\n"], [117, "    .BANDWIDTH (\"OPTIMIZED\"),\n"], [118, "    .CLKOUT4_CASCADE (\"FALSE\"),\n"], [119, "    .CLOCK_HOLD (\"FALSE\"),\n"], [120, "    .COMPENSATION (\"ZHOLD\"),\n"], [121, "    .STARTUP_WAIT (\"FALSE\"),\n"], [122, "    .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n"], [123, "    .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n"], [124, "    .CLKFBOUT_PHASE (0.000),\n"], [125, "    .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n"], [126, "    .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n"], [127, "    .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n"], [128, "    .CLKOUT0_DUTY_CYCLE (0.500),\n"], [129, "    .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n"], [130, "    .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n"], [131, "    .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n"], [132, "    .CLKOUT1_DUTY_CYCLE (0.500),\n"], [133, "    .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n"], [134, "    .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n"], [135, "    .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n"], [136, "    .CLKOUT2_DUTY_CYCLE (0.500),\n"], [137, "    .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n"], [138, "    .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n"], [139, "    .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n"], [140, "    .REF_JITTER1 (0.010))\n"], [141, "  i_mmcm (\n"], [142, "    .CLKIN1 (clk),\n"], [143, "    .CLKFBIN (bufg_fb_clk_s),\n"], [144, "    .CLKFBOUT (mmcm_fb_clk_s),\n"], [145, "    .CLKOUT0 (mmcm_clk_0_s),\n"], [146, "    .CLKOUT1 (mmcm_clk_1_s),\n"], [147, "    .CLKOUT2 (mmcm_clk_2_s),\n"], [148, "    .LOCKED (mmcm_locked_s),\n"], [149, "    .DCLK (up_clk),\n"], [150, "    .DEN (up_drp_sel),\n"], [151, "    .DADDR (up_drp_addr[6:0]),\n"], [152, "    .DWE (up_drp_wr),\n"], [153, "    .DI (up_drp_wdata),\n"], [154, "    .DO (up_drp_rdata_s),\n"], [155, "    .DRDY (up_drp_ready_s),\n"], [156, "    .CLKFBOUTB (),\n"], [157, "    .CLKOUT0B (),\n"], [158, "    .CLKOUT1B (),\n"], [159, "    .CLKOUT2B (),\n"], [160, "    .CLKOUT3 (),\n"], [161, "    .CLKOUT3B (),\n"], [162, "    .CLKOUT4 (),\n"], [163, "    .CLKOUT5 (),\n"], [164, "    .CLKOUT6 (),\n"], [165, "    .CLKIN2 (clk2),\n"], [166, "    .CLKINSEL (clk_sel),\n"], [167, "    .PSCLK (1'b0),\n"], [168, "    .PSEN (1'b0),\n"], [169, "    .PSINCDEC (1'b0),\n"], [170, "    .PSDONE (),\n"], [171, "    .CLKINSTOPPED (),\n"], [172, "    .CLKFBSTOPPED (),\n"], [173, "    .PWRDWN (1'b0),\n"], [174, "    .RST (mmcm_rst));\n"], [175, "  end\n"]], "Add": []}}