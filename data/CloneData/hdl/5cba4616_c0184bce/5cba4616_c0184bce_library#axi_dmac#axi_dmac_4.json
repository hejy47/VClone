{"Source Block": ["hdl/library/axi_dmac/axi_dmac.v@361:418@HdlStmProcess", "  end\nend\n\n// Register Interface\n\nalways @(posedge s_axi_aclk)\nbegin\n  if (s_axi_aresetn == 1'b0) begin\n    up_enable <= 'h00;\n    up_pause <= 'h00;\n    up_dma_src_address <= 'h00;\n    up_dma_dest_address <= 'h00;\n    up_dma_y_length <= 'h00;\n    up_dma_x_length <= 'h00;\n    up_dma_dest_stride <= 'h00;\n    up_dma_src_stride <= 'h00;\n    up_irq_mask <= 2'b11;\n    up_dma_req_valid <= 1'b0;\n    up_scratch <= 'h00;\n    up_dma_cyclic <= 1'b0;\n    up_axis_xlast <= 1'b1;\n    up_wack <= 1'b0;\n  end else begin\n    up_wack <= up_wreq;\n    if (up_enable == 1'b1) begin\n      if (up_wreq && up_waddr == 9'h102) begin\n        up_dma_req_valid <= up_dma_req_valid | up_wdata[0];\n      end else if (up_sot) begin\n        up_dma_req_valid <= 1'b0;\n      end\n    end else begin\n      up_dma_req_valid <= 1'b0;\n    end\n\n    if (up_wreq) begin\n      case (up_waddr)\n      9'h002: up_scratch <= up_wdata;\n      9'h020: up_irq_mask <= up_wdata[1:0];\n      9'h100: {up_pause, up_enable} <= up_wdata[1:0];\n                        9'h103: begin\n                          if (CYCLIC) up_dma_cyclic <= up_wdata[0];\n                          up_axis_xlast <= up_wdata[1];\n                        end\n      9'h104: up_dma_dest_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n      9'h105: up_dma_src_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n      9'h106: up_dma_x_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n      9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n      9'h108: up_dma_dest_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n      9'h109: up_dma_src_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n      endcase\n    end\n  end\nend\n\nassign dbg_ids0 = {\n  {DBG_ID_PADDING{1'b0}}, dest_data_id,\n  {DBG_ID_PADDING{1'b0}}, dest_response_id,\n  {DBG_ID_PADDING{1'b0}}, dest_address_id,\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[373, "    up_dma_y_length <= 'h00;\n"], [375, "    up_dma_dest_stride <= 'h00;\n"], [376, "    up_dma_src_stride <= 'h00;\n"], [407, "      9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [408, "      9'h108: up_dma_dest_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [409, "      9'h109: up_dma_src_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"]], "Add": [[413, "generate\n"], [413, "if (DMA_2D_TRANSFER == 1) begin\n"], [413, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_y_length = 'h00;\n"], [413, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_src_stride = 'h00;\n"], [413, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_dest_stride = 'h00;\n"], [413, "  always @(posedge s_axi_aclk)\n"], [413, "  begin\n"], [413, "    if (s_axi_aresetn == 1'b0) begin\n"], [413, "      up_dma_y_length <= 'h00;\n"], [413, "      up_dma_dest_stride <= 'h00;\n"], [413, "      up_dma_src_stride <= 'h00;\n"], [413, "    end else begin\n"], [413, "      if (up_wreq) begin\n"], [413, "        case (up_waddr)\n"], [413, "        9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [413, "        9'h108: up_dma_dest_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [413, "        9'h109: up_dma_src_stride <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [413, "        endcase\n"], [413, "      end\n"], [413, "    end\n"], [413, "  end\n"], [413, "  assign up_dma_y_length_s = up_dma_y_length;\n"], [413, "  assign up_dma_dest_stride_s = up_dma_dest_stride;\n"], [413, "  assign up_dma_src_stride_s = up_dma_src_stride;\n"], [413, "end else begin\n"], [413, "  assign up_dma_y_length_s = 'h0;\n"], [413, "  assign up_dma_dest_stride_s = 'h0;\n"], [413, "  assign up_dma_src_stride_s = 'h0;\n"], [413, "end\n"], [413, "endgenerate\n"]]}}