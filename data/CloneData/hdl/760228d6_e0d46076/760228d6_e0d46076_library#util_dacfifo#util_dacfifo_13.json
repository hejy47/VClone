{"Source Block": ["hdl/library/util_dacfifo/util_dacfifo.v@137:151@HdlStmProcess", "\n  assign dma_wren = dma_valid & dma_xfer_req;\n\n  // sync lastaddr to dac clock domain\n\n  always @(posedge dac_clk) begin\n    dac_lastaddr_d <= dma_lastaddr;\n    dac_lastaddr_2d <= dac_lastaddr_d;\n    dac_xfer_out_m <= {dac_xfer_out_m[1:0], dma_xfer_out};\n  end\n\n  assign dac_xfer_out = dac_xfer_out_m[2];\n\n  // generate dac read address\n\n"], "Clone Blocks": [["hdl/library/util_dacfifo/util_dacfifo.v@143:153", "    dac_lastaddr_d <= dma_lastaddr;\n    dac_lastaddr_2d <= dac_lastaddr_d;\n    dac_xfer_out_m <= {dac_xfer_out_m[1:0], dma_xfer_out};\n  end\n\n  assign dac_xfer_out = dac_xfer_out_m[2];\n\n  // generate dac read address\n\n  always @(posedge dac_clk) begin\n    if(dac_valid == 1'b1) begin\n"]], "Diff Content": {"Delete": [[143, "    dac_lastaddr_d <= dma_lastaddr;\n"], [144, "    dac_lastaddr_2d <= dac_lastaddr_d;\n"], [145, "    dac_xfer_out_m <= {dac_xfer_out_m[1:0], dma_xfer_out};\n"]], "Add": [[145, "    if (dac_rst == 1'b1) begin\n"], [145, "      dac_addr_diff <= 'b0;\n"], [145, "      dac_waddr_m1 <= 'b0;\n"], [145, "      dac_waddr_m2 <= 'b0;\n"], [145, "      dac_waddr <= 'b0;\n"], [145, "      dac_mem_ready <= 1'b0;\n"], [145, "    end else begin\n"], [145, "      dac_waddr_m1 <= dma_waddr_g;\n"], [145, "      dac_waddr_m2 <= dac_waddr_m1;\n"], [145, "      dac_waddr <= g2b(dac_waddr_m2);\n"], [145, "      dac_addr_diff <= dac_addr_diff_s[ADDRESS_WIDTH-1:0];\n"], [145, "      if (dac_addr_diff > 0) begin\n"], [145, "        dac_mem_ready <= 1'b1;\n"], [145, "      end else begin\n"], [145, "        dac_mem_ready <= 1'b0;\n"], [145, "      end\n"], [145, "    end\n"]]}}