Source Block: hdl/library/xilinx/common/ad_serdes_clk.v@100:140@HdlStmIf
      .I(clk_in_p));
  end
  endgenerate

  generate
  if (MMCM_OR_BUFR_N == 1) begin
  ad_mmcm_drp #(
    .MMCM_DEVICE_TYPE (DEVICE_TYPE),
    .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),
    .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),
    .MMCM_VCO_DIV (MMCM_VCO_DIV),
    .MMCM_VCO_MUL (MMCM_VCO_MUL),
    .MMCM_CLK0_DIV (MMCM_CLK0_DIV),
    .MMCM_CLK0_PHASE (0.0),
    .MMCM_CLK1_DIV (MMCM_CLK1_DIV),
    .MMCM_CLK1_PHASE (0.0),
    .MMCM_CLK2_DIV (MMCM_CLK0_DIV),
    .MMCM_CLK2_PHASE (90.0))
  i_mmcm_drp (
    .clk (clk_in_s),
    .clk2 (1'b0),
    .clk_sel (1'b1),
    .mmcm_rst (rst),
    .mmcm_clk_0 (clk),
    .mmcm_clk_1 (div_clk),
    .mmcm_clk_2 (out_clk),
    .up_clk (up_clk),
    .up_rstn (up_rstn),
    .up_drp_sel (up_drp_sel),
    .up_drp_wr (up_drp_wr),
    .up_drp_addr (up_drp_addr),
    .up_drp_wdata (up_drp_wdata[15:0]),
    .up_drp_rdata (up_drp_rdata[15:0]),
    .up_drp_ready (up_drp_ready),
    .up_drp_locked (up_drp_locked));
  end

  if (MMCM_OR_BUFR_N == 0) begin
  BUFIO i_clk_buf (
    .I (clk_in_s),
    .O (clk));

Diff Content:
- 106   ad_mmcm_drp #(
- 107     .MMCM_DEVICE_TYPE (DEVICE_TYPE),
- 108     .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),
- 109     .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),
- 110     .MMCM_VCO_DIV (MMCM_VCO_DIV),
- 111     .MMCM_VCO_MUL (MMCM_VCO_MUL),
- 112     .MMCM_CLK0_DIV (MMCM_CLK0_DIV),
- 113     .MMCM_CLK0_PHASE (0.0),
- 114     .MMCM_CLK1_DIV (MMCM_CLK1_DIV),
- 115     .MMCM_CLK1_PHASE (0.0),
- 116     .MMCM_CLK2_DIV (MMCM_CLK0_DIV),
- 117     .MMCM_CLK2_PHASE (90.0))
- 118   i_mmcm_drp (
- 119     .clk (clk_in_s),
- 120     .clk2 (1'b0),
- 121     .clk_sel (1'b1),
- 122     .mmcm_rst (rst),
- 123     .mmcm_clk_0 (clk),
- 124     .mmcm_clk_1 (div_clk),
- 125     .mmcm_clk_2 (out_clk),
- 126     .up_clk (up_clk),
- 127     .up_rstn (up_rstn),
- 128     .up_drp_sel (up_drp_sel),
- 129     .up_drp_wr (up_drp_wr),
- 130     .up_drp_addr (up_drp_addr),
- 131     .up_drp_wdata (up_drp_wdata[15:0]),
- 132     .up_drp_rdata (up_drp_rdata[15:0]),
- 133     .up_drp_ready (up_drp_ready),
- 134     .up_drp_locked (up_drp_locked));
- 135   end
+ 135     ad_mmcm_drp #(
+ 135       .MMCM_DEVICE_TYPE (DEVICE_TYPE),
+ 135       .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),
+ 135       .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),
+ 135       .MMCM_VCO_DIV (MMCM_VCO_DIV),
+ 135       .MMCM_VCO_MUL (MMCM_VCO_MUL),
+ 135       .MMCM_CLK0_DIV (MMCM_CLK0_DIV),
+ 135       .MMCM_CLK0_PHASE (0.0),
+ 135       .MMCM_CLK1_DIV (MMCM_CLK1_DIV),
+ 135       .MMCM_CLK1_PHASE (0.0),
+ 135       .MMCM_CLK2_DIV (MMCM_CLK0_DIV),
+ 135       .MMCM_CLK2_PHASE (90.0))
+ 135     i_mmcm_drp (
+ 135       .clk (clk_in_s),
+ 135       .clk2 (1'b0),
+ 135       .clk_sel (1'b1),
+ 135       .mmcm_rst (rst),
+ 135       .mmcm_clk_0 (clk),
+ 135       .mmcm_clk_1 (div_clk),
+ 135       .mmcm_clk_2 (out_clk),
+ 135       .up_clk (up_clk),
+ 135       .up_rstn (up_rstn),
+ 135       .up_drp_sel (up_drp_sel),
+ 135       .up_drp_wr (up_drp_wr),
+ 135       .up_drp_addr (up_drp_addr),
+ 135       .up_drp_wdata (up_drp_wdata[15:0]),
+ 135       .up_drp_rdata (up_drp_rdata[15:0]),
+ 135       .up_drp_ready (up_drp_ready),
+ 135       .up_drp_locked (up_drp_locked));
+ 135     end
+ 135   endgenerate
+ 135   generate

Clone Blocks:
