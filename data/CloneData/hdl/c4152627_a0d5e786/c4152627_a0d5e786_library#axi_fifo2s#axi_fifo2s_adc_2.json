{"Source Block": ["hdl/library/axi_fifo2s/axi_fifo2s_adc.v@90:138@HdlStmProcess", "\n  wire    [  3:0]                 adc_xfer_status_s;\n\n  // write interface: supports only 64, 128, 256 and 512 against 512\n\n  always @(posedge adc_clk) begin\n    if (adc_rst == 1'b1) begin\n      adc_wovf <= 'd0;\n      adc_wcnt_int <= 'd0;\n      adc_dwr <= 'd0;\n      adc_ddata <= 'd0;\n    end else begin\n      adc_wovf <= | adc_xfer_status_s;\n      adc_wcnt_int <= adc_wcnt_int + 1'b1;\n      case (ADC_MEM_RATIO)\n        8: begin\n          adc_dwr <= adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1] & adc_wcnt_int[2];\n          adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*7)] <= adc_wdata;\n          adc_ddata[((ADC_DATA_WIDTH*7)-1):(ADC_DATA_WIDTH*0)] <= \n            adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*1)];\n        end\n        4: begin\n          adc_dwr <= adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1];\n          adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*3)] <= adc_wdata;\n          adc_ddata[((ADC_DATA_WIDTH*3)-1):(ADC_DATA_WIDTH*0)] <=\n            adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*1)];\n        end\n        2: begin\n          adc_dwr <= adc_wr & adc_wcnt_int[0];\n          adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)] <= adc_wdata;\n          adc_ddata[((ADC_DATA_WIDTH*1)-1):(ADC_DATA_WIDTH*0)] <=\n            adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)];\n        end\n        1: begin\n          adc_dwr <= adc_wr;\n          adc_ddata <= adc_wdata;\n        end\n        default: begin\n          adc_dwr <= 'd0;\n          adc_ddata <= 'd0;\n        end\n      endcase\n    end\n  end\n\n  // instantiations\n\n  up_xfer_status #(.DATA_WIDTH(4)) i_xfer_status (\n    .up_rstn (~adc_rst),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[103, "      adc_wcnt_int <= adc_wcnt_int + 1'b1;\n"], [104, "      case (ADC_MEM_RATIO)\n"], [105, "        8: begin\n"], [106, "          adc_dwr <= adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1] & adc_wcnt_int[2];\n"], [107, "          adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*7)] <= adc_wdata;\n"], [108, "          adc_ddata[((ADC_DATA_WIDTH*7)-1):(ADC_DATA_WIDTH*0)] <= \n"], [109, "            adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*1)];\n"], [110, "        end\n"], [111, "        4: begin\n"], [112, "          adc_dwr <= adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1];\n"], [113, "          adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*3)] <= adc_wdata;\n"], [114, "          adc_ddata[((ADC_DATA_WIDTH*3)-1):(ADC_DATA_WIDTH*0)] <=\n"], [115, "            adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*1)];\n"], [116, "        end\n"], [117, "        2: begin\n"], [118, "          adc_dwr <= adc_wr & adc_wcnt_int[0];\n"], [119, "          adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)] <= adc_wdata;\n"], [120, "          adc_ddata[((ADC_DATA_WIDTH*1)-1):(ADC_DATA_WIDTH*0)] <=\n"], [121, "            adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)];\n"], [122, "        end\n"], [123, "        1: begin\n"], [124, "          adc_dwr <= adc_wr;\n"], [125, "          adc_ddata <= adc_wdata;\n"], [126, "        end\n"], [127, "        default: begin\n"], [128, "          adc_dwr <= 'd0;\n"], [129, "          adc_ddata <= 'd0;\n"], [130, "        end\n"], [131, "      endcase\n"]], "Add": [[131, "      adc_dwr <= (ADC_MEM_RATIO == 8) ? adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1] & adc_wcnt_int[2] :\n"], [131, "                 (ADC_MEM_RATIO == 4) ? adc_wr & adc_wcnt_int[0] & adc_wcnt_int[1] :\n"], [131, "                 (ADC_MEM_RATIO == 2) ? adc_wr & adc_wcnt_int[0] :\n"], [131, "                 (ADC_MEM_RATIO == 1) ? adc_wr : 'd0;\n"], [131, "      if (adc_wr == 1'b1) begin\n"], [131, "        adc_wcnt_int <= adc_wcnt_int + 1'b1;\n"], [131, "        case (ADC_MEM_RATIO)\n"], [131, "          8: begin\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*7)] <= adc_wdata;\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*7)-1):(ADC_DATA_WIDTH*0)] <=\n"], [131, "              adc_ddata[((ADC_DATA_WIDTH*8)-1):(ADC_DATA_WIDTH*1)];\n"], [131, "          end\n"], [131, "          4: begin\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*3)] <= adc_wdata;\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*3)-1):(ADC_DATA_WIDTH*0)] <=\n"], [131, "              adc_ddata[((ADC_DATA_WIDTH*4)-1):(ADC_DATA_WIDTH*1)];\n"], [131, "          end\n"], [131, "          2: begin\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)] <= adc_wdata;\n"], [131, "            adc_ddata[((ADC_DATA_WIDTH*1)-1):(ADC_DATA_WIDTH*0)] <=\n"], [131, "              adc_ddata[((ADC_DATA_WIDTH*2)-1):(ADC_DATA_WIDTH*1)];\n"], [131, "          end\n"], [131, "          1: begin\n"], [131, "            adc_ddata <= adc_wdata;\n"], [131, "          end\n"], [131, "          default: begin\n"], [131, "            adc_ddata <= 'd0;\n"], [131, "          end\n"], [131, "        endcase\n"], [131, "      end\n"]]}}