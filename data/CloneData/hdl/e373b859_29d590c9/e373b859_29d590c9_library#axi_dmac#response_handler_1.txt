Source Block: hdl/library/axi_dmac/response_handler.v@65:75@HdlIdDef
`include "inc_id.h"

assign resp_resp = bresp;
assign resp_eot = eot;

wire active = id != wait_id && enabled;

assign bready = active && resp_ready;
assign resp_valid = active && bvalid;

// We have to wait for all responses before we can disable the response handler

Diff Content:
- 70 wire active = id != wait_id && enabled;
+ 70 wire active = id != request_id && enabled;

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_dmac/response_handler.v@67:77
assign resp_resp = bresp;
assign resp_eot = eot;

wire active = id != wait_id && enabled;

assign bready = active && resp_ready;
assign resp_valid = active && bvalid;

// We have to wait for all responses before we can disable the response handler
always @(posedge clk) begin
	if (resetn == 1'b0) begin

Clone Blocks 2:
hdl/library/axi_dmac/response_handler.v@68:78
assign resp_eot = eot;

wire active = id != wait_id && enabled;

assign bready = active && resp_ready;
assign resp_valid = active && bvalid;

// We have to wait for all responses before we can disable the response handler
always @(posedge clk) begin
	if (resetn == 1'b0) begin
		enabled <= 1'b0;

Clone Blocks 3:
hdl/library/axi_dmac/response_handler.v@62:72
parameter C_ID_WIDTH = 3;

`include "resp.h"
`include "inc_id.h"

assign resp_resp = bresp;
assign resp_eot = eot;

wire active = id != wait_id && enabled;

assign bready = active && resp_ready;

Clone Blocks 4:
hdl/library/axi_dmac/response_handler.v@63:73

`include "resp.h"
`include "inc_id.h"

assign resp_resp = bresp;
assign resp_eot = eot;

wire active = id != wait_id && enabled;

assign bready = active && resp_ready;
assign resp_valid = active && bvalid;

