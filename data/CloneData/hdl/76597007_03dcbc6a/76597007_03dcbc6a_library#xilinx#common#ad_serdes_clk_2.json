{"Source Block": ["hdl/library/xilinx/common/ad_serdes_clk.v@121:143@HdlStmIf", "    .up_drp_rdata (up_drp_rdata[15:0]),\n    .up_drp_ready (up_drp_ready),\n    .up_drp_locked (up_drp_locked));\n  end\n\n  if (MMCM_OR_BUFR_N == 0) begin\n  BUFIO i_clk_buf (\n    .I (clk_in_s),\n    .O (clk));\n\n  BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n    .CLR (1'b0),\n    .CE (1'b1),\n    .I (clk_in_s),\n    .O (div_clk));\n\n  assign out_clk = clk;\n  end\n  endgenerate\n\nendmodule\n\n// ***************************************************************************\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[126, "  if (MMCM_OR_BUFR_N == 0) begin\n"], [127, "  BUFIO i_clk_buf (\n"], [128, "    .I (clk_in_s),\n"], [129, "    .O (clk));\n"], [131, "  BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n"], [132, "    .CLR (1'b0),\n"], [133, "    .CE (1'b1),\n"], [134, "    .I (clk_in_s),\n"], [135, "    .O (div_clk));\n"], [137, "  assign out_clk = clk;\n"]], "Add": [[135, "    ad_mmcm_drp #(\n"], [135, "      .MMCM_DEVICE_TYPE (DEVICE_TYPE),\n"], [135, "      .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),\n"], [135, "      .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),\n"], [135, "      .MMCM_VCO_DIV (MMCM_VCO_DIV),\n"], [135, "      .MMCM_VCO_MUL (MMCM_VCO_MUL),\n"], [135, "      .MMCM_CLK0_DIV (MMCM_CLK0_DIV),\n"], [135, "      .MMCM_CLK0_PHASE (0.0),\n"], [135, "      .MMCM_CLK1_DIV (MMCM_CLK1_DIV),\n"], [135, "      .MMCM_CLK1_PHASE (0.0),\n"], [135, "      .MMCM_CLK2_DIV (MMCM_CLK0_DIV),\n"], [135, "      .MMCM_CLK2_PHASE (90.0))\n"], [135, "    i_mmcm_drp (\n"], [135, "      .clk (clk_in_s),\n"], [135, "      .clk2 (1'b0),\n"], [135, "      .clk_sel (1'b1),\n"], [135, "      .mmcm_rst (rst),\n"], [135, "      .mmcm_clk_0 (clk),\n"], [135, "      .mmcm_clk_1 (div_clk),\n"], [135, "      .mmcm_clk_2 (out_clk),\n"], [135, "      .up_clk (up_clk),\n"], [135, "      .up_rstn (up_rstn),\n"], [135, "      .up_drp_sel (up_drp_sel),\n"], [135, "      .up_drp_wr (up_drp_wr),\n"], [135, "      .up_drp_addr (up_drp_addr),\n"], [135, "      .up_drp_wdata (up_drp_wdata[15:0]),\n"], [135, "      .up_drp_rdata (up_drp_rdata[15:0]),\n"], [135, "      .up_drp_ready (up_drp_ready),\n"], [135, "      .up_drp_locked (up_drp_locked));\n"], [135, "    end else if (MMCM_OR_BUFR_N == 0) begin\n"], [135, "      BUFIO i_clk_buf (\n"], [135, "        .I (clk_in_s),\n"], [135, "        .O (clk));\n"], [135, "      BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n"], [135, "        .CLR (1'b0),\n"], [135, "        .CE (1'b1),\n"], [135, "        .I (clk_in_s),\n"], [135, "        .O (div_clk));\n"], [135, "      assign out_clk = clk;\n"], [135, "      assign up_drp_rdata[15:0] = 'd0;\n"], [135, "      assign up_drp_ready = 'd0;\n"], [135, "      assign up_drp_locked = 'd0;\n"]]}}