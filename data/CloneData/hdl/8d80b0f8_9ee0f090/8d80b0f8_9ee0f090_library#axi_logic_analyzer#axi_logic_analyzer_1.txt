Source Block: hdl/library/axi_logic_analyzer/axi_logic_analyzer.v@124:134@HdlIdDef
  reg    [ 1:0]     fall_edge_trigger = 1'd0;
  reg    [ 1:0]     high_level_trigger = 1'd0;
  reg    [ 1:0]     low_level_trigger = 1'd0;

  reg    [31:0]     trigger_holdoff_counter = 32'd0;
  reg    [ 4:0]     adc_data_delay = 5'd0;

  reg    [16:0]     data_fixed_delay [0:15];
  reg    [15:0]     data_dynamic_delay [0:15];

  // internal signals

Diff Content:
- 129   reg    [ 4:0]     adc_data_delay = 5'd0;
+ 129   reg    [ 3:0]     adc_data_delay = 4'd0;

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_logic_analyzer/axi_logic_analyzer.v@121:131

  reg    [ 1:0]     any_edge_trigger = 1'd0;
  reg    [ 1:0]     rise_edge_trigger = 1'd0;
  reg    [ 1:0]     fall_edge_trigger = 1'd0;
  reg    [ 1:0]     high_level_trigger = 1'd0;
  reg    [ 1:0]     low_level_trigger = 1'd0;

  reg    [31:0]     trigger_holdoff_counter = 32'd0;
  reg    [ 4:0]     adc_data_delay = 5'd0;

  reg    [16:0]     data_fixed_delay [0:15];

Clone Blocks 2:
hdl/library/axi_logic_analyzer/axi_logic_analyzer.v@120:130
  reg               pg_trigered = 1'd0;

  reg    [ 1:0]     any_edge_trigger = 1'd0;
  reg    [ 1:0]     rise_edge_trigger = 1'd0;
  reg    [ 1:0]     fall_edge_trigger = 1'd0;
  reg    [ 1:0]     high_level_trigger = 1'd0;
  reg    [ 1:0]     low_level_trigger = 1'd0;

  reg    [31:0]     trigger_holdoff_counter = 32'd0;
  reg    [ 4:0]     adc_data_delay = 5'd0;


Clone Blocks 3:
hdl/library/axi_logic_analyzer/axi_logic_analyzer.v@126:136
  reg    [ 1:0]     low_level_trigger = 1'd0;

  reg    [31:0]     trigger_holdoff_counter = 32'd0;
  reg    [ 4:0]     adc_data_delay = 5'd0;

  reg    [16:0]     data_fixed_delay [0:15];
  reg    [15:0]     data_dynamic_delay [0:15];

  // internal signals

  wire              up_clk;

Clone Blocks 4:
hdl/library/axi_logic_analyzer/axi_logic_analyzer.v@123:133
  reg    [ 1:0]     rise_edge_trigger = 1'd0;
  reg    [ 1:0]     fall_edge_trigger = 1'd0;
  reg    [ 1:0]     high_level_trigger = 1'd0;
  reg    [ 1:0]     low_level_trigger = 1'd0;

  reg    [31:0]     trigger_holdoff_counter = 32'd0;
  reg    [ 4:0]     adc_data_delay = 5'd0;

  reg    [16:0]     data_fixed_delay [0:15];
  reg    [15:0]     data_dynamic_delay [0:15];


