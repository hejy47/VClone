{"Source Block": ["hdl/library/axi_dacfifo/axi_dacfifo_rd.v@130:140@HdlIdDef", "\n  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 32'b0;\n  reg                             axi_rd = 1'b0;\n  reg                             axi_rd_active = 1'b0;\n  reg                             axi_arvalid = 1'b0;\n  reg     [ 31:0]                 axi_araddr = 32'b0;\n  reg     [(AXI_DATA_WIDTH-1):0]  axi_ddata = 'b0;\n  reg                             axi_dvalid = 1'b0;\n  reg                             axi_rready = 1'b0;\n"], "Clone Blocks": [["hdl/library/axi_dacfifo/axi_dacfifo_rd.v@128:138", "  output  [(AXI_DATA_WIDTH-1):0]  axi_ddata;\n  input                           axi_dready;\n\n  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 32'b0;\n  reg                             axi_rd = 1'b0;\n  reg                             axi_rd_active = 1'b0;\n  reg                             axi_arvalid = 1'b0;\n  reg     [ 31:0]                 axi_araddr = 32'b0;\n  reg     [(AXI_DATA_WIDTH-1):0]  axi_ddata = 'b0;\n"], ["hdl/library/axi_dacfifo/axi_dacfifo_rd.v@129:139", "  input                           axi_dready;\n\n  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 32'b0;\n  reg                             axi_rd = 1'b0;\n  reg                             axi_rd_active = 1'b0;\n  reg                             axi_arvalid = 1'b0;\n  reg     [ 31:0]                 axi_araddr = 32'b0;\n  reg     [(AXI_DATA_WIDTH-1):0]  axi_ddata = 'b0;\n  reg                             axi_dvalid = 1'b0;\n"], ["hdl/library/axi_adcfifo/axi_adcfifo_rd.v@144:154", "  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 'd0;\n  reg                             axi_rd = 'd0;\n  reg                             axi_rd_active = 'd0;\n  reg     [  2:0]                 axi_xfer_req_m = 'd0;\n  reg                             axi_xfer_init = 'd0;\n  reg                             axi_xfer_enable = 'd0;\n  reg                             axi_arvalid = 'd0;\n  reg     [ 31:0]                 axi_araddr = 'd0;\n  reg                             axi_drst = 'd0;\n"], ["hdl/library/axi_adcfifo/axi_adcfifo_rd.v@145:155", "\n  reg     [ 31:0]                 axi_rd_addr_h = 'd0;\n  reg                             axi_rd = 'd0;\n  reg                             axi_rd_active = 'd0;\n  reg     [  2:0]                 axi_xfer_req_m = 'd0;\n  reg                             axi_xfer_init = 'd0;\n  reg                             axi_xfer_enable = 'd0;\n  reg                             axi_arvalid = 'd0;\n  reg     [ 31:0]                 axi_araddr = 'd0;\n  reg                             axi_drst = 'd0;\n  reg                             axi_dvalid = 'd0;\n"], ["hdl/library/axi_dacfifo/axi_dacfifo_rd.v@137:147", "  reg     [ 31:0]                 axi_araddr = 32'b0;\n  reg     [(AXI_DATA_WIDTH-1):0]  axi_ddata = 'b0;\n  reg                             axi_dvalid = 1'b0;\n  reg                             axi_rready = 1'b0;\n  reg                             axi_rerror = 1'b0;\n  reg     [ 1:0]                  axi_xfer_req_m = 2'b0;\n\n  // internal signals\n\n  wire                            axi_ready_s;\n  wire                            axi_xfer_req_init;\n"], ["hdl/library/axi_adcfifo/axi_adcfifo_rd.v@143:153", "\n  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 'd0;\n  reg                             axi_rd = 'd0;\n  reg                             axi_rd_active = 'd0;\n  reg     [  2:0]                 axi_xfer_req_m = 'd0;\n  reg                             axi_xfer_init = 'd0;\n  reg                             axi_xfer_enable = 'd0;\n  reg                             axi_arvalid = 'd0;\n  reg     [ 31:0]                 axi_araddr = 'd0;\n"], ["hdl/library/axi_adcfifo/axi_adcfifo_rd.v@141:151", "  output  [AXI_DATA_WIDTH-1:0]    axi_ddata;\n  input                           axi_dready;\n\n  // internal registers\n\n  reg     [ 31:0]                 axi_rd_addr_h = 'd0;\n  reg                             axi_rd = 'd0;\n  reg                             axi_rd_active = 'd0;\n  reg     [  2:0]                 axi_xfer_req_m = 'd0;\n  reg                             axi_xfer_init = 'd0;\n  reg                             axi_xfer_enable = 'd0;\n"]], "Diff Content": {"Delete": [[135, "  reg                             axi_rd_active = 1'b0;\n"]], "Add": [[135, "  reg                             axi_rnext = 1'b0;\n"], [135, "  reg                             axi_ractive = 1'b0;\n"]]}}