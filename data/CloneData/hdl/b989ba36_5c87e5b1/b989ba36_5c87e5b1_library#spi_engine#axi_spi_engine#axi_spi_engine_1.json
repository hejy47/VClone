{"Source Block": ["hdl/library/spi_engine/axi_spi_engine/axi_spi_engine.v@474:602@HdlStmIf", "    .m_axis_valid(sdi_fifo_out_valid),\n    .m_axis_data(sdi_fifo_out_data),\n    .m_axis_level(sdi_fifo_level)\n  );\n\n  generate if (ASYNC_SPI_CLK) begin\n\n    // synchronization FIFO for the SYNC interface\n    util_axis_fifo #(\n      .DATA_WIDTH(8),\n      .ASYNC_CLK(ASYNC_SPI_CLK),\n      .ADDRESS_WIDTH(SYNC_FIFO_ADDRESS_WIDTH),\n      .M_AXIS_REGISTERED(0)\n    ) i_sync_fifo (\n      .s_axis_aclk(spi_clk),\n      .s_axis_aresetn(spi_resetn),\n      .s_axis_ready(sync_ready),\n      .s_axis_valid(sync_valid),\n      .s_axis_data(sync_data),\n      .s_axis_room(),\n      .s_axis_empty(),\n      .m_axis_aclk(clk),\n      .m_axis_aresetn(up_sw_resetn),\n      .m_axis_ready(1'b1),\n      .m_axis_valid(sync_fifo_valid),\n      .m_axis_data(sync_fifo_data),\n      .m_axis_level()\n    );\n\n    // synchronization FIFO for the offload command interface\n    wire up_offload0_cmd_wr_en_s;\n    wire [15:0] up_offload0_cmd_wr_data_s;\n\n    util_axis_fifo #(\n      .DATA_WIDTH(16),\n      .ASYNC_CLK(ASYNC_SPI_CLK),\n      .ADDRESS_WIDTH(SYNC_FIFO_ADDRESS_WIDTH),\n      .M_AXIS_REGISTERED(0)\n    ) i_offload_cmd_fifo (\n      .s_axis_aclk(clk),\n      .s_axis_aresetn(up_sw_resetn),\n      .s_axis_ready(),\n      .s_axis_valid(up_offload0_cmd_wr_en_s),\n      .s_axis_data(up_offload0_cmd_wr_data_s),\n      .s_axis_room(),\n      .s_axis_empty(),\n      .m_axis_aclk(spi_clk),\n      .m_axis_aresetn(spi_resetn),\n      .m_axis_ready(1'b1),\n      .m_axis_valid(offload0_cmd_wr_en),\n      .m_axis_data(offload0_cmd_wr_data),\n      .m_axis_level()\n    );\n\n    assign up_offload0_cmd_wr_en_s = up_wreq_s == 1'b1 && up_waddr_s == 8'h44;\n    assign up_offload0_cmd_wr_data_s = up_wdata_s[15:0];\n\n    // synchronization FIFO for the offload SDO interface\n    wire up_offload0_sdo_wr_en_s;\n    wire [DATA_WIDTH-1:0] up_offload0_sdo_wr_data_s;\n\n    util_axis_fifo #(\n      .DATA_WIDTH(DATA_WIDTH),\n      .ASYNC_CLK(ASYNC_SPI_CLK),\n      .ADDRESS_WIDTH(SYNC_FIFO_ADDRESS_WIDTH),\n      .M_AXIS_REGISTERED(0)\n    ) i_offload_sdo_fifo (\n      .s_axis_aclk(clk),\n      .s_axis_aresetn(up_sw_resetn),\n      .s_axis_ready(),\n      .s_axis_valid(up_offload0_sdo_wr_en_s),\n      .s_axis_data(up_offload0_sdo_wr_data_s),\n      .s_axis_room(),\n      .s_axis_empty(),\n      .m_axis_aclk(spi_clk),\n      .m_axis_aresetn(spi_resetn),\n      .m_axis_ready(1'b1),\n      .m_axis_valid(offload0_sdo_wr_en),\n      .m_axis_data(offload0_sdo_wr_data),\n      .m_axis_level()\n    );\n\n    assign up_offload0_sdo_wr_en_s = up_wreq_s == 1'b1 && up_waddr_s == 8'h45;\n    assign up_offload0_sdo_wr_data_s = up_wdata_s[DATA_WIDTH-1:0];\n\n    // synchronization FIFO for the Offload SYNC interface\n    util_axis_fifo #(\n      .DATA_WIDTH(8),\n      .ASYNC_CLK(ASYNC_SPI_CLK),\n      .ADDRESS_WIDTH(SYNC_FIFO_ADDRESS_WIDTH),\n      .M_AXIS_REGISTERED(0)\n    ) i_offload_sync_fifo (\n      .s_axis_aclk(spi_clk),\n      .s_axis_aresetn(spi_resetn),\n      .s_axis_ready(offload_sync_ready),\n      .s_axis_valid(offload_sync_valid),\n      .s_axis_data(offload_sync_data),\n      .s_axis_room(),\n      .s_axis_empty(),\n      .m_axis_aclk(clk),\n      .m_axis_aresetn(up_sw_resetn),\n      .m_axis_ready(1'b1),\n      .m_axis_valid(offload_sync_fifo_valid),\n      .m_axis_data(offload_sync_fifo_data),\n      .m_axis_level()\n    );\n\n  end else begin /* ASYNC_SPI_CLK == 0 */\n\n      assign sync_fifo_valid = sync_valid;\n      assign sync_fifo_data = sync_data;\n      assign sync_ready = 1'b1;\n\n      assign offload0_cmd_wr_en = up_wreq_s == 1'b1 && up_waddr_s == 8'h44;\n      assign offload0_cmd_wr_data = up_wdata_s[15:0];\n\n      assign offload0_sdo_wr_en = up_wreq_s == 1'b1 && up_waddr_s == 8'h45;\n      assign offload0_sdo_wr_data = up_wdata_s[DATA_WIDTH-1:0];\n\n      assign offload_sync_fifo_valid = offload_sync_valid;\n      assign offload_sync_fifo_data = offload_sync_data;\n      assign offload_sync_ready = 1'b1;\n\n  end\n  endgenerate\n\n  sync_bits #(\n    .NUM_OF_BITS (1),\n    .ASYNC_CLK (ASYNC_SPI_CLK)\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[494, "      .s_axis_empty(),\n"], [500, "      .m_axis_level()\n"], [519, "      .s_axis_empty(),\n"], [525, "      .m_axis_level()\n"], [547, "      .s_axis_empty(),\n"], [553, "      .m_axis_level()\n"], [572, "      .s_axis_empty(),\n"], [578, "      .m_axis_level()\n"]], "Add": [[494, "      .s_axis_full(),\n"], [500, "      .m_axis_level(),\n"], [500, "      .m_axis_empty()\n"], [519, "      .s_axis_full(),\n"], [525, "      .m_axis_level(),\n"], [525, "      .m_axis_empty()\n"], [547, "      .s_axis_full(),\n"], [553, "      .m_axis_level(),\n"], [553, "      .m_axis_empty()\n"], [572, "      .s_axis_full(),\n"], [578, "      .m_axis_level(),\n"], [578, "      .m_axis_empty()\n"]]}}