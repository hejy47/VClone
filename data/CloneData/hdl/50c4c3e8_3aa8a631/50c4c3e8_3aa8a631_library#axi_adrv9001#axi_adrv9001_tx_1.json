{"Source Block": ["hdl/library/axi_adrv9001/axi_adrv9001_tx.v@100:413@HdlStmIf", "  input       [ 13:0]     up_raddr,\n  output  reg [ 31:0]     up_rdata,\n  output  reg             up_rack\n);\ngenerate\nif (ENABLED == 0) begin : core_disabled\n\n  assign dac_rst = 1'b0;\n  assign dac_data_valid_A = 1'b0;\n  assign dac_data_i_A = 16'b0;\n  assign dac_data_q_A = 16'b0;\n  assign dac_data_valid_B = 1'b0;\n  assign dac_data_i_B = 16'b0;\n  assign dac_data_q_B = 16'b0;\n  assign dac_single_lane = 1'b0;\n  assign dac_sdr_ddr_n = 1'b0;\n  assign dac_r1_mode = 1'b0;\n  assign dac_sync_out = 1'b0;\n  assign dac_valid = 1'b0;\n  assign dac_enable_i0 = 1'b0;\n  assign dac_enable_q0 = 1'b0;\n  assign dac_enable_i1 = 1'b0;\n  assign dac_enable_q1 = 1'b0;\n\n  always @(*) begin\n    up_wack = 1'b0;\n    up_rdata = 32'b0;\n    up_rack = 1'b0;\n  end\n\nend else begin : core_enabled\n\n  // configuration settings\n\n  localparam  CONFIG =  (CMOS_LVDS_N * 128) +\n                        (MODE_R1 * 16) +\n                        (DDS_DISABLE * 64) +\n                        (IQCORRECTION_DISABLE * 1);\n\n  // internal registers\n\n  reg               dac_data_sync = 'd0;\n  reg     [15:0]    dac_rate_cnt = 'd0;\n  reg               dac_valid_int = 'd0;\n\n  // internal signals\n\n  wire              dac_data_sync_s;\n  wire    [ 15:0]   dac_data_iq_i0_s;\n  wire    [ 15:0]   dac_data_iq_q0_s;\n  wire    [ 15:0]   dac_data_iq_i1_s;\n  wire    [ 15:0]   dac_data_iq_q1_s;\n  wire              dac_dds_format_s;\n  wire    [ 15:0]   dac_datarate_s;\n  wire      [4:0]   dac_num_lanes;\n  wire    [  4:0]   up_wack_s;\n  wire    [  4:0]   up_rack_s;\n  wire    [ 31:0]   up_rdata_s[0:4];\n\n  // master/slave\n\n  assign dac_data_sync_s = (ID == 0) ? dac_sync_out : dac_sync_in;\n\n  always @(posedge dac_clk) begin\n    dac_data_sync <= dac_data_sync_s;\n  end\n\n  // rate counters and data sync signals\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_rate_cnt <= 16'b0;\n    end else begin\n      if ((dac_data_sync == 1'b1) || (dac_rate_cnt == 16'd0)) begin\n        dac_rate_cnt <= dac_datarate_s;\n      end else begin\n        dac_rate_cnt <= dac_rate_cnt - 1'b1;\n      end\n    end\n  end\n\n  // dma interface\n\n  assign dac_data_valid_A = dac_valid_int;\n  assign dac_data_valid_B = dac_valid_int;\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_valid_int <= 1'b0;\n    end else begin\n      dac_valid_int <= (dac_rate_cnt == 16'd0) ? tdd_tx_valid : 1'b0;\n    end\n  end\n\n  // processor read interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n      up_wack <= 'd0;\n      up_rack <= 'd0;\n      up_rdata <= 'd0;\n    end else begin\n      up_wack <= | up_wack_s;\n      up_rack <= | up_rack_s;\n      up_rdata <= up_rdata_s[0] | up_rdata_s[1] | up_rdata_s[2] |\n                  up_rdata_s[3] | up_rdata_s[4];\n    end\n  end\n\n  // dac channel 0\n\n  axi_adrv9001_tx_channel #(\n    .CHANNEL_ID (0),\n    .COMMON_ID (CHANNEL_BASE_ADDR),\n    .Q_OR_I_N (0),\n    .DISABLE (DISABLE),\n    .DDS_DISABLE (DDS_DISABLE),\n    .IQCORRECTION_DISABLE (IQCORRECTION_DISABLE),\n    .DAC_DDS_TYPE (DAC_DDS_TYPE),\n    .DAC_DDS_CORDIC_DW (DAC_DDS_CORDIC_DW),\n    .DAC_DDS_CORDIC_PHASE_DW (DAC_DDS_CORDIC_PHASE_DW))\n  i_tx_channel_0 (\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_data_in_req (dac_valid),\n    .dac_data_in (dac_data_i0),\n    .dac_data_out_req (dac_data_valid_A),\n    .dac_data_out (dac_data_i_A[15:0]),\n    .dac_data_iq_in (dac_data_iq_q0_s),\n    .dac_data_iq_out (dac_data_iq_i0_s),\n    .dac_enable (dac_enable_i0),\n    .dac_data_sync (dac_data_sync),\n    .dac_dds_format (dac_dds_format_s),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[0]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[0]),\n    .up_rack (up_rack_s[0]));\n\n  // dac channel 1\n\n  axi_adrv9001_tx_channel #(\n    .CHANNEL_ID (1),\n    .COMMON_ID (CHANNEL_BASE_ADDR),\n    .Q_OR_I_N (1),\n    .DISABLE (DISABLE),\n    .DDS_DISABLE (DDS_DISABLE),\n    .IQCORRECTION_DISABLE (IQCORRECTION_DISABLE),\n    .DAC_DDS_TYPE (DAC_DDS_TYPE),\n    .DAC_DDS_CORDIC_DW (DAC_DDS_CORDIC_DW),\n    .DAC_DDS_CORDIC_PHASE_DW (DAC_DDS_CORDIC_PHASE_DW))\n  i_tx_channel_1 (\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_data_in_req (),\n    .dac_data_in (dac_data_q0),\n    .dac_data_out_req (dac_data_valid_A),\n    .dac_data_out (dac_data_q_A[15:0]),\n    .dac_data_iq_in (dac_data_iq_i0_s),\n    .dac_data_iq_out (dac_data_iq_q0_s),\n    .dac_enable (dac_enable_q0),\n    .dac_data_sync (dac_data_sync),\n    .dac_dds_format (dac_dds_format_s),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[1]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[1]),\n    .up_rack (up_rack_s[1]));\n\n  // dac channel 2 - disabled in 1R1T mode\n\n  axi_adrv9001_tx_channel #(\n    .CHANNEL_ID (2),\n    .COMMON_ID (CHANNEL_BASE_ADDR),\n    .Q_OR_I_N (0),\n    .DISABLE (MODE_R1),\n    .DDS_DISABLE (DDS_DISABLE),\n    .IQCORRECTION_DISABLE (IQCORRECTION_DISABLE),\n    .DAC_DDS_TYPE (DAC_DDS_TYPE),\n    .DAC_DDS_CORDIC_DW (DAC_DDS_CORDIC_DW),\n    .DAC_DDS_CORDIC_PHASE_DW (DAC_DDS_CORDIC_PHASE_DW))\n  i_tx_channel_2 (\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_data_in_req (),\n    .dac_data_in (dac_data_i1),\n    .dac_data_out_req (dac_data_valid_B),\n    .dac_data_out (dac_data_i_B[15:0]),\n    .dac_data_iq_in (dac_data_iq_q1_s),\n    .dac_data_iq_out (dac_data_iq_i1_s),\n    .dac_enable (dac_enable_i1),\n    .dac_data_sync (dac_data_sync),\n    .dac_dds_format (dac_dds_format_s),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[2]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[2]),\n    .up_rack (up_rack_s[2]));\n\n  // dac channel 3 - disabled in 1R1T mode\n\n  axi_adrv9001_tx_channel #(\n    .CHANNEL_ID (3),\n    .COMMON_ID (CHANNEL_BASE_ADDR),\n    .Q_OR_I_N (1),\n    .DISABLE (MODE_R1),\n    .DDS_DISABLE (DDS_DISABLE),\n    .IQCORRECTION_DISABLE (IQCORRECTION_DISABLE),\n    .DAC_DDS_TYPE (DAC_DDS_TYPE),\n    .DAC_DDS_CORDIC_DW (DAC_DDS_CORDIC_DW),\n    .DAC_DDS_CORDIC_PHASE_DW (DAC_DDS_CORDIC_PHASE_DW))\n  i_tx_channel_3 (\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_data_in_req (),\n    .dac_data_in (dac_data_q0),\n    .dac_data_out_req (dac_data_valid_B),\n    .dac_data_out (dac_data_q_B[15:0]),\n    .dac_data_iq_in (dac_data_iq_i1_s),\n    .dac_data_iq_out (dac_data_iq_q1_s),\n    .dac_enable (dac_enable_q1),\n    .dac_data_sync (dac_data_sync),\n    .dac_dds_format (dac_dds_format_s),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[3]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[3]),\n    .up_rack (up_rack_s[3]));\n\n  // dac common processor interface\n\n  up_dac_common #(\n    .ID (ID),\n    .FPGA_TECHNOLOGY (FPGA_TECHNOLOGY),\n    .FPGA_FAMILY (FPGA_FAMILY),\n    .SPEED_GRADE (SPEED_GRADE),\n    .DEV_PACKAGE (DEV_PACKAGE),\n    .CONFIG(CONFIG),\n    .CLK_EDGE_SEL(0),\n    .COMMON_ID(COMMON_BASE_ADDR),\n    .DRP_DISABLE(1),\n    .USERPORTS_DISABLE(1),\n    .GPIO_DISABLE(1))\n  i_up_dac_common (\n    .mmcm_rst (),\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_num_lanes (dac_num_lanes),\n    .dac_sdr_ddr_n (dac_sdr_ddr_n),\n    .dac_sync (dac_sync_out),\n    .dac_frame (),\n    .dac_clksel (),\n    .dac_par_type (),\n    .dac_par_enb (),\n    .dac_r1_mode (dac_r1_mode),\n    .dac_datafmt (dac_dds_format_s),\n    .dac_datarate (dac_datarate_s),\n    .dac_status (1'b1),\n    .dac_status_unf (dac_dunf),\n    .dac_clk_ratio (32'd2),\n    .up_dac_ce (),\n    .up_pps_rcounter(32'h0),\n    .up_pps_status(1'b0),\n    .up_pps_irq_mask(),\n    .up_drp_sel (),\n    .up_drp_wr (),\n    .up_drp_addr (),\n    .up_drp_wdata (),\n    .up_drp_rdata (32'd0),\n    .up_drp_ready (1'd0),\n    .up_drp_locked (1'd1),\n    .up_usr_chanmax (),\n    .dac_usr_chanmax (8'd3),\n    .up_dac_gpio_in (32'd0),\n    .up_dac_gpio_out (),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[4]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[4]),\n    .up_rack (up_rack_s[4]));\n\n  assign dac_single_lane = dac_num_lanes[0];\n\nend\nendgenerate\n\nendmodule\n\n// ***************************************************************************\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[330, "    .dac_data_in (dac_data_q0),\n"]], "Add": [[330, "    .dac_data_in (dac_data_q1),\n"]]}}