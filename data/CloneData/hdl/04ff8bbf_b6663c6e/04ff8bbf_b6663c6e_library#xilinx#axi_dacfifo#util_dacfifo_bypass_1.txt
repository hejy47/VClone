Source Block: hdl/library/xilinx/axi_dacfifo/util_dacfifo_bypass.v@165:185@HdlStmProcess

  // Write address generation for the asymmetric memory

  assign dma_mem_wea_s = dma_xfer_req & dma_valid & dma_ready;

  always @(posedge dma_clk) begin
    if (dma_rst == 1'b1) begin
      dma_mem_waddr <= 'h0;
      dma_mem_waddr_g <= 'h0;
    end else begin
      if (dma_mem_wea_s == 1'b1) begin
        dma_mem_waddr <= dma_mem_waddr + 1;
      end
      dma_mem_waddr_g <= b2g(dma_mem_waddr);
    end
  end

  // The memory module request data until reaches the high threshold.

  always @(posedge dma_clk) begin
    if (dma_rst == 1'b1) begin

Diff Content:
- 176         dma_mem_waddr <= dma_mem_waddr + 1;
- 178       dma_mem_waddr_g <= b2g(dma_mem_waddr);
+ 176         dma_mem_waddr <= dma_mem_waddr + 1'b1;
+ 178       dma_mem_waddr_g <= dma_mem_waddr_b2g_s;
+ 180   ad_b2g #(
+ 180     .DATA_WIDTH (DMA_ADDRESS_WIDTH))
+ 180   i_dma_mem_waddr_b2g (
+ 180     .din (dma_mem_waddr),
+ 180     .dout (dma_mem_waddr_b2g_s));

Clone Blocks:
Clone Blocks 1:
hdl/library/altera/avl_dacfifo/util_dacfifo_bypass.v@160:180

  // Write address generation for the asymmetric memory

  assign dma_mem_wea_s = dma_xfer_req & dma_valid & dma_ready;

  always @(posedge dma_clk) begin
    if (dma_rst == 1'b1) begin
      dma_mem_waddr <= 'h0;
      dma_mem_waddr_g <= 'h0;
    end else begin
      if (dma_mem_wea_s == 1'b1) begin
        dma_mem_waddr <= dma_mem_waddr + 1'b1;
      end
      dma_mem_waddr_g <= b2g(dma_mem_waddr);
    end
  end

  // The memory module request data until reaches the high threshold.

  always @(posedge dma_clk) begin
    if (dma_rst == 1'b1) begin

