Source Block: hdl/library/common/ad_rst.v@46:56@HdlIdDef

  // internal registers
  reg             rst_async_d1 = 'd0;
  reg             rst_async_d2 = 'd0;
  reg             rst_sync = 'd0;
  reg             rst_sync_d = 'd0 /* synthesis preserve */;

  // simple reset synchronizer
  always @(posedge clk or posedge rst_async) begin
    if (rst_async) begin
      rst_async_d1 <= 1'b1;

Diff Content:
- 51   reg             rst_sync_d = 'd0 /* synthesis preserve */;
+ 51   reg             rst_async_d1 = 1'd1;
+ 51   reg             rst_async_d2 = 1'd1;
+ 51   reg             rst_sync = 1'd1;
+ 51   reg             rst_sync_d = 1'd1 /* synthesis preserve */;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/ad_rst.v@44:54
  output                  rstn,
  output  reg             rst);

  // internal registers
  reg             rst_async_d1 = 'd0;
  reg             rst_async_d2 = 'd0;
  reg             rst_sync = 'd0;
  reg             rst_sync_d = 'd0 /* synthesis preserve */;

  // simple reset synchronizer
  always @(posedge clk or posedge rst_async) begin

Clone Blocks 2:
hdl/library/common/ad_rst.v@45:55
  output  reg             rst);

  // internal registers
  reg             rst_async_d1 = 'd0;
  reg             rst_async_d2 = 'd0;
  reg             rst_sync = 'd0;
  reg             rst_sync_d = 'd0 /* synthesis preserve */;

  // simple reset synchronizer
  always @(posedge clk or posedge rst_async) begin
    if (rst_async) begin

