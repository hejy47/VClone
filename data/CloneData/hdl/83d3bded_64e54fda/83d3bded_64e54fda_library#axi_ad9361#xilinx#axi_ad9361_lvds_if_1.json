{"Source Block": ["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@124:134@HdlIdDef", "  // internal registers\n\n  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_1_2d = 'd0;\n"], "Clone Blocks": [["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@127:137", "  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_1_2d = 'd0;\n  reg     [ 5:0]      rx_data_0_2d = 'd0;\n  reg     [ 5:0]      rx_data_1_d = 'd0;\n  reg                 adc_valid_p = 'd0;\n"], ["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@125:135", "\n  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_1_2d = 'd0;\n  reg     [ 5:0]      rx_data_0_2d = 'd0;\n"], ["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@123:133", "\n  // internal registers\n\n  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n"], ["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@122:132", "  output              up_drp_locked);\n\n  // internal registers\n\n  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n"], ["hdl/library/axi_ad9361/xilinx/axi_ad9361_cmos_if.v@118:128", "  // internal registers\n\n  reg                 adc_r1_mode_n = 'd0;\n  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [11:0]      rx_data_1 = 'd0;\n  reg                 adc_valid_p = 'd0;\n  reg     [47:0]      adc_data_p = 'd0;\n  reg                 adc_status_p = 'd0;\n"], ["hdl/library/axi_ad9361/intel/axi_ad9361_lvds_if.v@125:135", "\n  // internal registers\n\n  reg                 up_drp_locked_m1 = 1'd0;\n  reg                 up_drp_locked_int = 1'd0;\n  reg                 rx_r1_mode = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_3 = 'd0;\n  reg     [ 5:0]      rx_data_2 = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg                 adc_valid_p = 'd0;\n"], ["hdl/library/axi_ad9361/xilinx/axi_ad9361_lvds_if.v@126:136", "  reg                 rx_r1_mode = 'd0;\n  reg                 rx_locked_m1 = 'd0;\n  reg                 rx_locked = 'd0;\n  reg                 rx_valid = 'd0;\n  reg     [ 1:0]      rx_frame = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n  reg     [ 5:0]      rx_data_0 = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_1_2d = 'd0;\n  reg     [ 5:0]      rx_data_0_2d = 'd0;\n  reg     [ 5:0]      rx_data_1_d = 'd0;\n"], ["hdl/library/axi_ad9361/intel/axi_ad9361_lvds_if.v@124:134", "  output              up_drp_locked);\n\n  // internal registers\n\n  reg                 up_drp_locked_m1 = 1'd0;\n  reg                 up_drp_locked_int = 1'd0;\n  reg                 rx_r1_mode = 'd0;\n  reg     [ 3:0]      rx_frame_d = 'd0;\n  reg     [ 5:0]      rx_data_3 = 'd0;\n  reg     [ 5:0]      rx_data_2 = 'd0;\n  reg     [ 5:0]      rx_data_1 = 'd0;\n"]], "Diff Content": {"Delete": [[129, "  reg                 rx_valid = 'd0;\n"]], "Add": []}}