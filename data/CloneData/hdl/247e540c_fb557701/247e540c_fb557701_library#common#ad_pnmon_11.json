{"Source Block": ["hdl/library/common/ad_pnmon.v@72:82@HdlStmAssign", "  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n  // pn oos and counters (16 to clear and set).\n\n  always @(posedge adc_clk) begin\n"], "Clone Blocks": [["hdl/library/common/ad_pnmon.v@69:79", "  wire            adc_pn_update_s;\n  wire            adc_pn_err_s;\n\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n"], ["hdl/library/common/ad_pnmon.v@71:81", "\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n  // pn oos and counters (16 to clear and set).\n\n"], ["hdl/library/common/ad_pnmon.v@73:83", "\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n  // pn oos and counters (16 to clear and set).\n\n  always @(posedge adc_clk) begin\n    adc_valid_d <= adc_valid_in;\n"], ["hdl/library/common/ad_pnmon.v@70:80", "  wire            adc_pn_err_s;\n\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n  // pn oos and counters (16 to clear and set).\n"]], "Diff Content": {"Delete": [[77, "  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n"]], "Add": []}}