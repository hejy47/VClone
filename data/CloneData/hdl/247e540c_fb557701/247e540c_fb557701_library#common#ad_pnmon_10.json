{"Source Block": ["hdl/library/common/ad_pnmon.v@65:75@HdlIdDef", "\n  wire            adc_pn_match_d_s;\n  wire            adc_pn_match_z_s;\n  wire            adc_pn_match_s;\n  wire            adc_pn_update_s;\n  wire            adc_pn_err_s;\n\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n"], "Clone Blocks": [["hdl/library/common/ad_pnmon.v@71:81", "\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;\n  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;\n  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);\n  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);\n\n  // pn oos and counters (16 to clear and set).\n\n"], ["hdl/library/common/ad_pnmon.v@64:74", "  // internal signals\n\n  wire            adc_pn_match_d_s;\n  wire            adc_pn_match_z_s;\n  wire            adc_pn_match_s;\n  wire            adc_pn_update_s;\n  wire            adc_pn_err_s;\n\n  // make sure data is not 0, sequence will fail.\n\n  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;\n"]], "Diff Content": {"Delete": [[70, "  wire            adc_pn_err_s;\n"]], "Add": [[70, "  wire                        adc_pn_match_d_s;\n"], [70, "  wire                        adc_pn_match_z_s;\n"], [70, "  wire                        adc_pn_match_s;\n"], [70, "  wire                        adc_pn_update_s;\n"], [70, "  wire                        adc_pn_err_s;\n"]]}}