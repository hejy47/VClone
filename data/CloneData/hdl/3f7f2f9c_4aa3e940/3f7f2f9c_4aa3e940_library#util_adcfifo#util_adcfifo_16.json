{"Source Block": ["hdl/library/util_adcfifo/util_adcfifo.v@160:172@HdlStmProcess", "\n  assign dma_xfer_status = 4'd0;\n  assign dma_waddr_rel_t_s = dma_waddr_rel_t_m[2] ^ dma_waddr_rel_t_m[1];\n  assign dma_waddr_rel_s =  {dma_waddr_rel,{ADDRESS_PADDING_WIDTH{1'b0}}};\n\n  always @(posedge dma_clk) begin\n    dma_waddr_rel_t_m <= {dma_waddr_rel_t_m[1:0], adc_waddr_rel_t};\n  end\n\n  always @(posedge dma_clk) begin\n    if (dma_xfer_req == 1'b0) begin\n      dma_rst <= 1'b1;\n      dma_waddr_rel <= 'd0;\n"], "Clone Blocks": [["hdl/library/util_adcfifo/util_adcfifo.v@156:166", "    end\n  end\n\n  // read interface\n\n  assign dma_xfer_status = 4'd0;\n  assign dma_waddr_rel_t_s = dma_waddr_rel_t_m[2] ^ dma_waddr_rel_t_m[1];\n  assign dma_waddr_rel_s =  {dma_waddr_rel,{ADDRESS_PADDING_WIDTH{1'b0}}};\n\n  always @(posedge dma_clk) begin\n    dma_waddr_rel_t_m <= {dma_waddr_rel_t_m[1:0], adc_waddr_rel_t};\n"], ["hdl/library/util_adcfifo/util_adcfifo.v@157:167", "  end\n\n  // read interface\n\n  assign dma_xfer_status = 4'd0;\n  assign dma_waddr_rel_t_s = dma_waddr_rel_t_m[2] ^ dma_waddr_rel_t_m[1];\n  assign dma_waddr_rel_s =  {dma_waddr_rel,{ADDRESS_PADDING_WIDTH{1'b0}}};\n\n  always @(posedge dma_clk) begin\n    dma_waddr_rel_t_m <= {dma_waddr_rel_t_m[1:0], adc_waddr_rel_t};\n  end\n"], ["hdl/library/util_adcfifo/util_adcfifo.v@158:168", "\n  // read interface\n\n  assign dma_xfer_status = 4'd0;\n  assign dma_waddr_rel_t_s = dma_waddr_rel_t_m[2] ^ dma_waddr_rel_t_m[1];\n  assign dma_waddr_rel_s =  {dma_waddr_rel,{ADDRESS_PADDING_WIDTH{1'b0}}};\n\n  always @(posedge dma_clk) begin\n    dma_waddr_rel_t_m <= {dma_waddr_rel_t_m[1:0], adc_waddr_rel_t};\n  end\n\n"], ["hdl/library/xilinx/axi_adcfifo/axi_adcfifo_dma.v@139:150", "  end\n\n  // read interface\n\n  assign dma_waddr_rel_t_s = dma_waddr_rel_t_m[2] ^ dma_waddr_rel_t_m[1];\n  assign dma_waddr_rel_s = (DMA_MEM_RATIO == 2) ? {dma_waddr_rel, 1'd0} :\n    ((DMA_MEM_RATIO == 4) ? {dma_waddr_rel, 2'd0} : {dma_waddr_rel, 3'd0});\n\n  always @(posedge dma_clk) begin\n    if (dma_xfer_req == 1'b0) begin\n      dma_rst <= 1'b1;\n      dma_waddr_rel_t_m <= 'd0;\n"]], "Diff Content": {"Delete": [[165, "  always @(posedge dma_clk) begin\n"], [166, "    dma_waddr_rel_t_m <= {dma_waddr_rel_t_m[1:0], adc_waddr_rel_t};\n"], [167, "  end\n"]], "Add": [[167, "  sync_gray #(\n"], [167, "    .DATA_WIDTH (ADC_ADDRESS_WIDTH),\n"], [167, "    .ASYNC_CLK (1))\n"], [167, "  i_dma_waddr_sync (\n"], [167, "    .in_clk (adc_clk),\n"], [167, "    .in_resetn (1'b1),\n"], [167, "    .in_count (adc_waddr_int),\n"], [167, "    .out_resetn (1'b1),\n"], [167, "    .out_clk (dma_clk),\n"], [167, "    .out_count (dma_waddr_int_s));\n"]]}}