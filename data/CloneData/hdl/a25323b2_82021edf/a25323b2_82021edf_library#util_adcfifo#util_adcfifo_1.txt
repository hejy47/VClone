Source Block: hdl/library/util_adcfifo/util_adcfifo.v@183:193@HdlStmAssign
  end

  assign dma_read_rst_s = ~dma_xfer_req;

  assign dma_wready_s = (DMA_READY_ENABLE == 0) ? 1'b1 : dma_wready;
  assign dma_rd_s = (dma_raddr <= {1'b0, dma_waddr_int}) ? dma_wready_s : 1'b0;

  always @(posedge dma_clk) begin
    if (dma_read_rst_s == 1'b1) begin
      dma_rd <= 'd0;
      dma_rd_d <= 'd0;

Diff Content:
- 188   assign dma_rd_s = (dma_raddr <= {1'b0, dma_waddr_int}) ? dma_wready_s : 1'b0;
+ 188   assign dma_rd_s = ((dma_raddr < {1'b0, dma_waddr_int}) || &dma_waddr_int) & dma_wready_s;

Clone Blocks:
Clone Blocks 1:
hdl/library/xilinx/axi_adcfifo/axi_adcfifo_dma.v@157:167
      end
    end
  end

  assign dma_wready_s = (DMA_READY_ENABLE == 0) ? 1'b1 : dma_wready;
  assign dma_rd_s = (dma_raddr == dma_waddr_rel_s) ? 1'b0 : dma_wready_s;

  always @(posedge dma_clk) begin
    if (dma_xfer_req == 1'b0) begin
      dma_rd <= 'd0;
      dma_rd_d <= 'd0;

Clone Blocks 2:
hdl/library/xilinx/axi_adcfifo/axi_adcfifo_dma.v@156:166
        dma_waddr_rel <= axi_waddr_rel;
      end
    end
  end

  assign dma_wready_s = (DMA_READY_ENABLE == 0) ? 1'b1 : dma_wready;
  assign dma_rd_s = (dma_raddr == dma_waddr_rel_s) ? 1'b0 : dma_wready_s;

  always @(posedge dma_clk) begin
    if (dma_xfer_req == 1'b0) begin
      dma_rd <= 'd0;

Clone Blocks 3:
hdl/library/util_adcfifo/util_adcfifo.v@182:192
    end
  end

  assign dma_read_rst_s = ~dma_xfer_req;

  assign dma_wready_s = (DMA_READY_ENABLE == 0) ? 1'b1 : dma_wready;
  assign dma_rd_s = (dma_raddr <= {1'b0, dma_waddr_int}) ? dma_wready_s : 1'b0;

  always @(posedge dma_clk) begin
    if (dma_read_rst_s == 1'b1) begin
      dma_rd <= 'd0;

Clone Blocks 4:
hdl/library/util_adcfifo/util_adcfifo.v@180:190
    end else begin
      dma_waddr_int <= {dma_waddr_int_s,{ADDRESS_PADDING_WIDTH{1'b0}}};
    end
  end

  assign dma_read_rst_s = ~dma_xfer_req;

  assign dma_wready_s = (DMA_READY_ENABLE == 0) ? 1'b1 : dma_wready;
  assign dma_rd_s = (dma_raddr <= {1'b0, dma_waddr_int}) ? dma_wready_s : 1'b0;

  always @(posedge dma_clk) begin

