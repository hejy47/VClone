{"Source Block": ["hdl/library/axi_dacfifo/axi_dacfifo_wr.v@410:438@HdlStmProcess", "                           (MEM_RATIO == 8) ? axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):3] :\n                                              axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):4];\n\n  assign axi_mem_addr_diff_s = {1'b1, axi_mem_waddr_s} - axi_mem_raddr;\n\n  always @(posedge axi_clk) begin\n    if (axi_resetn == 1'b0) begin\n      axi_mem_read_en <= 1'b0;\n      axi_mem_read_en_d <= 1'b0;\n      axi_mem_addr_diff <= 'b0;\n    end else begin\n      axi_mem_addr_diff <= axi_mem_addr_diff_s[(AXI_MEM_ADDRESS_WIDTH-1):0];\n      // If there is a valid request and there is enough data in the memory or it's the end of the dma transaction\n      if ((axi_xfer_req_m[2] == 1'b1) && (axi_mem_read_en == 1'b0) && (axi_wr_active == 1'b0)) begin\n        if (((axi_mem_addr_diff > AXI_LENGTH) && (axi_last_transaction == 1'b0)) ||\n             (axi_last_transaction == 1'b1) && (axi_last_transaction_d == 1'b0)) begin\n          axi_mem_read_en <= 1'b1;\n        end\n      end else if (axi_mem_last_s == 1'b1) begin\n        axi_mem_read_en <= 1'b0;\n      end\n      axi_mem_read_en_d <= axi_mem_read_en;\n    end\n  end\n\n  // If there is enough data and the AXI interface is ready, we can start to read\n  // out data from the memory\n\n  assign axi_mem_eot_s = axi_last_transaction_d & ~axi_last_transaction;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[423, "      if ((axi_xfer_req_m[2] == 1'b1) && (axi_mem_read_en == 1'b0) && (axi_wr_active == 1'b0)) begin\n"], [424, "        if (((axi_mem_addr_diff > AXI_LENGTH) && (axi_last_transaction == 1'b0)) ||\n"]], "Add": [[424, "      if (axi_mem_read_en == 1'b0) begin\n"], [424, "        if (((axi_xfer_req_m[2] == 1'b1) && (axi_mem_addr_diff > AXI_LENGTH) && (axi_last_transaction_d == 1'b0)) ||\n"]]}}