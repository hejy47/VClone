{"Source Block": ["hdl/library/xilinx/axi_dacfifo/util_dacfifo_bypass.v@225:253@HdlStmProcess", "    .din (dac_mem_raddr),\n    .dout (dac_mem_raddr_b2g_s));\n\n  // The memory module is ready if it's not empty\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_mem_addr_diff <= 'b0;\n      dac_mem_waddr_m1 <= 'b0;\n      dac_mem_waddr_m2 <= 'b0;\n      dac_mem_waddr <= 'b0;\n      dac_mem_ready <= 1'b0;\n    end else begin\n      dac_mem_waddr_m1 <= dma_mem_waddr_g;\n      dac_mem_waddr_m2 <= dac_mem_waddr_m1;\n      dac_mem_waddr <= dac_mem_waddr_m2_g2b_s;\n      dac_mem_addr_diff <= dac_address_diff_s[DAC_ADDRESS_WIDTH-1:0];\n      if (dac_mem_addr_diff > 0) begin\n        dac_mem_ready <= 1'b1;\n      end else begin\n        dac_mem_ready <= 1'b0;\n      end\n    end\n  end\n\n  ad_g2b #(\n    .DATA_WIDTH (DMA_ADDRESS_WIDTH))\n  i_dac_mem_waddr_g2b (\n    .din (dac_mem_waddr_m2),\n"], "Clone Blocks": [["hdl/library/altera/avl_dacfifo/util_dacfifo_bypass.v@220:248", "    .din (dac_mem_raddr),\n    .dout (dac_mem_raddr_b2g_s));\n\n  // The memory module is ready if it's not empty\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_mem_addr_diff <= 'b0;\n      dac_mem_waddr_m1 <= 'b0;\n      dac_mem_waddr_m2 <= 'b0;\n      dac_mem_waddr <= 'b0;\n      dac_mem_ready <= 1'b0;\n    end else begin\n      dac_mem_waddr_m1 <= dma_mem_waddr_g;\n      dac_mem_waddr_m2 <= dac_mem_waddr_m1;\n      dac_mem_waddr <= dac_mem_waddr_m2_g2b_s;\n      dac_mem_addr_diff <= dac_address_diff_s[DAC_ADDRESS_WIDTH-1:0];\n      if (dac_mem_addr_diff > 0) begin\n        dac_mem_ready <= 1'b1;\n      end else begin\n        dac_mem_ready <= 1'b0;\n      end\n    end\n  end\n\n  ad_g2b #(\n    .DATA_WIDTH (DMA_ADDRESS_WIDTH))\n  i_dac_mem_waddr_g2b (\n    .din (dac_mem_waddr_m2),\n"]], "Diff Content": {"Delete": [[232, "      dac_mem_addr_diff <= 'b0;\n"], [236, "      dac_mem_ready <= 1'b0;\n"], [241, "      dac_mem_addr_diff <= dac_address_diff_s[DAC_ADDRESS_WIDTH-1:0];\n"], [242, "      if (dac_mem_addr_diff > 0) begin\n"], [243, "        dac_mem_ready <= 1'b1;\n"], [244, "      end else begin\n"], [245, "        dac_mem_ready <= 1'b0;\n"], [246, "      end\n"]], "Add": []}}