{"Source Block": ["hdl/library/xilinx/axi_dacfifo/util_dacfifo_bypass.v@203:213@HdlStmAssign", "                                 (MEM_RATIO == 2) ? ({dac_mem_waddr, 1'b0}) :\n                                 (MEM_RATIO == 4) ? ({dac_mem_waddr, 2'b0}) : ({dac_mem_waddr, 3'b0}));\n\n  // Read address generation for the asymmetric memory\n\n  assign dac_mem_rea_s = dac_valid & dac_mem_ready;\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_mem_raddr <= 'h0;\n      dac_mem_raddr_g <= 'h0;\n"], "Clone Blocks": [["hdl/library/altera/avl_dacfifo/util_dacfifo_bypass.v@198:208", "                                 (MEM_RATIO == 2) ? ({dac_mem_waddr, 1'b0}) :\n                                 (MEM_RATIO == 4) ? ({dac_mem_waddr, 2'b0}) : ({dac_mem_waddr, 3'b0}));\n\n  // Read address generation for the asymmetric memory\n\n  assign dac_mem_rea_s = dac_valid & dac_mem_ready;\n\n  always @(posedge dac_clk) begin\n    if (dac_rst == 1'b1) begin\n      dac_mem_raddr <= 'h0;\n      dac_mem_raddr_g <= 'h0;\n"]], "Diff Content": {"Delete": [[208, "  assign dac_mem_rea_s = dac_valid & dac_mem_ready;\n"]], "Add": [[208, "  assign dac_mem_empty_s = (dac_mem_waddr_s == dac_mem_raddr) ? 1'b1 : 1'b0;\n"], [208, "  assign dac_mem_rea_s = dac_valid & !dac_mem_empty_s;\n"]]}}