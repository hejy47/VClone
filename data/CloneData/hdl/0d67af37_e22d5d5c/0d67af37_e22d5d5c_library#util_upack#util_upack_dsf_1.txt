Source Block: hdl/library/util_upack/util_upack_dsf.v@140:217@HdlStmIf
  endgenerate

  // data store & forward

  generate
  if (NUM_OF_CHANNELS_P > NUM_OF_CHANNELS_O) begin

  assign dac_samples_int_s =  (dac_dsf_valid == 1'b1) ? (dac_samples_int + CH_DCNT) :
            ((dac_samples_int >= NUM_OF_CHANNELS_O) ? (dac_samples_int - NUM_OF_CHANNELS_O) : dac_samples_int);


  always @(posedge dac_clk) begin
    dac_dmx_valid <= dac_valid & dac_dmx_enable;
    if (dac_samples_int_s < NUM_OF_CHANNELS_O) begin
      dac_dsf_valid <= dac_valid & dac_dmx_enable;
    end else begin
      dac_dsf_valid <= 1'b0;
    end
    if (dac_samples_int_s == 0) begin
      dac_dsf_sync <= dac_valid & dac_dmx_enable;
    end else begin
      dac_dsf_sync <= 1'b0;
    end
    if (dac_dmx_valid == 1'b1) begin
      dac_samples_int <= dac_samples_int_s;
    end
  end

  assign dac_data_s[(E_WIDTH-1):P_WIDTH] = 'd0;
  assign dac_data_s[(P_WIDTH-1):0] = dac_data;

  assign dac_data_int_0_s[(E_WIDTH-1):(E_WIDTH-P_WIDTH)] = dac_data;
  assign dac_data_int_0_s[((E_WIDTH-P_WIDTH)-1):0] =
            dac_data_int[(M_WIDTH-1):(M_WIDTH-(E_WIDTH-P_WIDTH))];

  assign dac_data_int_1_s[(E_WIDTH-1):(E_WIDTH-(M_WIDTH-O_WIDTH))] =
            dac_data_int[(M_WIDTH-1):O_WIDTH];
  assign dac_data_int_1_s[((E_WIDTH-(M_WIDTH-O_WIDTH))-1):0] = 'd0;

  always @(posedge dac_clk) begin
    dac_dmx_valid_d <= dac_dmx_valid;
    dac_dsf_valid_d <= dac_dsf_valid;
    dac_samples_int_d <= dac_samples_int;
    if (dac_dsf_valid_d == 1'b1) begin
      dac_data_int <= dac_data_int_0_s[(E_WIDTH-1):(E_WIDTH-M_WIDTH)];
    end else if (dac_dmx_valid_d == 1'b1) begin
      dac_data_int <= dac_data_int_1_s[(E_WIDTH-1):(E_WIDTH-M_WIDTH)];
    end
  end

  always @(posedge dac_clk) begin
    if (dac_dmx_valid_d == 1'b1) begin
      case (dac_samples_int_d)
        3'b111: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*1)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*1)]};
        3'b110: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*2)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*2)]};
        3'b101: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*3)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*3)]};
        3'b100: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*4)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*4)]};
        3'b011: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*5)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*5)]};
        3'b010: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*6)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*6)]};
        3'b001: dac_dsf_data_int <= { dac_data_s[((CHANNEL_DATA_WIDTH*7)-1):0],
                                      dac_data_int[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*7)]};
        3'b000: dac_dsf_data_int <= dac_data_s;
        default: dac_dsf_data_int <= 'd0;
      endcase
    end
  end
  end
  endgenerate

  genvar n;
  generate
  if (NUM_OF_CHANNELS_P > NUM_OF_CHANNELS_O) begin

Diff Content:
- 153     if (dac_samples_int_s < NUM_OF_CHANNELS_O) begin
- 154       dac_dsf_valid <= dac_valid & dac_dmx_enable;
- 156       dac_dsf_valid <= 1'b0;
- 157     end
- 158     if (dac_samples_int_s == 0) begin
- 159       dac_dsf_sync <= dac_valid & dac_dmx_enable;
- 160     end else begin
- 161       dac_dsf_sync <= 1'b0;
+ 154     dac_valid_d1 <= dac_valid;
+ 154     if (dac_valid_d1 == 1'b1) begin
+ 154       if (dac_samples_int_s < NUM_OF_CHANNELS_O) begin
+ 154         dac_dsf_valid <= dac_valid & dac_dmx_enable;
+ 154       end else begin
+ 154         dac_dsf_valid <= 1'b0;
+ 154       end
+ 154       if (dac_samples_int_s == 0) begin
+ 154         dac_dsf_sync <= dac_valid & dac_dmx_enable;
+ 154       end else begin
+ 154         dac_dsf_sync <= 1'b0;
+ 154       end
+ 161       if (dac_samples_int < NUM_OF_CHANNELS_O) begin
+ 161         dac_dsf_valid <= dac_valid & dac_dmx_enable;
+ 161       end else begin
+ 161         dac_dsf_valid <= 1'b0;
+ 161       end
+ 161       if (dac_samples_int == 0) begin
+ 161         dac_dsf_sync <= dac_valid & dac_dmx_enable;
+ 161       end else begin
+ 161         dac_dsf_sync <= 1'b0;
+ 161       end

Clone Blocks:
