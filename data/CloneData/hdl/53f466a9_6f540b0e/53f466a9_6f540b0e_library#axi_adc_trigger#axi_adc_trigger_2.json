{"Source Block": ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@270:286@HdlStmProcess", "    trigger_o[1] <= (trig_o_hold_cnt_1 == 'd0) ? trigger_o_m[1] : trig_o_hold_1;\n  end\n\n  // - keep data in sync with the trigger. The trigger bypasses the variable fifo.\n  // The data goes through and it is delayed with 4 clock cycles)\n  always @(posedge clk) begin\n    trigger_out_m1 <= trigger_out_s;\n    trigger_out <= trigger_out_m1;\n\n    // triggers logic analyzer\n    trigger_out_la <= trigger_out_mixed;\n  end\n\n  // the embedded trigger does not require any extra delay, since the util_extract\n  // present in this case, delays the trigger with 2 clock cycles\n  assign data_a_trig = (embedded_trigger == 1'h0) ? {data_a[14],data_a[14:0]} : {trigger_out_s,data_a[14:0]};\n  assign data_b_trig = (embedded_trigger == 1'h0) ? {data_b[14],data_b[14:0]} : {trigger_out_s,data_b[14:0]};\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[277, "    trigger_out <= trigger_out_m1;\n"]], "Add": [[277, "    if (trigger_out_m1 & ~trigger_out_s) begin\n"], [277, "      trigger_out_hold <= 1'b1;\n"], [277, "    end\n"], [277, "    if (trigger_out_ack) begin\n"], [277, "      trigger_out_hold <= 1'b0;\n"], [277, "    end\n"], [277, "    trigger_out_ack <= trigger_out_hold & (data_valid_a | data_valid_b);\n"], [281, "  assign trigger_out = trigger_out_hold | trigger_out_m1;\n"]]}}