Source Block: hdl/library/axi_adc_trigger/axi_adc_trigger.v@270:286@HdlStmProcess
    trigger_o[1] <= (trig_o_hold_cnt_1 == 'd0) ? trigger_o_m[1] : trig_o_hold_1;
  end

  // - keep data in sync with the trigger. The trigger bypasses the variable fifo.
  // The data goes through and it is delayed with 4 clock cycles)
  always @(posedge clk) begin
    trigger_out_m1 <= trigger_out_s;
    trigger_out <= trigger_out_m1;

    // triggers logic analyzer
    trigger_out_la <= trigger_out_mixed;
  end

  // the embedded trigger does not require any extra delay, since the util_extract
  // present in this case, delays the trigger with 2 clock cycles
  assign data_a_trig = (embedded_trigger == 1'h0) ? {data_a[14],data_a[14:0]} : {trigger_out_s,data_a[14:0]};
  assign data_b_trig = (embedded_trigger == 1'h0) ? {data_b[14],data_b[14:0]} : {trigger_out_s,data_b[14:0]};

Diff Content:
- 277     trigger_out <= trigger_out_m1;
+ 277     if (trigger_out_m1 & ~trigger_out_s) begin
+ 277       trigger_out_hold <= 1'b1;
+ 277     end
+ 277     if (trigger_out_ack) begin
+ 277       trigger_out_hold <= 1'b0;
+ 277     end
+ 277     trigger_out_ack <= trigger_out_hold & (data_valid_a | data_valid_b);
+ 281   assign trigger_out = trigger_out_hold | trigger_out_m1;

Clone Blocks:
