{"Source Block": ["hdl/library/jesd204/jesd204_tx/jesd204_tx.v@190:288@HdlStmIf", "end\n\ngenerate\ngenvar i;\n\nif (LINK_MODE[0] == 1) begin : mode_8b10b\n\nreg [DATA_PATH_WIDTH-1:0] tx_eof_d;\nreg [DATA_PATH_WIDTH-1:0] tx_eomf_d;\nwire [NUM_LANES-1:0] lane_cgs_enable;\nwire [DW-1:0] ilas_data;\nwire [DATA_PATH_WIDTH*NUM_LANES-1:0] ilas_charisk;\n\nwire cfg_generate_eomf = 1'b1;\n\nalways @(posedge clk) begin\n  tx_eof_d <= tx_eof;\n  tx_eomf_d <= tx_eomf;\nend\n\njesd204_tx_ctrl #(\n  .NUM_LANES(NUM_LANES),\n  .NUM_LINKS(NUM_LINKS),\n  .DATA_PATH_WIDTH(DATA_PATH_WIDTH)\n) i_tx_ctrl (\n  .clk(clk),\n  .reset(reset),\n\n  .sync(sync),\n  .lmfc_edge(lmfc_edge),\n  .somf(tx_somf),\n  .somf_early2(tx_somf_early2),\n  .eomf(tx_eomf),\n\n  .lane_cgs_enable(lane_cgs_enable),\n  .eof_reset(eof_gen_reset),\n\n  .tx_ready(tx_ready),\n\n  .ilas_data(ilas_data),\n  .ilas_charisk(ilas_charisk),\n\n  .ilas_config_addr(ilas_config_addr),\n  .ilas_config_rd(ilas_config_rd),\n  .ilas_config_data(ilas_config_data),\n\n  .cfg_lanes_disable(cfg_lanes_disable),\n  .cfg_links_disable(cfg_links_disable),\n  .cfg_continuous_cgs(cfg_continuous_cgs),\n  .cfg_continuous_ilas(cfg_continuous_ilas),\n  .cfg_skip_ilas(cfg_skip_ilas),\n  .cfg_mframes_per_ilas(cfg_mframes_per_ilas),\n  .cfg_octets_per_multiframe(cfg_octets_per_multiframe),\n  .ctrl_manual_sync_request(ctrl_manual_sync_request),\n\n  .status_sync(status_sync),\n  .status_state(status_state)\n);\n\nfor (i = 0; i < NUM_LANES; i = i + 1) begin: gen_lane\n\n  localparam D_START = i * DATA_PATH_WIDTH*8;\n  localparam D_STOP = D_START + DATA_PATH_WIDTH*8-1;\n  localparam C_START = i * DATA_PATH_WIDTH;\n  localparam C_STOP = C_START + DATA_PATH_WIDTH-1;\n\n  jesd204_tx_lane #(\n    .DATA_PATH_WIDTH(DATA_PATH_WIDTH)\n  ) i_lane (\n    .clk(clk),\n\n    .eof(tx_eof_d),\n    .eomf(tx_eomf_d),\n\n    .cgs_enable(lane_cgs_enable[i]),\n\n    .ilas_data(ilas_data[D_STOP:D_START]),\n    .ilas_charisk(ilas_charisk[C_STOP:C_START]),\n\n    .tx_data(tx_data[D_STOP:D_START]),\n    .tx_ready(tx_ready),\n\n    .phy_data(phy_data_r[D_STOP:D_START]),\n    .phy_charisk(phy_charisk_r[C_STOP:C_START]),\n\n    .cfg_octets_per_frame(cfg_octets_per_frame),\n    .cfg_disable_char_replacement(cfg_disable_char_replacement),\n    .cfg_disable_scrambler(cfg_disable_scrambler)\n  );\nend\n\nassign phy_header_r = 'h0;\n\nend\n\nif (LINK_MODE[1] == 1) begin : mode_64b66b\n\n  for (i = 0; i < NUM_LANES; i = i + 1) begin: gen_lane\n    localparam D_START = i * DATA_PATH_WIDTH*8;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[197, "reg [DATA_PATH_WIDTH-1:0] tx_eof_d;\n"], [198, "reg [DATA_PATH_WIDTH-1:0] tx_eomf_d;\n"], [206, "  tx_eof_d <= tx_eof;\n"], [207, "  tx_eomf_d <= tx_eomf;\n"], [220, "  .somf(tx_somf),\n"], [221, "  .somf_early2(tx_somf_early2),\n"], [222, "  .eomf(tx_eomf),\n"], [261, "    .eof(tx_eof_d),\n"], [262, "    .eomf(tx_eomf_d),\n"]], "Add": [[198, "reg [DATA_PATH_WIDTH-1:0] tx_eof_fm_d3;\n"], [198, "reg [DATA_PATH_WIDTH-1:0] tx_eomf_fm_d3;\n"], [207, "  tx_eof_fm_d3 <= tx_eof_fm_d2;\n"], [207, "  tx_eomf_fm_d3 <= tx_eomf_fm_d2;\n"], [222, "  .somf(tx_somf_fm_d2),\n"], [222, "  .somf_early2(tx_somf_fm),\n"], [222, "  .eomf(tx_eomf_fm_d2),\n"], [262, "    .eof(tx_eof_fm_d3),\n"], [262, "    .eomf(tx_eomf_fm_d3),\n"]]}}