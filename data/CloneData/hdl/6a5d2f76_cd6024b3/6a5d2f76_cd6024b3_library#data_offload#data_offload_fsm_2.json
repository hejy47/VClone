{"Source Block": ["hdl/library/data_offload/data_offload_fsm.v@261:272@HdlStmAssign", "  always @(posedge wr_clk) begin\n    wr_ready_d <= wr_ready;\n  end\n\n  // flush out the DMA if the transfer is bigger than the storage size\n  assign wr_ready = ((wr_fsm_state == WR_WRITE_TO_MEM) ||\n                     ((wr_fsm_state == WR_WAIT_TO_END) && wr_valid_in && wr_ready_d && wr_full)) ? 1'b1 : 1'b0;\n\n  // write control\n  assign wr_valid_out = (wr_fsm_state == WR_WRITE_TO_MEM) & wr_valid_in;\n\n  // sample counter for debug purposes, the value of the counter resets at\n"], "Clone Blocks": [["hdl/library/data_offload/data_offload_fsm.v@256:268", "        wr_last_keep <= (TX_OR_RXN_PATH) ? wr_tkeep : {WR_DATA_WIDTH/8{1'b1}};\n      end\n    end\n  end\n\n  always @(posedge wr_clk) begin\n    wr_ready_d <= wr_ready;\n  end\n\n  // flush out the DMA if the transfer is bigger than the storage size\n  assign wr_ready = ((wr_fsm_state == WR_WRITE_TO_MEM) ||\n                     ((wr_fsm_state == WR_WAIT_TO_END) && wr_valid_in && wr_ready_d && wr_full)) ? 1'b1 : 1'b0;\n\n"], ["hdl/library/data_offload/data_offload_fsm.v@265:275", "  // flush out the DMA if the transfer is bigger than the storage size\n  assign wr_ready = ((wr_fsm_state == WR_WRITE_TO_MEM) ||\n                     ((wr_fsm_state == WR_WAIT_TO_END) && wr_valid_in && wr_ready_d && wr_full)) ? 1'b1 : 1'b0;\n\n  // write control\n  assign wr_valid_out = (wr_fsm_state == WR_WRITE_TO_MEM) & wr_valid_in;\n\n  // sample counter for debug purposes, the value of the counter resets at\n  // every new incoming request\n\n  always @(posedge wr_clk) begin\n"]], "Diff Content": {"Delete": [[267, "                     ((wr_fsm_state == WR_WAIT_TO_END) && wr_valid_in && wr_ready_d && wr_full)) ? 1'b1 : 1'b0;\n"]], "Add": [[267, "                     (TX_OR_RXN_PATH && ((wr_fsm_state == WR_WAIT_TO_END) && wr_ready_d))) ? 1'b1 : 1'b0;\n"]]}}