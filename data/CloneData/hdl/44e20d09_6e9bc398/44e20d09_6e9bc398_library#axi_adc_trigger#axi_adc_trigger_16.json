{"Source Block": ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@144:154@HdlIdDef", "  reg               passthrough_high_b; // trigger when rising through the limit\n  reg               passthrough_low_b;  // trigger when fallingh thorugh the limit\n  reg               low_b;   // signal was under the limit, so if it goes through, assert rising\n  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n  reg               trigger_pin_b;\n\n  reg               trigger_adc_a;\n"], "Clone Blocks": [["hdl/library/axi_adc_trigger/axi_adc_trigger.v@142:152", "  reg               comp_high_a;  // signal is over the limit\n  reg               comp_low_a;   // signal is under the limit\n  reg               passthrough_high_b; // trigger when rising through the limit\n  reg               passthrough_low_b;  // trigger when fallingh thorugh the limit\n  reg               low_b;   // signal was under the limit, so if it goes through, assert rising\n  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n  reg               trigger_pin_b;\n"], ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@141:151", "  reg               high_a; // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_a;  // signal is over the limit\n  reg               comp_low_a;   // signal is under the limit\n  reg               passthrough_high_b; // trigger when rising through the limit\n  reg               passthrough_low_b;  // trigger when fallingh thorugh the limit\n  reg               low_b;   // signal was under the limit, so if it goes through, assert rising\n  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n"], ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@147:157", "  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n  reg               trigger_pin_b;\n\n  reg               trigger_adc_a;\n  reg               trigger_adc_b;\n\n  reg               trigger_a;\n"], ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@143:153", "  reg               comp_low_a;   // signal is under the limit\n  reg               passthrough_high_b; // trigger when rising through the limit\n  reg               passthrough_low_b;  // trigger when fallingh thorugh the limit\n  reg               low_b;   // signal was under the limit, so if it goes through, assert rising\n  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n  reg               trigger_pin_b;\n\n"], ["hdl/library/axi_adc_trigger/axi_adc_trigger.v@146:156", "  reg               low_b;   // signal was under the limit, so if it goes through, assert rising\n  reg               high_b;   // signal was over the limit, so if it passes through, assert falling\n  reg               comp_high_b;  // signal is over the limit\n  reg               comp_low_b;   // signal is under the limit\n\n  reg               trigger_pin_a;\n  reg               trigger_pin_b;\n\n  reg               trigger_adc_a;\n  reg               trigger_adc_b;\n\n"]], "Diff Content": {"Delete": [[149, "  reg               comp_low_b;   // signal is under the limit\n"]], "Add": [[149, "  reg               old_comp_high_a;   // t + 1 version of comp_high_a\n"], [149, "  reg               first_a_h_trigger; // valid hysteresis range on passthrough high trigger limit\n"], [149, "  reg               first_a_l_trigger; // valid hysteresis range on passthrough low trigger limit\n"], [149, "  reg  signed   [15-SIGN_BITS:0]    hyst_a_high_limit;\n"], [149, "  reg  signed   [15-SIGN_BITS:0]    hyst_a_low_limit;\n"], [149, "  reg               comp_high_b;       // signal is over the limit\n"], [149, "  reg               old_comp_high_b;   // t + 1 version of comp_high_b\n"], [149, "  reg               first_b_h_trigger; // valid hysteresis range on passthrough high trigger limit\n"], [149, "  reg               first_b_l_trigger; // valid hysteresis range on passthrough low trigger limit\n"], [149, "  reg  signed   [15-SIGN_BITS:0]    hyst_b_high_limit;\n"], [149, "  reg  signed   [15-SIGN_BITS:0]    hyst_b_low_limit;\n"]]}}