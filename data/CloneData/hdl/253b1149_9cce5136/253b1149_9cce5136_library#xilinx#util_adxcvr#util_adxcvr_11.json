{"Source Block": ["hdl/library/xilinx/util_adxcvr/util_adxcvr.v@2231:2288@HdlStmIf", "  assign up_tx_ready_7 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 9) begin\n  util_adxcvr_xcm #(\n    .XCVR_TYPE (XCVR_TYPE),\n    .QPLL_REFCLK_DIV (QPLL_REFCLK_DIV),\n    .QPLL_FBDIV_RATIO (QPLL_FBDIV_RATIO),\n    .POR_CFG (POR_CFG),\n    .PPF0_CFG (PPF0_CFG),\n    .QPLL_CFG (QPLL_CFG),\n    .QPLL_FBDIV (QPLL_FBDIV),\n    .QPLL_CFG0 (QPLL_CFG0),\n    .QPLL_CFG1 (QPLL_CFG1),\n    .QPLL_CFG1_G3 (QPLL_CFG1_G3),\n    .QPLL_CFG2 (QPLL_CFG2),\n    .QPLL_CFG2_G3 (QPLL_CFG2_G3),\n    .QPLL_CFG3 (QPLL_CFG3),\n    .QPLL_CP_G3 (QPLL_CP_G3),\n    .QPLL_LPF (QPLL_LPF),\n    .QPLL_CP (QPLL_CP),\n    .QPLL_CFG4 (QPLL_CFG4),\n    .GTY4_PPF0_CFG (GTY4_PPF0_CFG))\n  i_xcm_8 (\n    .qpll_ref_clk (qpll_ref_clk_8),\n    .qpll_sel (qpll_sel_8),\n    .qpll2ch_clk (qpll2ch_clk_8),\n    .qpll2ch_ref_clk (qpll2ch_ref_clk_8),\n    .qpll2ch_locked (qpll2ch_locked_8),\n    .qpll1_clk (qpll1_clk_8),\n    .qpll1_ref_clk (qpll1_ref_clk_8),\n    .qpll1_locked (qpll1_locked_8),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_qpll_rst (up_qpll_rst_8),\n    .up_cm_enb (up_cm_enb_8),\n    .up_cm_addr (up_cm_addr_8),\n    .up_cm_wr (up_cm_wr_8),\n    .up_cm_wdata (up_cm_wdata_8),\n    .up_cm_rdata (up_cm_rdata_8),\n    .up_cm_ready (up_cm_ready_8));\n  end else begin\n  assign qpll2ch_clk_8 = 1'd0;\n  assign qpll2ch_ref_clk_8 = 1'd0;\n  assign qpll2ch_locked_8 = 1'd0;\n  assign qpll1_clk_8 = 1'd0;\n  assign qpll1_ref_clk_8 = 1'd0;\n  assign qpll1_locked_8 = 1'd0;\n  assign up_cm_rdata_8 = 16'd0;\n  assign up_cm_ready_8 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 9) begin\n  util_adxcvr_xch #(\n"], "Clone Blocks": [["hdl/library/xilinx/util_adxcvr/util_adxcvr.v@1139:1196", "  assign        qpll_sel_12 = sys_clk_sel_12 == 2'd3 ? 0 : 1;\n\n  // instantiations\n\n  generate\n  if (NUM_OF_LANES >= 1) begin\n  util_adxcvr_xcm #(\n    .XCVR_TYPE (XCVR_TYPE),\n    .QPLL_REFCLK_DIV (QPLL_REFCLK_DIV),\n    .QPLL_FBDIV_RATIO (QPLL_FBDIV_RATIO),\n    .POR_CFG (POR_CFG),\n    .PPF0_CFG (PPF0_CFG),\n    .QPLL_CFG (QPLL_CFG),\n    .QPLL_FBDIV (QPLL_FBDIV),\n    .QPLL_CFG0 (QPLL_CFG0),\n    .QPLL_CFG1 (QPLL_CFG1),\n    .QPLL_CFG1_G3 (QPLL_CFG1_G3),\n    .QPLL_CFG2 (QPLL_CFG2),\n    .QPLL_CFG2_G3 (QPLL_CFG2_G3),\n    .QPLL_CFG3 (QPLL_CFG3),\n    .QPLL_CP_G3 (QPLL_CP_G3),\n    .QPLL_LPF (QPLL_LPF),\n    .QPLL_CP (QPLL_CP),\n    .QPLL_CFG4 (QPLL_CFG4),\n    .GTY4_PPF0_CFG (GTY4_PPF0_CFG))\n  i_xcm_0 (\n    .qpll_ref_clk (qpll_ref_clk_0),\n    .qpll_sel (qpll_sel_0),\n    .qpll2ch_clk (qpll2ch_clk_0),\n    .qpll2ch_ref_clk (qpll2ch_ref_clk_0),\n    .qpll2ch_locked (qpll2ch_locked_0),\n    .qpll1_clk (qpll1_clk_0),\n    .qpll1_ref_clk (qpll1_ref_clk_0),\n    .qpll1_locked (qpll1_locked_0),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_qpll_rst (up_qpll_rst_0),\n    .up_cm_enb (up_cm_enb_0),\n    .up_cm_addr (up_cm_addr_0),\n    .up_cm_wr (up_cm_wr_0),\n    .up_cm_wdata (up_cm_wdata_0),\n    .up_cm_rdata (up_cm_rdata_0),\n    .up_cm_ready (up_cm_ready_0));\n  end else begin\n  assign qpll2ch_clk_0 = 1'd0;\n  assign qpll2ch_ref_clk_0 = 1'd0;\n  assign qpll2ch_locked_0 = 1'd0;\n  assign qpll1_clk_0 = 1'd0;\n  assign qpll1_ref_clk_0 = 1'd0;\n  assign qpll1_locked_0 = 1'd0;\n  assign up_cm_rdata_0 = 16'd0;\n  assign up_cm_ready_0 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 1) begin\n  util_adxcvr_xch #(\n"], ["hdl/library/xilinx/util_adxcvr/util_adxcvr.v@2777:2834", "  assign up_tx_ready_11 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 13) begin\n  util_adxcvr_xcm #(\n    .XCVR_TYPE (XCVR_TYPE),\n    .QPLL_REFCLK_DIV (QPLL_REFCLK_DIV),\n    .QPLL_FBDIV_RATIO (QPLL_FBDIV_RATIO),\n    .POR_CFG (POR_CFG),\n    .PPF0_CFG (PPF0_CFG),\n    .QPLL_CFG (QPLL_CFG),\n    .QPLL_FBDIV (QPLL_FBDIV),\n    .QPLL_CFG0 (QPLL_CFG0),\n    .QPLL_CFG1 (QPLL_CFG1),\n    .QPLL_CFG1_G3 (QPLL_CFG1_G3),\n    .QPLL_CFG2 (QPLL_CFG2),\n    .QPLL_CFG2_G3 (QPLL_CFG2_G3),\n    .QPLL_CFG3 (QPLL_CFG3),\n    .QPLL_CP_G3 (QPLL_CP_G3),\n    .QPLL_LPF (QPLL_LPF),\n    .QPLL_CP (QPLL_CP),\n    .QPLL_CFG4 (QPLL_CFG4),\n    .GTY4_PPF0_CFG (GTY4_PPF0_CFG))\n  i_xcm_12 (\n    .qpll_ref_clk (qpll_ref_clk_12),\n    .qpll_sel (qpll_sel_12),\n    .qpll2ch_clk (qpll2ch_clk_12),\n    .qpll2ch_ref_clk (qpll2ch_ref_clk_12),\n    .qpll2ch_locked (qpll2ch_locked_12),\n    .qpll1_clk (qpll1_clk_12),\n    .qpll1_ref_clk (qpll1_ref_clk_12),\n    .qpll1_locked (qpll1_locked_12),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_qpll_rst (up_qpll_rst_12),\n    .up_cm_enb (up_cm_enb_12),\n    .up_cm_addr (up_cm_addr_12),\n    .up_cm_wr (up_cm_wr_12),\n    .up_cm_wdata (up_cm_wdata_12),\n    .up_cm_rdata (up_cm_rdata_12),\n    .up_cm_ready (up_cm_ready_12));\n  end else begin\n  assign qpll2ch_clk_12 = 1'd0;\n  assign qpll2ch_ref_clk_12 = 1'd0;\n  assign qpll2ch_locked_12 = 1'd0;\n  assign qpll1_clk_12 = 1'd0;\n  assign qpll1_ref_clk_12 = 1'd0;\n  assign qpll1_locked_12 = 1'd0;\n  assign up_cm_rdata_12 = 16'd0;\n  assign up_cm_ready_12 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 13) begin\n  util_adxcvr_xch #(\n"], ["hdl/library/xilinx/util_adxcvr/util_adxcvr.v@1685:1742", "  assign up_tx_ready_3 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 5) begin\n  util_adxcvr_xcm #(\n    .XCVR_TYPE (XCVR_TYPE),\n    .QPLL_REFCLK_DIV (QPLL_REFCLK_DIV),\n    .QPLL_FBDIV_RATIO (QPLL_FBDIV_RATIO),\n    .POR_CFG (POR_CFG),\n    .PPF0_CFG (PPF0_CFG),\n    .QPLL_CFG (QPLL_CFG),\n    .QPLL_FBDIV (QPLL_FBDIV),\n    .QPLL_CFG0 (QPLL_CFG0),\n    .QPLL_CFG1 (QPLL_CFG1),\n    .QPLL_CFG1_G3 (QPLL_CFG1_G3),\n    .QPLL_CFG2 (QPLL_CFG2),\n    .QPLL_CFG2_G3 (QPLL_CFG2_G3),\n    .QPLL_CFG3 (QPLL_CFG3),\n    .QPLL_CP_G3 (QPLL_CP_G3),\n    .QPLL_LPF (QPLL_LPF),\n    .QPLL_CP (QPLL_CP),\n    .QPLL_CFG4 (QPLL_CFG4),\n    .GTY4_PPF0_CFG (GTY4_PPF0_CFG))\n  i_xcm_4 (\n    .qpll_ref_clk (qpll_ref_clk_4),\n    .qpll_sel (qpll_sel_4),\n    .qpll2ch_clk (qpll2ch_clk_4),\n    .qpll2ch_ref_clk (qpll2ch_ref_clk_4),\n    .qpll2ch_locked (qpll2ch_locked_4),\n    .qpll1_clk (qpll1_clk_4),\n    .qpll1_ref_clk (qpll1_ref_clk_4),\n    .qpll1_locked (qpll1_locked_4),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_qpll_rst (up_qpll_rst_4),\n    .up_cm_enb (up_cm_enb_4),\n    .up_cm_addr (up_cm_addr_4),\n    .up_cm_wr (up_cm_wr_4),\n    .up_cm_wdata (up_cm_wdata_4),\n    .up_cm_rdata (up_cm_rdata_4),\n    .up_cm_ready (up_cm_ready_4));\n  end else begin\n  assign qpll2ch_clk_4 = 1'd0;\n  assign qpll2ch_ref_clk_4 = 1'd0;\n  assign qpll2ch_locked_4 = 1'd0;\n  assign qpll1_clk_4 = 1'd0;\n  assign qpll1_ref_clk_4 = 1'd0;\n  assign qpll1_locked_4 = 1'd0;\n  assign up_cm_rdata_4 = 16'd0;\n  assign up_cm_ready_4 = 1'd0;\n  end\n  endgenerate\n\n  generate\n  if (NUM_OF_LANES >= 5) begin\n  util_adxcvr_xch #(\n"]], "Diff Content": {"Delete": [[2254, "    .QPLL_CFG4 (QPLL_CFG4),\n"], [2255, "    .GTY4_PPF0_CFG (GTY4_PPF0_CFG))\n"]], "Add": [[2255, "    .QPLL_CFG4 (QPLL_CFG4))\n"]]}}