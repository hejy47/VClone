{"Source Block": ["hdl/library/axi_dmac/data_mover.v@122:188@HdlStmIf", "assign m_axi_last = last || early_tlast;\nassign m_axi_partial_burst = early_tlast;\n\nassign block_descr_to_dst = transfer_abort_s;\n\ngenerate if (ALLOW_ABORT == 1) begin\n  wire programmed_last;\n\n  reg transfer_abort = 1'b0;\n  reg req_xlast_d = 1'b0;\n  reg [1:0] transfer_id = 2'b0;\n\n  assign programmed_last = (last == 1'b1 && eot == 1'b1 && req_xlast_d == 1'b1);\n  /*\n   * A 'last' on the external interface indicates the end of an packet. If such a\n   * 'last' indicator is observed before the end of the current transfer stop\n   * accepting data on the external interface until a new descriptor is\n   * received that is the first segment of a transfer. \n   */\n  always @(posedge clk) begin\n    if (resetn == 1'b0) begin\n      transfer_abort <= 1'b0;\n    end else if (req_valid == 1'b1 && req_ready == 1'b1 && req_xlast_d == 1'b1) begin\n      transfer_abort <= 1'b0;\n    end else if (m_axi_valid == 1'b1) begin\n      if (programmed_last == 1'b1) begin\n        transfer_abort <= 1'b0;\n      end else if (s_axi_last == 1'b1) begin\n        transfer_abort <= 1'b1;\n      end\n    end\n  end\n\n  always @(posedge clk) begin\n    if (req_ready == 1'b1 && req_valid == 1'b1) begin\n      req_xlast_d <= req_xlast;\n    end\n  end\n\n  assign transfer_abort_s = transfer_abort;\n  assign early_tlast = (s_axi_ready == 1'b1) && (m_axi_valid == 1'b1) &&\n                       (s_axi_last == 1'b1) && (programmed_last == 1'b0);\n\n  assign rewind_req_valid = early_tlast;\n  assign rewind_req_data = {transfer_id,req_xlast_d,id_next};\n\n  // The width of the id must fit the number of transfers that can be in flight \n  // in the burst memory\n  always @(posedge clk) begin\n    if (resetn == 1'b0) begin\n      transfer_id <= 2'b0;\n    end else if (req_valid == 1'b1 && req_ready == 1'b1) begin\n      transfer_id <= transfer_id + 1'b1;\n    end\n  end\n\nend else begin\n  assign transfer_abort_s = 1'b0;\n  assign early_tlast = 1'b0;\n  assign rewind_req_valid = 1'b0;\n  assign rewind_req_data = 'h0;\nend endgenerate\n\n/*\n * If req_sync_transfer_start is set all incoming beats will be skipped until\n * one has s_axi_sync set. This will be the first beat that is passsed through.\n */\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[139, "   * received that is the first segment of a transfer. \n"]], "Add": [[139, "   * received that is the first segment of a transfer.\n"]]}}