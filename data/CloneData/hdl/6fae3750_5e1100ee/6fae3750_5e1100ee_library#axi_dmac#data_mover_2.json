{"Source Block": ["hdl/library/axi_dmac/data_mover.v@195:205@HdlStmAssign", "end\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = m_axi_valid && last_eot && eot;\nassign req_ready = last_load || ~active || (transfer_abort_s & rewind_req_ready);\n\nalways @(posedge clk) begin\n  if (req_ready) begin\n    last_eot <= req_last_burst_length == 'h0;\n    last_non_eot <= 1'b0;\n"], "Clone Blocks": [["hdl/library/axi_dmac/data_mover.v@194:204", "  end\nend\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = m_axi_valid && last_eot && eot;\nassign req_ready = last_load || ~active || (transfer_abort_s & rewind_req_ready);\n\nalways @(posedge clk) begin\n  if (req_ready) begin\n    last_eot <= req_last_burst_length == 'h0;\n"]], "Diff Content": {"Delete": [[200, "assign req_ready = last_load || ~active || (transfer_abort_s & rewind_req_ready);\n"]], "Add": [[200, "assign req_ready = (last_load && ~early_tlast) ||\n"], [200, "                   (~active && ~transfer_abort_s) ||\n"], [200, "                   (transfer_abort_s && rewind_req_ready);\n"]]}}