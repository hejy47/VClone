{"Source Block": ["hdl/library/common/ad_mux.v@55:65@HdlIdDef", ");\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n\n\n"], "Clone Blocks": [["hdl/library/common/ad_mux.v@52:62", "  input [DW-1:0] data_in,\n  input [$clog2(CH_CNT)-1:0] ch_sel,\n  output [CH_W-1:0] data_out\n);\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\n"], ["hdl/library/common/ad_mux.v@57:67", "localparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n\n\nassign mux_in[DW-1:0] = data_in;\nassign ch_sel_pln[CLOG2_CH_CNT-1:0] = ch_sel;\n"], ["hdl/library/common/ad_mux.v@54:64", "  output [CH_W-1:0] data_out\n);\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n\n"], ["hdl/library/common/ad_mux.v@53:63", "  input [$clog2(CH_CNT)-1:0] ch_sel,\n  output [CH_W-1:0] data_out\n);\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n"], ["hdl/library/common/ad_mux.v@58:68", "localparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n\n\nassign mux_in[DW-1:0] = data_in;\nassign ch_sel_pln[CLOG2_CH_CNT-1:0] = ch_sel;\n\n"]], "Diff Content": {"Delete": [[60, "localparam NUM_STAGES = $clog2(CH_CNT) / $clog2(MUX_SZ);\n"]], "Add": [[60, "localparam NUM_STAGES = ($clog2(CH_CNT) / $clog2(MUX_SZ)) + // divide and round up\n"], [60, "                       |($clog2(CH_CNT) % $clog2(MUX_SZ));\n"]]}}