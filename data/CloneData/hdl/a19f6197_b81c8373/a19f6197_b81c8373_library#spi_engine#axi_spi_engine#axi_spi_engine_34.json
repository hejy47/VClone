{"Source Block": ["hdl/library/spi_engine/axi_spi_engine/axi_spi_engine.v@168:223@HdlStmIf", "reg [31:0] up_scratch = 'h00;\n\nreg  [7:0] sync_id = 'h00;\nreg        sync_id_pending = 1'b0;\n\ngenerate if (MM_IF_TYPE == S_AXI) begin\n\n  // assign clock and reset\n\n  assign clk = s_axi_aclk;\n  assign rstn = s_axi_aresetn;\n\n  // interface wrapper\n\n  up_axi #(\n        .ADDRESS_WIDTH (UP_ADDRESS_WIDTH)\n  ) i_up_axi (\n        .up_rstn(rstn),\n        .up_clk(clk),\n        .up_axi_awvalid(s_axi_awvalid),\n        .up_axi_awaddr(s_axi_awaddr),\n        .up_axi_awready(s_axi_awready),\n        .up_axi_wvalid(s_axi_wvalid),\n        .up_axi_wdata(s_axi_wdata),\n        .up_axi_wstrb(s_axi_wstrb),\n        .up_axi_wready(s_axi_wready),\n        .up_axi_bvalid(s_axi_bvalid),\n        .up_axi_bresp(s_axi_bresp),\n        .up_axi_bready(s_axi_bready),\n        .up_axi_arvalid(s_axi_arvalid),\n        .up_axi_araddr(s_axi_araddr),\n        .up_axi_arready(s_axi_arready),\n        .up_axi_rvalid(s_axi_rvalid),\n        .up_axi_rresp(s_axi_rresp),\n        .up_axi_rdata(s_axi_rdata),\n        .up_axi_rready(s_axi_rready),\n        .up_wreq(up_wreq_s),\n        .up_waddr(up_waddr_s),\n        .up_wdata(up_wdata_s),\n        .up_wack(up_wack_ff),\n        .up_rreq(up_rreq_s),\n        .up_raddr(up_raddr_s),\n        .up_rdata(up_rdata_ff),\n        .up_rack(up_rack_ff)\n  );\n\n  assign up_rdata = 32'b0;\n  assign up_rack = 1'b0;\n  assign up_wack = 1'b0;\n\nend\nendgenerate\n\ngenerate if (MM_IF_TYPE == UP_FIFO) begin\n\n  // assign clock and reset\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[173, "generate if (MM_IF_TYPE == S_AXI) begin\n"], [177, "  assign clk = s_axi_aclk;\n"], [178, "  assign rstn = s_axi_aresetn;\n"], [182, "  up_axi #(\n"], [183, "        .ADDRESS_WIDTH (UP_ADDRESS_WIDTH)\n"], [184, "  ) i_up_axi (\n"], [185, "        .up_rstn(rstn),\n"], [186, "        .up_clk(clk),\n"], [187, "        .up_axi_awvalid(s_axi_awvalid),\n"], [188, "        .up_axi_awaddr(s_axi_awaddr),\n"], [189, "        .up_axi_awready(s_axi_awready),\n"], [190, "        .up_axi_wvalid(s_axi_wvalid),\n"], [191, "        .up_axi_wdata(s_axi_wdata),\n"], [192, "        .up_axi_wstrb(s_axi_wstrb),\n"], [193, "        .up_axi_wready(s_axi_wready),\n"], [194, "        .up_axi_bvalid(s_axi_bvalid),\n"], [195, "        .up_axi_bresp(s_axi_bresp),\n"], [196, "        .up_axi_bready(s_axi_bready),\n"], [197, "        .up_axi_arvalid(s_axi_arvalid),\n"], [198, "        .up_axi_araddr(s_axi_araddr),\n"], [199, "        .up_axi_arready(s_axi_arready),\n"], [200, "        .up_axi_rvalid(s_axi_rvalid),\n"], [201, "        .up_axi_rresp(s_axi_rresp),\n"], [202, "        .up_axi_rdata(s_axi_rdata),\n"], [203, "        .up_axi_rready(s_axi_rready),\n"], [204, "        .up_wreq(up_wreq_s),\n"], [205, "        .up_waddr(up_waddr_s),\n"], [206, "        .up_wdata(up_wdata_s),\n"], [207, "        .up_wack(up_wack_ff),\n"], [208, "        .up_rreq(up_rreq_s),\n"], [209, "        .up_raddr(up_raddr_s),\n"], [210, "        .up_rdata(up_rdata_ff),\n"], [211, "        .up_rack(up_rack_ff)\n"], [214, "  assign up_rdata = 32'b0;\n"], [215, "  assign up_rack = 1'b0;\n"], [216, "  assign up_wack = 1'b0;\n"], [218, "end\n"]], "Add": [[211, "  parameter CMD_FIFO_ADDRESS_WIDTH = 4,\n"], [211, "  parameter SDO_FIFO_ADDRESS_WIDTH = 5,\n"], [211, "  parameter SDI_FIFO_ADDRESS_WIDTH = 5,\n"], [211, "  parameter MM_IF_TYPE = 0,\n"], [211, "  parameter UP_ADDRESS_WIDTH = 14,\n"], [211, "  parameter ASYNC_SPI_CLK = 0,\n"], [211, "  parameter NUM_OFFLOAD = 0,\n"], [211, "  parameter OFFLOAD0_CMD_MEM_ADDRESS_WIDTH = 4,\n"], [211, "  parameter OFFLOAD0_SDO_MEM_ADDRESS_WIDTH = 4,\n"], [211, "  parameter ID = 0,\n"], [211, "  parameter DATA_WIDTH = 8,\n"], [211, "  parameter NUM_OF_SDI = 1 ) (\n"], [211, "  input         s_axi_aclk,\n"], [211, "  input         s_axi_aresetn,\n"], [211, "  input         s_axi_awvalid,\n"], [211, "  input  [15:0] s_axi_awaddr,\n"], [211, "  output        s_axi_awready,\n"], [211, "  input   [2:0] s_axi_awprot,\n"], [211, "  input         s_axi_wvalid,\n"], [211, "  input  [31:0] s_axi_wdata,\n"], [211, "  input  [ 3:0] s_axi_wstrb,\n"], [211, "  output        s_axi_wready,\n"], [211, "  output        s_axi_bvalid,\n"], [211, "  output [ 1:0] s_axi_bresp,\n"], [211, "  input         s_axi_bready,\n"], [211, "  input         s_axi_arvalid,\n"], [211, "  input  [15:0] s_axi_araddr,\n"], [211, "  output        s_axi_arready,\n"], [211, "  input   [2:0] s_axi_arprot,\n"], [211, "  output        s_axi_rvalid,\n"], [211, "  input         s_axi_rready,\n"], [211, "  output [ 1:0] s_axi_rresp,\n"], [211, "  output [31:0] s_axi_rdata,\n"], [211, "  input                           up_clk,\n"], [211, "  input                           up_rstn,\n"], [211, "  input                           up_wreq,\n"], [211, "  input  [(UP_ADDRESS_WIDTH-1):0] up_waddr,\n"], [211, "  input  [31:0]                   up_wdata,\n"], [211, "  output                          up_wack,\n"], [211, "  input                           up_rreq,\n"], [211, "  input  [(UP_ADDRESS_WIDTH-1):0] up_raddr,\n"], [211, "  output [31:0]                   up_rdata,\n"], [211, "  output                          up_rack,\n"], [211, "  output reg irq,\n"], [211, "  input spi_clk,\n"], [211, "  output spi_resetn,\n"], [211, "  input cmd_ready,\n"], [211, "  output cmd_valid,\n"], [211, "  output [15:0] cmd_data,\n"], [211, "  input sdo_data_ready,\n"], [211, "  output sdo_data_valid,\n"], [211, "  output [(DATA_WIDTH-1):0] sdo_data,\n"], [211, "  output sdi_data_ready,\n"], [211, "  input sdi_data_valid,\n"], [211, "  input [(NUM_OF_SDI * DATA_WIDTH-1):0] sdi_data,\n"], [211, "  output sync_ready,\n"], [211, "  input sync_valid,\n"], [211, "  input [7:0] sync_data,\n"], [211, "  output offload0_cmd_wr_en,\n"], [211, "  output [15:0] offload0_cmd_wr_data,\n"], [211, "  output offload0_sdo_wr_en,\n"], [211, "  output [(DATA_WIDTH-1):0] offload0_sdo_wr_data,\n"], [211, "  output reg offload0_mem_reset,\n"], [211, "  output reg offload0_enable,\n"], [211, "  input offload0_enabled\n"]]}}