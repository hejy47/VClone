Source Block: hdl/library/spi_engine/axi_spi_engine/axi_spi_engine.v@168:223@HdlStmIf
reg [31:0] up_scratch = 'h00;

reg  [7:0] sync_id = 'h00;
reg        sync_id_pending = 1'b0;

generate if (MM_IF_TYPE == S_AXI) begin

  // assign clock and reset

  assign clk = s_axi_aclk;
  assign rstn = s_axi_aresetn;

  // interface wrapper

  up_axi #(
        .ADDRESS_WIDTH (UP_ADDRESS_WIDTH)
  ) i_up_axi (
        .up_rstn(rstn),
        .up_clk(clk),
        .up_axi_awvalid(s_axi_awvalid),
        .up_axi_awaddr(s_axi_awaddr),
        .up_axi_awready(s_axi_awready),
        .up_axi_wvalid(s_axi_wvalid),
        .up_axi_wdata(s_axi_wdata),
        .up_axi_wstrb(s_axi_wstrb),
        .up_axi_wready(s_axi_wready),
        .up_axi_bvalid(s_axi_bvalid),
        .up_axi_bresp(s_axi_bresp),
        .up_axi_bready(s_axi_bready),
        .up_axi_arvalid(s_axi_arvalid),
        .up_axi_araddr(s_axi_araddr),
        .up_axi_arready(s_axi_arready),
        .up_axi_rvalid(s_axi_rvalid),
        .up_axi_rresp(s_axi_rresp),
        .up_axi_rdata(s_axi_rdata),
        .up_axi_rready(s_axi_rready),
        .up_wreq(up_wreq_s),
        .up_waddr(up_waddr_s),
        .up_wdata(up_wdata_s),
        .up_wack(up_wack_ff),
        .up_rreq(up_rreq_s),
        .up_raddr(up_raddr_s),
        .up_rdata(up_rdata_ff),
        .up_rack(up_rack_ff)
  );

  assign up_rdata = 32'b0;
  assign up_rack = 1'b0;
  assign up_wack = 1'b0;

end
endgenerate

generate if (MM_IF_TYPE == UP_FIFO) begin

  // assign clock and reset

Diff Content:
- 173 generate if (MM_IF_TYPE == S_AXI) begin
- 177   assign clk = s_axi_aclk;
- 178   assign rstn = s_axi_aresetn;
- 182   up_axi #(
- 183         .ADDRESS_WIDTH (UP_ADDRESS_WIDTH)
- 184   ) i_up_axi (
- 185         .up_rstn(rstn),
- 186         .up_clk(clk),
- 187         .up_axi_awvalid(s_axi_awvalid),
- 188         .up_axi_awaddr(s_axi_awaddr),
- 189         .up_axi_awready(s_axi_awready),
- 190         .up_axi_wvalid(s_axi_wvalid),
- 191         .up_axi_wdata(s_axi_wdata),
- 192         .up_axi_wstrb(s_axi_wstrb),
- 193         .up_axi_wready(s_axi_wready),
- 194         .up_axi_bvalid(s_axi_bvalid),
- 195         .up_axi_bresp(s_axi_bresp),
- 196         .up_axi_bready(s_axi_bready),
- 197         .up_axi_arvalid(s_axi_arvalid),
- 198         .up_axi_araddr(s_axi_araddr),
- 199         .up_axi_arready(s_axi_arready),
- 200         .up_axi_rvalid(s_axi_rvalid),
- 201         .up_axi_rresp(s_axi_rresp),
- 202         .up_axi_rdata(s_axi_rdata),
- 203         .up_axi_rready(s_axi_rready),
- 204         .up_wreq(up_wreq_s),
- 205         .up_waddr(up_waddr_s),
- 206         .up_wdata(up_wdata_s),
- 207         .up_wack(up_wack_ff),
- 208         .up_rreq(up_rreq_s),
- 209         .up_raddr(up_raddr_s),
- 210         .up_rdata(up_rdata_ff),
- 211         .up_rack(up_rack_ff)
- 214   assign up_rdata = 32'b0;
- 215   assign up_rack = 1'b0;
- 216   assign up_wack = 1'b0;
- 218 end
+ 211   parameter CMD_FIFO_ADDRESS_WIDTH = 4,
+ 211   parameter SDO_FIFO_ADDRESS_WIDTH = 5,
+ 211   parameter SDI_FIFO_ADDRESS_WIDTH = 5,
+ 211   parameter MM_IF_TYPE = 0,
+ 211   parameter UP_ADDRESS_WIDTH = 14,
+ 211   parameter ASYNC_SPI_CLK = 0,
+ 211   parameter NUM_OFFLOAD = 0,
+ 211   parameter OFFLOAD0_CMD_MEM_ADDRESS_WIDTH = 4,
+ 211   parameter OFFLOAD0_SDO_MEM_ADDRESS_WIDTH = 4,
+ 211   parameter ID = 0,
+ 211   parameter DATA_WIDTH = 8,
+ 211   parameter NUM_OF_SDI = 1 ) (
+ 211   input         s_axi_aclk,
+ 211   input         s_axi_aresetn,
+ 211   input         s_axi_awvalid,
+ 211   input  [15:0] s_axi_awaddr,
+ 211   output        s_axi_awready,
+ 211   input   [2:0] s_axi_awprot,
+ 211   input         s_axi_wvalid,
+ 211   input  [31:0] s_axi_wdata,
+ 211   input  [ 3:0] s_axi_wstrb,
+ 211   output        s_axi_wready,
+ 211   output        s_axi_bvalid,
+ 211   output [ 1:0] s_axi_bresp,
+ 211   input         s_axi_bready,
+ 211   input         s_axi_arvalid,
+ 211   input  [15:0] s_axi_araddr,
+ 211   output        s_axi_arready,
+ 211   input   [2:0] s_axi_arprot,
+ 211   output        s_axi_rvalid,
+ 211   input         s_axi_rready,
+ 211   output [ 1:0] s_axi_rresp,
+ 211   output [31:0] s_axi_rdata,
+ 211   input                           up_clk,
+ 211   input                           up_rstn,
+ 211   input                           up_wreq,
+ 211   input  [(UP_ADDRESS_WIDTH-1):0] up_waddr,
+ 211   input  [31:0]                   up_wdata,
+ 211   output                          up_wack,
+ 211   input                           up_rreq,
+ 211   input  [(UP_ADDRESS_WIDTH-1):0] up_raddr,
+ 211   output [31:0]                   up_rdata,
+ 211   output                          up_rack,
+ 211   output reg irq,
+ 211   input spi_clk,
+ 211   output spi_resetn,
+ 211   input cmd_ready,
+ 211   output cmd_valid,
+ 211   output [15:0] cmd_data,
+ 211   input sdo_data_ready,
+ 211   output sdo_data_valid,
+ 211   output [(DATA_WIDTH-1):0] sdo_data,
+ 211   output sdi_data_ready,
+ 211   input sdi_data_valid,
+ 211   input [(NUM_OF_SDI * DATA_WIDTH-1):0] sdi_data,
+ 211   output sync_ready,
+ 211   input sync_valid,
+ 211   input [7:0] sync_data,
+ 211   output offload0_cmd_wr_en,
+ 211   output [15:0] offload0_cmd_wr_data,
+ 211   output offload0_sdo_wr_en,
+ 211   output [(DATA_WIDTH-1):0] offload0_sdo_wr_data,
+ 211   output reg offload0_mem_reset,
+ 211   output reg offload0_enable,
+ 211   input offload0_enabled

Clone Blocks:
