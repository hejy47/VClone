{"Source Block": ["hdl/library/axi_ad7616/axi_ad7616_pif.v@229:239@HdlStmAssign", "    data_out_a <= (rd_db_valid) ? db_i : data_out_a;\n    data_out_b <= (rd_db_valid) ? data_out_a : data_out_b;\n  end\n\n  assign rd_data = data_out_a;\n  assign rd_dvalid = rd_db_valid;\n\n  assign cs_n = (transfer_state == IDLE) ? 1'b1 : 1'b0;\n  assign db_t = ~wr_req_d;\n  assign rd_n = (((transfer_state == CNTRL0_LOW) && ((rd_conv_d == 1'b1) || rd_req_d == 1'b1)) ||\n                  (transfer_state == CNTRL1_LOW)) ? 1'b0 : 1'b1;\n"], "Clone Blocks": [["hdl/library/axi_ad7616/axi_ad7616_pif.v@232:242", "\n  assign rd_data = data_out_a;\n  assign rd_dvalid = rd_db_valid;\n\n  assign cs_n = (transfer_state == IDLE) ? 1'b1 : 1'b0;\n  assign db_t = ~wr_req_d;\n  assign rd_n = (((transfer_state == CNTRL0_LOW) && ((rd_conv_d == 1'b1) || rd_req_d == 1'b1)) ||\n                  (transfer_state == CNTRL1_LOW)) ? 1'b0 : 1'b1;\n  assign wr_n = ((transfer_state == CNTRL0_LOW) && (wr_req_d == 1'b1)) ? 1'b0 : 1'b1;\n\n  // Master AXI stream output logic with additional xfer_req signal\n"], ["hdl/library/axi_ad7616/axi_ad7616_pif.v@231:241", "  end\n\n  assign rd_data = data_out_a;\n  assign rd_dvalid = rd_db_valid;\n\n  assign cs_n = (transfer_state == IDLE) ? 1'b1 : 1'b0;\n  assign db_t = ~wr_req_d;\n  assign rd_n = (((transfer_state == CNTRL0_LOW) && ((rd_conv_d == 1'b1) || rd_req_d == 1'b1)) ||\n                  (transfer_state == CNTRL1_LOW)) ? 1'b0 : 1'b1;\n  assign wr_n = ((transfer_state == CNTRL0_LOW) && (wr_req_d == 1'b1)) ? 1'b0 : 1'b1;\n\n"], ["hdl/library/axi_ad7616/axi_ad7616_pif.v@233:244", "  assign rd_data = data_out_a;\n  assign rd_dvalid = rd_db_valid;\n\n  assign cs_n = (transfer_state == IDLE) ? 1'b1 : 1'b0;\n  assign db_t = ~wr_req_d;\n  assign rd_n = (((transfer_state == CNTRL0_LOW) && ((rd_conv_d == 1'b1) || rd_req_d == 1'b1)) ||\n                  (transfer_state == CNTRL1_LOW)) ? 1'b0 : 1'b1;\n  assign wr_n = ((transfer_state == CNTRL0_LOW) && (wr_req_d == 1'b1)) ? 1'b0 : 1'b1;\n\n  // Master AXI stream output logic with additional xfer_req signal\n  // The first valid data is ALWAYS the first sample of a convertion\n\n"], ["hdl/library/axi_ad7616/axi_ad7616_pif.v@228:238", "  always @(posedge clk) begin\n    data_out_a <= (rd_db_valid) ? db_i : data_out_a;\n    data_out_b <= (rd_db_valid) ? data_out_a : data_out_b;\n  end\n\n  assign rd_data = data_out_a;\n  assign rd_dvalid = rd_db_valid;\n\n  assign cs_n = (transfer_state == IDLE) ? 1'b1 : 1'b0;\n  assign db_t = ~wr_req_d;\n  assign rd_n = (((transfer_state == CNTRL0_LOW) && ((rd_conv_d == 1'b1) || rd_req_d == 1'b1)) ||\n"]], "Diff Content": {"Delete": [[234, "  assign rd_dvalid = rd_db_valid;\n"]], "Add": []}}