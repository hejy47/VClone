Source Block: hdl/library/common/ad_pnmon.v@73:83@HdlStmAssign

  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;
  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;
  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;
  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);
  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);

  // pn oos and counters (16 to clear and set).

  always @(posedge adc_clk) begin
    adc_valid_d <= adc_valid_in;

Diff Content:
- 78   assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);
+ 78   assign adc_pn_update_s = ~(adc_pn_oos_int ^ adc_pn_match_s);
+ 78   assign adc_pn_err_s = ~(adc_pn_oos_int | adc_pn_match_s);
+ 78   assign adc_pn_oos = adc_pn_oos_int;
+ 78   assign adc_pn_err = adc_pn_err_int;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/ad_pnmon.v@70:80
  wire            adc_pn_err_s;

  // make sure data is not 0, sequence will fail.

  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;
  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;
  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;
  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);
  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);

  // pn oos and counters (16 to clear and set).

Clone Blocks 2:
hdl/library/common/ad_pnmon.v@71:81

  // make sure data is not 0, sequence will fail.

  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;
  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;
  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;
  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);
  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);

  // pn oos and counters (16 to clear and set).


Clone Blocks 3:
hdl/library/common/ad_pnmon.v@69:79
  wire            adc_pn_update_s;
  wire            adc_pn_err_s;

  // make sure data is not 0, sequence will fail.

  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;
  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;
  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;
  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);
  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);


Clone Blocks 4:
hdl/library/axi_ad9671/axi_ad9671_pnmon.v@146:156
  endfunction

  // pn sequence select

  assign adc_pn_valid_s = adc_valid & adc_pn_valid;
  assign adc_pn_data_pn_s = (adc_pn_oos == 1'b1) ? adc_pn_data_in : adc_pn_data_pn;

  always @(posedge adc_clk) begin
    if (adc_valid == 1'b1) begin
      adc_pn_valid <= ~adc_pn_valid;
      adc_pn_data_in <= {adc_pn_data_in[15:0], ~adc_data[15], adc_data[14:0]};

Clone Blocks 5:
hdl/library/common/ad_pnmon.v@72:82
  // make sure data is not 0, sequence will fail.

  assign adc_pn_match_d_s = (adc_data_in == adc_data_pn) ? 1'b1 : 1'b0;
  assign adc_pn_match_z_s = (adc_data_in == 'd0) ? 1'b0 : 1'b1;
  assign adc_pn_match_s = adc_pn_match_d & adc_pn_match_z;
  assign adc_pn_update_s = ~(adc_pn_oos ^ adc_pn_match_s);
  assign adc_pn_err_s = ~(adc_pn_oos | adc_pn_match_s);

  // pn oos and counters (16 to clear and set).

  always @(posedge adc_clk) begin

