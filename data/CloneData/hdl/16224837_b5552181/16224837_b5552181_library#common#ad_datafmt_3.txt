Source Block: hdl/library/common/ad_datafmt.v@82:92@HdlStmAssign
  endgenerate

  // if offset-binary convert to 2's complement first

  assign type_s = dfmt_enable & dfmt_type;
  assign signext_s = dfmt_enable & dfmt_se;
  assign sign_s = signext_s & (type_s ^ data[(DATA_WIDTH-1)]);

  generate
  if (DATA_WIDTH < 16) begin
  assign data_out_s[15:DATA_WIDTH] = {(16-DATA_WIDTH){sign_s}};

Diff Content:
- 87   assign signext_s = dfmt_enable & dfmt_se;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/util_axis_upscale.v@66:76

  localparam MSB_WIDTH = UDATA_WIDTH - DATA_WIDTH;

  assign type_s = dfmt_enable & dfmt_type;
  assign signext_s = dfmt_enable & dfmt_se;
  assign sign_s = signext_s & (type_s ^ s_axis_data[(DATA_WIDTH-1)]);

  genvar i;
  generate
  for (i=1; i <= NUM_OF_CHANNELS; i=i+1) begin


Clone Blocks 2:
hdl/library/common/ad_datafmt.v@81:91
  end
  endgenerate

  // if offset-binary convert to 2's complement first

  assign type_s = dfmt_enable & dfmt_type;
  assign signext_s = dfmt_enable & dfmt_se;
  assign sign_s = signext_s & (type_s ^ data[(DATA_WIDTH-1)]);

  generate
  if (DATA_WIDTH < 16) begin

Clone Blocks 3:
hdl/library/common/ad_datafmt.v@83:93

  // if offset-binary convert to 2's complement first

  assign type_s = dfmt_enable & dfmt_type;
  assign signext_s = dfmt_enable & dfmt_se;
  assign sign_s = signext_s & (type_s ^ data[(DATA_WIDTH-1)]);

  generate
  if (DATA_WIDTH < 16) begin
  assign data_out_s[15:DATA_WIDTH] = {(16-DATA_WIDTH){sign_s}};
  end

