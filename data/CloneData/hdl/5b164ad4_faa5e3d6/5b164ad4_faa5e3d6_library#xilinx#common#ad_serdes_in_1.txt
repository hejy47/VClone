Source Block: hdl/library/xilinx/common/ad_serdes_in.v@109:317@HdlStmFor

  // received data interface: ibuf -> idelay -> iserdes

  genvar l_inst;
  generate
  for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data

  IBUFDS i_ibuf (
    .I (data_in_p[l_inst]),
    .IB (data_in_n[l_inst]),
    .O (data_in_ibuf_s[l_inst]));

  if (DEVICE_TYPE == DEVICE_7SERIES) begin
  (* IODELAY_GROUP = IODELAY_GROUP *)
  IDELAYE2 #(
    .CINVCTRL_SEL ("FALSE"),
    .DELAY_SRC ("IDATAIN"),
    .HIGH_PERFORMANCE_MODE ("FALSE"),
    .IDELAY_TYPE ("VAR_LOAD"),
    .IDELAY_VALUE (0),
    .REFCLK_FREQUENCY (200.0),
    .PIPE_SEL ("FALSE"),
    .SIGNAL_PATTERN ("DATA"))
  i_idelay (
    .CE (1'b0),
    .INC (1'b0),
    .DATAIN (1'b0),
    .LDPIPEEN (1'b0),
    .CINVCTRL (1'b0),
    .REGRST (1'b0),
    .C (up_clk),
    .IDATAIN (data_in_ibuf_s[l_inst]),
    .DATAOUT (data_in_idelay_s[l_inst]),
    .LD (up_dld[l_inst]),
    .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
    .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
  end
  if(DEVICE_TYPE == DEVICE_6SERIES) begin
  (* IODELAY_GROUP = IODELAY_GROUP *)
  IODELAYE1 #(
    .CINVCTRL_SEL ("FALSE"),
    .DELAY_SRC ("I"),
    .HIGH_PERFORMANCE_MODE ("TRUE"),
    .IDELAY_TYPE ("VAR_LOADABLE"),
    .IDELAY_VALUE (0),
    .ODELAY_TYPE ("FIXED"),
    .ODELAY_VALUE (0),
    .REFCLK_FREQUENCY (200.0),
    .SIGNAL_PATTERN ("DATA"))
  i_idelay (
    .T (1'b1),
    .CE (1'b0),
    .INC (1'b0),
    .CLKIN (1'b0),
    .DATAIN (1'b0),
    .ODATAIN (1'b0),
    .CINVCTRL (1'b0),
    .C (up_clk),
    .IDATAIN (data_in_ibuf_s[l_inst]),
    .DATAOUT (data_in_idelay_s[l_inst]),
    .RST (up_dld[l_inst]),
    .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
    .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
  end

  if (DEVICE_TYPE == DEVICE_7SERIES) begin
  ISERDESE2  #(
    .DATA_RATE (DATA_RATE),
    .DATA_WIDTH (SERDES_FACTOR),
    .DYN_CLKDIV_INV_EN ("FALSE"),
    .DYN_CLK_INV_EN ("FALSE"),
    .INIT_Q1 (1'b0),
    .INIT_Q2 (1'b0),
    .INIT_Q3 (1'b0),
    .INIT_Q4 (1'b0),
    .INTERFACE_TYPE ("NETWORKING"),
    .IOBDELAY ("IFD"),
    .NUM_CE (2),
    .OFB_USED ("FALSE"),
    .SERDES_MODE ("MASTER"),
    .SRVAL_Q1 (1'b0),
    .SRVAL_Q2 (1'b0),
    .SRVAL_Q3 (1'b0),
    .SRVAL_Q4 (1'b0))
  i_iserdes (
    .O (),
    .Q1 (data_s0[l_inst]),
    .Q2 (data_s1[l_inst]),
    .Q3 (data_s2[l_inst]),
    .Q4 (data_s3[l_inst]),
    .Q5 (data_s4[l_inst]),
    .Q6 (data_s5[l_inst]),
    .Q7 (data_s6[l_inst]),
    .Q8 (data_s7[l_inst]),
    .SHIFTOUT1 (),
    .SHIFTOUT2 (),
    .BITSLIP (1'b0),
    .CE1 (1'b1),
    .CE2 (1'b1),
    .CLKDIVP (1'b0),
    .CLK (clk),
    .CLKB (~clk),
    .CLKDIV (div_clk),
    .OCLK (1'b0),
    .DYNCLKDIVSEL (1'b0),
    .DYNCLKSEL (1'b0),
    .D (1'b0),
    .DDLY (data_in_idelay_s[l_inst]),
    .OFB (1'b0),
    .OCLKB (1'b0),
    .RST (rst),
    .SHIFTIN1 (1'b0),
    .SHIFTIN2 (1'b0));
  end
  if (DEVICE_TYPE == DEVICE_6SERIES) begin
  ISERDESE1 #(
    .DATA_RATE (DATA_RATE),
    .DATA_WIDTH (SERDES_FACTOR),
    .DYN_CLKDIV_INV_EN ("FALSE"),
    .DYN_CLK_INV_EN ("FALSE"),
    .INIT_Q1 (1'b0),
    .INIT_Q2 (1'b0),
    .INIT_Q3 (1'b0),
    .INIT_Q4 (1'b0),
    .INTERFACE_TYPE ("NETWORKING"),
    .IOBDELAY ("NONE"),
    .NUM_CE (1),
    .OFB_USED ("FALSE"),
    .SERDES_MODE ("MASTER"),
    .SRVAL_Q1 (1'b0),
    .SRVAL_Q2 (1'b0),
    .SRVAL_Q3 (1'b0),
    .SRVAL_Q4 (1'b0))
  i_iserdes_m (
    .O (),
    .Q1 (data_s0[l_inst]),
    .Q2 (data_s1[l_inst]),
    .Q3 (data_s2[l_inst]),
    .Q4 (data_s3[l_inst]),
    .Q5 (data_s4[l_inst]),
    .Q6 (data_s5[l_inst]),
    .SHIFTOUT1 (data_shift1_s[l_inst]),
    .SHIFTOUT2 (data_shift2_s[l_inst]),
    .BITSLIP (1'b0),
    .CE1 (1'b1),
    .CE2 (1'b1),
    .CLK (clk),
    .CLKB (~clk),
    .CLKDIV (div_clk),
    .OCLK (1'b0),
    .DYNCLKDIVSEL (1'b0),
    .DYNCLKSEL (1'b0),
    .D (1'b0),
    .DDLY (data_in_idelay_s[l_inst]),
    .OFB (1'b0),
    .RST (rst),
    .SHIFTIN1 (1'b0),
    .SHIFTIN2 (1'b0));

  ISERDESE1 #(
    .DATA_RATE (DATA_RATE),
    .DATA_WIDTH (SERDES_FACTOR),
    .DYN_CLKDIV_INV_EN ("FALSE"),
    .DYN_CLK_INV_EN ("FALSE"),
    .INIT_Q1 (1'b0),
    .INIT_Q2 (1'b0),
    .INIT_Q3 (1'b0),
    .INIT_Q4 (1'b0),
    .INTERFACE_TYPE ("NETWORKING"),
    .IOBDELAY ("NONE"),
    .NUM_CE (1),
    .OFB_USED ("FALSE"),
    .SERDES_MODE ("SLAVE"),
    .SRVAL_Q1 (1'b0),
    .SRVAL_Q2 (1'b0),
    .SRVAL_Q3 (1'b0),
    .SRVAL_Q4 (1'b0))
  i_iserdes_s (
    .O (),
    .Q1 (),
    .Q2 (),
    .Q3 (data_s6[l_inst]),
    .Q4 (data_s7[l_inst]),
    .Q5 (),
    .Q6 (),
    .SHIFTOUT1 (),
    .SHIFTOUT2 (),
    .BITSLIP (1'b0),
    .CE1 (1'b1),
    .CE2 (1'b1),
    .CLK (clk),
    .CLKB (~clk),
    .CLKDIV (div_clk),
    .OCLK (1'b0),
    .DYNCLKDIVSEL (1'b0),
    .DYNCLKSEL (1'b0),
    .D (1'b0),
    .DDLY (data_in_idelay_s[l_inst]),
    .OFB (1'b0),
    .RST (rst),
    .SHIFTIN1 (data_shift1_s[l_inst]),
    .SHIFTIN2 (data_shift2_s[l_inst]));
  end
  end
  endgenerate

endmodule

// ***************************************************************************

Diff Content:
- 114   for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data
- 116   IBUFDS i_ibuf (
- 117     .I (data_in_p[l_inst]),
- 118     .IB (data_in_n[l_inst]),
- 119     .O (data_in_ibuf_s[l_inst]));
- 121   if (DEVICE_TYPE == DEVICE_7SERIES) begin
- 122   (* IODELAY_GROUP = IODELAY_GROUP *)
- 123   IDELAYE2 #(
- 124     .CINVCTRL_SEL ("FALSE"),
- 125     .DELAY_SRC ("IDATAIN"),
- 126     .HIGH_PERFORMANCE_MODE ("FALSE"),
- 127     .IDELAY_TYPE ("VAR_LOAD"),
- 128     .IDELAY_VALUE (0),
- 129     .REFCLK_FREQUENCY (200.0),
- 130     .PIPE_SEL ("FALSE"),
- 131     .SIGNAL_PATTERN ("DATA"))
- 132   i_idelay (
- 133     .CE (1'b0),
- 134     .INC (1'b0),
- 135     .DATAIN (1'b0),
- 136     .LDPIPEEN (1'b0),
- 137     .CINVCTRL (1'b0),
- 138     .REGRST (1'b0),
- 139     .C (up_clk),
- 140     .IDATAIN (data_in_ibuf_s[l_inst]),
- 141     .DATAOUT (data_in_idelay_s[l_inst]),
- 142     .LD (up_dld[l_inst]),
- 143     .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
- 144     .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
- 145   end
- 146   if(DEVICE_TYPE == DEVICE_6SERIES) begin
- 147   (* IODELAY_GROUP = IODELAY_GROUP *)
- 148   IODELAYE1 #(
- 149     .CINVCTRL_SEL ("FALSE"),
- 150     .DELAY_SRC ("I"),
- 151     .HIGH_PERFORMANCE_MODE ("TRUE"),
- 152     .IDELAY_TYPE ("VAR_LOADABLE"),
- 153     .IDELAY_VALUE (0),
- 154     .ODELAY_TYPE ("FIXED"),
- 155     .ODELAY_VALUE (0),
- 156     .REFCLK_FREQUENCY (200.0),
- 157     .SIGNAL_PATTERN ("DATA"))
- 158   i_idelay (
- 159     .T (1'b1),
- 160     .CE (1'b0),
- 161     .INC (1'b0),
- 162     .CLKIN (1'b0),
- 163     .DATAIN (1'b0),
- 164     .ODATAIN (1'b0),
- 165     .CINVCTRL (1'b0),
- 166     .C (up_clk),
- 167     .IDATAIN (data_in_ibuf_s[l_inst]),
- 168     .DATAOUT (data_in_idelay_s[l_inst]),
- 169     .RST (up_dld[l_inst]),
- 170     .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
- 171     .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
- 172   end
- 174   if (DEVICE_TYPE == DEVICE_7SERIES) begin
- 175   ISERDESE2  #(
- 176     .DATA_RATE (DATA_RATE),
- 177     .DATA_WIDTH (SERDES_FACTOR),
- 178     .DYN_CLKDIV_INV_EN ("FALSE"),
- 179     .DYN_CLK_INV_EN ("FALSE"),
- 180     .INIT_Q1 (1'b0),
- 181     .INIT_Q2 (1'b0),
- 182     .INIT_Q3 (1'b0),
- 183     .INIT_Q4 (1'b0),
- 184     .INTERFACE_TYPE ("NETWORKING"),
- 185     .IOBDELAY ("IFD"),
- 186     .NUM_CE (2),
- 187     .OFB_USED ("FALSE"),
- 188     .SERDES_MODE ("MASTER"),
- 189     .SRVAL_Q1 (1'b0),
- 190     .SRVAL_Q2 (1'b0),
- 191     .SRVAL_Q3 (1'b0),
- 192     .SRVAL_Q4 (1'b0))
- 193   i_iserdes (
- 194     .O (),
- 195     .Q1 (data_s0[l_inst]),
- 196     .Q2 (data_s1[l_inst]),
- 197     .Q3 (data_s2[l_inst]),
- 198     .Q4 (data_s3[l_inst]),
- 199     .Q5 (data_s4[l_inst]),
- 200     .Q6 (data_s5[l_inst]),
- 201     .Q7 (data_s6[l_inst]),
- 202     .Q8 (data_s7[l_inst]),
- 203     .SHIFTOUT1 (),
- 204     .SHIFTOUT2 (),
- 205     .BITSLIP (1'b0),
- 206     .CE1 (1'b1),
- 207     .CE2 (1'b1),
- 208     .CLKDIVP (1'b0),
- 209     .CLK (clk),
- 210     .CLKB (~clk),
- 211     .CLKDIV (div_clk),
- 212     .OCLK (1'b0),
- 213     .DYNCLKDIVSEL (1'b0),
- 214     .DYNCLKSEL (1'b0),
- 215     .D (1'b0),
- 216     .DDLY (data_in_idelay_s[l_inst]),
- 217     .OFB (1'b0),
- 218     .OCLKB (1'b0),
- 219     .RST (rst),
- 220     .SHIFTIN1 (1'b0),
- 221     .SHIFTIN2 (1'b0));
- 222   end
- 223   if (DEVICE_TYPE == DEVICE_6SERIES) begin
- 224   ISERDESE1 #(
- 225     .DATA_RATE (DATA_RATE),
- 226     .DATA_WIDTH (SERDES_FACTOR),
- 227     .DYN_CLKDIV_INV_EN ("FALSE"),
- 228     .DYN_CLK_INV_EN ("FALSE"),
- 229     .INIT_Q1 (1'b0),
- 230     .INIT_Q2 (1'b0),
- 231     .INIT_Q3 (1'b0),
- 232     .INIT_Q4 (1'b0),
- 233     .INTERFACE_TYPE ("NETWORKING"),
- 234     .IOBDELAY ("NONE"),
- 235     .NUM_CE (1),
- 236     .OFB_USED ("FALSE"),
- 237     .SERDES_MODE ("MASTER"),
- 238     .SRVAL_Q1 (1'b0),
- 239     .SRVAL_Q2 (1'b0),
- 240     .SRVAL_Q3 (1'b0),
- 241     .SRVAL_Q4 (1'b0))
- 242   i_iserdes_m (
- 243     .O (),
- 244     .Q1 (data_s0[l_inst]),
- 245     .Q2 (data_s1[l_inst]),
- 246     .Q3 (data_s2[l_inst]),
- 247     .Q4 (data_s3[l_inst]),
- 248     .Q5 (data_s4[l_inst]),
- 249     .Q6 (data_s5[l_inst]),
- 250     .SHIFTOUT1 (data_shift1_s[l_inst]),
- 251     .SHIFTOUT2 (data_shift2_s[l_inst]),
- 252     .BITSLIP (1'b0),
- 253     .CE1 (1'b1),
- 254     .CE2 (1'b1),
- 255     .CLK (clk),
- 256     .CLKB (~clk),
- 257     .CLKDIV (div_clk),
- 258     .OCLK (1'b0),
- 259     .DYNCLKDIVSEL (1'b0),
- 260     .DYNCLKSEL (1'b0),
- 261     .D (1'b0),
- 262     .DDLY (data_in_idelay_s[l_inst]),
- 263     .OFB (1'b0),
- 264     .RST (rst),
- 265     .SHIFTIN1 (1'b0),
- 266     .SHIFTIN2 (1'b0));
- 268   ISERDESE1 #(
- 269     .DATA_RATE (DATA_RATE),
- 270     .DATA_WIDTH (SERDES_FACTOR),
- 271     .DYN_CLKDIV_INV_EN ("FALSE"),
- 272     .DYN_CLK_INV_EN ("FALSE"),
- 273     .INIT_Q1 (1'b0),
- 274     .INIT_Q2 (1'b0),
- 275     .INIT_Q3 (1'b0),
- 276     .INIT_Q4 (1'b0),
- 277     .INTERFACE_TYPE ("NETWORKING"),
- 278     .IOBDELAY ("NONE"),
- 279     .NUM_CE (1),
- 280     .OFB_USED ("FALSE"),
- 281     .SERDES_MODE ("SLAVE"),
- 282     .SRVAL_Q1 (1'b0),
- 283     .SRVAL_Q2 (1'b0),
- 284     .SRVAL_Q3 (1'b0),
- 285     .SRVAL_Q4 (1'b0))
- 286   i_iserdes_s (
- 287     .O (),
- 288     .Q1 (),
- 289     .Q2 (),
- 290     .Q3 (data_s6[l_inst]),
- 291     .Q4 (data_s7[l_inst]),
- 292     .Q5 (),
- 293     .Q6 (),
- 294     .SHIFTOUT1 (),
- 295     .SHIFTOUT2 (),
- 296     .BITSLIP (1'b0),
- 297     .CE1 (1'b1),
- 298     .CE2 (1'b1),
- 299     .CLK (clk),
- 300     .CLKB (~clk),
- 301     .CLKDIV (div_clk),
- 302     .OCLK (1'b0),
- 303     .DYNCLKDIVSEL (1'b0),
- 304     .DYNCLKSEL (1'b0),
- 305     .D (1'b0),
- 306     .DDLY (data_in_idelay_s[l_inst]),
- 307     .OFB (1'b0),
- 308     .RST (rst),
- 309     .SHIFTIN1 (data_shift1_s[l_inst]),
- 310     .SHIFTIN2 (data_shift2_s[l_inst]));
- 311   end
- 312   end
+ 114   generate if (DEVICE_TYPE == 0) begin
+ 114     for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data
+ 119       IBUFDS i_ibuf (
+ 119         .I (data_in_p[l_inst]),
+ 119         .IB (data_in_n[l_inst]),
+ 119         .O (data_in_ibuf_s[l_inst]));
+ 172       (* IODELAY_GROUP = IODELAY_GROUP *)
+ 172       IDELAYE2 #(
+ 172         .CINVCTRL_SEL ("FALSE"),
+ 172         .DELAY_SRC ("IDATAIN"),
+ 172         .HIGH_PERFORMANCE_MODE ("FALSE"),
+ 172         .IDELAY_TYPE ("VAR_LOAD"),
+ 172         .IDELAY_VALUE (0),
+ 172         .REFCLK_FREQUENCY (200.0),
+ 172         .PIPE_SEL ("FALSE"),
+ 172         .SIGNAL_PATTERN ("DATA"))
+ 172       i_idelay (
+ 172         .CE (1'b0),
+ 172         .INC (1'b0),
+ 172         .DATAIN (1'b0),
+ 172         .LDPIPEEN (1'b0),
+ 172         .CINVCTRL (1'b0),
+ 172         .REGRST (1'b0),
+ 172         .C (up_clk),
+ 172         .IDATAIN (data_in_ibuf_s[l_inst]),
+ 172         .DATAOUT (data_in_idelay_s[l_inst]),
+ 172         .LD (up_dld[l_inst]),
+ 172         .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
+ 172         .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
+ 266       ISERDESE2  #(
+ 266         .DATA_RATE (DATA_RATE),
+ 266         .DATA_WIDTH (SERDES_FACTOR),
+ 266         .DYN_CLKDIV_INV_EN ("FALSE"),
+ 266         .DYN_CLK_INV_EN ("FALSE"),
+ 266         .INIT_Q1 (1'b0),
+ 266         .INIT_Q2 (1'b0),
+ 266         .INIT_Q3 (1'b0),
+ 266         .INIT_Q4 (1'b0),
+ 266         .INTERFACE_TYPE ("NETWORKING"),
+ 266         .IOBDELAY ("IFD"),
+ 266         .NUM_CE (2),
+ 266         .OFB_USED ("FALSE"),
+ 266         .SERDES_MODE ("MASTER"),
+ 266         .SRVAL_Q1 (1'b0),
+ 266         .SRVAL_Q2 (1'b0),
+ 266         .SRVAL_Q3 (1'b0),
+ 266         .SRVAL_Q4 (1'b0))
+ 266       i_iserdes (
+ 266         .O (),
+ 266         .Q1 (data_s0[l_inst]),
+ 266         .Q2 (data_s1[l_inst]),
+ 266         .Q3 (data_s2[l_inst]),
+ 266         .Q4 (data_s3[l_inst]),
+ 266         .Q5 (data_s4[l_inst]),
+ 266         .Q6 (data_s5[l_inst]),
+ 266         .Q7 (data_s6[l_inst]),
+ 266         .Q8 (data_s7[l_inst]),
+ 266         .SHIFTOUT1 (),
+ 266         .SHIFTOUT2 (),
+ 266         .BITSLIP (1'b0),
+ 266         .CE1 (1'b1),
+ 266         .CE2 (1'b1),
+ 266         .CLKDIVP (1'b0),
+ 266         .CLK (clk),
+ 266         .CLKB (~clk),
+ 266         .CLKDIV (div_clk),
+ 266         .OCLK (1'b0),
+ 266         .DYNCLKDIVSEL (1'b0),
+ 266         .DYNCLKSEL (1'b0),
+ 266         .D (1'b0),
+ 266         .DDLY (data_in_idelay_s[l_inst]),
+ 266         .OFB (1'b0),
+ 266         .OCLKB (1'b0),
+ 266         .RST (rst),
+ 266         .SHIFTIN1 (1'b0),
+ 266         .SHIFTIN2 (1'b0));
+ 266       end /* g_data */
+ 312     end else begin
+ 312     for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data
+ 312       IBUFDS i_ibuf (
+ 312         .I (data_in_p[l_inst]),
+ 312         .IB (data_in_n[l_inst]),
+ 312         .O (data_in_ibuf_s[l_inst]));
+ 312       (* IODELAY_GROUP = IODELAY_GROUP *)
+ 312       IODELAYE1 #(
+ 312         .CINVCTRL_SEL ("FALSE"),
+ 312         .DELAY_SRC ("I"),
+ 312         .HIGH_PERFORMANCE_MODE ("TRUE"),
+ 312         .IDELAY_TYPE ("VAR_LOADABLE"),
+ 312         .IDELAY_VALUE (0),
+ 312         .ODELAY_TYPE ("FIXED"),
+ 312         .ODELAY_VALUE (0),
+ 312         .REFCLK_FREQUENCY (200.0),
+ 312         .SIGNAL_PATTERN ("DATA"))
+ 312       i_idelay (
+ 312         .T (1'b1),
+ 312         .CE (1'b0),
+ 312         .INC (1'b0),
+ 312         .CLKIN (1'b0),
+ 312         .DATAIN (1'b0),
+ 312         .ODATAIN (1'b0),
+ 312         .CINVCTRL (1'b0),
+ 312         .C (up_clk),
+ 312         .IDATAIN (data_in_ibuf_s[l_inst]),
+ 312         .DATAOUT (data_in_idelay_s[l_inst]),
+ 312         .RST (up_dld[l_inst]),
+ 312         .CNTVALUEIN (up_dwdata[((5*l_inst)+4):(5*l_inst)]),
+ 312         .CNTVALUEOUT (up_drdata[((5*l_inst)+4):(5*l_inst)]));
+ 312       ISERDESE1 #(
+ 312         .DATA_RATE (DATA_RATE),
+ 312         .DATA_WIDTH (SERDES_FACTOR),
+ 312         .DYN_CLKDIV_INV_EN ("FALSE"),
+ 312         .DYN_CLK_INV_EN ("FALSE"),
+ 312         .INIT_Q1 (1'b0),
+ 312         .INIT_Q2 (1'b0),
+ 312         .INIT_Q3 (1'b0),
+ 312         .INIT_Q4 (1'b0),
+ 312         .INTERFACE_TYPE ("NETWORKING"),
+ 312         .IOBDELAY ("NONE"),
+ 312         .NUM_CE (1),
+ 312         .OFB_USED ("FALSE"),
+ 312         .SERDES_MODE ("MASTER"),
+ 312         .SRVAL_Q1 (1'b0),
+ 312         .SRVAL_Q2 (1'b0),
+ 312         .SRVAL_Q3 (1'b0),
+ 312         .SRVAL_Q4 (1'b0))
+ 312       i_iserdes_m (
+ 312         .O (),
+ 312         .Q1 (data_s0[l_inst]),
+ 312         .Q2 (data_s1[l_inst]),
+ 312         .Q3 (data_s2[l_inst]),
+ 312         .Q4 (data_s3[l_inst]),
+ 312         .Q5 (data_s4[l_inst]),
+ 312         .Q6 (data_s5[l_inst]),
+ 312         .SHIFTOUT1 (data_shift1_s[l_inst]),
+ 312         .SHIFTOUT2 (data_shift2_s[l_inst]),
+ 312         .BITSLIP (1'b0),
+ 312         .CE1 (1'b1),
+ 312         .CE2 (1'b1),
+ 312         .CLK (clk),
+ 312         .CLKB (~clk),
+ 312         .CLKDIV (div_clk),
+ 312         .OCLK (1'b0),
+ 312         .DYNCLKDIVSEL (1'b0),
+ 312         .DYNCLKSEL (1'b0),
+ 312         .D (1'b0),
+ 312         .DDLY (data_in_idelay_s[l_inst]),
+ 312         .OFB (1'b0),
+ 312         .RST (rst),
+ 312         .SHIFTIN1 (1'b0),
+ 312         .SHIFTIN2 (1'b0));
+ 312       ISERDESE1 #(
+ 312         .DATA_RATE (DATA_RATE),
+ 312         .DATA_WIDTH (SERDES_FACTOR),
+ 312         .DYN_CLKDIV_INV_EN ("FALSE"),
+ 312         .DYN_CLK_INV_EN ("FALSE"),
+ 312         .INIT_Q1 (1'b0),
+ 312         .INIT_Q2 (1'b0),
+ 312         .INIT_Q3 (1'b0),
+ 312         .INIT_Q4 (1'b0),
+ 312         .INTERFACE_TYPE ("NETWORKING"),
+ 312         .IOBDELAY ("NONE"),
+ 312         .NUM_CE (1),
+ 312         .OFB_USED ("FALSE"),
+ 312         .SERDES_MODE ("SLAVE"),
+ 312         .SRVAL_Q1 (1'b0),
+ 312         .SRVAL_Q2 (1'b0),
+ 312         .SRVAL_Q3 (1'b0),
+ 312         .SRVAL_Q4 (1'b0))
+ 312       i_iserdes_s (
+ 312         .O (),
+ 312         .Q1 (),
+ 312         .Q2 (),
+ 312         .Q3 (data_s6[l_inst]),
+ 312         .Q4 (data_s7[l_inst]),
+ 312         .Q5 (),
+ 312         .Q6 (),
+ 312         .SHIFTOUT1 (),
+ 312         .SHIFTOUT2 (),
+ 312         .BITSLIP (1'b0),
+ 312         .CE1 (1'b1),
+ 312         .CE2 (1'b1),
+ 312         .CLK (clk),
+ 312         .CLKB (~clk),
+ 312         .CLKDIV (div_clk),
+ 312         .OCLK (1'b0),
+ 312         .DYNCLKDIVSEL (1'b0),
+ 312         .DYNCLKSEL (1'b0),
+ 312         .D (1'b0),
+ 312         .DDLY (data_in_idelay_s[l_inst]),
+ 312         .OFB (1'b0),
+ 312         .RST (rst),
+ 312         .SHIFTIN1 (data_shift1_s[l_inst]),
+ 312         .SHIFTIN2 (data_shift2_s[l_inst]));
+ 312       end /* g_data */
+ 312     end

Clone Blocks:
