{"Source Block": ["hdl/library/common/util_pulse_gen.v@70:80@HdlStmAssign", "    end else begin\n      pulse_period_cnt <= (pulse_period_cnt == pulse_period_d) ? 32'b0 : (pulse_period_cnt + 1);\n    end\n  end\n\n  assign  end_of_period_s = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n  always @(posedge clk) begin\n    if (rstn == 1'b0) begin\n"], "Clone Blocks": [["hdl/library/common/util_pulse_gen.v@52:62", "\n  reg     [(PULSE_WIDTH-1):0]  pulse_width_cnt = {PULSE_WIDTH{1'b1}};\n  reg     [31:0]               pulse_period_cnt = 32'h0;\n  reg     [31:0]               pulse_period_d = 32'b0;\n\n  wire                         end_of_period_s;\n\n  // flop the desired period\n\n  always @(posedge clk) begin\n    pulse_period_d <= (pulse_period_en) ? pulse_period : PULSE_PERIOD;\n"], ["hdl/library/common/util_pulse_gen.v@62:78", "    pulse_period_d <= (pulse_period_en) ? pulse_period : PULSE_PERIOD;\n  end\n\n  // a free running pulse generator\n\n  always @(posedge clk) begin\n    if (rstn == 1'b0) begin\n      pulse_period_cnt <= 32'h0;\n    end else begin\n      pulse_period_cnt <= (pulse_period_cnt == pulse_period_d) ? 32'b0 : (pulse_period_cnt + 1);\n    end\n  end\n\n  assign  end_of_period_s = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;\n\n  // generate pulse with a specified width\n\n"]], "Diff Content": {"Delete": [[75, "  assign  end_of_period_s = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;\n"]], "Add": []}}