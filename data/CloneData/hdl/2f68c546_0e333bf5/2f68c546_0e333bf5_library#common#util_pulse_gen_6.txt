Source Block: hdl/library/common/util_pulse_gen.v@74:93@HdlStmProcess

  assign  end_of_period_s = (pulse_period_cnt == pulse_period_d) ? 1'b1 : 1'b0;

  // generate pulse with a specified width

  always @(posedge clk) begin
    if (rstn == 1'b0) begin
      pulse_width_cnt <= 0;
      pulse <= 0;
    end else begin
      pulse_width_cnt <= (pulse == 1'b1) ? pulse_width_cnt + 1 : {PULSE_WIDTH{1'h0}};
      if(end_of_period_s == 1'b1) begin
        pulse <= 1'b1;
      end else if(pulse_width_cnt == {PULSE_WIDTH{1'b1}}) begin
        pulse <= 1'b0;
      end
    end
  end

endmodule

Diff Content:
- 79   always @(posedge clk) begin
- 81       pulse_width_cnt <= 0;
- 82       pulse <= 0;
- 84       pulse_width_cnt <= (pulse == 1'b1) ? pulse_width_cnt + 1 : {PULSE_WIDTH{1'h0}};
- 85       if(end_of_period_s == 1'b1) begin
- 86         pulse <= 1'b1;
- 87       end else if(pulse_width_cnt == {PULSE_WIDTH{1'b1}}) begin
- 88         pulse <= 1'b0;
- 89       end
+ 79   always @ (posedge clk) begin
+ 82       pulse <= 1'b0;
+ 82     end else if (end_of_period_s) begin
+ 82       pulse <= 1'b0;
+ 82     end else if (pulse_period_cnt == pulse_width_d) begin
+ 82       pulse <= 1'b1;
+ 89       pulse <= pulse;

Clone Blocks:
