Source Block: hdl/library/jesd204/jesd204_rx/jesd204_rx_lane.v@160:186@HdlStmProcess
    end
  end
end
endgenerate

  always @(posedge clk) begin
    if (ctrl_err_statistics_mask[0] == 1'b0 && cgs_ready == 1'b1) begin
      phy_disperr_cnt <= phy_disperr_s[0] + phy_disperr_s[1] + phy_disperr_s[2] + phy_disperr_s[3] + phy_disperr_s[4] + phy_disperr_s[5] + phy_disperr_s[6] + phy_disperr_s[7];
    end else begin
      phy_disperr_cnt <= 4'h0;
    end
    if (ctrl_err_statistics_mask[1] == 1'b0 && cgs_ready == 1'b1) begin
      phy_notintable_cnt <= phy_notintable_s[0] +  phy_notintable_s[0] +  phy_notintable_s[1] +  phy_notintable_s[2] +  phy_notintable_s[3] +  phy_notintable_s[4] +  phy_notintable_s[5] +  phy_notintable_s[6] +  phy_notintable_s[7];
    end else begin
      phy_notintable_cnt <= 4'h0;
    end
    if (ctrl_err_statistics_mask[2] == 1'b0 && cgs_ready == 1'b1) begin
      phy_unexpectedk_cnt <= unexpected_char_s[0] +  unexpected_char_s[1] + unexpected_char_s[2] + unexpected_char_s[3] + unexpected_char_s[4] + unexpected_char_s[5] + unexpected_char_s[6] + unexpected_char_s[7];
    end else begin
      phy_unexpectedk_cnt <= 4'h0;
    end
  end

always @(posedge clk) begin
  if (reset == 1'b1 || ctrl_err_statistics_reset == 1'b1) begin
    status_err_statistics_cnt <= 32'h0;
  end else if (status_err_statistics_cnt[31:5] != 27'h7ffffff) begin

Diff Content:
- 165   always @(posedge clk) begin
- 166     if (ctrl_err_statistics_mask[0] == 1'b0 && cgs_ready == 1'b1) begin
- 167       phy_disperr_cnt <= phy_disperr_s[0] + phy_disperr_s[1] + phy_disperr_s[2] + phy_disperr_s[3] + phy_disperr_s[4] + phy_disperr_s[5] + phy_disperr_s[6] + phy_disperr_s[7];
- 168     end else begin
- 169       phy_disperr_cnt <= 4'h0;
- 170     end
- 171     if (ctrl_err_statistics_mask[1] == 1'b0 && cgs_ready == 1'b1) begin
- 172       phy_notintable_cnt <= phy_notintable_s[0] +  phy_notintable_s[0] +  phy_notintable_s[1] +  phy_notintable_s[2] +  phy_notintable_s[3] +  phy_notintable_s[4] +  phy_notintable_s[5] +  phy_notintable_s[6] +  phy_notintable_s[7];
- 173     end else begin
- 174       phy_notintable_cnt <= 4'h0;
- 175     end
- 176     if (ctrl_err_statistics_mask[2] == 1'b0 && cgs_ready == 1'b1) begin
- 177       phy_unexpectedk_cnt <= unexpected_char_s[0] +  unexpected_char_s[1] + unexpected_char_s[2] + unexpected_char_s[3] + unexpected_char_s[4] + unexpected_char_s[5] + unexpected_char_s[6] + unexpected_char_s[7];
- 178     end else begin
- 179       phy_unexpectedk_cnt <= 4'h0;
- 180     end
+ 180 always @(posedge clk) begin
+ 180   if (cgs_ready == 1'b1) begin
+ 180     /*
+ 180      * Set the bit in phy_char_err if at least one of the monitored error
+ 180      * conditions has occured.
+ 180      */
+ 180     phy_char_err <= (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[0]}} & phy_disperr) |
+ 180                     (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[1]}} & phy_notintable) |
+ 180                     (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[2]}} & unexpected_char);
+ 180   end else begin
+ 180     phy_char_err <= {DATA_PATH_WIDTH{1'b0}};
+ 181 end
+ 181 function [7:0] num_set_bits;
+ 181 input [DATA_PATH_WIDTH-1:0] x;
+ 181 integer j;
+ 181 begin
+ 181   num_set_bits = 0;
+ 181   for (j = 0; j < DATA_PATH_WIDTH; j = j + 1) begin
+ 181     num_set_bits = num_set_bits + x[j];
+ 181   end
+ 181 end
+ 181 endfunction

Clone Blocks:
