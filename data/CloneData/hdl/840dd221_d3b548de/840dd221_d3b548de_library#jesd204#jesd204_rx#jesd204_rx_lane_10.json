{"Source Block": ["hdl/library/jesd204/jesd204_rx/jesd204_rx_lane.v@160:186@HdlStmProcess", "    end\n  end\nend\nendgenerate\n\n  always @(posedge clk) begin\n    if (ctrl_err_statistics_mask[0] == 1'b0 && cgs_ready == 1'b1) begin\n      phy_disperr_cnt <= phy_disperr_s[0] + phy_disperr_s[1] + phy_disperr_s[2] + phy_disperr_s[3] + phy_disperr_s[4] + phy_disperr_s[5] + phy_disperr_s[6] + phy_disperr_s[7];\n    end else begin\n      phy_disperr_cnt <= 4'h0;\n    end\n    if (ctrl_err_statistics_mask[1] == 1'b0 && cgs_ready == 1'b1) begin\n      phy_notintable_cnt <= phy_notintable_s[0] +  phy_notintable_s[0] +  phy_notintable_s[1] +  phy_notintable_s[2] +  phy_notintable_s[3] +  phy_notintable_s[4] +  phy_notintable_s[5] +  phy_notintable_s[6] +  phy_notintable_s[7];\n    end else begin\n      phy_notintable_cnt <= 4'h0;\n    end\n    if (ctrl_err_statistics_mask[2] == 1'b0 && cgs_ready == 1'b1) begin\n      phy_unexpectedk_cnt <= unexpected_char_s[0] +  unexpected_char_s[1] + unexpected_char_s[2] + unexpected_char_s[3] + unexpected_char_s[4] + unexpected_char_s[5] + unexpected_char_s[6] + unexpected_char_s[7];\n    end else begin\n      phy_unexpectedk_cnt <= 4'h0;\n    end\n  end\n\nalways @(posedge clk) begin\n  if (reset == 1'b1 || ctrl_err_statistics_reset == 1'b1) begin\n    status_err_statistics_cnt <= 32'h0;\n  end else if (status_err_statistics_cnt[31:5] != 27'h7ffffff) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[165, "  always @(posedge clk) begin\n"], [166, "    if (ctrl_err_statistics_mask[0] == 1'b0 && cgs_ready == 1'b1) begin\n"], [167, "      phy_disperr_cnt <= phy_disperr_s[0] + phy_disperr_s[1] + phy_disperr_s[2] + phy_disperr_s[3] + phy_disperr_s[4] + phy_disperr_s[5] + phy_disperr_s[6] + phy_disperr_s[7];\n"], [168, "    end else begin\n"], [169, "      phy_disperr_cnt <= 4'h0;\n"], [170, "    end\n"], [171, "    if (ctrl_err_statistics_mask[1] == 1'b0 && cgs_ready == 1'b1) begin\n"], [172, "      phy_notintable_cnt <= phy_notintable_s[0] +  phy_notintable_s[0] +  phy_notintable_s[1] +  phy_notintable_s[2] +  phy_notintable_s[3] +  phy_notintable_s[4] +  phy_notintable_s[5] +  phy_notintable_s[6] +  phy_notintable_s[7];\n"], [173, "    end else begin\n"], [174, "      phy_notintable_cnt <= 4'h0;\n"], [175, "    end\n"], [176, "    if (ctrl_err_statistics_mask[2] == 1'b0 && cgs_ready == 1'b1) begin\n"], [177, "      phy_unexpectedk_cnt <= unexpected_char_s[0] +  unexpected_char_s[1] + unexpected_char_s[2] + unexpected_char_s[3] + unexpected_char_s[4] + unexpected_char_s[5] + unexpected_char_s[6] + unexpected_char_s[7];\n"], [178, "    end else begin\n"], [179, "      phy_unexpectedk_cnt <= 4'h0;\n"], [180, "    end\n"]], "Add": [[180, "always @(posedge clk) begin\n"], [180, "  if (cgs_ready == 1'b1) begin\n"], [180, "    /*\n"], [180, "     * Set the bit in phy_char_err if at least one of the monitored error\n"], [180, "     * conditions has occured.\n"], [180, "     */\n"], [180, "    phy_char_err <= (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[0]}} & phy_disperr) |\n"], [180, "                    (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[1]}} & phy_notintable) |\n"], [180, "                    (~{DATA_PATH_WIDTH{ctrl_err_statistics_mask[2]}} & unexpected_char);\n"], [180, "  end else begin\n"], [180, "    phy_char_err <= {DATA_PATH_WIDTH{1'b0}};\n"], [181, "end\n"], [181, "function [7:0] num_set_bits;\n"], [181, "input [DATA_PATH_WIDTH-1:0] x;\n"], [181, "integer j;\n"], [181, "begin\n"], [181, "  num_set_bits = 0;\n"], [181, "  for (j = 0; j < DATA_PATH_WIDTH; j = j + 1) begin\n"], [181, "    num_set_bits = num_set_bits + x[j];\n"], [181, "  end\n"], [181, "end\n"], [181, "endfunction\n"]]}}