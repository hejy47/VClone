{"Source Block": ["hdl/library/common/ad_serdes_in.v@275:398@HdlStmIf", "        .SHIFTIN2(1'b0)\n      );\n    end\n  end\n\n    if(DEVICE_TYPE == DEVICE_6SERIES) begin\n      (* IODELAY_GROUP = IODELAY_GROUP *)\n      IODELAYE1 #(\n        .CINVCTRL_SEL (\"FALSE\"),\n        .DELAY_SRC (\"I\"),\n        .HIGH_PERFORMANCE_MODE (\"TRUE\"),\n        .IDELAY_TYPE (\"VAR_LOADABLE\"),\n        .IDELAY_VALUE (0),\n        .ODELAY_TYPE (\"FIXED\"),\n        .ODELAY_VALUE (0),\n        .REFCLK_FREQUENCY (200.0),\n        .SIGNAL_PATTERN (\"DATA\"))\n      i_rx_data_idelay (\n        .T (1'b1),\n        .CE (1'b0),\n        .INC (1'b0),\n        .CLKIN (1'b0),\n        .DATAIN (1'b0),\n        .ODATAIN (1'b0),\n        .CINVCTRL (1'b0),\n        .C (up_clk),\n        .IDATAIN (data_in_ibuf_s),\n        .DATAOUT (data_in_idelay_s),\n        .RST (up_dld),\n        .CNTVALUEIN (up_dwdata),\n        .CNTVALUEOUT (up_drdata));\n\n      ISERDESE1 #(\n        .DATA_RATE(\"DDR\"),\n        .DATA_WIDTH(PARALLEL_WIDTH),\n        .DYN_CLKDIV_INV_EN(\"FALSE\"),\n        .DYN_CLK_INV_EN(\"FALSE\"),\n        .INIT_Q1(1'b0),\n        .INIT_Q2(1'b0),\n        .INIT_Q3(1'b0),\n        .INIT_Q4(1'b0),\n        .INTERFACE_TYPE(\"NETWORKING\"),\n        .IOBDELAY(\"NONE\"),\n        .NUM_CE(1),\n        .OFB_USED(\"FALSE\"),\n        .SERDES_MODE(\"MASTER\"),\n        .SRVAL_Q1(1'b0),\n        .SRVAL_Q2(1'b0),\n        .SRVAL_Q3(1'b0),\n        .SRVAL_Q4(1'b0))\n      i_serdes_m (\n        .O(),\n        .Q1(data_s0),\n        .Q2(data_s1),\n        .Q3(data_s2),\n        .Q4(data_s3),\n        .Q5(data_s4),\n        .Q6(data_s5),\n        .SHIFTOUT1(data_shift1_s),\n        .SHIFTOUT2(data_shift2_s),\n        .BITSLIP(1'b0),\n        .CE1(1'b1),\n        .CE2(1'b1),\n        .CLK(clk),\n        .CLKB(1'b0),\n        .CLKDIV(div_clk),\n        .OCLK(1'b0),\n        .DYNCLKDIVSEL(1'b0),\n        .DYNCLKSEL(1'b0),\n        .D(data_in_idelay_s),\n        .DDLY(1'b0),\n        .OFB(1'b0),\n        .RST(rst),\n        .SHIFTIN1(1'b0),\n        .SHIFTIN2(1'b0)\n      );\n\n      ISERDESE1 #(\n        .DATA_RATE(\"DDR\"),\n        .DATA_WIDTH(PARALLEL_WIDTH),\n        .DYN_CLKDIV_INV_EN(\"FALSE\"),\n        .DYN_CLK_INV_EN(\"FALSE\"),\n        .INIT_Q1(1'b0),\n        .INIT_Q2(1'b0),\n        .INIT_Q3(1'b0),\n        .INIT_Q4(1'b0),\n        .INTERFACE_TYPE(\"NETWORKING\"),\n        .IOBDELAY(\"NONE\"),\n        .NUM_CE(1),\n        .OFB_USED(\"FALSE\"),\n        .SERDES_MODE(\"SLAVE\"),\n        .SRVAL_Q1(1'b0),\n        .SRVAL_Q2(1'b0),\n        .SRVAL_Q3(1'b0),\n        .SRVAL_Q4(1'b0))\n      i_serdes_s (\n        .O(),\n        .Q1(),\n        .Q2(),\n        .Q3(data_s6),\n        .Q4(data_s7),\n        .Q5(),\n        .Q6(),\n        .SHIFTOUT1(),\n        .SHIFTOUT2(),\n        .BITSLIP(1'b0),\n        .CE1(1'b1),\n        .CE2(1'b1),\n        .CLK(clk),\n        .CLKB(1'b0),\n        .CLKDIV(div_clk),\n        .OCLK(1'b0),\n        .DYNCLKDIVSEL(1'b0),\n        .DYNCLKSEL(1'b0),\n        .D(1'b0),\n        .DDLY(1'b0),\n        .OFB(1'b0),\n        .RST(rst),\n        .SHIFTIN1(data_shift1_s),\n        .SHIFTIN2(data_shift2_s));\n      end\n\nendmodule\n\n"], "Clone Blocks": [["hdl/library/common/ad_serdes_in.v@146:283", "    .O(data_in_ibuf_s),\n    .I(data_in_p),\n    .IB(data_in_n)\n  );\n\n  if(DEVICE_TYPE == DEVICE_7SERIES) begin\n    (* IODELAY_GROUP = IODELAY_GROUP *)\n\n    IDELAYE2 #(\n      .CINVCTRL_SEL (\"FALSE\"),\n      .DELAY_SRC (\"IDATAIN\"),\n      .HIGH_PERFORMANCE_MODE (\"FALSE\"),\n      .IDELAY_TYPE (\"VAR_LOAD\"),\n      .IDELAY_VALUE (0),\n      .REFCLK_FREQUENCY (200.0),\n      .PIPE_SEL (\"FALSE\"),\n      .SIGNAL_PATTERN (\"DATA\"))\n    i_rx_data_idelay (\n      .CE (1'b0),\n      .INC (1'b0),\n      .DATAIN (1'b0),\n      .LDPIPEEN (1'b0),\n      .CINVCTRL (1'b0),\n      .REGRST (1'b0),\n      .C (up_clk),\n      .IDATAIN (data_in_ibuf_s),\n      .DATAOUT (data_in_idelay_s),\n      .LD (up_dld),\n      .CNTVALUEIN (up_dwdata),\n      .CNTVALUEOUT (up_drdata));\n\n    // Note: The first sample in time will be data_s7, the last data_s0!\n    if(IF_TYPE == SDR) begin\n      ISERDESE2 #(\n        .DATA_RATE(\"SDR\"),\n        .DATA_WIDTH(PARALLEL_WIDTH),\n        .DYN_CLKDIV_INV_EN(\"FALSE\"),\n        .DYN_CLK_INV_EN(\"FALSE\"),\n        .INIT_Q1(1'b0),\n        .INIT_Q2(1'b0),\n        .INIT_Q3(1'b0),\n        .INIT_Q4(1'b0),\n        .INTERFACE_TYPE(\"NETWORKING\"),\n        .IOBDELAY(\"IFD\"),\n        .NUM_CE(2),\n        .OFB_USED(\"FALSE\"),\n        .SERDES_MODE(\"MASTER\"),\n        .SRVAL_Q1(1'b0),\n        .SRVAL_Q2(1'b0),\n        .SRVAL_Q3(1'b0),\n        .SRVAL_Q4(1'b0))\n      ISERDESE2_inst (\n        .O(),\n        .Q1(data_s0),\n        .Q2(data_s1),\n        .Q3(data_s2),\n        .Q4(data_s3),\n        .Q5(data_s4),\n        .Q6(data_s5),\n        .Q7(data_s6),\n        .Q8(data_s7),\n        .SHIFTOUT1(),\n        .SHIFTOUT2(),\n        .BITSLIP(1'b0),\n        .CE1(1'b1),\n        .CE2(1'b1),\n        .CLKDIVP(1'b0),\n        .CLK(clk),\n        .CLKB(~clk),\n        .CLKDIV(div_clk),\n        .OCLK(1'b0),\n        .DYNCLKDIVSEL(1'b0),\n        .DYNCLKSEL(1'b0),\n        .D(1'b0),\n        .DDLY(data_in_idelay_s),\n        .OFB(1'b0),\n        .OCLKB(1'b0),\n        .RST(rst),\n        .SHIFTIN1(1'b0),\n        .SHIFTIN2(1'b0)\n      );\n    end else begin\n\n      ISERDESE2 #(\n        .DATA_RATE(\"DDR\"),\n        .DATA_WIDTH(PARALLEL_WIDTH),\n        .DYN_CLKDIV_INV_EN(\"FALSE\"),\n        .DYN_CLK_INV_EN(\"FALSE\"),\n        .INIT_Q1(1'b0),\n        .INIT_Q2(1'b0),\n        .INIT_Q3(1'b0),\n        .INIT_Q4(1'b0),\n        .INTERFACE_TYPE(\"NETWORKING\"),\n        .IOBDELAY(\"IFD\"),\n        .NUM_CE(2),\n        .OFB_USED(\"FALSE\"),\n        .SERDES_MODE(\"MASTER\"),\n        .SRVAL_Q1(1'b0),\n        .SRVAL_Q2(1'b0),\n        .SRVAL_Q3(1'b0),\n        .SRVAL_Q4(1'b0))\n      ISERDESE2_inst (\n        .O(),\n        .Q1(data_s0),\n        .Q2(data_s1),\n        .Q3(data_s2),\n        .Q4(data_s3),\n        .Q5(data_s4),\n        .Q6(data_s5),\n        .Q7(data_s6),\n        .Q8(data_s7),\n        .SHIFTOUT1(),\n        .SHIFTOUT2(),\n        .BITSLIP(1'b0),\n        .CE1(1'b1),\n        .CE2(1'b1),\n        .CLKDIVP(1'b0),\n        .CLK(clk),\n        .CLKB(~clk),\n        .CLKDIV(div_clk),\n        .OCLK(1'b0),\n        .DYNCLKDIVSEL(1'b0),\n        .DYNCLKSEL(1'b0),\n        .D(1'b0),\n        .DDLY(data_in_idelay_s),\n        .OFB(1'b0),\n        .OCLKB(1'b0),\n        .RST(rst),\n        .SHIFTIN1(1'b0),\n        .SHIFTIN2(1'b0)\n      );\n    end\n  end\n\n    if(DEVICE_TYPE == DEVICE_6SERIES) begin\n      (* IODELAY_GROUP = IODELAY_GROUP *)\n      IODELAYE1 #(\n        .CINVCTRL_SEL (\"FALSE\"),\n"]], "Diff Content": {"Delete": [[309, "        .DATA_WIDTH(PARALLEL_WIDTH),\n"], [354, "        .DATA_WIDTH(PARALLEL_WIDTH),\n"]], "Add": [[309, "        .DATA_WIDTH(DATA_WIDTH),\n"], [354, "        .DATA_WIDTH(DATA_WIDTH),\n"]]}}