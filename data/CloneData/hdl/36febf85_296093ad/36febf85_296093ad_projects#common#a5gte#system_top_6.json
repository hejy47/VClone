{"Source Block": ["hdl/projects/common/a5gte/system_top.v@97:107@HdlStmAssign", "  assign eth_rx_cntrl = phy_rx_cntrl;\n  assign eth_rx_data = phy_rx_data;\n\n  assign phy_tx_clk_out = eth_tx_clk_out;\n  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n  assign eth_mdio_i = phy_mdio;\n\n"], "Clone Blocks": [["hdl/projects/common/a5gte/system_top.v@99:109", "\n  assign phy_tx_clk_out = eth_tx_clk_out;\n  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n  assign eth_mdio_i = phy_mdio;\n\n  assign phy_resetn = eth_phy_resetn;\n\n"], ["hdl/projects/common/a5gte/system_top.v@100:110", "  assign phy_tx_clk_out = eth_tx_clk_out;\n  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n  assign eth_mdio_i = phy_mdio;\n\n  assign phy_resetn = eth_phy_resetn;\n\nendmodule\n"], ["hdl/projects/common/a5gte/system_top.v@95:105", "\n  assign eth_rx_clk = phy_rx_clk;\n  assign eth_rx_cntrl = phy_rx_cntrl;\n  assign eth_rx_data = phy_rx_data;\n\n  assign phy_tx_clk_out = eth_tx_clk_out;\n  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n"], ["hdl/projects/common/a5gte/system_top.v@96:106", "  assign eth_rx_clk = phy_rx_clk;\n  assign eth_rx_cntrl = phy_rx_cntrl;\n  assign eth_rx_data = phy_rx_data;\n\n  assign phy_tx_clk_out = eth_tx_clk_out;\n  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n  assign eth_mdio_i = phy_mdio;\n"], ["hdl/projects/common/a5gte/system_top.v@101:111", "  assign phy_tx_cntrl = eth_tx_cntrl;\n  assign phy_tx_data = eth_tx_data;\n\n  assign phy_mdc = eth_mdc;\n  assign phy_mdio = (eth_mdio_t == 1'b0) ? eth_mdio_o : 1'bz;\n  assign eth_mdio_i = phy_mdio;\n\n  assign phy_resetn = eth_phy_resetn;\n\nendmodule\n\n"]], "Diff Content": {"Delete": [[102, "  assign phy_tx_data = eth_tx_data;\n"]], "Add": [[102, "  altera_pll #(\n"], [102, "    .fractional_vco_multiplier(\"false\"),\n"], [102, "    .reference_clock_frequency(\"125.0 MHz\"),\n"], [102, "    .operation_mode(\"normal\"),\n"], [102, "    .number_of_clocks(1),\n"], [102, "    .output_clock_frequency0(\"125.000000 MHz\"),\n"], [102, "    .phase_shift0(\"2000 ps\"),\n"], [102, "    .duty_cycle0(50),\n"], [102, "    .output_clock_frequency1(\"0 MHz\"),\n"], [102, "    .phase_shift1(\"0 ps\"),\n"], [102, "    .duty_cycle1(50),\n"], [102, "    .output_clock_frequency2(\"0 MHz\"),\n"], [102, "    .phase_shift2(\"0 ps\"),\n"], [102, "    .duty_cycle2(50),\n"], [102, "    .output_clock_frequency3(\"0 MHz\"),\n"], [102, "    .phase_shift3(\"0 ps\"),\n"], [102, "    .duty_cycle3(50),\n"], [102, "    .output_clock_frequency4(\"0 MHz\"),\n"], [102, "    .phase_shift4(\"0 ps\"),\n"], [102, "    .duty_cycle4(50),\n"], [102, "    .output_clock_frequency5(\"0 MHz\"),\n"], [102, "    .phase_shift5(\"0 ps\"),\n"], [102, "    .duty_cycle5(50),\n"], [102, "    .output_clock_frequency6(\"0 MHz\"),\n"], [102, "    .phase_shift6(\"0 ps\"),\n"], [102, "    .duty_cycle6(50),\n"], [102, "    .output_clock_frequency7(\"0 MHz\"),\n"], [102, "    .phase_shift7(\"0 ps\"),\n"], [102, "    .duty_cycle7(50),\n"], [102, "    .output_clock_frequency8(\"0 MHz\"),\n"], [102, "    .phase_shift8(\"0 ps\"),\n"], [102, "    .duty_cycle8(50),\n"], [102, "    .output_clock_frequency9(\"0 MHz\"),\n"], [102, "    .phase_shift9(\"0 ps\"),\n"], [102, "    .duty_cycle9(50),\n"], [102, "    .output_clock_frequency10(\"0 MHz\"),\n"], [102, "    .phase_shift10(\"0 ps\"),\n"], [102, "    .duty_cycle10(50),\n"], [102, "    .output_clock_frequency11(\"0 MHz\"),\n"], [102, "    .phase_shift11(\"0 ps\"),\n"], [102, "    .duty_cycle11(50),\n"], [102, "    .output_clock_frequency12(\"0 MHz\"),\n"], [102, "    .phase_shift12(\"0 ps\"),\n"], [102, "    .duty_cycle12(50),\n"], [102, "    .output_clock_frequency13(\"0 MHz\"),\n"], [102, "    .phase_shift13(\"0 ps\"),\n"], [102, "    .duty_cycle13(50),\n"], [102, "    .output_clock_frequency14(\"0 MHz\"),\n"], [102, "    .phase_shift14(\"0 ps\"),\n"], [102, "    .duty_cycle14(50),\n"], [102, "    .output_clock_frequency15(\"0 MHz\"),\n"], [102, "    .phase_shift15(\"0 ps\"),\n"], [102, "    .duty_cycle15(50),\n"], [102, "    .output_clock_frequency16(\"0 MHz\"),\n"], [102, "    .phase_shift16(\"0 ps\"),\n"], [102, "    .duty_cycle16(50),\n"], [102, "    .output_clock_frequency17(\"0 MHz\"),\n"], [102, "    .phase_shift17(\"0 ps\"),\n"], [102, "    .duty_cycle17(50),\n"], [102, "    .pll_type(\"General\"),\n"], [102, "    .pll_subtype(\"General\")\n"], [102, "  ) eth_tx_pll_i (\n"], [102, "    .rst  (~eth_phy_resetn),\n"], [102, "    .outclk (eth_tx_clk_90),\n"], [102, "    .locked (),\n"], [102, "    .fboutclk ( ),\n"], [102, "    .fbclk  (1'b0),\n"], [102, "    .refclk (eth_tx_clk)\n"], [102, "  );\n"], [102, "  altddio_in #(\n"], [102, "    .intended_device_family(\"Arria V\"),\n"], [102, "    .invert_input_clocks(\"OFF\"),\n"], [102, "    .lpm_hint(\"UNUSED\"),\n"], [102, "    .lpm_type(\"altddio_in\"),\n"], [102, "    .power_up_high(\"OFF\"),\n"], [102, "    .width(5))\n"], [102, "    eth_tx_path_in (\n"], [102, "      .datain({eth_tx_cntrl,eth_tx_data}),\n"], [102, "      .inclock(eth_tx_clk_90),\n"], [102, "      .dataout_h(eth_tx_data_h),\n"], [102, "      .dataout_l(eth_tx_data_l));\n"], [102, "  always @(posedge eth_tx_clk_90)\n"], [102, "  begin\n"], [102, "    eth_tx_data_h_d <= eth_tx_data_h;\n"], [102, "  end\n"], [102, " altddio_out #(\n"], [102, "    .extend_oe_disable(\"OFF\"),\n"], [102, "    .intended_device_family(\"Arria V\"),\n"], [102, "    .invert_output(\"OFF\"),\n"], [102, "    .lpm_hint(\"UNUSED\"),\n"], [102, "    .lpm_type(\"altddio_out\"),\n"], [102, "    .oe_reg(\"UNREGISTERED\"),\n"], [102, "    .power_up_high(\"OFF\"),\n"], [102, "    .width(5)\n"], [102, "  ) eth_tx_path_out (\n"], [102, "    .datain_h (eth_tx_data_h_d),\n"], [102, "    .datain_l (eth_tx_data_l),\n"], [102, "    .outclock (eth_tx_clk_90),\n"], [102, "    .dataout ({phy_tx_cntrl,phy_tx_data}),\n"], [102, "    .aclr (~eth_phy_resetn),\n"], [102, "    .aset (1'b0),\n"], [102, "    .oe (1'b1),\n"], [102, "    .oe_out (),\n"], [102, "    .outclocken (1'b1),\n"], [102, "    .sclr (1'b0),\n"], [102, "    .sset (1'b0));\n"], [102, "   altddio_out #(.width(1)) i_phy_tx_clk_out (\n"], [102, "    .aset (1'b0),\n"], [102, "    .sset (1'b0),\n"], [102, "    .sclr (1'b0),\n"], [102, "    .oe (1'b1),\n"], [102, "    .oe_out (),\n"], [102, "    .datain_h (1'b1),\n"], [102, "    .datain_l (1'b0),\n"], [102, "    .outclocken (1'b1),\n"], [102, "    .aclr (1'b0),\n"], [102, "    .outclock (eth_tx_clk_90),\n"], [102, "    .dataout (phy_tx_clk_out));\n"]]}}