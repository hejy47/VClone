{"Source Block": ["hdl/library/util_axis_resize/util_axis_resize.v@51:154@HdlStmIf", "\nparameter C_M_DATA_WIDTH = 64;\nparameter C_S_DATA_WIDTH = 64;\nparameter C_BIG_ENDIAN = 0;\n\ngenerate if (C_S_DATA_WIDTH == C_M_DATA_WIDTH) begin\n\nassign m_valid = s_valid;\nassign s_ready = m_ready;\nassign m_data = s_data;\n\nend else if (C_S_DATA_WIDTH < C_M_DATA_WIDTH) begin\n\nlocalparam RATIO = C_M_DATA_WIDTH / C_S_DATA_WIDTH;\n\nreg [C_M_DATA_WIDTH-1:0] data;\nreg [$clog2(RATIO)-1:0] count;\nreg valid;\n\nalways @(posedge clk)\nbegin\n\tif (resetn == 1'b0) begin\n\t\tcount <= RATIO - 1;\n\t\tvalid <= 1'b0;\n\tend else begin\n\t\tif (count == 'h00 && s_ready == 1'b1 && s_valid == 1'b1)\n\t\t\tvalid <= 1'b1;\n\t\telse if (m_ready == 1'b1)\n\t\t\tvalid <= 1'b0;\n\n\t\tif (s_ready == 1'b1 && s_valid == 1'b1) begin\n\t\t\tif (count == 'h00)\n\t\t\t\tcount <= RATIO - 1;\n\t\t\telse\n\t\t\t\tcount <= count - 1'b1;\n\t\tend\n\tend\nend\n\nalways @(posedge clk)\nbegin\n\tif (s_ready == 1'b1 && s_valid == 1'b1)\n\t\tif (C_BIG_ENDIAN == 1) begin\n\t\t\tdata <= {data[C_M_DATA_WIDTH-C_S_DATA_WIDTH-1:0], s_data};\n\t\tend else begin\n\t\t\tdata <= {s_data, data[C_M_DATA_WIDTH-1:C_S_DATA_WIDTH]};\n\t\tend\nend\n\nassign s_ready = ~valid || m_ready;\nassign m_valid = valid;\nassign m_data = data;\n\nend else begin\n\nlocalparam RATIO = C_S_DATA_WIDTH / C_M_DATA_WIDTH;\n\nreg [C_S_DATA_WIDTH-1:0] data;\nreg [$clog2(RATIO)-1:0] count;\nreg valid;\n\nalways @(posedge clk)\nbegin\n\tif (resetn == 1'b0) begin\n\t\tcount <= RATIO - 1;\n\t\tvalid <= 1'b0;\n\tend else begin\n\t\tif (s_valid == 1'b1 && s_ready == 1'b1)\n\t\t\tvalid <= 1'b1;\n\t\telse if (count == 'h0 && m_ready == 1'b1 && m_valid == 1'b1)\n\t\t\tvalid <= 1'b0;\n\n\t\tif (m_ready == 1'b1 && m_valid == 1'b1) begin\n\t\t\tif (count == 'h00)\n\t\t\t\tcount <= RATIO - 1;\n\t\t\telse\n\t\t\t\tcount <= count - 1'b1;\n\t\tend\n\tend\nend\n\nalways @(posedge clk)\nbegin\n\tif (s_ready == 1'b1 && s_valid == 1'b1) begin\n\t\tdata <= s_data;\n\tend else if (m_ready == 1'b1 && m_valid == 1'b1) begin\n\t\tif (C_BIG_ENDIAN == 1) begin\n\t\t\tdata[C_S_DATA_WIDTH-1:C_M_DATA_WIDTH] <= data[C_S_DATA_WIDTH-C_M_DATA_WIDTH-1:0];\n\t\tend else begin\n\t\t\tdata[C_S_DATA_WIDTH-C_M_DATA_WIDTH-1:0] <= data[C_S_DATA_WIDTH-1:C_M_DATA_WIDTH];\n\t\tend\n\tend\nend\n\nassign s_ready = ~valid || (m_ready && count == 'h0);\nassign m_valid = valid;\nassign m_data = C_BIG_ENDIAN == 1 ?\n\tdata[C_S_DATA_WIDTH-1:C_S_DATA_WIDTH-C_M_DATA_WIDTH] :\n\tdata[C_M_DATA_WIDTH-1:0];\n\nend\nendgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[56, "generate if (C_S_DATA_WIDTH == C_M_DATA_WIDTH) begin\n"], [62, "end else if (C_S_DATA_WIDTH < C_M_DATA_WIDTH) begin\n"], [64, "localparam RATIO = C_M_DATA_WIDTH / C_S_DATA_WIDTH;\n"], [66, "reg [C_M_DATA_WIDTH-1:0] data;\n"], [93, "\t\tif (C_BIG_ENDIAN == 1) begin\n"], [94, "\t\t\tdata <= {data[C_M_DATA_WIDTH-C_S_DATA_WIDTH-1:0], s_data};\n"], [96, "\t\t\tdata <= {s_data, data[C_M_DATA_WIDTH-1:C_S_DATA_WIDTH]};\n"], [106, "localparam RATIO = C_S_DATA_WIDTH / C_M_DATA_WIDTH;\n"], [108, "reg [C_S_DATA_WIDTH-1:0] data;\n"], [137, "\t\tif (C_BIG_ENDIAN == 1) begin\n"], [138, "\t\t\tdata[C_S_DATA_WIDTH-1:C_M_DATA_WIDTH] <= data[C_S_DATA_WIDTH-C_M_DATA_WIDTH-1:0];\n"], [140, "\t\t\tdata[C_S_DATA_WIDTH-C_M_DATA_WIDTH-1:0] <= data[C_S_DATA_WIDTH-1:C_M_DATA_WIDTH];\n"], [147, "assign m_data = C_BIG_ENDIAN == 1 ?\n"], [148, "\tdata[C_S_DATA_WIDTH-1:C_S_DATA_WIDTH-C_M_DATA_WIDTH] :\n"], [149, "\tdata[C_M_DATA_WIDTH-1:0];\n"]], "Add": [[56, "generate if (SLAVE_DATA_WIDTH == MASTER_DATA_WIDTH) begin\n"], [62, "end else if (SLAVE_DATA_WIDTH < MASTER_DATA_WIDTH) begin\n"], [64, "localparam RATIO = MASTER_DATA_WIDTH / SLAVE_DATA_WIDTH;\n"], [66, "reg [MASTER_DATA_WIDTH-1:0] data;\n"], [94, "\t\tif (BIG_ENDIAN == 1) begin\n"], [94, "\t\t\tdata <= {data[MASTER_DATA_WIDTH-SLAVE_DATA_WIDTH-1:0], s_data};\n"], [96, "\t\t\tdata <= {s_data, data[MASTER_DATA_WIDTH-1:SLAVE_DATA_WIDTH]};\n"], [106, "localparam RATIO = SLAVE_DATA_WIDTH / MASTER_DATA_WIDTH;\n"], [108, "reg [SLAVE_DATA_WIDTH-1:0] data;\n"], [138, "\t\tif (BIG_ENDIAN == 1) begin\n"], [138, "\t\t\tdata[SLAVE_DATA_WIDTH-1:MASTER_DATA_WIDTH] <= data[SLAVE_DATA_WIDTH-MASTER_DATA_WIDTH-1:0];\n"], [140, "\t\t\tdata[SLAVE_DATA_WIDTH-MASTER_DATA_WIDTH-1:0] <= data[SLAVE_DATA_WIDTH-1:MASTER_DATA_WIDTH];\n"], [149, "assign m_data = BIG_ENDIAN == 1 ?\n"], [149, "\tdata[SLAVE_DATA_WIDTH-1:SLAVE_DATA_WIDTH-MASTER_DATA_WIDTH] :\n"], [149, "\tdata[MASTER_DATA_WIDTH-1:0];\n"]]}}