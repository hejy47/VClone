{"Source Block": ["hdl/library/util_adc_pack/util_adc_pack.v@378:535@HdlStmIf", "    end\n  end\n\n  generate\n  // 8 CHANNELS\n  if ( CHANNELS == 8 )\n  begin\n    // FIRST FOUR CHANNELS\n    always @(posedge clk)\n    begin\n      // ddata 0\n      if ((en1[0] | en2[0] | en4[0] | path_enabled[CHANNELS-1]) == 1'b1)\n      begin\n        ddata[(DATA_WIDTH-1):0]     <=  packed_data[(DATA_WIDTH-1):0];\n      end\n\n      // ddata 1\n      if( en1[1] == 1'b1)\n      begin\n        ddata[2*DATA_WIDTH-1:DATA_WIDTH]    <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if ( (en2[1] | en4[1] | path_enabled[CHANNELS-1]) == 1'b1)\n      begin\n        ddata[2*DATA_WIDTH-1:DATA_WIDTH]    <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n\n      // ddata 2\n      if ((en1[2] | en2[2]) == 1'b1)\n      begin\n        ddata[3*DATA_WIDTH-1:2*DATA_WIDTH]    <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if ((en4[2] | path_enabled[CHANNELS-1]) == 1'b1)\n      begin\n        ddata[3*DATA_WIDTH-1:2*DATA_WIDTH]    <= packed_data[3*DATA_WIDTH-1:2*DATA_WIDTH];\n      end\n\n      // ddata 3\n      if (en1[3] == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (en2[3] == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n      if ((en4[3] | path_enabled[CHANNELS-1]) == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[4*DATA_WIDTH-1:3*DATA_WIDTH];\n      end\n\n      // ddata 4\n      if ((en1[4] | en2[4] | en4[4]) == 1'b1)\n      begin\n        ddata[5*DATA_WIDTH-1:4*DATA_WIDTH] <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (path_enabled[CHANNELS-1] == 1'b1)\n      begin\n        ddata[5*DATA_WIDTH-1:4*DATA_WIDTH] <= packed_data[5*DATA_WIDTH-1:4*DATA_WIDTH];\n      end\n\n      // ddata 5\n      if (en1[5] == 1'b1)\n      begin\n        ddata[6*DATA_WIDTH-1:5*DATA_WIDTH] <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if ((en2[5] | en4[5]) == 1'b1)\n      begin\n        ddata[6*DATA_WIDTH-1:5*DATA_WIDTH] <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n      if (path_enabled[CHANNELS-1] == 1'b1)\n      begin\n        ddata[6*DATA_WIDTH-1:5*DATA_WIDTH] <= packed_data[6*DATA_WIDTH-1:5*DATA_WIDTH];\n      end\n\n      // ddata 6\n      if ((en1[6] | en2[6]) == 1'b1)\n      begin\n        ddata[7*DATA_WIDTH-1:6*DATA_WIDTH] <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (en4[6] == 1'b1)\n      begin\n        ddata[7*DATA_WIDTH-1:6*DATA_WIDTH] <= packed_data[3*DATA_WIDTH-1:2*DATA_WIDTH];\n      end\n      if (path_enabled[CHANNELS-1] == 1'b1)\n      begin\n        ddata[7*DATA_WIDTH-1:6*DATA_WIDTH] <= packed_data[7*DATA_WIDTH-1:6*DATA_WIDTH];\n      end\n\n      // ddata 7\n      if (en1[7] == 1'b1)\n      begin\n        ddata[8*DATA_WIDTH-1:7*DATA_WIDTH]  <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (en2[7] == 1'b1)\n      begin\n        ddata[8*DATA_WIDTH-1:7*DATA_WIDTH]  <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n      if (en4[7] == 1'b1)\n      begin\n        ddata[8*DATA_WIDTH-1:7*DATA_WIDTH]  <= packed_data[4*DATA_WIDTH-1:3*DATA_WIDTH];\n      end\n      if (path_enabled[CHANNELS-1] == 1'b1)\n      begin\n        ddata[8*DATA_WIDTH-1:7*DATA_WIDTH]  <= packed_data[8*DATA_WIDTH-1:7*DATA_WIDTH];\n      end\n    end\n  end\n  else\n  begin\n    always @(posedge clk)\n    begin\n      // ddata 0\n      if ((en1[0] | en2[0] | path_enabled[3] ) == 1'b1)\n      begin\n        ddata[(DATA_WIDTH-1):0]     <=  packed_data[(DATA_WIDTH-1):0];\n      end\n\n      // ddata 1\n      if( en1[1] == 1'b1)\n      begin\n        ddata[2*DATA_WIDTH-1:DATA_WIDTH]    <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if ( (en2[1] | | path_enabled[3] )== 1'b1)\n      begin\n        ddata[2*DATA_WIDTH-1:DATA_WIDTH]    <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n\n      // ddata 2\n      if ((en1[2] | en2[2]) == 1'b1)\n      begin\n        ddata[3*DATA_WIDTH-1:2*DATA_WIDTH]    <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (( path_enabled[3]) == 1'b1)\n      begin\n        ddata[3*DATA_WIDTH-1:2*DATA_WIDTH]    <= packed_data[3*DATA_WIDTH-1:2*DATA_WIDTH];\n      end\n\n      // ddata 3\n      if (en1[3] == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[(DATA_WIDTH-1):0];\n      end\n      if (en2[3] == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[2*DATA_WIDTH-1:DATA_WIDTH];\n      end\n      if (path_enabled[3] == 1'b1)\n      begin\n        ddata[4*DATA_WIDTH-1:3*DATA_WIDTH] <= packed_data[4*DATA_WIDTH-1:3*DATA_WIDTH];\n      end\n\n    end\n  end\n  endgenerate\n\n  endmodule\n\n  // ***************************************************************************\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[383, "  if ( CHANNELS == 8 )\n"], [389, "      if ((en1[0] | en2[0] | en4[0] | path_enabled[CHANNELS-1]) == 1'b1)\n"], [399, "      if ( (en2[1] | en4[1] | path_enabled[CHANNELS-1]) == 1'b1)\n"], [409, "      if ((en4[2] | path_enabled[CHANNELS-1]) == 1'b1)\n"], [423, "      if ((en4[3] | path_enabled[CHANNELS-1]) == 1'b1)\n"], [433, "      if (path_enabled[CHANNELS-1] == 1'b1)\n"], [447, "      if (path_enabled[CHANNELS-1] == 1'b1)\n"], [461, "      if (path_enabled[CHANNELS-1] == 1'b1)\n"], [479, "      if (path_enabled[CHANNELS-1] == 1'b1)\n"]], "Add": [[383, "  if ( NUM_OF_CHANNELS == 8 )\n"], [389, "      if ((en1[0] | en2[0] | en4[0] | path_enabled[NUM_OF_CHANNELS-1]) == 1'b1)\n"], [399, "      if ( (en2[1] | en4[1] | path_enabled[NUM_OF_CHANNELS-1]) == 1'b1)\n"], [409, "      if ((en4[2] | path_enabled[NUM_OF_CHANNELS-1]) == 1'b1)\n"], [423, "      if ((en4[3] | path_enabled[NUM_OF_CHANNELS-1]) == 1'b1)\n"], [433, "      if (path_enabled[NUM_OF_CHANNELS-1] == 1'b1)\n"], [447, "      if (path_enabled[NUM_OF_CHANNELS-1] == 1'b1)\n"], [461, "      if (path_enabled[NUM_OF_CHANNELS-1] == 1'b1)\n"], [479, "      if (path_enabled[NUM_OF_CHANNELS-1] == 1'b1)\n"]]}}