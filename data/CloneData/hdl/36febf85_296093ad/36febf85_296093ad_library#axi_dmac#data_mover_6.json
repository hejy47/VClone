{"Source Block": ["hdl/library/axi_dmac/data_mover.v@99:129@HdlStmProcess", "// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = s_axi_ready && s_axi_valid && last_eot && eot;\nassign req_ready = last_load || ~active;\n\nalways @(posedge clk) begin\n\tif (resetn == 1'b0) begin\n\t\tenabled <= 1'b0;\n\tend else begin\n\t\tif (enable) begin\n\t\t\tenabled <= 1'b1;\n\t\tend else begin\n\t\t\tif (C_DISABLE_WAIT_FOR_ID == 0) begin\n\t\t\t\t// We are not allowed to just deassert valid, so wait until the\n\t\t\t\t// current beat has been accepted\n\t\t\t\tif (~s_axi_valid || m_axi_ready)\n\t\t\t\t\tenabled <= 1'b0;\n\t\t\tend else begin\n\t\t\t\t// For memory mapped AXI busses we have to complete all pending\n\t\t\t\t// burst requests before we can disable the data mover.\n\t\t\t\tif (response_id == request_id)\n\t\t\t\t\tenabled <= 1'b0;\n\t\t\tend\n\t\tend\n\tend\nend\n\nalways @(posedge clk) begin\n\tif (req_ready) begin\n\t\tlast_eot <= req_last_burst_length == 'h0; \n\t\tlast_non_eot <= 1'b0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[111, "\t\t\tif (C_DISABLE_WAIT_FOR_ID == 0) begin\n"]], "Add": [[111, "\t\t\tif (DISABLE_WAIT_FOR_ID == 0) begin\n"]]}}