Source Block: hdl/library/util_ccat/util_ccat.v@80:90@HdlStmAssign
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

  assign ccat_data = data_s[((CH_CNT*CH_DW)-1):0];

endmodule


Diff Content:
- 85   assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*1)-1):(CHANNEL_DATA_WIDTH*0)] = data_0;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*2)-1):(CHANNEL_DATA_WIDTH*1)] = data_1;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*3)-1):(CHANNEL_DATA_WIDTH*2)] = data_2;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*4)-1):(CHANNEL_DATA_WIDTH*3)] = data_3;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*5)-1):(CHANNEL_DATA_WIDTH*4)] = data_4;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*6)-1):(CHANNEL_DATA_WIDTH*5)] = data_5;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*7)-1):(CHANNEL_DATA_WIDTH*6)] = data_6;
+ 85   assign data_s[((CHANNEL_DATA_WIDTH*8)-1):(CHANNEL_DATA_WIDTH*7)] = data_7;

Clone Blocks:
Clone Blocks 1:
hdl/library/util_ccat/util_ccat.v@79:89
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

  assign ccat_data = data_s[((CH_CNT*CH_DW)-1):0];

endmodule

Clone Blocks 2:
hdl/library/util_bsplit/util_bsplit.v@83:93
  assign split_data_2 = data_s[((CH_DW*3)-1):(CH_DW*2)];
  assign split_data_3 = data_s[((CH_DW*4)-1):(CH_DW*3)];
  assign split_data_4 = data_s[((CH_DW*5)-1):(CH_DW*4)];
  assign split_data_5 = data_s[((CH_DW*6)-1):(CH_DW*5)];
  assign split_data_6 = data_s[((CH_DW*7)-1):(CH_DW*6)];
  assign split_data_7 = data_s[((CH_DW*8)-1):(CH_DW*7)];

endmodule

// ***************************************************************************
// ***************************************************************************

Clone Blocks 3:
hdl/library/util_ccat/util_ccat.v@76:86
  // concatenate

  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;


Clone Blocks 4:
hdl/library/util_ccat/util_ccat.v@77:87

  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

  assign ccat_data = data_s[((CH_CNT*CH_DW)-1):0];

Clone Blocks 5:
hdl/library/util_bsplit/util_bsplit.v@82:92
  assign split_data_1 = data_s[((CH_DW*2)-1):(CH_DW*1)];
  assign split_data_2 = data_s[((CH_DW*3)-1):(CH_DW*2)];
  assign split_data_3 = data_s[((CH_DW*4)-1):(CH_DW*3)];
  assign split_data_4 = data_s[((CH_DW*5)-1):(CH_DW*4)];
  assign split_data_5 = data_s[((CH_DW*6)-1):(CH_DW*5)];
  assign split_data_6 = data_s[((CH_DW*7)-1):(CH_DW*6)];
  assign split_data_7 = data_s[((CH_DW*8)-1):(CH_DW*7)];

endmodule

// ***************************************************************************

Clone Blocks 6:
hdl/library/util_ccat/util_ccat.v@74:84
  wire    [((CH_MCNT*CH_DW)-1):0]   data_s;

  // concatenate

  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;

Clone Blocks 7:
hdl/library/util_ccat/util_ccat.v@82:92
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

  assign ccat_data = data_s[((CH_CNT*CH_DW)-1):0];

endmodule

// ***************************************************************************
// ***************************************************************************

Clone Blocks 8:
hdl/library/util_ccat/util_ccat.v@75:85

  // concatenate

  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

Clone Blocks 9:
hdl/library/util_ccat/util_ccat.v@78:88
  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;
  assign data_s[((CH_DW*7)-1):(CH_DW*6)] = data_6;
  assign data_s[((CH_DW*8)-1):(CH_DW*7)] = data_7;

  assign ccat_data = data_s[((CH_CNT*CH_DW)-1):0];


Clone Blocks 10:
hdl/library/util_ccat/util_ccat.v@73:83

  wire    [((CH_MCNT*CH_DW)-1):0]   data_s;

  // concatenate

  assign data_s[((CH_DW*1)-1):(CH_DW*0)] = data_0;
  assign data_s[((CH_DW*2)-1):(CH_DW*1)] = data_1;
  assign data_s[((CH_DW*3)-1):(CH_DW*2)] = data_2;
  assign data_s[((CH_DW*4)-1):(CH_DW*3)] = data_3;
  assign data_s[((CH_DW*5)-1):(CH_DW*4)] = data_4;
  assign data_s[((CH_DW*6)-1):(CH_DW*5)] = data_5;

