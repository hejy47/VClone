{"Source Block": ["hdl/library/util_cpack/util_cpack.v@184:203@HdlStmFor", "  end\n\n  // mw requires unused to be zero\n\n  generate\n  for (n = 0; n < CH_MCNT; n = n + 1) begin: g_in\n  always @(posedge adc_clk) begin\n    if ((adc_rst == 1'b1) && (adc_enable_s[n] == 1'b0)) begin\n      adc_data_d[((CH_DW*(n+1))-1):(CH_DW*n)] <= 'd0;\n    end else if (adc_valid_s[n] == 1'b1) begin\n      adc_data_d[((CH_DW*(n+1))-1):(CH_DW*n)] <=\n        adc_data_s[((CH_DW*(n+1))-1):(CH_DW*n)];\n    end\n  end\n  end\n  endgenerate\n\n  // interleave data\n\n  generate\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[189, "  for (n = 0; n < CH_MCNT; n = n + 1) begin: g_in\n"], [192, "      adc_data_d[((CH_DW*(n+1))-1):(CH_DW*n)] <= 'd0;\n"], [194, "      adc_data_d[((CH_DW*(n+1))-1):(CH_DW*n)] <=\n"], [195, "        adc_data_s[((CH_DW*(n+1))-1):(CH_DW*n)];\n"]], "Add": [[189, "  for (n = 0; n < NUM_OF_CHANNELS_M; n = n + 1) begin: g_in\n"], [192, "      adc_data_d[((CHANNEL_DATA_WIDTH*(n+1))-1):(CHANNEL_DATA_WIDTH*n)] <= 'd0;\n"], [195, "      adc_data_d[((CHANNEL_DATA_WIDTH*(n+1))-1):(CHANNEL_DATA_WIDTH*n)] <=\n"], [195, "        adc_data_s[((CHANNEL_DATA_WIDTH*(n+1))-1):(CHANNEL_DATA_WIDTH*n)];\n"]]}}