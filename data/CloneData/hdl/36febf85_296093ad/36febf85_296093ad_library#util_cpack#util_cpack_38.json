{"Source Block": ["hdl/library/util_cpack/util_cpack.v@215:248@HdlStmFor", "  endgenerate\n\n  // mux\n\n  generate\n  for (n = 0; n < CH_SCNT; n = n + 1) begin: g_mux\n  util_cpack_mux i_mux (\n    .adc_clk (adc_clk),\n    .adc_valid (adc_valid_d),\n    .adc_enable (adc_enable_s),\n    .adc_data (adc_data_intlv_s[((16*CH_MCNT*(n+1))-1):(16*CH_MCNT*n)]),\n    .adc_mux_valid (adc_mux_valid_s[n]),\n    .adc_mux_enable_0 (adc_mux_enable_0_s[n]),\n    .adc_mux_data_0 (adc_mux_data_0_s[(((n+1)*16*1)-1):(n*16*1)]),\n    .adc_mux_enable_1 (adc_mux_enable_1_s[n]),\n    .adc_mux_data_1 (adc_mux_data_1_s[(((n+1)*16*2)-1):(n*16*2)]),\n    .adc_mux_enable_2 (adc_mux_enable_2_s[n]),\n    .adc_mux_data_2 (adc_mux_data_2_s[(((n+1)*16*3)-1):(n*16*3)]),\n    .adc_mux_enable_3 (adc_mux_enable_3_s[n]),\n    .adc_mux_data_3 (adc_mux_data_3_s[(((n+1)*16*4)-1):(n*16*4)]),\n    .adc_mux_enable_4 (adc_mux_enable_4_s[n]),\n    .adc_mux_data_4 (adc_mux_data_4_s[(((n+1)*16*5)-1):(n*16*5)]),\n    .adc_mux_enable_5 (adc_mux_enable_5_s[n]),\n    .adc_mux_data_5 (adc_mux_data_5_s[(((n+1)*16*6)-1):(n*16*6)]),\n    .adc_mux_enable_6 (adc_mux_enable_6_s[n]),\n    .adc_mux_data_6 (adc_mux_data_6_s[(((n+1)*16*7)-1):(n*16*7)]),\n    .adc_mux_enable_7 (adc_mux_enable_7_s[n]),\n    .adc_mux_data_7 (adc_mux_data_7_s[(((n+1)*16*8)-1):(n*16*8)]));\n  end\n  endgenerate\n\n  // concat\n\n  always @(posedge adc_clk) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[220, "  for (n = 0; n < CH_SCNT; n = n + 1) begin: g_mux\n"], [225, "    .adc_data (adc_data_intlv_s[((16*CH_MCNT*(n+1))-1):(16*CH_MCNT*n)]),\n"]], "Add": [[220, "  for (n = 0; n < SAMPLES_PCHANNEL; n = n + 1) begin: g_mux\n"], [225, "    .adc_data (adc_data_intlv_s[((16*NUM_OF_CHANNELS_M*(n+1))-1):(16*NUM_OF_CHANNELS_M*n)]),\n"]]}}