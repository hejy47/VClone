Source Block: hdl/library/util_wfifo/util_wfifo.v@127:137@HdlIdDef
  reg                             fifo_rstn = 'd0;

  // internal signals

  wire                            dma_wready_s;
  wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;

  // adc overflow

  always @(posedge adc_clk) begin
    if (adc_rst == 1'b1) begin

Diff Content:
- 132   wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;
+ 132   generate
+ 132   for (n = 0; n < NUM_OF_CHANNELS; n = n + 1) begin: g_in
+ 132   if (M_MEM_RATIO == 1) begin
+ 132   always @(posedge din_clk) begin
+ 132     if (din_valid_s[n] == 1'b1) begin
+ 132       din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DOUT_DATA_WIDTH*n)] <=
+ 132         din_data_s[((DIN_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH*n)];
+ 132     end
+ 132   end
+ 132   end else begin
+ 132   always @(posedge din_clk) begin
+ 132     if (din_valid_s[n] == 1'b1) begin
+ 132       din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DOUT_DATA_WIDTH*n)] <=
+ 132         {din_data_s[((DIN_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH*n)],
+ 132         din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH+(DOUT_DATA_WIDTH*n))]};
+ 132     end
+ 132   end
+ 132   end
+ 132   end
+ 132   endgenerate

Clone Blocks:
Clone Blocks 1:
hdl/library/util_wfifo/util_wfifo.v@126:136
  reg                             fifo_rst_p = 'd0;
  reg                             fifo_rstn = 'd0;

  // internal signals

  wire                            dma_wready_s;
  wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;

  // adc overflow

  always @(posedge adc_clk) begin

