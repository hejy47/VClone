{"Source Block": ["hdl/library/common/up_adc_common.v@285:326@HdlStmProcess", "    end\n  end\n\n  // processor read interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n      up_rack <= 'd0;\n      up_rdata <= 'd0;\n    end else begin\n      up_rack <= up_rreq_s;\n      if (up_rreq_s == 1'b1) begin\n        case (up_raddr[7:0])\n          8'h00: up_rdata <= PCORE_VERSION;\n          8'h01: up_rdata <= PCORE_ID;\n          8'h02: up_rdata <= up_scratch;\n          8'h10: up_rdata <= {30'd0, up_mmcm_resetn, up_resetn};\n          8'h11: up_rdata <= {28'd0, up_adc_sync, up_adc_r1_mode, up_adc_ddr_edgesel, up_adc_pin_mode};\n          8'h15: up_rdata <= up_adc_clk_count_s;\n          8'h16: up_rdata <= adc_clk_ratio;\n          8'h17: up_rdata <= {28'd0, up_status_pn_err, up_status_pn_oos, up_status_or, up_status_s};\n          8'h1a: up_rdata <= {31'd0, up_sync_status_s};\n          8'h1c: up_rdata <= {3'd0, up_drp_rwn, up_drp_addr, up_drp_wdata};\n          8'h1d: up_rdata <= {14'd0, up_drp_locked, up_drp_status, up_drp_rdata_hold};\n          8'h22: up_rdata <= {29'd0, up_status_ovf, up_status_unf, 1'b0};\n          8'h23: up_rdata <= 32'd8;\n          8'h28: up_rdata <= {24'd0, adc_usr_chanmax};\n          8'h29: up_rdata <= up_adc_start_code;\n          8'h2e: up_rdata <= up_adc_gpio_in;\n          8'h2f: up_rdata <= up_adc_gpio_out;\n          default: up_rdata <= 0;\n        endcase\n      end else begin\n        up_rdata <= 32'd0;\n      end\n    end\n  end\n\n  // resets\n\n  ad_rst i_mmcm_rst_reg   (.preset(up_mmcm_preset_s), .clk(up_clk),     .rst(mmcm_rst));\n  ad_rst i_adc_rst_reg    (.preset(up_preset_s),      .clk(adc_clk),    .rst(adc_rst));\n"], "Clone Blocks": [["hdl/library/common/up_dac_common.v@296:338", "    end\n  end\n\n  // processor read interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n      up_rack <= 'd0;\n      up_rdata <= 'd0;\n    end else begin\n      up_rack <= up_rreq_s;\n      if (up_rreq_s == 1'b1) begin\n        case (up_raddr[7:0])\n          8'h00: up_rdata <= PCORE_VERSION;\n          8'h01: up_rdata <= PCORE_ID;\n          8'h02: up_rdata <= up_scratch;\n          8'h10: up_rdata <= {30'd0, up_mmcm_resetn, up_resetn};\n          8'h11: up_rdata <= {31'd0, up_dac_sync};\n          8'h12: up_rdata <= {24'd0, up_dac_par_type, up_dac_par_enb, up_dac_r1_mode,\n                              up_dac_datafmt, 4'd0};\n          8'h13: up_rdata <= {24'd0, up_dac_datarate};\n          8'h14: up_rdata <= {31'd0, up_dac_frame};\n          8'h15: up_rdata <= up_dac_clk_count_s;\n          8'h16: up_rdata <= dac_clk_ratio;\n          8'h17: up_rdata <= {31'd0, up_status_s};\n          8'h1c: up_rdata <= {3'd0, up_drp_rwn, up_drp_addr, up_drp_wdata};\n          8'h1d: up_rdata <= {14'd0, up_drp_locked, up_drp_status, up_drp_rdata_hold};\n          8'h22: up_rdata <= {30'd0, up_status_ovf, up_status_unf};\n          8'h28: up_rdata <= {24'd0, dac_usr_chanmax};\n          8'h2e: up_rdata <= up_dac_gpio_in;\n          8'h2f: up_rdata <= up_dac_gpio_out;\n          default: up_rdata <= 0;\n        endcase\n      end else begin\n        up_rdata <= 32'd0;\n      end\n    end\n  end\n\n  // resets\n\n  ad_rst i_mmcm_rst_reg   (.preset(up_mmcm_preset_s), .clk(up_clk),     .rst(mmcm_rst));\n  ad_rst i_dac_rst_reg    (.preset(up_preset_s),      .clk(dac_clk),    .rst(dac_rst));\n"]], "Diff Content": {"Delete": [[299, "          8'h01: up_rdata <= PCORE_ID;\n"]], "Add": [[299, "          8'h01: up_rdata <= ID;\n"]]}}