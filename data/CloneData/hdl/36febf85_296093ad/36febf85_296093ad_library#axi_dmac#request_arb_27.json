{"Source Block": ["hdl/library/axi_dmac/request_arb.v@671:732@HdlStmIf", "assign m_axi_arprot = 'h00;\nassign m_axi_rready = 1'b0;\n\nend \n\nif (C_DMA_TYPE_SRC == DMA_TYPE_STREAM_AXI) begin\n\nassign src_clk = s_axis_aclk;\n\nwire src_eot = eot_mem[src_response_id];\n\nassign dbg_src_address_id = 'h00;\nassign dbg_src_data_id = 'h00;\n\n/* TODO */\nassign src_response_valid = 1'b0;\nassign src_response_resp = 2'b0;\n\ndmac_src_axi_stream #(\n\t.C_ID_WIDTH(C_ID_WIDTH),\n\t.C_S_AXIS_DATA_WIDTH(C_DMA_DATA_WIDTH_SRC),\n\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)\n) i_src_dma_stream (\n\t.s_axis_aclk(s_axis_aclk),\n\t.s_axis_aresetn(src_resetn),\n\n\t.enable(src_enable),\n\t.enabled(src_enabled),\n\t.sync_id(src_sync_id),\n\t.sync_id_ret(src_sync_id_ret),\n\n\t.req_valid(src_req_valid),\n\t.req_ready(src_req_ready),\n\t.req_last_burst_length(src_req_last_burst_length),\n\t.req_sync_transfer_start(src_req_sync_transfer_start),\n\n\t.request_id(src_request_id),\n\t.response_id(src_response_id),\n\n\t.eot(src_eot),\n\n\t.fifo_valid(src_valid),\n\t.fifo_ready(src_ready),\n\t.fifo_data(src_data),\n\n\t.s_axis_valid(s_axis_valid),\n\t.s_axis_ready(s_axis_ready),\n\t.s_axis_data(s_axis_data),\n\t.s_axis_user(s_axis_user),\n\t.s_axis_xfer_req(s_axis_xfer_req)\n);\n\nend else begin\n\nassign s_axis_ready = 1'b0;\n\nend\n\nif (C_DMA_TYPE_SRC == DMA_TYPE_FIFO) begin\n\nassign src_clk = fifo_wr_clk;\n\n"], "Clone Blocks": [["hdl/library/axi_dmac/request_arb.v@724:786", "\nassign s_axis_ready = 1'b0;\n\nend\n\nif (C_DMA_TYPE_SRC == DMA_TYPE_FIFO) begin\n\nassign src_clk = fifo_wr_clk;\n\nwire src_eot = eot_mem[src_response_id];\n\nassign dbg_src_address_id = 'h00;\nassign dbg_src_data_id = 'h00;\n\n/* TODO */\nassign src_response_valid = 1'b0;\nassign src_response_resp = 2'b0;\n\ndmac_src_fifo_inf #(\n\t.C_ID_WIDTH(C_ID_WIDTH),\n\t.C_DATA_WIDTH(C_DMA_DATA_WIDTH_SRC),\n\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)\n) i_src_dma_fifo (\n\t.clk(fifo_wr_clk),\n\t.resetn(src_resetn),\n\n\t.enable(src_enable),\n\t.enabled(src_enabled),\n\t.sync_id(src_sync_id),\n\t.sync_id_ret(src_sync_id_ret),\n\n\t.req_valid(src_req_valid),\n\t.req_ready(src_req_ready),\n\t.req_last_burst_length(src_req_last_burst_length),\n\t.req_sync_transfer_start(src_req_sync_transfer_start),\n\n\t.request_id(src_request_id),\n\t.response_id(src_response_id),\n\n\t.eot(src_eot),\n\n\t.fifo_valid(src_valid),\n\t.fifo_ready(src_ready),\n\t.fifo_data(src_data),\n\n\t.en(fifo_wr_en),\n\t.din(fifo_wr_din),\n\t.overflow(fifo_wr_overflow),\n\t.sync(fifo_wr_sync),\n\t.xfer_req(fifo_wr_xfer_req)\n);\n\nend else begin\n\nassign fifo_wr_overflow = 1'b0;\nassign fifo_wr_xfer_req = 1'b0;\n\nend endgenerate\n\nsync_bits #(\n\t.NUM_BITS(C_ID_WIDTH),\n\t.CLK_ASYNC(C_CLKS_ASYNC_REQ_SRC)\n) i_sync_src_request_id (\n"]], "Diff Content": {"Delete": [[676, "if (C_DMA_TYPE_SRC == DMA_TYPE_STREAM_AXI) begin\n"], [690, "\t.C_ID_WIDTH(C_ID_WIDTH),\n"], [691, "\t.C_S_AXIS_DATA_WIDTH(C_DMA_DATA_WIDTH_SRC),\n"], [692, "\t.C_BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)\n"]], "Add": [[676, "if (DMA_TYPE_SRC == DMA_TYPE_STREAM_AXI) begin\n"], [692, "\t.ID_WIDTH(ID_WIDTH),\n"], [692, "\t.S_AXIS_DATA_WIDTH(DMA_DATA_WIDTH_SRC),\n"], [692, "\t.BEATS_PER_BURST_WIDTH(BEATS_PER_BURST_WIDTH_SRC)\n"], [725, "assign s_axis_xfer_req = 1'b0;\n"]]}}