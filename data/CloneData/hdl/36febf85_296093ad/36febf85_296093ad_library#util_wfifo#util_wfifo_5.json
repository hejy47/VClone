{"Source Block": ["hdl/library/util_wfifo/util_wfifo.v@127:137@HdlIdDef", "  reg                             fifo_rstn = 'd0;\n\n  // internal signals\n\n  wire                            dma_wready_s;\n  wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;\n\n  // adc overflow\n\n  always @(posedge adc_clk) begin\n    if (adc_rst == 1'b1) begin\n"], "Clone Blocks": [["hdl/library/util_wfifo/util_wfifo.v@126:136", "  reg                             fifo_rst_p = 'd0;\n  reg                             fifo_rstn = 'd0;\n\n  // internal signals\n\n  wire                            dma_wready_s;\n  wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;\n\n  // adc overflow\n\n  always @(posedge adc_clk) begin\n"]], "Diff Content": {"Delete": [[132, "  wire    [DMA_DATA_WIDTH-1:0]    dma_wdata_s;\n"]], "Add": [[132, "  generate\n"], [132, "  for (n = 0; n < NUM_OF_CHANNELS; n = n + 1) begin: g_in\n"], [132, "  if (M_MEM_RATIO == 1) begin\n"], [132, "  always @(posedge din_clk) begin\n"], [132, "    if (din_valid_s[n] == 1'b1) begin\n"], [132, "      din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DOUT_DATA_WIDTH*n)] <=\n"], [132, "        din_data_s[((DIN_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH*n)];\n"], [132, "    end\n"], [132, "  end\n"], [132, "  end else begin\n"], [132, "  always @(posedge din_clk) begin\n"], [132, "    if (din_valid_s[n] == 1'b1) begin\n"], [132, "      din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DOUT_DATA_WIDTH*n)] <=\n"], [132, "        {din_data_s[((DIN_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH*n)],\n"], [132, "        din_wdata[((DOUT_DATA_WIDTH*(n+1))-1):(DIN_DATA_WIDTH+(DOUT_DATA_WIDTH*n))]};\n"], [132, "    end\n"], [132, "  end\n"], [132, "  end\n"], [132, "  end\n"], [132, "  endgenerate\n"]]}}