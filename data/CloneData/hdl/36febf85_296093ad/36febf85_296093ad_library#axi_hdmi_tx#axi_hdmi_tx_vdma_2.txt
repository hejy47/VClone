Source Block: hdl/library/axi_hdmi_tx/axi_hdmi_tx_vdma.v@193:230@HdlStmProcess

  assign vdma_addr_diff_s = {1'b1, vdma_waddr} - vdma_raddr;
  assign vdma_ovf_s = (vdma_addr_diff < BUF_THRESHOLD_LO) ? vdma_almost_full : 1'b0;
  assign vdma_unf_s = (vdma_addr_diff > BUF_THRESHOLD_HI) ? vdma_almost_empty : 1'b0;

  always @(posedge vdma_clk) begin
    if (vdma_rst == 1'b1) begin
      vdma_raddr_g_m1 <= 9'd0;
      vdma_raddr_g_m2 <= 9'd0;
    end else begin
      vdma_raddr_g_m1 <= hdmi_raddr_g;
      vdma_raddr_g_m2 <= vdma_raddr_g_m1;
    end
    vdma_raddr <= g2b(vdma_raddr_g_m2);
    vdma_addr_diff <= vdma_addr_diff_s[8:0];
    if (vdma_addr_diff >= RDY_THRESHOLD_HI) begin
      vdma_ready <= 1'b0;
    end else if (vdma_addr_diff <= RDY_THRESHOLD_LO) begin
      vdma_ready <= 1'b1;
    end
    if (vdma_addr_diff > BUF_THRESHOLD_HI) begin
      vdma_almost_full <= 1'b1;
    end else begin
      vdma_almost_full <= 1'b0;
    end
    if (vdma_addr_diff < BUF_THRESHOLD_LO) begin
      vdma_almost_empty <= 1'b1;
    end else begin
      vdma_almost_empty <= 1'b0;
    end
    vdma_ovf <= vdma_ovf_s;
    vdma_unf <= vdma_unf_s;
  end

endmodule

// ***************************************************************************
// ***************************************************************************

Diff Content:
- 198   always @(posedge vdma_clk) begin
+ 198   always @(posedge vdma_clk or posedge vdma_rst) begin
+ 205   end
+ 205   always @(posedge vdma_clk) begin

Clone Blocks:
Clone Blocks 1:
hdl/library/common/ad_axis_dma_tx.v@213:251

  assign dma_addr_diff_s = {1'b1, dma_waddr} - dma_raddr;
  assign dma_ovf_s = (dma_addr_diff < BUF_THRESHOLD_LO) ? dma_almost_full : 1'b0;
  assign dma_unf_s = (dma_addr_diff > BUF_THRESHOLD_HI) ? dma_almost_empty : 1'b0;

  always @(posedge dma_clk) begin
    if (dma_rst == 1'b1) begin
      dma_raddr_g_m1 <= 'd0;
      dma_raddr_g_m2 <= 'd0;
    end else begin
      dma_raddr_g_m1 <= dac_raddr_g;
      dma_raddr_g_m2 <= dma_raddr_g_m1;
    end
    dma_raddr <= g2b(dma_raddr_g_m2);
    dma_addr_diff <= dma_addr_diff_s[5:0];
    if (dma_addr_diff >= RDY_THRESHOLD_HI) begin
      dma_ready <= 1'b0;
    end else if (dma_addr_diff <= RDY_THRESHOLD_LO) begin
      dma_ready <= 1'b1;
    end
    if (dma_addr_diff > BUF_THRESHOLD_HI) begin
      dma_almost_full <= 1'b1;
    end else begin
      dma_almost_full <= 1'b0;
    end
    if (dma_addr_diff < BUF_THRESHOLD_LO) begin
      dma_almost_empty <= 1'b1;
    end else begin
      dma_almost_empty <= 1'b0;
    end
    dma_ovf <= dma_ovf_s;
    dma_unf <= dma_unf_s;
    dma_resync <= dma_ovf | dma_unf;
  end

  // vdma write

  assign dma_wr_s = dma_valid & dma_ready;


