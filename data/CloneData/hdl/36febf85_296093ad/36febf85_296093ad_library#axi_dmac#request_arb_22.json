{"Source Block": ["hdl/library/axi_dmac/request_arb.v@361:392@HdlStmIf", "\nend else begin\nassign src_resetn = req_aresetn;\nend endgenerate\n\ngenerate if (C_CLKS_ASYNC_DEST_REQ) begin\nwire dest_async_resetn_source;\n\nif (C_DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\nassign dest_async_resetn_source = m_dest_axi_aresetn;\nend else begin\nassign dest_async_resetn_source = req_aresetn;\nend\n\nreg [2:0] dest_reset_shift = 3'b111;\nassign dest_resetn = ~dest_reset_shift[2];\n\nalways @(negedge dest_async_resetn_source or posedge dest_clk) begin\n\tif (dest_async_resetn_source == 1'b0)\n\t\tdest_reset_shift <= 3'b111;\n\telse\n\t\tdest_reset_shift <= {dest_reset_shift[1:0], 1'b0};\nend\n\nend else begin\nassign dest_resetn = req_aresetn;\nend endgenerate\n\ngenerate if (C_DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\n\nassign dest_clk = m_dest_axi_aclk;\n\n"], "Clone Blocks": [["hdl/library/axi_dmac/request_arb.v@337:369", "\tend else begin\n\t\teot <= response_dest_valid & response_dest_ready & response_dest_resp_eot;\n\tend\nend\n\ngenerate if (C_CLKS_ASYNC_REQ_SRC) begin\n\nwire src_async_resetn_source;\n\nif (C_DMA_TYPE_SRC == DMA_TYPE_MM_AXI) begin\nassign src_async_resetn_source = m_src_axi_aresetn;\nend else begin\nassign src_async_resetn_source = req_aresetn;\nend\n\nreg [2:0] src_reset_shift = 3'b111;\nassign src_resetn = ~src_reset_shift[2];\n\nalways @(negedge src_async_resetn_source or posedge src_clk) begin\n\tif (src_async_resetn_source == 1'b0)\n\t\tsrc_reset_shift <= 3'b111;\n\telse\n\t\tsrc_reset_shift <= {src_reset_shift[1:0], 1'b0};\nend\n\nend else begin\nassign src_resetn = req_aresetn;\nend endgenerate\n\ngenerate if (C_CLKS_ASYNC_DEST_REQ) begin\nwire dest_async_resetn_source;\n\nif (C_DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\n"]], "Diff Content": {"Delete": [[366, "generate if (C_CLKS_ASYNC_DEST_REQ) begin\n"], [369, "if (C_DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\n"]], "Add": [[366, "generate if (ASYNC_CLK_DEST_REQ) begin\n"], [369, "if (DMA_TYPE_DEST == DMA_TYPE_MM_AXI) begin\n"]]}}