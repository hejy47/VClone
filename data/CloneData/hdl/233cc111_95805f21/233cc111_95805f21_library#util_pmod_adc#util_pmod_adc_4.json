{"Source Block": ["hdl/library/util_pmod_adc/util_pmod_adc.v@184:208@HdlStmProcess", "    adc_clk_en <= ((adc_state == ADC_READ_CNV_RESULT) && (sclk_clk_cnt != 0)) ? 1'b1 : 1'b0;\n  end\n\n  // read data from the ADC\n\n  always @(negedge adc_spi_clk) begin\n      sclk_clk_cnt_m1 <= sclk_clk_cnt;\n      if((adc_clk_en == 1'b1) && (sclk_clk_cnt != 0)) begin\n          adc_data   <= {3'b0, adc_data[11:0], adc_sdo};\n          if ((adc_sw_reset == 1'b1) && (sclk_clk_cnt == SPI_WORD_LENGTH - ADC_RESET_LENGTH + 1)) begin\n            sclk_clk_cnt <= 16'b0;\n          end else begin\n            sclk_clk_cnt <= sclk_clk_cnt - 1;\n          end\n      end\n      else if(adc_state != ADC_READ_CNV_RESULT) begin\n          adc_data     <= 16'h0;\n          sclk_clk_cnt <= SPI_WORD_LENGTH - 1;\n      end\n  end\n\n  // update the ADC current state and the control signals\n\n  always @(posedge clk) begin\n    if(reset == 1'b1) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[200, "          adc_data     <= 16'h0;\n"]], "Add": [[200, "          adc_data   <= 16'h0;\n"]]}}