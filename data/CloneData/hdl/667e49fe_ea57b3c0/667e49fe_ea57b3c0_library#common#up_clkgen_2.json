{"Source Block": ["hdl/library/common/up_clkgen.v@126:181@HdlStmProcess", "  assign up_wreq_s = (up_waddr[13:8] == 6'h00) ? up_wreq : 1'b0;\n  assign up_rreq_s = (up_raddr[13:8] == 6'h00) ? up_rreq : 1'b0;\n\n  // processor write interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n      up_mmcm_preset <= 1'd1;\n      up_wack <= 'd0;\n      up_scratch <= 'd0;\n      up_mmcm_resetn <= 'd0;\n      up_resetn <= 'd0;\n      up_drp_sel <= 'd0;\n      up_drp_wr <= 'd0;\n      up_drp_status <= 'd0;\n      up_drp_rwn <= 'd0;\n      up_drp_addr <= 'd0;\n      up_drp_wdata <= 'd0;\n      up_drp_rdata_hold <= 'd0;\n    end else begin\n      up_mmcm_preset <= ~up_mmcm_resetn;\n      up_wack <= up_wreq_s;\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h02)) begin\n        up_scratch <= up_wdata;\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h10)) begin\n        up_mmcm_resetn <= up_wdata[1];\n        up_resetn <= up_wdata[0];\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h1c)) begin\n        up_drp_sel <= 1'b1;\n        up_drp_wr <= ~up_wdata[28];\n      end else begin\n        up_drp_sel <= 1'b0;\n        up_drp_wr <= 1'b0;\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h1c)) begin\n        up_drp_status <= 1'b1;\n      end else if (up_drp_ready == 1'b1) begin\n        up_drp_status <= 1'b0;\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h1c)) begin\n        up_drp_rwn <= up_wdata[28];\n        up_drp_addr <= up_wdata[27:16];\n        up_drp_wdata <= up_wdata[15:0];\n      end\n      if (up_drp_ready == 1'b1) begin\n        up_drp_rdata_hold <= up_drp_rdata;\n      end\n    end\n  end\n\n  // processor read interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n"], "Clone Blocks": [["hdl/library/common/up_axis_dma_rx.v@136:184", "  assign up_wreq_s = (up_waddr[13:8] == 6'h00) ? up_wreq : 1'b0;\n  assign up_rreq_s = (up_waddr[13:8] == 6'h00) ? up_rreq : 1'b0;\n\n  // processor write interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n      up_preset <= 1'd1;\n      up_wack <= 'd0;\n      up_scratch <= 'd0;\n      up_resetn <= 'd0;\n      up_dma_stream <= 'd0;\n      up_dma_start <= 'd0;\n      up_dma_count <= 'd0;\n      up_dma_ovf <= 'd0;\n      up_dma_unf <= 'd0;\n    end else begin\n      up_preset <= 1'd0;\n      up_wack <= up_wreq_s;\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h02)) begin\n        up_scratch <= up_wdata;\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h10)) begin\n        up_resetn <= up_wdata[0];\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h20)) begin\n        up_dma_stream <= up_wdata[1];\n        up_dma_start <= up_wdata[0];\n      end\n      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h21)) begin\n        up_dma_count <= up_wdata;\n      end\n      if (up_dma_ovf_s == 1'b1) begin\n        up_dma_ovf <= 1'b1;\n      end else if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h22)) begin\n        up_dma_ovf <= up_dma_ovf & ~up_wdata[2];\n      end\n      if (up_dma_unf_s == 1'b1) begin\n        up_dma_unf <= 1'b1;\n      end else if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h22)) begin\n        up_dma_unf <= up_dma_unf & ~up_wdata[1];\n      end\n    end\n  end\n\n  // processor read interface\n\n  always @(negedge up_rstn or posedge up_clk) begin\n    if (up_rstn == 0) begin\n"]], "Diff Content": {"Delete": [], "Add": [[144, "      up_clk_sel <= 'd0;\n"], [154, "      if ((up_wreq_s == 1'b1) && (up_waddr[7:0] == 8'h11)) begin\n"], [154, "        up_clk_sel <= up_wdata[0];\n"], [154, "      end\n"]]}}