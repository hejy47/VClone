Source Block: hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@55:65@HdlIdDef

  input [WIDTH-1:0] data_in,
  output reg [WIDTH-1:0] data_out
);

reg [57:0] state = {1'b1,57'b0};
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;

Diff Content:
- 60 reg [57:0] state = {1'b1,57'b0};

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@62:78
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;

always @(*) begin
  if (enable == 1'b0) begin
    data_out = data_in;
  end else begin
    data_out = feedback;
  end
end

always @(posedge clk) begin
  if (reset == 1'b1) begin
    state <= {1'b1,57'b0};
  end else begin

Clone Blocks 2:
hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@56:66
  input [WIDTH-1:0] data_in,
  output reg [WIDTH-1:0] data_out
);

reg [57:0] state = {1'b1,57'b0};
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;


Clone Blocks 3:
hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@57:67
  output reg [WIDTH-1:0] data_out
);

reg [57:0] state = {1'b1,57'b0};
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;

always @(*) begin

Clone Blocks 4:
hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@60:70
reg [57:0] state = {1'b1,57'b0};
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;

always @(*) begin
  if (enable == 1'b0) begin
    data_out = data_in;
  end else begin

Clone Blocks 5:
hdl/library/jesd204/jesd204_common/jesd204_scrambler_64b.v@59:69

reg [57:0] state = {1'b1,57'b0};
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+58:0] full_state;

assign full_state = {state,DESCRAMBLE ? data_in : feedback};
assign feedback = full_state[WIDTH-1+58:58] ^ full_state[WIDTH-1:39] ^ data_in;

always @(*) begin
  if (enable == 1'b0) begin
    data_out = data_in;

