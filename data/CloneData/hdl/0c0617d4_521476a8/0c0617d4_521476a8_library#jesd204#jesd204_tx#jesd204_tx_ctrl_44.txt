Source Block: hdl/library/jesd204/jesd204_tx/jesd204_tx_ctrl.v@282:378@HdlStmIf
assign ilas_default_data[(ii*8)+7:ii*8] = {ilas_counter, ii_sig};
end
endgenerate

generate
if(DATA_PATH_WIDTH == 4) begin : gen_dp4

assign ilas_config_rd_start = mframe_counter == 'h00 && somf_early2[0];

always @(posedge clk) begin
  if (ilas_data_reset == 1'b1) begin
    ilas_data <= {NUM_LANES{32'h00}};
    ilas_charisk <= {NUM_LANES{4'b0000}};
  end else begin
    if (ilas_config_rd_d1 == 1'b1) begin
      case (ilas_config_addr)
      2'h1: begin
        ilas_data <= (ilas_config_data & {NUM_LANES{32'hffff0000}}) |
          {NUM_LANES{16'h00,8'h9c,8'h1c}}; // /Q/ /R/
        ilas_charisk <= {NUM_LANES{4'b0011}};
      end
      default: begin
        ilas_data <= ilas_config_data;
        ilas_charisk <= {NUM_LANES{4'b0000}};
      end
      endcase
    end else if (lmfc_edge_d2 == 1'b1) begin
      ilas_data <= {NUM_LANES{ilas_default_data[31:8],8'h1c}}; // /R/
      ilas_charisk <= {NUM_LANES{4'b0001}};
    end else if (lmfc_edge_d1 == 1'b1) begin
      ilas_data <= {NUM_LANES{8'h7c,ilas_default_data[23:0]}}; // /A/
      ilas_charisk <= {NUM_LANES{4'b1000}};
    end else begin
      ilas_data <= {NUM_LANES{ilas_default_data}};
      ilas_charisk <= {NUM_LANES{4'b0000}};
    end
  end
end

end else if(DATA_PATH_WIDTH == 8) begin : gen_dp8

reg [63:0] ilas_config_data_d[NUM_LANES-1:0];
reg ilas_config_rd_d2 = 1'b0;

always @(posedge clk) begin
  ilas_config_rd_d2 <= ilas_config_rd_d1;
end

for(jj = 0; jj < NUM_LANES; jj = jj + 1) begin : gen_dp8_lane

assign ilas_config_rd_start = (mframe_counter == 'h00) && (octets_per_mf_4_mod_8 ? somf_early2[4] : somf_early2[0]);

always @(posedge clk) begin
  ilas_config_data_d[jj] <= {32'b0, ilas_config_data[(jj*64)+32+:32]};
end

for(ii = 0; ii < DATA_PATH_WIDTH; ii=ii+1) begin : gen_ilas_data

always @(posedge clk) begin
  if (ilas_data_reset) begin
    ilas_data[(jj*64)+(ii*8)+:8] <= 8'h00;
    ilas_charisk[(jj*8)+ii] <= 1'b0;
  end else begin
    if(somf[ii]) begin
      ilas_data[(jj*64)+(ii*8)+:8] <= 8'h1c; // /R/
      ilas_charisk[(jj*8)+ii] <= 1'b1;
    end else if(eomf[ii]) begin
      ilas_data[(jj*64)+(ii*8)+:8] <= 8'h7c; // /A/
      ilas_charisk[(jj*8)+ii] <= 1'b1;
    end else if (ilas_config_rd_d1 &&
                 (ilas_config_addr == 2'h1) && 
                 ((octets_per_mf_4_mod_8 && (ii == 5)) ||
                   (!octets_per_mf_4_mod_8 && (ii == 1)))) begin
        ilas_data[(jj*64)+(ii*8)+:8] <= 8'h9c; // /Q/
        ilas_charisk[(jj*8)+ii] <= 1'b1;
    end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d2 && (ii < 4)) begin
      ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data_d[jj][ii*8+:8];
      ilas_charisk[(jj*8)+ii] <= 1'b0;
    end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d1 && (ii >= 4)) begin
      ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+((ii-4)*8)+:8];
      ilas_charisk[(jj*8)+ii] <= 1'b0;
    end else if (!octets_per_mf_4_mod_8 && ilas_config_rd_d1) begin
      ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+(ii*8)+:8];
      ilas_charisk[(jj*8)+ii] <= 1'b0;
    end else begin
      ilas_data[(jj*64)+(ii*8)+:8] <= ilas_default_data[ii*8+:8];
      ilas_charisk[(jj*8)+ii] <= 1'b0;
    end
  end
end

end
end
end
endgenerate

endmodule

Diff Content:
- 287 if(DATA_PATH_WIDTH == 4) begin : gen_dp4
- 289 assign ilas_config_rd_start = mframe_counter == 'h00 && somf_early2[0];
- 291 always @(posedge clk) begin
- 292   if (ilas_data_reset == 1'b1) begin
- 293     ilas_data <= {NUM_LANES{32'h00}};
- 294     ilas_charisk <= {NUM_LANES{4'b0000}};
- 295   end else begin
- 296     if (ilas_config_rd_d1 == 1'b1) begin
- 297       case (ilas_config_addr)
- 298       2'h1: begin
- 299         ilas_data <= (ilas_config_data & {NUM_LANES{32'hffff0000}}) |
- 300           {NUM_LANES{16'h00,8'h9c,8'h1c}}; // /Q/ /R/
- 301         ilas_charisk <= {NUM_LANES{4'b0011}};
- 302       end
- 303       default: begin
- 304         ilas_data <= ilas_config_data;
- 307       endcase
- 308     end else if (lmfc_edge_d2 == 1'b1) begin
- 309       ilas_data <= {NUM_LANES{ilas_default_data[31:8],8'h1c}}; // /R/
- 310       ilas_charisk <= {NUM_LANES{4'b0001}};
- 311     end else if (lmfc_edge_d1 == 1'b1) begin
- 312       ilas_data <= {NUM_LANES{8'h7c,ilas_default_data[23:0]}}; // /A/
- 313       ilas_charisk <= {NUM_LANES{4'b1000}};
- 314     end else begin
- 315       ilas_data <= {NUM_LANES{ilas_default_data}};
- 316       ilas_charisk <= {NUM_LANES{4'b0000}};
- 319 end
- 321 end else if(DATA_PATH_WIDTH == 8) begin : gen_dp8
- 323 reg [63:0] ilas_config_data_d[NUM_LANES-1:0];
- 324 reg ilas_config_rd_d2 = 1'b0;
- 326 always @(posedge clk) begin
- 327   ilas_config_rd_d2 <= ilas_config_rd_d1;
- 328 end
- 330 for(jj = 0; jj < NUM_LANES; jj = jj + 1) begin : gen_dp8_lane
- 332 assign ilas_config_rd_start = (mframe_counter == 'h00) && (octets_per_mf_4_mod_8 ? somf_early2[4] : somf_early2[0]);
- 334 always @(posedge clk) begin
- 335   ilas_config_data_d[jj] <= {32'b0, ilas_config_data[(jj*64)+32+:32]};
- 336 end
- 338 for(ii = 0; ii < DATA_PATH_WIDTH; ii=ii+1) begin : gen_ilas_data
- 340 always @(posedge clk) begin
- 341   if (ilas_data_reset) begin
- 342     ilas_data[(jj*64)+(ii*8)+:8] <= 8'h00;
- 343     ilas_charisk[(jj*8)+ii] <= 1'b0;
- 344   end else begin
- 345     if(somf[ii]) begin
- 346       ilas_data[(jj*64)+(ii*8)+:8] <= 8'h1c; // /R/
- 347       ilas_charisk[(jj*8)+ii] <= 1'b1;
- 348     end else if(eomf[ii]) begin
- 349       ilas_data[(jj*64)+(ii*8)+:8] <= 8'h7c; // /A/
- 350       ilas_charisk[(jj*8)+ii] <= 1'b1;
- 351     end else if (ilas_config_rd_d1 &&
- 352                  (ilas_config_addr == 2'h1) && 
- 353                  ((octets_per_mf_4_mod_8 && (ii == 5)) ||
- 354                    (!octets_per_mf_4_mod_8 && (ii == 1)))) begin
- 355         ilas_data[(jj*64)+(ii*8)+:8] <= 8'h9c; // /Q/
- 356         ilas_charisk[(jj*8)+ii] <= 1'b1;
- 357     end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d2 && (ii < 4)) begin
- 358       ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data_d[jj][ii*8+:8];
- 359       ilas_charisk[(jj*8)+ii] <= 1'b0;
- 360     end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d1 && (ii >= 4)) begin
- 361       ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+((ii-4)*8)+:8];
- 362       ilas_charisk[(jj*8)+ii] <= 1'b0;
- 363     end else if (!octets_per_mf_4_mod_8 && ilas_config_rd_d1) begin
- 364       ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+(ii*8)+:8];
- 367       ilas_data[(jj*64)+(ii*8)+:8] <= ilas_default_data[ii*8+:8];
- 368       ilas_charisk[(jj*8)+ii] <= 1'b0;
- 371 end
- 373 end
- 374 end
- 375 end
+ 304   generate
+ 304   for(ii = 0; ii < DATA_PATH_WIDTH; ii=ii+1) begin : gen_default_data
+ 304   wire [(8-ILAS_COUNTER_WIDTH)-1:0] ii_sig = ii;
+ 304   assign ilas_default_data[(ii*8)+7:ii*8] = {ilas_counter, ii_sig};
+ 304   end
+ 304   endgenerate
+ 304   generate
+ 304   if(DATA_PATH_WIDTH == 4) begin : gen_dp4
+ 304   assign ilas_config_rd_start = mframe_counter == 'h00 && somf_early2[0];
+ 304   always @(posedge clk) begin
+ 304     if (ilas_data_reset == 1'b1) begin
+ 304       ilas_data <= {NUM_LANES{32'h00}};
+ 304       ilas_charisk <= {NUM_LANES{4'b0000}};
+ 304     end else begin
+ 304       if (ilas_config_rd_d1 == 1'b1) begin
+ 304         case (ilas_config_addr)
+ 304         2'h1: begin
+ 304           ilas_data <= (ilas_config_data & {NUM_LANES{32'hffff0000}}) |
+ 304             {NUM_LANES{16'h00,8'h9c,8'h1c}}; // /Q/ /R/
+ 304           ilas_charisk <= {NUM_LANES{4'b0011}};
+ 304         end
+ 304         default: begin
+ 304           ilas_data <= ilas_config_data;
+ 304           ilas_charisk <= {NUM_LANES{4'b0000}};
+ 304         end
+ 304         endcase
+ 304       end else if (lmfc_edge_d2 == 1'b1) begin
+ 304         ilas_data <= {NUM_LANES{ilas_default_data[31:8],8'h1c}}; // /R/
+ 304         ilas_charisk <= {NUM_LANES{4'b0001}};
+ 304       end else if (lmfc_edge_d1 == 1'b1) begin
+ 304         ilas_data <= {NUM_LANES{8'h7c,ilas_default_data[23:0]}}; // /A/
+ 304         ilas_charisk <= {NUM_LANES{4'b1000}};
+ 304       end else begin
+ 304         ilas_data <= {NUM_LANES{ilas_default_data}};
+ 364   end else if(DATA_PATH_WIDTH == 8) begin : gen_dp8
+ 364   reg [63:0] ilas_config_data_d[NUM_LANES-1:0];
+ 364   reg ilas_config_rd_d2 = 1'b0;
+ 364   always @(posedge clk) begin
+ 364     ilas_config_rd_d2 <= ilas_config_rd_d1;
+ 364   end
+ 364   for(jj = 0; jj < NUM_LANES; jj = jj + 1) begin : gen_dp8_lane
+ 364   assign ilas_config_rd_start = (mframe_counter == 'h00) && (octets_per_mf_4_mod_8 ? somf_early2[4] : somf_early2[0]);
+ 364   always @(posedge clk) begin
+ 364     ilas_config_data_d[jj] <= {32'b0, ilas_config_data[(jj*64)+32+:32]};
+ 364   end
+ 364   for(ii = 0; ii < DATA_PATH_WIDTH; ii=ii+1) begin : gen_ilas_data
+ 364   always @(posedge clk) begin
+ 364     if (ilas_data_reset) begin
+ 364       ilas_data[(jj*64)+(ii*8)+:8] <= 8'h00;
+ 368       if(somf[ii]) begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= 8'h1c; // /R/
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b1;
+ 368       end else if(eomf[ii]) begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= 8'h7c; // /A/
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b1;
+ 368       end else if (ilas_config_rd_d1 &&
+ 368                    (ilas_config_addr == 2'h1) &&
+ 368                    ((octets_per_mf_4_mod_8 && (ii == 5)) ||
+ 368                      (!octets_per_mf_4_mod_8 && (ii == 1)))) begin
+ 368           ilas_data[(jj*64)+(ii*8)+:8] <= 8'h9c; // /Q/
+ 368           ilas_charisk[(jj*8)+ii] <= 1'b1;
+ 368       end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d2 && (ii < 4)) begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data_d[jj][ii*8+:8];
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b0;
+ 368       end else if (octets_per_mf_4_mod_8 && ilas_config_rd_d1 && (ii >= 4)) begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+((ii-4)*8)+:8];
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b0;
+ 368       end else if (!octets_per_mf_4_mod_8 && ilas_config_rd_d1) begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= ilas_config_data[(jj*64)+(ii*8)+:8];
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b0;
+ 368       end else begin
+ 368         ilas_data[(jj*64)+(ii*8)+:8] <= ilas_default_data[ii*8+:8];
+ 368         ilas_charisk[(jj*8)+ii] <= 1'b0;
+ 368       end

Clone Blocks:
