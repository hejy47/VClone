Source Block: hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@69:79@HdlStmAssign
  assign swizzle_in[WIDTH-1-i*8:WIDTH-i*8-8] = data_in[i*8+7:i*8];
  assign data_out[WIDTH-1-i*8:WIDTH-i*8-8] = swizzle_out[i*8+7:i*8];
end
endgenerate

assign full_state = {state,DESCRAMBLE ? swizzle_in : feedback};
assign feedback = full_state[WIDTH-1+15:15] ^ full_state[WIDTH-1+14:14] ^ swizzle_in;

always @(*) begin
  if (enable == 1'b0) begin
    swizzle_out = swizzle_in;

Diff Content:
- 74 assign full_state = {state,DESCRAMBLE ? swizzle_in : feedback};

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@63:76
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;

generate
genvar i;
for (i = 0; i < WIDTH / 8; i = i + 1) begin: gen_swizzle
  assign swizzle_in[WIDTH-1-i*8:WIDTH-i*8-8] = data_in[i*8+7:i*8];
  assign data_out[WIDTH-1-i*8:WIDTH-i*8-8] = swizzle_out[i*8+7:i*8];
end
endgenerate

assign full_state = {state,DESCRAMBLE ? swizzle_in : feedback};
assign feedback = full_state[WIDTH-1+15:15] ^ full_state[WIDTH-1+14:14] ^ swizzle_in;


Clone Blocks 2:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@70:80
  assign data_out[WIDTH-1-i*8:WIDTH-i*8-8] = swizzle_out[i*8+7:i*8];
end
endgenerate

assign full_state = {state,DESCRAMBLE ? swizzle_in : feedback};
assign feedback = full_state[WIDTH-1+15:15] ^ full_state[WIDTH-1+14:14] ^ swizzle_in;

always @(*) begin
  if (enable == 1'b0) begin
    swizzle_out = swizzle_in;
  end else begin

