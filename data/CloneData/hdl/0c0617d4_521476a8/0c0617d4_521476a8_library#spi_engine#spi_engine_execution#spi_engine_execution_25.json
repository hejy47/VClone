{"Source Block": ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@109:119@HdlIdDef", "\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\nreg trigger_next = 1'b0;\nreg wait_for_io = 1'b0;\nreg transfer_active = 1'b0;\n"], "Clone Blocks": [["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@111:121", "wire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\nreg trigger_next = 1'b0;\nreg wait_for_io = 1'b0;\nreg transfer_active = 1'b0;\n\nwire last_bit;\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@107:117", "\nreg [(BIT_COUNTER_WIDTH+8):0] counter = 'h00;\n\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\nreg trigger_next = 1'b0;\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@106:116", "reg clk_div_last;\n\nreg [(BIT_COUNTER_WIDTH+8):0] counter = 'h00;\n\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@105:115", "reg [7:0] clk_div_counter_next = 'h00;\nreg clk_div_last;\n\nreg [(BIT_COUNTER_WIDTH+8):0] counter = 'h00;\n\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@103:113", "\nreg [7:0] clk_div_counter = 'h00;\nreg [7:0] clk_div_counter_next = 'h00;\nreg clk_div_last;\n\nreg [(BIT_COUNTER_WIDTH+8):0] counter = 'h00;\n\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@112:122", "wire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\nreg trigger_next = 1'b0;\nreg wait_for_io = 1'b0;\nreg transfer_active = 1'b0;\n\nwire last_bit;\nwire first_bit;\n"], ["hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@108:118", "reg [(BIT_COUNTER_WIDTH+8):0] counter = 'h00;\n\nwire [7:0] sleep_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire [1:0] cs_sleep_counter = counter[(BIT_COUNTER_WIDTH+2):(BIT_COUNTER_WIDTH+1)];\nwire [(BIT_COUNTER_WIDTH-1):0] bit_counter = counter[BIT_COUNTER_WIDTH:1];\nwire [7:0] transfer_counter = counter[(BIT_COUNTER_WIDTH+8):(BIT_COUNTER_WIDTH+1)];\nwire ntx_rx = counter[0];\n\nreg trigger = 1'b0;\nreg trigger_next = 1'b0;\nreg wait_for_io = 1'b0;\n"]], "Diff Content": {"Delete": [[114, "wire ntx_rx = counter[0];\n"]], "Add": [[114, "  reg trigger = 1'b0;\n"], [114, "  reg trigger_next = 1'b0;\n"], [114, "  reg wait_for_io = 1'b0;\n"], [114, "  reg transfer_active = 1'b0;\n"]]}}