{"Source Block": ["hdl/library/xilinx/common/ad_mmcm_drp.v@109:319@HdlStmIf", "  end\n\n  // instantiations\n\n  generate\n  if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n    MMCME2_ADV #(\n      .BANDWIDTH (\"OPTIMIZED\"),\n      .CLKOUT4_CASCADE (\"FALSE\"),\n      .COMPENSATION (\"ZHOLD\"),\n      .STARTUP_WAIT (\"FALSE\"),\n      .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n      .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n      .CLKFBOUT_PHASE (0.000),\n      .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n      .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n      .CLKOUT0_DUTY_CYCLE (0.500),\n      .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n      .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n      .CLKOUT1_DUTY_CYCLE (0.500),\n      .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n      .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n      .CLKOUT2_DUTY_CYCLE (0.500),\n      .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n      .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n      .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n      .REF_JITTER1 (0.010))\n    i_mmcm (\n      .CLKIN1 (clk),\n      .CLKFBIN (bufg_fb_clk_s),\n      .CLKFBOUT (mmcm_fb_clk_s),\n      .CLKOUT0 (mmcm_clk_0_s),\n      .CLKOUT1 (mmcm_clk_1_s),\n      .CLKOUT2 (mmcm_clk_2_s),\n      .LOCKED (mmcm_locked_s),\n      .DCLK (up_clk),\n      .DEN (up_drp_sel),\n      .DADDR (up_drp_addr[6:0]),\n      .DWE (up_drp_wr),\n      .DI (up_drp_wdata),\n      .DO (up_drp_rdata_s),\n      .DRDY (up_drp_ready_s),\n      .CLKFBOUTB (),\n      .CLKOUT0B (),\n      .CLKOUT1B (),\n      .CLKOUT2B (),\n      .CLKOUT3 (),\n      .CLKOUT3B (),\n      .CLKOUT4 (),\n      .CLKOUT5 (),\n      .CLKOUT6 (),\n      .CLKIN2 (clk2),\n      .CLKINSEL (clk_sel),\n      .PSCLK (1'b0),\n      .PSEN (1'b0),\n      .PSINCDEC (1'b0),\n      .PSDONE (),\n      .CLKINSTOPPED (),\n      .CLKFBSTOPPED (),\n      .PWRDWN (1'b0),\n      .RST (mmcm_rst));\n\n      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n\n  end else if (FPGA_TECHNOLOGY == ULTRASCALE) begin\n    MMCME3_ADV #(\n      .BANDWIDTH (\"OPTIMIZED\"),\n      .CLKOUT4_CASCADE (\"FALSE\"),\n      .COMPENSATION (\"AUTO\"),\n      .STARTUP_WAIT (\"FALSE\"),\n\n      .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n      .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n      .CLKFBOUT_PHASE (0.000),\n      .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n      .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n      .CLKOUT0_DUTY_CYCLE (0.500),\n      .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n      .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n      .CLKOUT1_DUTY_CYCLE (0.500),\n      .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n      .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n      .CLKOUT2_DUTY_CYCLE (0.500),\n      .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n      .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n      .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD),\n      .REF_JITTER1 (0.010))\n    i_mmcme3 (\n      .CLKIN1 (clk),\n      .CLKFBIN (bufg_fb_clk_s),\n      .CLKFBOUT (mmcm_fb_clk_s),\n      .CLKOUT0 (mmcm_clk_0_s),\n      .CLKOUT1 (mmcm_clk_1_s),\n      .CLKOUT2 (mmcm_clk_2_s),\n      .LOCKED (mmcm_locked_s),\n      .DCLK (up_clk),\n      .DEN (up_drp_sel),\n      .DADDR (up_drp_addr[6:0]),\n      .DWE (up_drp_wr),\n      .DI (up_drp_wdata),\n      .DO (up_drp_rdata_s),\n      .DRDY (up_drp_ready_s),\n      .CLKFBOUTB (),\n      .CLKOUT0B (),\n      .CLKOUT1B (),\n      .CLKOUT2B (),\n      .CLKOUT3 (),\n      .CLKOUT3B (),\n      .CLKOUT4 (),\n      .CLKOUT5 (),\n      .CLKOUT6 (),\n      .CLKIN2 (clk2),\n      .CLKINSEL (clk_sel),\n      .PSCLK (1'b0),\n      .PSEN (1'b0),\n      .PSINCDEC (1'b0),\n      .PSDONE (),\n      .CLKINSTOPPED (),\n      .CLKFBSTOPPED (),\n      .PWRDWN (1'b0),\n      .CDDCREQ (1'b0),\n      .CDDCDONE (),\n      .RST (mmcm_rst));\n\n      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n\n  end else if (FPGA_TECHNOLOGY == ULTRASCALE_PLUS) begin\n    MMCME4_ADV #(\n      .BANDWIDTH (\"OPTIMIZED\"),\n      .CLKOUT4_CASCADE (\"FALSE\"),\n      .COMPENSATION (\"AUTO\"),\n      .STARTUP_WAIT (\"FALSE\"),\n\n      .DIVCLK_DIVIDE (MMCM_VCO_DIV),\n      .CLKFBOUT_MULT_F (MMCM_VCO_MUL),\n      .CLKFBOUT_PHASE (0.000),\n      .CLKFBOUT_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT0_DIVIDE_F (MMCM_CLK0_DIV),\n      .CLKOUT0_PHASE (MMCM_CLK0_PHASE),\n      .CLKOUT0_DUTY_CYCLE (0.500),\n      .CLKOUT0_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT1_DIVIDE (MMCM_CLK1_DIV),\n      .CLKOUT1_PHASE (MMCM_CLK1_PHASE),\n      .CLKOUT1_DUTY_CYCLE (0.500),\n      .CLKOUT1_USE_FINE_PS (\"FALSE\"),\n      .CLKOUT2_DIVIDE (MMCM_CLK2_DIV),\n      .CLKOUT2_PHASE (MMCM_CLK2_PHASE),\n      .CLKOUT2_DUTY_CYCLE (0.500),\n      .CLKOUT2_USE_FINE_PS (\"FALSE\"),\n      .CLKIN1_PERIOD (MMCM_CLKIN_PERIOD),\n      .CLKIN2_PERIOD (MMCM_CLKIN2_PERIOD)\n    ) i_mmcme4 (\n      .CLKIN1 (clk),\n      .CLKFBIN (bufg_fb_clk_s),\n      .CLKFBOUT (mmcm_fb_clk_s),\n      .CLKOUT0 (mmcm_clk_0_s),\n      .CLKOUT1 (mmcm_clk_1_s),\n      .CLKOUT2 (mmcm_clk_2_s),\n      .LOCKED (mmcm_locked_s),\n      .DCLK (up_clk),\n      .DEN (up_drp_sel),\n      .DADDR (up_drp_addr[6:0]),\n      .DWE (up_drp_wr),\n      .DI (up_drp_wdata),\n      .DO (up_drp_rdata_s),\n      .DRDY (up_drp_ready_s),\n      .CLKFBOUTB (),\n      .CLKOUT0B (),\n      .CLKOUT1B (),\n      .CLKOUT2B (),\n      .CLKOUT3 (),\n      .CLKOUT3B (),\n      .CLKOUT4 (),\n      .CLKOUT5 (),\n      .CLKOUT6 (),\n      .CLKIN2 (clk2),\n      .CLKINSEL (clk_sel),\n      .PSCLK (1'b0),\n      .PSEN (1'b0),\n      .PSINCDEC (1'b0),\n      .PSDONE (),\n      .CLKINSTOPPED (),\n      .CLKFBSTOPPED (),\n      .PWRDWN (1'b0),\n      .CDDCREQ (1'b0),\n      .CDDCDONE (),\n      .RST (mmcm_rst));\n\n      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n\n  end\n  endgenerate\n\n\nendmodule\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[138, "      .REF_JITTER1 (0.010))\n"], [139, "    i_mmcm (\n"], [174, "      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n"], [175, "      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n"], [176, "      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], [177, "      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n"], [204, "      .REF_JITTER1 (0.010))\n"], [205, "    i_mmcme3 (\n"], [242, "      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n"], [243, "      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n"], [244, "      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], [245, "      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n"], [309, "      BUFG i_fb_clk_bufg  (.I (mmcm_fb_clk_s),  .O (bufg_fb_clk_s));\n"], [310, "      BUFG i_clk_0_bufg   (.I (mmcm_clk_0_s),   .O (mmcm_clk_0));\n"], [311, "      BUFG i_clk_1_bufg   (.I (mmcm_clk_1_s),   .O (mmcm_clk_1));\n"], [312, "      BUFG i_clk_2_bufg   (.I (mmcm_clk_2_s),   .O (mmcm_clk_2));\n"]], "Add": [[139, "      .REF_JITTER1 (0.010)\n"], [139, "    ) i_mmcm (\n"], [177, "      BUFG i_fb_clk_bufg (\n"], [177, "        .I (mmcm_fb_clk_s),\n"], [177, "        .O (bufg_fb_clk_s));\n"], [177, "      BUFG i_clk_0_bufg (\n"], [177, "        .I (mmcm_clk_0_s),\n"], [177, "        .O (mmcm_clk_0));\n"], [177, "      BUFG i_clk_1_bufg (\n"], [177, "        .I (mmcm_clk_1_s),\n"], [177, "        .O (mmcm_clk_1));\n"], [177, "      BUFG i_clk_2_bufg (\n"], [177, "        .I (mmcm_clk_2_s),\n"], [177, "        .O (mmcm_clk_2));\n"], [205, "      .REF_JITTER1 (0.010)\n"], [205, "    ) i_mmcme3 (\n"], [245, "      BUFG i_fb_clk_bufg (\n"], [245, "        .I (mmcm_fb_clk_s),\n"], [245, "        .O (bufg_fb_clk_s));\n"], [245, "      BUFG i_clk_0_bufg (\n"], [245, "        .I (mmcm_clk_0_s),\n"], [245, "        .O (mmcm_clk_0));\n"], [245, "      BUFG i_clk_1_bufg (\n"], [245, "        .I (mmcm_clk_1_s),\n"], [245, "        .O (mmcm_clk_1));\n"], [245, "      BUFG i_clk_2_bufg (\n"], [245, "        .I (mmcm_clk_2_s),\n"], [245, "        .O (mmcm_clk_2));\n"], [312, "      BUFG i_fb_clk_bufg (\n"], [312, "        .I (mmcm_fb_clk_s),\n"], [312, "        .O (bufg_fb_clk_s));\n"], [312, "      BUFG i_clk_0_bufg (\n"], [312, "        .I (mmcm_clk_0_s),\n"], [312, "        .O (mmcm_clk_0));\n"], [312, "      BUFG i_clk_1_bufg (\n"], [312, "        .I (mmcm_clk_1_s),\n"], [312, "        .O (mmcm_clk_1));\n"], [312, "      BUFG i_clk_2_bufg (\n"], [312, "        .I (mmcm_clk_2_s),\n"], [312, "        .O (mmcm_clk_2));\n"]]}}