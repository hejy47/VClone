Source Block: hdl/library/common/ad_pack.v@72:82@HdlIdDef
  output reg                  ovalid = 'b0
);

// Width of shift reg is integer multiple of input data width
localparam SH_W = ((O_W/I_W)+|(O_W % I_W))*I_W;
localparam STEP = O_W % I_W;

reg [O_W*UNIT_W-1:0] idata_packed;
reg [SH_W*UNIT_W-1:0] idata_d = 'h0;
reg ivalid_d  = 'h0;
reg [SH_W*UNIT_W-1:0] idata_dd = 'h0;

Diff Content:
- 77 localparam STEP = O_W % I_W;
+ 77   localparam SH_W = ((O_W/I_W)+|(O_W % I_W))*I_W;
+ 77   localparam STEP = O_W % I_W;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/ad_pack.v@74:84

// Width of shift reg is integer multiple of input data width
localparam SH_W = ((O_W/I_W)+|(O_W % I_W))*I_W;
localparam STEP = O_W % I_W;

reg [O_W*UNIT_W-1:0] idata_packed;
reg [SH_W*UNIT_W-1:0] idata_d = 'h0;
reg ivalid_d  = 'h0;
reg [SH_W*UNIT_W-1:0] idata_dd = 'h0;
reg [SH_W-1:0] in_use = 'b0;
reg [SH_W-1:0] out_mask;

Clone Blocks 2:
hdl/library/common/ad_pack.v@71:81
  output reg [O_W*UNIT_W-1:0] odata = 'h0,
  output reg                  ovalid = 'b0
);

// Width of shift reg is integer multiple of input data width
localparam SH_W = ((O_W/I_W)+|(O_W % I_W))*I_W;
localparam STEP = O_W % I_W;

reg [O_W*UNIT_W-1:0] idata_packed;
reg [SH_W*UNIT_W-1:0] idata_d = 'h0;
reg ivalid_d  = 'h0;

Clone Blocks 3:
hdl/library/common/ad_upack.v@77:87
localparam SH_W = ((I_W/O_W)+1)*O_W;
localparam STEP = I_W % O_W;

localparam LATENCY = 1; // Minimum input latency from iready to ivalid 

integer i;

reg [SH_W*UNIT_W-1:0] idata_sh;
reg [SH_W*UNIT_W-1:0] idata_d = 'h0;
reg [SH_W*UNIT_W-1:0] idata_d_nx;
reg [SH_W-1:0] in_use = 'h0;

Clone Blocks 4:
hdl/library/common/ad_pack.v@75:85
// Width of shift reg is integer multiple of input data width
localparam SH_W = ((O_W/I_W)+|(O_W % I_W))*I_W;
localparam STEP = O_W % I_W;

reg [O_W*UNIT_W-1:0] idata_packed;
reg [SH_W*UNIT_W-1:0] idata_d = 'h0;
reg ivalid_d  = 'h0;
reg [SH_W*UNIT_W-1:0] idata_dd = 'h0;
reg [SH_W-1:0] in_use = 'b0;
reg [SH_W-1:0] out_mask;


