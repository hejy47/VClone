Source Block: hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@59:69@HdlIdDef

reg [14:0] state = 'h7f80;
reg [WIDTH-1:0] swizzle_out;
wire [WIDTH-1:0] swizzle_in;
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;

generate
genvar i;
for (i = 0; i < WIDTH / 8; i = i + 1) begin: gen_swizzle
  assign swizzle_in[WIDTH-1-i*8:WIDTH-i*8-8] = data_in[i*8+7:i*8];

Diff Content:
- 64 wire [WIDTH-1+15:0] full_state;
+ 64   reg [14:0] state = 'h7f80;
+ 64   reg [WIDTH-1:0] swizzle_out;
+ 64   wire [WIDTH-1:0] swizzle_in;
+ 64   wire [WIDTH-1:0] feedback;
+ 64   wire [WIDTH-1+15:0] full_state;

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@55:65

  input [WIDTH-1:0] data_in,
  output [WIDTH-1:0] data_out
);

reg [14:0] state = 'h7f80;
reg [WIDTH-1:0] swizzle_out;
wire [WIDTH-1:0] swizzle_in;
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;


Clone Blocks 2:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@56:66
  input [WIDTH-1:0] data_in,
  output [WIDTH-1:0] data_out
);

reg [14:0] state = 'h7f80;
reg [WIDTH-1:0] swizzle_out;
wire [WIDTH-1:0] swizzle_in;
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;

generate

Clone Blocks 3:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@58:68
);

reg [14:0] state = 'h7f80;
reg [WIDTH-1:0] swizzle_out;
wire [WIDTH-1:0] swizzle_in;
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;

generate
genvar i;
for (i = 0; i < WIDTH / 8; i = i + 1) begin: gen_swizzle

Clone Blocks 4:
hdl/library/jesd204/jesd204_common/jesd204_scrambler.v@62:72
wire [WIDTH-1:0] swizzle_in;
wire [WIDTH-1:0] feedback;
wire [WIDTH-1+15:0] full_state;

generate
genvar i;
for (i = 0; i < WIDTH / 8; i = i + 1) begin: gen_swizzle
  assign swizzle_in[WIDTH-1-i*8:WIDTH-i*8-8] = data_in[i*8+7:i*8];
  assign data_out[WIDTH-1-i*8:WIDTH-i*8-8] = swizzle_out[i*8+7:i*8];
end
endgenerate

