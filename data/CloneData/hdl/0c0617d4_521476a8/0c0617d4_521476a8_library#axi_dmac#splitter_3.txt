Source Block: hdl/library/axi_dmac/splitter.v@50:60@HdlStmAssign
);

reg [NUM_M-1:0] acked;

assign s_ready = &(m_ready | acked);
assign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};

always @(posedge clk)
begin
  if (resetn == 1'b0) begin
    acked <= {NUM_M{1'b0}};

Diff Content:
- 55 assign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};
+ 55   assign s_ready = &(m_ready | acked);
+ 55   assign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_dmac/splitter.v@47:57

  output [NUM_M-1:0] m_valid,
  input [NUM_M-1:0] m_ready
);

reg [NUM_M-1:0] acked;

assign s_ready = &(m_ready | acked);
assign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};

always @(posedge clk)

Clone Blocks 2:
hdl/library/axi_dmac/splitter.v@49:59
  input [NUM_M-1:0] m_ready
);

reg [NUM_M-1:0] acked;

assign s_ready = &(m_ready | acked);
assign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};

always @(posedge clk)
begin
  if (resetn == 1'b0) begin

