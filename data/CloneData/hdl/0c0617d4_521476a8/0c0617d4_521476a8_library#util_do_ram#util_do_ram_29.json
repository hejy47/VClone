{"Source Block": ["hdl/library/util_do_ram/util_do_ram.v@161:171@HdlStmAssign", "  if (~wr_request_enable | wr_last_beat)\n    wr_addr <= 'h0;\n  else if (s_axis_valid & s_axis_ready & (~(&wr_addr)))\n    wr_addr <= wr_addr + 1;\nend\nassign wr_enable = s_axis_valid & s_axis_ready & ~wr_full;\n\nad_mem_asym #(\n   .A_ADDRESS_WIDTH (SRC_ADDRESS_WIDTH),\n   .A_DATA_WIDTH (SRC_DATA_WIDTH),\n   .B_ADDRESS_WIDTH (DST_ADDRESS_WIDTH),\n"], "Clone Blocks": [["hdl/library/util_do_ram/util_do_ram.v@155:170", "  else if (&wr_addr & (s_axis_valid & s_axis_ready))\n    wr_full <= 1'b1;\nend\n\n// Do not roll over write address\nalways @(posedge s_axis_aclk) begin\n  if (~wr_request_enable | wr_last_beat)\n    wr_addr <= 'h0;\n  else if (s_axis_valid & s_axis_ready & (~(&wr_addr)))\n    wr_addr <= wr_addr + 1;\nend\nassign wr_enable = s_axis_valid & s_axis_ready & ~wr_full;\n\nad_mem_asym #(\n   .A_ADDRESS_WIDTH (SRC_ADDRESS_WIDTH),\n   .A_DATA_WIDTH (SRC_DATA_WIDTH),\n"]], "Diff Content": {"Delete": [[166, "assign wr_enable = s_axis_valid & s_axis_ready & ~wr_full;\n"]], "Add": []}}