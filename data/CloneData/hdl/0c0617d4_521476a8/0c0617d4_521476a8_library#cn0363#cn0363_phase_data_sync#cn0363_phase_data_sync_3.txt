Source Block: hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@62:72@HdlIdDef
);

reg [1:0] data_counter = 'h00;

reg [31:0] phase_hold = 'h00;
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

reg synced = 1'b0;
wire sync;

Diff Content:
- 67 reg [23:0] sample_hold = 'h00;

Clone Blocks:
Clone Blocks 1:
hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@66:76
reg [31:0] phase_hold = 'h00;
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

reg synced = 1'b0;
wire sync;

/* The ADC will do conversions regardless of whether the pipeline is ready or
   not. So we'll always accept new samples and assert overflow if necessary if
   the pipeline is not ready. */

Clone Blocks 2:
hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@67:77
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

reg synced = 1'b0;
wire sync;

/* The ADC will do conversions regardless of whether the pipeline is ready or
   not. So we'll always accept new samples and assert overflow if necessary if
   the pipeline is not ready. */
assign s_axis_sample_ready = 1'b1;

Clone Blocks 3:
hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@63:73

reg [1:0] data_counter = 'h00;

reg [31:0] phase_hold = 'h00;
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

reg synced = 1'b0;
wire sync;


Clone Blocks 4:
hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@59:69
  output [31:0] m_axis_phase_data,

  output reg overflow
);

reg [1:0] data_counter = 'h00;

reg [31:0] phase_hold = 'h00;
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

Clone Blocks 5:
hdl/library/cn0363/cn0363_phase_data_sync/cn0363_phase_data_sync.v@61:71
  output reg overflow
);

reg [1:0] data_counter = 'h00;

reg [31:0] phase_hold = 'h00;
reg [23:0] sample_hold = 'h00;
reg sample_hold_valid = 1'b0;
reg conv_done_d1 = 1'b0;

reg synced = 1'b0;

