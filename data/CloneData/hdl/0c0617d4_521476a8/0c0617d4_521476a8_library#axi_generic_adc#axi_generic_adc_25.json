{"Source Block": ["hdl/library/axi_generic_adc/axi_generic_adc.v@196:251@HdlStmFor", "  .up_rack (up_rack));\n\ngenerate\ngenvar i;\n\nfor (i = 0; i < NUM_OF_CHANNELS; i=i+1) begin\n  up_adc_channel #(.CHANNEL_ID(i)) i_up_adc_channel (\n    .adc_clk (adc_clk),\n    .adc_rst (adc_rst),\n    .adc_enable (adc_enable[i]),\n    .adc_iqcor_enb (),\n    .adc_dcfilt_enb (),\n    .adc_dfmt_se (),\n    .adc_dfmt_type (),\n    .adc_dfmt_enable (),\n    .adc_dcfilt_offset (),\n    .adc_dcfilt_coeff (),\n    .adc_iqcor_coeff_1 (),\n    .adc_iqcor_coeff_2 (),\n    .adc_pnseq_sel (),\n    .adc_data_sel (),\n    .adc_pn_err (1'b0),\n    .adc_pn_oos (1'b0),\n    .adc_or (1'b0),\n    .up_adc_pn_err (),\n    .up_adc_pn_oos (),\n    .up_adc_or (),\n    .up_usr_datatype_be (),\n    .up_usr_datatype_signed (),\n    .up_usr_datatype_shift (),\n    .up_usr_datatype_total_bits (),\n    .up_usr_datatype_bits (),\n    .up_usr_decimation_m (),\n    .up_usr_decimation_n (),\n    .adc_usr_datatype_be (1'b0),\n    .adc_usr_datatype_signed (1'b1),\n    .adc_usr_datatype_shift (8'd0),\n    .adc_usr_datatype_total_bits (8'd32),\n    .adc_usr_datatype_bits (8'd32),\n    .adc_usr_decimation_m (16'd1),\n    .adc_usr_decimation_n (16'd1),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq_s),\n    .up_waddr (up_waddr_s),\n    .up_wdata (up_wdata_s),\n    .up_wack (up_wack_s[i]),\n    .up_rreq (up_rreq_s),\n    .up_raddr (up_raddr_s),\n    .up_rdata (up_rdata_s[i]),\n    .up_rack (up_rack_s[i]));\nend\n\nendgenerate\n\nendmodule\n"], "Clone Blocks": [["hdl/library/jesd204/ad_ip_jesd204_tpl_adc/ad_ip_jesd204_tpl_adc_regmap.v@264:329", "    .up_rack (up_rack_s[0])\n  );\n\n  generate\n  genvar i;\n  for (i = 0; i < NUM_CHANNELS; i = i + 1) begin: g_channel\n    up_adc_channel #(\n      .COMMON_ID (6'h1 + i/16),\n      .CHANNEL_ID (i % 16),\n      .USERPORTS_DISABLE (1),\n      .DCFILTER_DISABLE (1),\n      .IQCORRECTION_DISABLE (1)\n    ) i_up_adc_channel (\n      .adc_clk (link_clk),\n      .adc_rst (adc_rst),\n      .adc_enable (enable[i]),\n      .adc_iqcor_enb (),\n      .adc_dcfilt_enb (),\n      .adc_dfmt_enable (dfmt_enable[i]),\n      .adc_dfmt_se (dfmt_sign_extend[i]),\n      .adc_dfmt_type (dfmt_type[i]),\n      .adc_dcfilt_offset (),\n      .adc_dcfilt_coeff (),\n      .adc_iqcor_coeff_1 (),\n      .adc_iqcor_coeff_2 (),\n      .adc_pnseq_sel (pn_seq_sel[i*4+:4]),\n      .adc_data_sel (),\n      .adc_pn_err (pn_err[i]),\n      .adc_pn_oos (pn_oos[i]),\n      .adc_or (1'b0),\n      .adc_usr_datatype_be (1'b0),\n      .adc_usr_datatype_signed (1'b1),\n      .adc_usr_datatype_shift (8'd0),\n      .adc_usr_datatype_total_bits (8'd16),\n      .adc_usr_datatype_bits (8'd16),\n      .adc_usr_decimation_m (16'd1),\n      .adc_usr_decimation_n (16'd1),\n\n      .up_adc_pn_err (up_adc_pn_err_s[i]),\n      .up_adc_pn_oos (up_adc_pn_oos_s[i]),\n      .up_adc_or (),\n      .up_usr_datatype_be (),\n      .up_usr_datatype_signed (),\n      .up_usr_datatype_shift (),\n      .up_usr_datatype_total_bits (),\n      .up_usr_datatype_bits (),\n      .up_usr_decimation_m (),\n      .up_usr_decimation_n (),\n\n      .up_clk (up_clk),\n      .up_rstn (up_rstn),\n      .up_wreq (up_wreq_s),\n      .up_waddr ({3'b0,up_waddr_s}),\n      .up_wdata (up_wdata_s),\n      .up_wack (up_wack_s[i+1]),\n      .up_rreq (up_rreq_s),\n      .up_raddr ({3'b0,up_raddr_s}),\n      .up_rdata (up_rdata_s[i+1]),\n      .up_rack (up_rack_s[i+1])\n    );\n  end\n  endgenerate\n\n  up_tpl_common #(\n     .COMMON_ID(2'h0),            // Offset of regmap\n     .NUM_PROFILES(NUM_PROFILES)  // Number of JESD profiles\n"]], "Diff Content": {"Delete": [[201, "for (i = 0; i < NUM_OF_CHANNELS; i=i+1) begin\n"], [202, "  up_adc_channel #(.CHANNEL_ID(i)) i_up_adc_channel (\n"], [205, "    .adc_enable (adc_enable[i]),\n"], [206, "    .adc_iqcor_enb (),\n"], [207, "    .adc_dcfilt_enb (),\n"], [208, "    .adc_dfmt_se (),\n"], [209, "    .adc_dfmt_type (),\n"], [210, "    .adc_dfmt_enable (),\n"], [211, "    .adc_dcfilt_offset (),\n"], [212, "    .adc_dcfilt_coeff (),\n"], [213, "    .adc_iqcor_coeff_1 (),\n"], [214, "    .adc_iqcor_coeff_2 (),\n"], [215, "    .adc_pnseq_sel (),\n"], [216, "    .adc_data_sel (),\n"], [217, "    .adc_pn_err (1'b0),\n"], [218, "    .adc_pn_oos (1'b0),\n"], [219, "    .adc_or (1'b0),\n"], [220, "    .up_adc_pn_err (),\n"], [221, "    .up_adc_pn_oos (),\n"], [222, "    .up_adc_or (),\n"], [223, "    .up_usr_datatype_be (),\n"], [224, "    .up_usr_datatype_signed (),\n"], [225, "    .up_usr_datatype_shift (),\n"], [226, "    .up_usr_datatype_total_bits (),\n"], [227, "    .up_usr_datatype_bits (),\n"], [228, "    .up_usr_decimation_m (),\n"], [229, "    .up_usr_decimation_n (),\n"], [230, "    .adc_usr_datatype_be (1'b0),\n"], [231, "    .adc_usr_datatype_signed (1'b1),\n"], [232, "    .adc_usr_datatype_shift (8'd0),\n"], [233, "    .adc_usr_datatype_total_bits (8'd32),\n"], [234, "    .adc_usr_datatype_bits (8'd32),\n"], [235, "    .adc_usr_decimation_m (16'd1),\n"], [236, "    .adc_usr_decimation_n (16'd1),\n"], [242, "    .up_wack (up_wack_s[i]),\n"], [245, "    .up_rdata (up_rdata_s[i]),\n"], [246, "    .up_rack (up_rack_s[i]));\n"], [247, "end\n"]], "Add": [[202, "  up_adc_common #(\n"], [202, "    .ID(ID)\n"], [202, "  ) i_up_adc_common (\n"], [202, "    .mmcm_rst (),\n"], [236, "    .adc_r1_mode (),\n"], [236, "    .adc_ddr_edgesel (),\n"], [236, "    .adc_pin_mode (),\n"], [236, "    .adc_status ('h00),\n"], [236, "    .adc_sync_status (1'b1),\n"], [236, "    .adc_status_ovf (adc_dovf),\n"], [236, "    .adc_clk_ratio (32'd1),\n"], [236, "    .adc_start_code (),\n"], [236, "    .adc_sref_sync (),\n"], [236, "    .adc_sync (),\n"], [236, "    .up_pps_rcounter (32'b0),\n"], [236, "    .up_pps_status (1'b0),\n"], [236, "    .up_pps_irq_mask (),\n"], [236, "    .up_adc_ce (),\n"], [236, "    .up_status_pn_err (1'b0),\n"], [236, "    .up_status_pn_oos (1'b0),\n"], [236, "    .up_status_or (1'b0),\n"], [236, "    .up_drp_sel (),\n"], [236, "    .up_drp_wr (),\n"], [236, "    .up_drp_addr (),\n"], [236, "    .up_drp_wdata (),\n"], [236, "    .up_drp_rdata (32'd0),\n"], [236, "    .up_drp_ready (1'd0),\n"], [236, "    .up_drp_locked (1'd1),\n"], [236, "    .up_usr_chanmax_out (),\n"], [236, "    .up_usr_chanmax_in (NUM_OF_CHANNELS),\n"], [236, "    .up_adc_gpio_in (32'b0),\n"], [236, "    .up_adc_gpio_out (),\n"], [242, "    .up_wack (up_wack_s[NUM_OF_CHANNELS]),\n"], [247, "    .up_rdata (up_rdata_s[NUM_OF_CHANNELS]),\n"], [247, "    .up_rack (up_rack_s[NUM_OF_CHANNELS]));\n"], [247, "  up_axi i_up_axi (\n"], [247, "    .up_rstn (up_rstn),\n"], [247, "    .up_clk (up_clk),\n"], [247, "    .up_axi_awvalid (s_axi_awvalid),\n"], [247, "    .up_axi_awaddr (s_axi_awaddr),\n"], [247, "    .up_axi_awready (s_axi_awready),\n"], [247, "    .up_axi_wvalid (s_axi_wvalid),\n"], [247, "    .up_axi_wdata (s_axi_wdata),\n"], [247, "    .up_axi_wstrb (s_axi_wstrb),\n"], [247, "    .up_axi_wready (s_axi_wready),\n"], [247, "    .up_axi_bvalid (s_axi_bvalid),\n"], [247, "    .up_axi_bresp (s_axi_bresp),\n"], [247, "    .up_axi_bready (s_axi_bready),\n"], [247, "    .up_axi_arvalid (s_axi_arvalid),\n"], [247, "    .up_axi_araddr (s_axi_araddr),\n"], [247, "    .up_axi_arready (s_axi_arready),\n"], [247, "    .up_axi_rvalid (s_axi_rvalid),\n"], [247, "    .up_axi_rresp (s_axi_rresp),\n"], [247, "    .up_axi_rdata (s_axi_rdata),\n"], [247, "    .up_axi_rready (s_axi_rready),\n"], [247, "    .up_wreq (up_wreq_s),\n"], [247, "    .up_waddr (up_waddr_s),\n"], [247, "    .up_wdata (up_wdata_s),\n"], [247, "    .up_wack (up_wack),\n"], [247, "    .up_rreq (up_rreq_s),\n"], [247, "    .up_raddr (up_raddr_s),\n"], [247, "    .up_rdata (up_rdata),\n"], [247, "    .up_rack (up_rack));\n"], [247, "  generate\n"], [247, "  genvar i;\n"], [247, "  for (i = 0; i < NUM_OF_CHANNELS; i=i+1) begin\n"], [247, "    up_adc_channel #(\n"], [247, "      .CHANNEL_ID(i)\n"], [247, "    ) i_up_adc_channel (\n"], [247, "      .adc_clk (adc_clk),\n"], [247, "      .adc_rst (adc_rst),\n"], [247, "      .adc_enable (adc_enable[i]),\n"], [247, "      .adc_iqcor_enb (),\n"], [247, "      .adc_dcfilt_enb (),\n"], [247, "      .adc_dfmt_se (),\n"], [247, "      .adc_dfmt_type (),\n"], [247, "      .adc_dfmt_enable (),\n"], [247, "      .adc_dcfilt_offset (),\n"], [247, "      .adc_dcfilt_coeff (),\n"], [247, "      .adc_iqcor_coeff_1 (),\n"], [247, "      .adc_iqcor_coeff_2 (),\n"], [247, "      .adc_pnseq_sel (),\n"], [247, "      .adc_data_sel (),\n"], [247, "      .adc_pn_err (1'b0),\n"], [247, "      .adc_pn_oos (1'b0),\n"], [247, "      .adc_or (1'b0),\n"], [247, "      .up_adc_pn_err (),\n"], [247, "      .up_adc_pn_oos (),\n"], [247, "      .up_adc_or (),\n"], [247, "      .up_usr_datatype_be (),\n"], [247, "      .up_usr_datatype_signed (),\n"], [247, "      .up_usr_datatype_shift (),\n"], [247, "      .up_usr_datatype_total_bits (),\n"], [247, "      .up_usr_datatype_bits (),\n"], [247, "      .up_usr_decimation_m (),\n"], [247, "      .up_usr_decimation_n (),\n"], [247, "      .adc_usr_datatype_be (1'b0),\n"], [247, "      .adc_usr_datatype_signed (1'b1),\n"], [247, "      .adc_usr_datatype_shift (8'd0),\n"], [247, "      .adc_usr_datatype_total_bits (8'd32),\n"], [247, "      .adc_usr_datatype_bits (8'd32),\n"], [247, "      .adc_usr_decimation_m (16'd1),\n"], [247, "      .adc_usr_decimation_n (16'd1),\n"], [247, "      .up_rstn (up_rstn),\n"], [247, "      .up_clk (up_clk),\n"], [247, "      .up_wreq (up_wreq_s),\n"], [247, "      .up_waddr (up_waddr_s),\n"], [247, "      .up_wdata (up_wdata_s),\n"], [247, "      .up_wack (up_wack_s[i]),\n"], [247, "      .up_rreq (up_rreq_s),\n"], [247, "      .up_raddr (up_raddr_s),\n"], [247, "      .up_rdata (up_rdata_s[i]),\n"], [247, "      .up_rack (up_rack_s[i]));\n"], [247, "  end\n"]]}}