Source Block: hdl/library/jesd204/axi_jesd204_rx/jesd204_up_rx_lane.v@89:107@HdlStmProcess
  .out_bits({
    up_status_ifs_ready
  })
);

always @(posedge up_clk) begin
  if (up_reset_synchronizer == 1'b1) begin
    up_status_latency <= 'h00;
  end else begin
    if (up_status_ifs_ready == 1'b1) begin
      up_status_latency <= core_status_latency;
    end
  end
end

always @(*) begin
  if (up_raddr[2] == 1'b1) begin
    if (up_ilas_ready == 1'b1) begin
      up_rdata = up_ilas_rdata;

Diff Content:
- 94 always @(posedge up_clk) begin
- 95   if (up_reset_synchronizer == 1'b1) begin
- 96     up_status_latency <= 'h00;
- 97   end else begin
- 98     if (up_status_ifs_ready == 1'b1) begin
- 99       up_status_latency <= core_status_latency;
- 102 end
+ 99   wire [1:0] up_status_ctrl_state;
+ 99   wire up_status_ifs_ready;
+ 99   reg [13:0] up_status_latency = 'h00;
+ 99   wire [31:0] up_ilas_rdata;
+ 99   wire up_ilas_ready;
+ 99   sync_bits #(
+ 99     .NUM_OF_BITS(1)
+ 99   ) i_cdc_status_ready (
+ 99     .in_bits({
+ 99       core_status_ifs_ready
+ 99     }),
+ 99     .out_clk(up_clk),
+ 99     .out_resetn(1'b1),
+ 99     .out_bits({
+ 99       up_status_ifs_ready
+ 99     }));
+ 99   always @(posedge up_clk) begin
+ 99     if (up_reset_synchronizer == 1'b1) begin
+ 99       up_status_latency <= 'h00;
+ 99     end else begin
+ 99       if (up_status_ifs_ready == 1'b1) begin
+ 99         up_status_latency <= core_status_latency;
+ 99       end

Clone Blocks:
