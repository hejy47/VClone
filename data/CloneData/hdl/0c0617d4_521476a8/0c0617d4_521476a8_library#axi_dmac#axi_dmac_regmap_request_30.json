{"Source Block": ["hdl/library/axi_dmac/axi_dmac_regmap_request.v@179:214@HdlStmIf", "  default: up_rdata <= 32'h00;\n  endcase\nend\n\ngenerate\nif (DMA_2D_TRANSFER == 1) begin\n  reg [DMA_LENGTH_WIDTH-1:0] up_dma_y_length = 'h00;\n  reg [DMA_LENGTH_WIDTH-1:0] up_dma_src_stride = 'h00;\n  reg [DMA_LENGTH_WIDTH-1:0] up_dma_dest_stride = 'h00;\n\n  always @(posedge clk) begin\n    if (reset == 1'b1) begin\n      up_dma_y_length <= 'h00;\n      up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= 'h00;\n      up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= 'h00;\n    end else if (up_wreq == 1'b1) begin\n      case (up_waddr)\n      9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n      9'h108: up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n      9'h109: up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n      endcase\n    end\n  end\n  assign request_y_length = up_dma_y_length;\n  assign request_dest_stride = up_dma_dest_stride;\n  assign request_src_stride = up_dma_src_stride;\nend else begin\n  assign request_y_length = 'h0;\n  assign request_dest_stride = 'h0;\n  assign request_src_stride = 'h0;\nend\nendgenerate\n\n// In cyclic mode the same transfer is submitted over and over again\nassign up_sot = up_dma_cyclic ? 1'b0 : up_dma_req_valid & up_dma_req_ready;\nassign up_eot = up_dma_cyclic ? 1'b0 : response_eot & response_valid & response_ready;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[184, "if (DMA_2D_TRANSFER == 1) begin\n"], [185, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_y_length = 'h00;\n"], [186, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_src_stride = 'h00;\n"], [187, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_dest_stride = 'h00;\n"], [189, "  always @(posedge clk) begin\n"], [190, "    if (reset == 1'b1) begin\n"], [191, "      up_dma_y_length <= 'h00;\n"], [192, "      up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= 'h00;\n"], [193, "      up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= 'h00;\n"], [194, "    end else if (up_wreq == 1'b1) begin\n"], [195, "      case (up_waddr)\n"], [196, "      9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [197, "      9'h108: up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n"], [198, "      9'h109: up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n"], [199, "      endcase\n"], [200, "    end\n"], [202, "  assign request_y_length = up_dma_y_length;\n"], [203, "  assign request_dest_stride = up_dma_dest_stride;\n"], [204, "  assign request_src_stride = up_dma_src_stride;\n"], [205, "end else begin\n"], [206, "  assign request_y_length = 'h0;\n"], [207, "  assign request_dest_stride = 'h0;\n"], [208, "  assign request_src_stride = 'h0;\n"], [209, "end\n"]], "Add": [[200, "  always @(*) begin\n"], [200, "    case (up_raddr)\n"], [200, "    9'h101: up_rdata <= up_transfer_id;\n"], [200, "    9'h102: up_rdata <= up_dma_req_valid;\n"], [200, "    9'h103: up_rdata <= {29'h00, up_dma_enable_tlen_reporting, up_dma_last, up_dma_cyclic}; // Flags\n"], [200, "    9'h104: up_rdata <= HAS_DEST_ADDR ? {up_dma_dest_address,{BYTES_PER_BEAT_WIDTH_DEST{1'b0}}} : 'h00;\n"], [200, "    9'h105: up_rdata <= HAS_SRC_ADDR ? {up_dma_src_address,{BYTES_PER_BEAT_WIDTH_SRC{1'b0}}} : 'h00;\n"], [200, "    9'h106: up_rdata <= up_dma_x_length;\n"], [200, "    9'h107: up_rdata <= request_y_length;\n"], [200, "    9'h108: up_rdata <= request_dest_stride;\n"], [200, "    9'h109: up_rdata <= request_src_stride;\n"], [200, "    9'h10a: up_rdata <= {up_partial_length_valid,27'b0,up_transfer_done_bitmap};\n"], [200, "    9'h10b: up_rdata <= up_transfer_id_eot;\n"], [200, "    9'h10c: up_rdata <= 32'h0;\n"], [200, "    9'h112: up_rdata <= up_measured_transfer_length;\n"], [200, "    9'h113: up_rdata <= up_tlf_data[MEASURED_LENGTH_WIDTH-1 : 0];   // Length\n"], [200, "    9'h114: up_rdata <= up_tlf_data[MEASURED_LENGTH_WIDTH+: 2];  // ID\n"], [200, "    default: up_rdata <= 32'h00;\n"], [200, "    endcase\n"]]}}