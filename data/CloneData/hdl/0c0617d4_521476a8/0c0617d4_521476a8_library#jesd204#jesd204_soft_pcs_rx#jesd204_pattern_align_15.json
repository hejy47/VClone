{"Source Block": ["hdl/library/jesd204/jesd204_soft_pcs_rx/jesd204_pattern_align.v@76:104@HdlStmProcess", "\n/* 2-stage cascade of 3:1 and 4:1 muxes */\n\ninteger i;\n\nalways @(*) begin\n  for (i = 0; i < DATA_PATH_WIDTH*10+3; i = i + 1) begin\n    if (i < DATA_PATH_WIDTH*10+1) begin\n      case (align[3:2])\n      2'b00: aligned_data_stage1[i] = full_data[i];\n      2'b01: aligned_data_stage1[i] = full_data[i+4];\n      2'b10: aligned_data_stage1[i] = full_data[i+8];\n      default: aligned_data_stage1[i] = 1'b0;\n      endcase\n    end else begin\n      case (align[2])\n      1'b0: aligned_data_stage1[i] = full_data[i];\n      default: aligned_data_stage1[i] = full_data[i+4];\n      endcase\n    end\n  end\n\n  aligned_data_stage2 = aligned_data_stage1[align[1:0]+:DATA_PATH_WIDTH*10];\nend\n\nalways @(posedge clk) begin\n  data_d1 <= in_data[DATA_PATH_WIDTH*10-9+:9];\nend\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[81, "always @(*) begin\n"], [82, "  for (i = 0; i < DATA_PATH_WIDTH*10+3; i = i + 1) begin\n"], [83, "    if (i < DATA_PATH_WIDTH*10+1) begin\n"], [84, "      case (align[3:2])\n"], [85, "      2'b00: aligned_data_stage1[i] = full_data[i];\n"], [86, "      2'b01: aligned_data_stage1[i] = full_data[i+4];\n"], [87, "      2'b10: aligned_data_stage1[i] = full_data[i+8];\n"], [88, "      default: aligned_data_stage1[i] = 1'b0;\n"], [89, "      endcase\n"], [90, "    end else begin\n"], [91, "      case (align[2])\n"], [92, "      1'b0: aligned_data_stage1[i] = full_data[i];\n"], [93, "      default: aligned_data_stage1[i] = full_data[i+4];\n"], [94, "      endcase\n"], [96, "  end\n"], [98, "  aligned_data_stage2 = aligned_data_stage1[align[1:0]+:DATA_PATH_WIDTH*10];\n"], [99, "end\n"]], "Add": [[94, "  always @(*) begin\n"], [94, "    for (i = 0; i < DATA_PATH_WIDTH*10+3; i = i + 1) begin\n"], [94, "      if (i < DATA_PATH_WIDTH*10+1) begin\n"], [94, "        case (align[3:2])\n"], [94, "        2'b00: aligned_data_stage1[i] = full_data[i];\n"], [94, "        2'b01: aligned_data_stage1[i] = full_data[i+4];\n"], [94, "        2'b10: aligned_data_stage1[i] = full_data[i+8];\n"], [94, "        default: aligned_data_stage1[i] = 1'b0;\n"], [94, "        endcase\n"], [94, "      end else begin\n"], [94, "        case (align[2])\n"], [94, "        1'b0: aligned_data_stage1[i] = full_data[i];\n"], [94, "        default: aligned_data_stage1[i] = full_data[i+4];\n"], [94, "        endcase\n"], [94, "      end\n"], [99, "    aligned_data_stage2 = aligned_data_stage1[align[1:0]+:DATA_PATH_WIDTH*10];\n"], [99, "  end\n"]]}}