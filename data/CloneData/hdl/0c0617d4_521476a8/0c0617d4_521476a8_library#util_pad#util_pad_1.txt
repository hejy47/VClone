Source Block: hdl/library/util_pad/util_pad.v@33:56@HdlStmIf
  input [NUM_OF_SAMPLES*IN_BITS_PER_SAMPLE-1:0] data_in,
  output reg [NUM_OF_SAMPLES*OUT_BITS_PER_SAMPLE-1:0] data_out
);

// Remove padding
if (IN_BITS_PER_SAMPLE >= OUT_BITS_PER_SAMPLE) begin
  integer i;
  always @(*) begin
    for (i=0;i<NUM_OF_SAMPLES;i=i+1) begin
      if (PADDING_TO_MSB_LSB_N==1) begin
        data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
          data_in[i*IN_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE];
      end else begin
        data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
          data_in[((i+1)*IN_BITS_PER_SAMPLE)-1 -: OUT_BITS_PER_SAMPLE];
      end
    end
  end
end

// Add padding
if (IN_BITS_PER_SAMPLE < OUT_BITS_PER_SAMPLE) begin
  integer i;
  always @(*) begin

Diff Content:
- 38 if (IN_BITS_PER_SAMPLE >= OUT_BITS_PER_SAMPLE) begin
- 39   integer i;
- 40   always @(*) begin
- 41     for (i=0;i<NUM_OF_SAMPLES;i=i+1) begin
- 42       if (PADDING_TO_MSB_LSB_N==1) begin
- 43         data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
- 44           data_in[i*IN_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE];
- 45       end else begin
- 46         data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
- 47           data_in[((i+1)*IN_BITS_PER_SAMPLE)-1 -: OUT_BITS_PER_SAMPLE];
- 51 end
+ 47   if (IN_BITS_PER_SAMPLE >= OUT_BITS_PER_SAMPLE) begin
+ 47     integer i;
+ 47     always @(*) begin
+ 47       for (i=0;i<NUM_OF_SAMPLES;i=i+1) begin
+ 47         if (PADDING_TO_MSB_LSB_N==1) begin
+ 47           data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
+ 47             data_in[i*IN_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE];
+ 47         end else begin
+ 47           data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
+ 47             data_in[((i+1)*IN_BITS_PER_SAMPLE)-1 -: OUT_BITS_PER_SAMPLE];
+ 47         end

Clone Blocks:
Clone Blocks 1:
hdl/library/util_pad/util_pad.v@49:71
    end
  end
end

// Add padding
if (IN_BITS_PER_SAMPLE < OUT_BITS_PER_SAMPLE) begin
  integer i;
  always @(*) begin
    for (i=0;i<NUM_OF_SAMPLES;i=i+1) begin
      if (PADDING_TO_MSB_LSB_N==1) begin
        data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
          {{OUT_BITS_PER_SAMPLE-IN_BITS_PER_SAMPLE{data_in[(i+1)*IN_BITS_PER_SAMPLE-1]&SIGN_EXTEND[0]}},
          data_in[i*IN_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE]};
      end else begin
        data_out[i*OUT_BITS_PER_SAMPLE +: OUT_BITS_PER_SAMPLE] =
          {data_in[((i+1)*IN_BITS_PER_SAMPLE)-1 -: OUT_BITS_PER_SAMPLE],
          {OUT_BITS_PER_SAMPLE-IN_BITS_PER_SAMPLE{1'b0}}};
      end
    end
  end
end

endmodule

