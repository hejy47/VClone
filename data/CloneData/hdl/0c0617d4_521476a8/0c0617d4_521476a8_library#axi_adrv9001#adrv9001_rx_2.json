{"Source Block": ["hdl/library/axi_adrv9001/adrv9001_rx.v@188:279@HdlStmIf", "\n  end\n  endgenerate\n\n  generate\n  if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n\n    BUFIO i_clk_buf (\n      .I (clk_in_s),\n      .O (adc_clk_in_fast));\n\n    BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n      .CLR (mssi_sync),\n      .CE (1'b1),\n      .I (clk_in_s),\n      .O (adc_clk_div_s));\n\n    if (USE_BUFG == 1) begin\n      BUFG I_bufg (\n        .I (adc_clk_div_s),\n        .O (adc_clk_div)\n      );\n    end else begin\n      assign adc_clk_div = adc_clk_div_s;\n    end\n\n    xpm_cdc_async_rst\n    # (\n       .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n       .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n       .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n      )\n    rst_syncro\n    (\n     .src_arst (mssi_sync  ),\n     .dest_clk (adc_clk_div),\n     .dest_arst(ssi_rst    )\n    );\n\n  end else begin\n    wire adc_clk_in;\n\n    reg mssi_sync_d = 1'b0;\n    reg mssi_sync_2d = 1'b0;\n    reg mssi_sync_3d = 1'b0;\n    reg mssi_sync_edge = 1'b0;\n    always @(posedge adc_clk_in) begin\n      mssi_sync_d <= mssi_sync;\n      mssi_sync_2d <= mssi_sync_d;\n      mssi_sync_3d <= mssi_sync_2d;\n      mssi_sync_edge <= mssi_sync_2d & ~mssi_sync_3d;\n    end\n\n    assign ssi_sync_out = mssi_sync_edge;\n\n    reg ssi_rst_pos;\n    always @(posedge adc_clk_in) begin\n      ssi_rst_pos <= ssi_sync_in;\n    end\n\n    assign adc_clk_in = clk_in_s;\n\n    BUFGCE #(\n       .CE_TYPE (\"SYNC\"),\n       .IS_CE_INVERTED (1'b0),\n       .IS_I_INVERTED (1'b0)\n    ) i_clk_buf_fast (\n       .O (adc_clk_in_fast),\n       .CE (1'b1),\n       .I (adc_clk_in)\n    );\n\n    BUFGCE_DIV #(\n       .BUFGCE_DIVIDE (4),\n       .IS_CE_INVERTED (1'b0),\n       .IS_CLR_INVERTED (1'b0),\n       .IS_I_INVERTED (1'b0)\n    ) i_div_clk_buf (\n       .O (adc_clk_div),\n       .CE (1'b1),\n       .CLR (ssi_rst),\n       .I (adc_clk_in)\n    );\n\n    assign ssi_rst = ssi_rst_pos;\n\n  end\n\n  endgenerate\n\n  assign adc_clk = adc_clk_in_fast;\n  assign adc_valid = ~adc_rst;\n"], "Clone Blocks": [["hdl/library/axi_adrv9001/adrv9001_rx.v@188:279", "\n  end\n  endgenerate\n\n  generate\n  if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n\n    BUFIO i_clk_buf (\n      .I (clk_in_s),\n      .O (adc_clk_in_fast));\n\n    BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n      .CLR (mssi_sync),\n      .CE (1'b1),\n      .I (clk_in_s),\n      .O (adc_clk_div_s));\n\n    if (USE_BUFG == 1) begin\n      BUFG I_bufg (\n        .I (adc_clk_div_s),\n        .O (adc_clk_div)\n      );\n    end else begin\n      assign adc_clk_div = adc_clk_div_s;\n    end\n\n    xpm_cdc_async_rst\n    # (\n       .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n       .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n       .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n      )\n    rst_syncro\n    (\n     .src_arst (mssi_sync  ),\n     .dest_clk (adc_clk_div),\n     .dest_arst(ssi_rst    )\n    );\n\n  end else begin\n    wire adc_clk_in;\n\n    reg mssi_sync_d = 1'b0;\n    reg mssi_sync_2d = 1'b0;\n    reg mssi_sync_3d = 1'b0;\n    reg mssi_sync_edge = 1'b0;\n    always @(posedge adc_clk_in) begin\n      mssi_sync_d <= mssi_sync;\n      mssi_sync_2d <= mssi_sync_d;\n      mssi_sync_3d <= mssi_sync_2d;\n      mssi_sync_edge <= mssi_sync_2d & ~mssi_sync_3d;\n    end\n\n    assign ssi_sync_out = mssi_sync_edge;\n\n    reg ssi_rst_pos;\n    always @(posedge adc_clk_in) begin\n      ssi_rst_pos <= ssi_sync_in;\n    end\n\n    assign adc_clk_in = clk_in_s;\n\n    BUFGCE #(\n       .CE_TYPE (\"SYNC\"),\n       .IS_CE_INVERTED (1'b0),\n       .IS_I_INVERTED (1'b0)\n    ) i_clk_buf_fast (\n       .O (adc_clk_in_fast),\n       .CE (1'b1),\n       .I (adc_clk_in)\n    );\n\n    BUFGCE_DIV #(\n       .BUFGCE_DIVIDE (4),\n       .IS_CE_INVERTED (1'b0),\n       .IS_CLR_INVERTED (1'b0),\n       .IS_I_INVERTED (1'b0)\n    ) i_div_clk_buf (\n       .O (adc_clk_div),\n       .CE (1'b1),\n       .CLR (ssi_rst),\n       .I (adc_clk_in)\n    );\n\n    assign ssi_rst = ssi_rst_pos;\n\n  end\n\n  endgenerate\n\n  assign adc_clk = adc_clk_in_fast;\n  assign adc_valid = ~adc_rst;\n"]], "Diff Content": {"Delete": [[199, "    BUFR #(.BUFR_DIVIDE(\"4\")) i_div_clk_buf (\n"], [208, "        .O (adc_clk_div)\n"], [209, "      );\n"], [214, "    xpm_cdc_async_rst\n"], [215, "    # (\n"], [216, "       .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n"], [217, "       .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n"], [218, "       .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n"], [219, "      )\n"], [220, "    rst_syncro\n"], [221, "    (\n"], [222, "     .src_arst (mssi_sync  ),\n"], [223, "     .dest_clk (adc_clk_div),\n"], [224, "     .dest_arst(ssi_rst    )\n"], [225, "    );\n"], [251, "       .CE_TYPE (\"SYNC\"),\n"], [252, "       .IS_CE_INVERTED (1'b0),\n"], [253, "       .IS_I_INVERTED (1'b0)\n"], [255, "       .O (adc_clk_in_fast),\n"], [256, "       .CE (1'b1),\n"], [257, "       .I (adc_clk_in)\n"], [258, "    );\n"], [261, "       .BUFGCE_DIVIDE (4),\n"], [262, "       .IS_CE_INVERTED (1'b0),\n"], [263, "       .IS_CLR_INVERTED (1'b0),\n"], [264, "       .IS_I_INVERTED (1'b0)\n"], [266, "       .O (adc_clk_div),\n"], [267, "       .CE (1'b1),\n"], [268, "       .CLR (ssi_rst),\n"], [269, "       .I (adc_clk_in)\n"], [270, "    );\n"]], "Add": [[199, "    BUFR #(\n"], [199, "      .BUFR_DIVIDE(\"4\")\n"], [199, "    ) i_div_clk_buf (\n"], [209, "        .O (adc_clk_div));\n"], [225, "    xpm_cdc_async_rst #(\n"], [225, "      .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n"], [225, "      .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n"], [225, "      .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n"], [225, "    ) rst_syncro (\n"], [225, "      .src_arst (mssi_sync),\n"], [225, "      .dest_clk (adc_clk_div),\n"], [225, "      .dest_arst(ssi_rst));\n"], [253, "      .CE_TYPE (\"SYNC\"),\n"], [253, "      .IS_CE_INVERTED (1'b0),\n"], [253, "      .IS_I_INVERTED (1'b0)\n"], [258, "      .O (adc_clk_in_fast),\n"], [258, "      .CE (1'b1),\n"], [258, "      .I (adc_clk_in));\n"], [264, "      .BUFGCE_DIVIDE (4),\n"], [264, "      .IS_CE_INVERTED (1'b0),\n"], [264, "      .IS_CLR_INVERTED (1'b0),\n"], [264, "      .IS_I_INVERTED (1'b0)\n"], [270, "      .O (adc_clk_div),\n"], [270, "      .CE (1'b1),\n"], [270, "      .CLR (ssi_rst),\n"], [270, "      .I (adc_clk_in));\n"]]}}