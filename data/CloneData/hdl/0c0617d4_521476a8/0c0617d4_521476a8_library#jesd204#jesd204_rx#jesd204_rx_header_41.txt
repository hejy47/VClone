Source Block: hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@183:199@HdlStmProcess
assign valid_eomb = next_state[BIT_EMB_LOCK] && eomb;
assign valid_eoemb = next_state[BIT_EMB_LOCK] && eoemb;

assign invalid_sequence = (invalid_eoemb || invalid_eomb);

always @(posedge clk) begin
  if (reset == 1'b1) begin
    state <= STATE_EMB_INIT;
  end else begin
    state <= next_state;
  end
end

assign emb_lock = next_state[BIT_EMB_LOCK];

// Status & error events
assign status_lane_emb_state = state;

Diff Content:
- 188 always @(posedge clk) begin
- 189   if (reset == 1'b1) begin
- 190     state <= STATE_EMB_INIT;
- 191   end else begin
- 192     state <= next_state;
- 194 end
+ 192   assign invalid_eoemb = (sh_count == 0 && ~eoemb);
+ 192   assign invalid_eomb = (sh_count[4:0] == 0 && ~eomb);
+ 192   assign valid_eomb = next_state[BIT_EMB_LOCK] && eomb;
+ 192   assign valid_eoemb = next_state[BIT_EMB_LOCK] && eoemb;
+ 192   assign invalid_sequence = (invalid_eoemb || invalid_eomb);
+ 192   always @(posedge clk) begin
+ 192     if (reset == 1'b1) begin
+ 192       state <= STATE_EMB_INIT;
+ 192     end else begin
+ 192       state <= next_state;
+ 192     end

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@179:189
end

assign invalid_eoemb = (sh_count == 0 && ~eoemb);
assign invalid_eomb = (sh_count[4:0] == 0 && ~eomb);
assign valid_eomb = next_state[BIT_EMB_LOCK] && eomb;
assign valid_eoemb = next_state[BIT_EMB_LOCK] && eoemb;

assign invalid_sequence = (invalid_eoemb || invalid_eomb);

always @(posedge clk) begin
  if (reset == 1'b1) begin

Clone Blocks 2:
hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@178:188
  if (sh_lock == 1'b0) next_state = STATE_EMB_INIT;
end

assign invalid_eoemb = (sh_count == 0 && ~eoemb);
assign invalid_eomb = (sh_count[4:0] == 0 && ~eomb);
assign valid_eomb = next_state[BIT_EMB_LOCK] && eomb;
assign valid_eoemb = next_state[BIT_EMB_LOCK] && eoemb;

assign invalid_sequence = (invalid_eoemb || invalid_eomb);

always @(posedge clk) begin

Clone Blocks 3:
hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@181:191
assign invalid_eoemb = (sh_count == 0 && ~eoemb);
assign invalid_eomb = (sh_count[4:0] == 0 && ~eomb);
assign valid_eomb = next_state[BIT_EMB_LOCK] && eomb;
assign valid_eoemb = next_state[BIT_EMB_LOCK] && eoemb;

assign invalid_sequence = (invalid_eoemb || invalid_eomb);

always @(posedge clk) begin
  if (reset == 1'b1) begin
    state <= STATE_EMB_INIT;
  end else begin

