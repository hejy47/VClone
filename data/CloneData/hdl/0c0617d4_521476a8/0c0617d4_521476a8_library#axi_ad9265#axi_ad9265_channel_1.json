{"Source Block": ["hdl/library/axi_ad9265/axi_ad9265_channel.v@92:114@HdlStmIf", "    .adc_pn_oos (adc_pn_oos_s),\n    .adc_pn_err (adc_pn_err_s),\n    .adc_pnseq_sel (adc_pnseq_sel_s));\n\n  generate\n  if (DATAPATH_DISABLE == 1) begin\n  assign adc_dfmt_data_s = adc_data;\n  end else begin\n  ad_datafmt #(.DATA_WIDTH(16)) i_ad_datafmt (\n    .clk (adc_clk),\n    .valid (1'b1),\n    .data (adc_data),\n    .valid_out (),\n    .data_out (adc_dfmt_data_s),\n    .dfmt_enable (adc_dfmt_enable_s),\n    .dfmt_type (adc_dfmt_type_s),\n    .dfmt_se (adc_dfmt_se_s));\n  end\n  endgenerate\n\n  generate\n  if (DATAPATH_DISABLE == 1) begin\n  assign adc_dcfilter_data_out = adc_dfmt_data_s;\n"], "Clone Blocks": [["hdl/library/axi_ad9963/axi_ad9963_rx_channel.v@110:133", "    .adc_pnseq_sel (adc_pnseq_sel_s),\n    .adc_pn_oos (adc_pn_oos_s),\n    .adc_pn_err (adc_pn_err_s));\n\n  generate\n  if (DATAFORMAT_DISABLE == 1) begin\n  assign adc_dfmt_valid_s = adc_valid;\n  assign adc_dfmt_data_s = {{4{adc_data[11]}}, adc_data};\n  end else begin\n  ad_datafmt #(.DATA_WIDTH (12)) i_ad_datafmt (\n    .clk (adc_clk),\n    .valid (adc_valid),\n    .data (adc_data),\n    .valid_out (adc_dfmt_valid_s),\n    .data_out (adc_dfmt_data_s),\n    .dfmt_enable (adc_dfmt_enable_s),\n    .dfmt_type (adc_dfmt_type_s),\n    .dfmt_se (adc_dfmt_se_s));\n  end\n  endgenerate\n\n  generate\n  if (DCFILTER_DISABLE == 1) begin\n  assign adc_dcfilter_valid_s = adc_dfmt_valid_s;\n"], ["hdl/library/axi_adaq8092/axi_adaq8092_channel.v@77:101", "  wire            adc_dfmt_enable_s;\n  wire    [15:0]  adc_dcfilt_offset_s;\n  wire    [15:0]  adc_dcfilt_coeff_s;\n      \n  generate\n    if (DATAPATH_DISABLE == 1) begin\n      assign adc_dfmt_data_s = {2'b0 , adc_data};\n    end else begin\n      ad_datafmt #(\n        .DATA_WIDTH(14)\n      ) i_ad_datafmt (\n        .clk (adc_clk),\n        .valid (1'b1),\n        .data (adc_data),\n        .valid_out (),\n        .data_out (adc_dfmt_data_s),\n        .dfmt_enable (adc_dfmt_enable_s),\n        .dfmt_type (adc_dfmt_type_s),\n        .dfmt_se (adc_dfmt_se_s));\n    end\n  endgenerate\n\n  generate\n    if (DATAPATH_DISABLE == 1) begin\n      assign adc_dcfilter_data_out = adc_dfmt_data_s;\n"], ["hdl/library/axi_ad9684/axi_ad9684_channel.v@91:111", "    .adc_pn_err (adc_pn_err_s),\n    .adc_pnseq_sel (adc_pnseq_sel_s));\n\n  genvar n;\n  generate\n  for (n = 0; n < 2; n = n + 1) begin: g_ad_datafmt_1\n  ad_datafmt #(.DATA_WIDTH(14)) i_ad_datafmt (\n    .clk (adc_clk),\n    .valid (1'b1),\n    .data (adc_data[n*14+13:n*14]),\n    .valid_out (adc_dfmt_valid_s[n]),\n    .data_out (adc_dfmt_data[n*16+15:n*16]),\n    .dfmt_enable (adc_dfmt_enable_s),\n    .dfmt_type (adc_dfmt_type_s),\n    .dfmt_se (adc_dfmt_se_s));\n  end\n  endgenerate\n\n  assign adc_valid = adc_dfmt_valid_s[0] | adc_dfmt_valid_s[1];\n\n  up_adc_channel #(\n"]], "Diff Content": {"Delete": [[100, "  ad_datafmt #(.DATA_WIDTH(16)) i_ad_datafmt (\n"]], "Add": [[100, "  ad_datafmt #(\n"], [100, "    .DATA_WIDTH(16)\n"], [100, "  ) i_ad_datafmt (\n"]]}}