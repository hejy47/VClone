Source Block: hdl/library/jesd204/jesd204_rx/jesd204_rx_lane_64b.v@240:254@HdlStmProcess
  .ready_n(buffer_ready_n),
  .do_release_n(buffer_release_n)
);

// Measure the delay from the eoemb to the next LMFC edge.
always @(posedge clk) begin
  if (lmfc_edge) begin
    status_lane_skew <= sh_count;
  end
end


/* Reorder octets LSB first */
genvar i;
generate

Diff Content:
- 245 always @(posedge clk) begin
- 246   if (lmfc_edge) begin
- 247     status_lane_skew <= sh_count;
- 249 end
+ 247   assign event_crc12_mismatch = crc12_rdy && eomb && (crc12_calculated_prev != crc12_received);
+ 247   assign err_cnt_rst = reset || ctrl_err_statistics_reset;
+ 247   error_monitor #(
+ 247     .EVENT_WIDTH(4),
+ 247     .CNT_WIDTH(32)
+ 247   ) i_error_monitor (
+ 247     .clk(clk),
+ 247     .reset(err_cnt_rst),
+ 247     .active(1'b1),
+ 247     .error_event({
+ 247       event_invalid_header,
+ 247       event_unexpected_eomb,
+ 247       event_unexpected_eoemb,
+ 247       event_crc12_mismatch
+ 247     }),
+ 247     .error_event_mask(ctrl_err_statistics_mask),
+ 247     .status_err_cnt(status_err_statistics_cnt));
+ 247   jesd204_scrambler_64b #(
+ 247     .WIDTH(64),
+ 247     .DESCRAMBLE(1)
+ 247   ) i_descrambler (
+ 247     .clk(clk),
+ 247     .reset(1'b0),
+ 247     .enable(~cfg_disable_scrambler),
+ 247     .data_in(phy_data),
+ 247     .data_out(data_descrambled_s));
+ 247   pipeline_stage #(
+ 247     .WIDTH(64),
+ 247     .REGISTERED(1)
+ 247   ) i_pipeline_stage2 (
+ 247     .clk(clk),
+ 247     .in({
+ 247         data_descrambled_s
+ 247       }),
+ 247     .out({
+ 247         data_descrambled
+ 247       }));
+ 247   always @(posedge clk) begin
+ 247     if (reset | ~emb_lock) begin
+ 247       buffer_ready_n <= 1'b1;
+ 247     end else if (sh_count == {1'b0,cfg_beats_per_multiframe[7:1]} && all_buffer_ready_n) begin
+ 247       buffer_ready_n <= 1'b1;
+ 247     end else if (eoemb) begin
+ 247       buffer_ready_n <= 1'b0;
+ 247     end

Clone Blocks:
