{"Source Block": ["hdl/library/jesd204/jesd204_tx/jesd204_tx_ctrl.v@126:149@HdlStmProcess", "  .out_bits(status_sync)\n);\n\nassign status_sync_masked = status_sync | cfg_links_disable;\n\nalways @(posedge clk) begin\n  if (reset == 1'b1) begin\n    sync_request <= {NUM_LINKS{1'b0}};\n  end else begin\n    /* TODO: SYNC must be asserted at least 4 frames before interpreted as a\n     * sync request and the /K28.5/ symbol generation has lasted for at\n     * least 1 frame + 9 octets */\n    if (cfg_continuous_cgs == 1'b1) begin\n      sync_request <= 1'b1;\n    end else begin\n      sync_request <= ~(&status_sync_masked) | ctrl_manual_sync_request;\n    end\n  end\nend\n\nalways @(posedge clk) begin\n  if (sync_request == 1'b0 && sync_request_received == 1'b1) begin\n    lmfc_edge_d1 <= lmfc_edge;\n    lmfc_edge_d2 <= lmfc_edge_d1;\n"], "Clone Blocks": [["hdl/library/jesd204/jesd204_tx/jesd204_tx_ctrl.v@141:159", "      sync_request <= ~(&status_sync_masked) | ctrl_manual_sync_request;\n    end\n  end\nend\n\nalways @(posedge clk) begin\n  if (sync_request == 1'b0 && sync_request_received == 1'b1) begin\n    lmfc_edge_d1 <= lmfc_edge;\n    lmfc_edge_d2 <= lmfc_edge_d1;\n  end else begin\n    lmfc_edge_d1 <= 1'b0;\n    lmfc_edge_d2 <= 1'b0;\n  end\nend\n\nalways @(posedge clk) begin\n  if (reset == 1'b1) begin\n    sync_request_received <= 1'b0;\n  end else if (sync_request == 1'b1) begin\n"]], "Diff Content": {"Delete": [[131, "always @(posedge clk) begin\n"], [132, "  if (reset == 1'b1) begin\n"], [133, "    sync_request <= {NUM_LINKS{1'b0}};\n"], [134, "  end else begin\n"], [135, "    /* TODO: SYNC must be asserted at least 4 frames before interpreted as a\n"], [136, "     * sync request and the /K28.5/ symbol generation has lasted for at\n"], [137, "     * least 1 frame + 9 octets */\n"], [138, "    if (cfg_continuous_cgs == 1'b1) begin\n"], [139, "      sync_request <= 1'b1;\n"], [141, "      sync_request <= ~(&status_sync_masked) | ctrl_manual_sync_request;\n"], [144, "end\n"]], "Add": [[139, "  localparam ILAS_DATA_LENGTH = (DATA_PATH_WIDTH == 4) ? 4 : 2;\n"], [139, "  localparam ILAS_COUNTER_WIDTH = (DATA_PATH_WIDTH == 4) ? 6 : 5;\n"], [139, "  localparam DPW_LOG2 = DATA_PATH_WIDTH == 8 ? 3 : DATA_PATH_WIDTH == 4 ? 2 : 1;\n"], [139, "  localparam BEATS_PER_MF_WIDTH = 10-DPW_LOG2;\n"], [139, "  wire [BEATS_PER_MF_WIDTH-1:0] cfg_beats_per_multiframe = cfg_octets_per_multiframe[9:DPW_LOG2];\n"], [139, "  wire octets_per_mf_4_mod_8 = (DATA_PATH_WIDTH == 8) && ~cfg_octets_per_multiframe[2];\n"], [139, "  wire [7:0] cfg_lmfc_per_ilas = octets_per_mf_4_mod_8 ? cfg_mframes_per_ilas/2 : cfg_mframes_per_ilas;\n"], [139, "  reg lmfc_edge_d1 = 1'b0;\n"], [139, "  reg lmfc_edge_d2 = 1'b0;\n"], [139, "  reg eof_reset_d;\n"], [139, "  reg ilas_reset = 1'b1;\n"], [139, "  reg ilas_data_reset = 1'b1;\n"], [139, "  reg sync_request = 1'b0;\n"], [139, "  reg sync_request_received = 1'b0;\n"], [139, "  reg last_ilas_mframe = 1'b0;\n"], [139, "  reg [7:0] mframe_counter = 'h00;\n"], [139, "  reg [ILAS_COUNTER_WIDTH-1:0] ilas_counter = 'h00;\n"], [139, "  wire ilas_config_rd_start;\n"], [139, "  reg ilas_config_rd_d1 = 1'b1;\n"], [139, "  reg cgs_enable = 1'b1;\n"], [139, "  wire [DATA_PATH_WIDTH*8-1:0] ilas_default_data;\n"], [139, "  wire [NUM_LINKS-1:0] status_sync_masked;\n"], [139, "  genvar ii;\n"], [139, "  genvar jj;\n"], [139, "  sync_bits #(\n"], [139, "    .NUM_OF_BITS (NUM_LINKS)\n"], [139, "  ) i_cdc_sync (\n"], [139, "    .in_bits(sync),\n"], [139, "    .out_clk(clk),\n"], [139, "    .out_resetn(1'b1),\n"], [139, "    .out_bits(status_sync));\n"], [139, "  assign status_sync_masked = status_sync | cfg_links_disable;\n"], [139, "  always @(posedge clk) begin\n"], [139, "    if (reset == 1'b1) begin\n"], [139, "      sync_request <= {NUM_LINKS{1'b0}};\n"], [141, "      /* TODO: SYNC must be asserted at least 4 frames before interpreted as a\n"], [141, "       * sync request and the /K28.5/ symbol generation has lasted for at\n"], [141, "       * least 1 frame + 9 octets */\n"], [141, "      if (cfg_continuous_cgs == 1'b1) begin\n"], [141, "        sync_request <= 1'b1;\n"], [141, "      end else begin\n"], [141, "        sync_request <= ~(&status_sync_masked) | ctrl_manual_sync_request;\n"], [141, "      end\n"]]}}