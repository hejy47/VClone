{"Source Block": ["hdl/library/cordic_demod/cordic_demod.v@102:147@HdlStmProcess", "  angle[28] = 32'h00000003;\n  angle[29] = 32'h00000001;\n  angle[30] = 32'h00000001;\nend\n\nalways @(posedge clk) begin\n  if (resetn == 1'b0) begin\n    state <= STATE_IDLE;\n  end else begin\n    case (state)\n    STATE_IDLE: begin\n      if (s_axis_valid == 1'b1) begin\n        state <= STATE_SHIFT_LOAD;\n      end\n    end\n    STATE_SHIFT_LOAD: begin\n      if (step_counter == 'h00) begin\n        state <= STATE_ADD;\n      end else begin\n        state <= STATE_SHIFT;\n      end\n    end\n    STATE_SHIFT: begin\n      if (shift_counter == 'h01) begin\n        state <= STATE_ADD;\n      end\n    end\n    STATE_ADD: begin\n      if (step_counter == 'd30) begin\n        state <= STATE_DONE;\n      end else begin\n        state <= STATE_SHIFT_LOAD;\n      end\n    end\n    STATE_DONE: begin\n      if (m_axis_ready == 1'b1)\n        state <= STATE_IDLE;\n    end\n    endcase\n  end\nend\n\nalways @(posedge clk) begin\n  case(state)\n  STATE_SHIFT_LOAD: begin\n    shift_counter <= step_counter;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[107, "always @(posedge clk) begin\n"], [108, "  if (resetn == 1'b0) begin\n"], [109, "    state <= STATE_IDLE;\n"], [110, "  end else begin\n"], [111, "    case (state)\n"], [112, "    STATE_IDLE: begin\n"], [113, "      if (s_axis_valid == 1'b1) begin\n"], [114, "        state <= STATE_SHIFT_LOAD;\n"], [116, "    end\n"], [117, "    STATE_SHIFT_LOAD: begin\n"], [118, "      if (step_counter == 'h00) begin\n"], [119, "        state <= STATE_ADD;\n"], [120, "      end else begin\n"], [121, "        state <= STATE_SHIFT;\n"], [123, "    end\n"], [124, "    STATE_SHIFT: begin\n"], [125, "      if (shift_counter == 'h01) begin\n"], [126, "        state <= STATE_ADD;\n"], [128, "    end\n"], [129, "    STATE_ADD: begin\n"], [130, "      if (step_counter == 'd30) begin\n"], [131, "        state <= STATE_DONE;\n"], [132, "      end else begin\n"], [133, "        state <= STATE_SHIFT_LOAD;\n"], [136, "    STATE_DONE: begin\n"], [137, "      if (m_axis_ready == 1'b1)\n"], [138, "        state <= STATE_IDLE;\n"], [139, "    end\n"], [140, "    endcase\n"], [142, "end\n"]], "Add": [[114, "  always @(posedge clk) begin\n"], [114, "    if (resetn == 1'b0) begin\n"], [114, "      state <= STATE_IDLE;\n"], [114, "    end else begin\n"], [114, "      case (state)\n"], [114, "      STATE_IDLE: begin\n"], [114, "        if (s_axis_valid == 1'b1) begin\n"], [114, "          state <= STATE_SHIFT_LOAD;\n"], [114, "        end\n"], [121, "      STATE_SHIFT_LOAD: begin\n"], [121, "        if (step_counter == 'h00) begin\n"], [121, "          state <= STATE_ADD;\n"], [121, "        end else begin\n"], [121, "          state <= STATE_SHIFT;\n"], [121, "        end\n"], [126, "      STATE_SHIFT: begin\n"], [126, "        if (shift_counter == 'h01) begin\n"], [126, "          state <= STATE_ADD;\n"], [126, "        end\n"], [133, "      STATE_ADD: begin\n"], [133, "        if (step_counter == 'd30) begin\n"], [133, "          state <= STATE_DONE;\n"], [133, "        end else begin\n"], [133, "          state <= STATE_SHIFT_LOAD;\n"], [133, "        end\n"], [134, "      STATE_DONE: begin\n"], [134, "        if (m_axis_ready == 1'b1)\n"], [134, "          state <= STATE_IDLE;\n"], [134, "      end\n"], [134, "      endcase\n"]]}}