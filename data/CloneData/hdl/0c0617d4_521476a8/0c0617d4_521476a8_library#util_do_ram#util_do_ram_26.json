{"Source Block": ["hdl/library/util_do_ram/util_do_ram.v@145:155@HdlIdDef", "always @(posedge s_axis_aclk) begin\n  if (wr_last_beat)\n    wr_response_measured_length <= {wr_addr, {SRC_ADDR_ALIGN{1'b1}}};\nend\n\nreg wr_full = 1'b0;\n// Protect against larger transfers than storage\nalways @(posedge s_axis_aclk) begin\n  if (wr_request_valid & wr_request_ready)\n    wr_full <= 1'b0;\n  else if (&wr_addr & (s_axis_valid & s_axis_ready))\n"], "Clone Blocks": [["hdl/library/util_do_ram/util_do_ram.v@133:148", "  else if (wr_last_beat) begin\n    s_axis_ready <= 1'b0;\n  end\nend\n\nalways @(posedge s_axis_aclk) begin\n  if (s_axis_valid & s_axis_ready)\n    wr_response_eot <= s_axis_last | (wr_addr == wr_length);\n  else\n    wr_response_eot <= 1'b0;\nend\n\nalways @(posedge s_axis_aclk) begin\n  if (wr_last_beat)\n    wr_response_measured_length <= {wr_addr, {SRC_ADDR_ALIGN{1'b1}}};\nend\n"], ["hdl/library/util_do_ram/util_do_ram.v@140:153", "    wr_response_eot <= s_axis_last | (wr_addr == wr_length);\n  else\n    wr_response_eot <= 1'b0;\nend\n\nalways @(posedge s_axis_aclk) begin\n  if (wr_last_beat)\n    wr_response_measured_length <= {wr_addr, {SRC_ADDR_ALIGN{1'b1}}};\nend\n\nreg wr_full = 1'b0;\n// Protect against larger transfers than storage\nalways @(posedge s_axis_aclk) begin\n  if (wr_request_valid & wr_request_ready)\n"], ["hdl/library/util_do_ram/util_do_ram.v@147:162", "    wr_response_measured_length <= {wr_addr, {SRC_ADDR_ALIGN{1'b1}}};\nend\n\nreg wr_full = 1'b0;\n// Protect against larger transfers than storage\nalways @(posedge s_axis_aclk) begin\n  if (wr_request_valid & wr_request_ready)\n    wr_full <= 1'b0;\n  else if (&wr_addr & (s_axis_valid & s_axis_ready))\n    wr_full <= 1'b1;\nend\n\n// Do not roll over write address\nalways @(posedge s_axis_aclk) begin\n  if (~wr_request_enable | wr_last_beat)\n    wr_addr <= 'h0;\n"]], "Diff Content": {"Delete": [[150, "reg wr_full = 1'b0;\n"]], "Add": []}}