Source Block: hdl/library/xilinx/common/ad_serdes_out.v@98:185@HdlStmFor
      else       serdes_rst_seq [6:0] <= {serdes_rst_seq [5:0], 1'b0};
  end

  genvar l_inst;
  generate
  for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data

    if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin
      OSERDESE2  #(
        .DATA_RATE_OQ (DR_OQ_DDR),
        .DATA_RATE_TQ ("SDR"),
        .DATA_WIDTH (SERDES_FACTOR),
        .TRISTATE_WIDTH (1),
        .SERDES_MODE ("MASTER"))
      i_serdes (
        .D1 (data_s0[l_inst]),
        .D2 (data_s1[l_inst]),
        .D3 (data_s2[l_inst]),
        .D4 (data_s3[l_inst]),
        .D5 (data_s4[l_inst]),
        .D6 (data_s5[l_inst]),
        .D7 (data_s6[l_inst]),
        .D8 (data_s7[l_inst]),
        .T1 (buffer_disable),
        .T2 (buffer_disable),
        .T3 (buffer_disable),
        .T4 (buffer_disable),
        .SHIFTIN1 (1'b0),
        .SHIFTIN2 (1'b0),
        .SHIFTOUT1 (),
        .SHIFTOUT2 (),
        .OCE (1'b1),
        .CLK (clk),
        .CLKDIV (div_clk),
        .OQ (data_out_s[l_inst]),
        .TQ (data_t[l_inst]),
        .OFB (),
        .TFB (),
        .TBYTEIN (1'b0),
        .TBYTEOUT (),
        .TCE (1'b1),
        .RST (serdes_rst));
    end

    if (FPGA_TECHNOLOGY == ULTRASCALE || FPGA_TECHNOLOGY == ULTRASCALE_PLUS) begin
      OSERDESE3  #(
        .DATA_WIDTH (SERDES_FACTOR),
        .SIM_DEVICE (SIM_DEVICE))
      i_serdes (
        .D ({data_s7[l_inst],
             data_s6[l_inst],
             data_s5[l_inst],
             data_s4[l_inst],
             data_s3[l_inst],
             data_s2[l_inst],
             data_s1[l_inst],
             data_s0[l_inst]}),
        .T (buffer_disable),
        .CLK (clk),
        .CLKDIV (div_clk),
        .OQ (data_out_s[l_inst]),
        .T_OUT (data_t[l_inst]),
        .RST (serdes_rst));
    end

    if (CMOS_LVDS_N == 0) begin

      OBUFTDS i_obuf (
        .T (data_t[l_inst]),
        .I (data_out_s[l_inst]),
        .O (data_out_p[l_inst]),
        .OB (data_out_n[l_inst]));

    end else begin

      OBUFT i_obuf (
        .T (data_t[l_inst]),
        .I (data_out_s[l_inst]),
        .O (data_out_p[l_inst]));

    end

  end
  endgenerate

endmodule

// ***************************************************************************

Diff Content:
- 111         .SERDES_MODE ("MASTER"))
- 112       i_serdes (
- 145         .SIM_DEVICE (SIM_DEVICE))
- 146       i_serdes (
+ 112         .SERDES_MODE ("MASTER")
+ 112       ) i_serdes (
+ 146         .SIM_DEVICE (SIM_DEVICE)
+ 146       ) i_serdes (

Clone Blocks:
