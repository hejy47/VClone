{"Source Block": ["hdl/library/axi_adrv9001/adrv9001_tx.v@172:261@HdlStmIf", "\n    assign {tx_dclk_out_n_NC,\n            tx_strobe_out_n_NC} = 2'b0;\n  end\n\n  if (USE_RX_CLK_FOR_TX == 0) begin\n\n    if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n\n      // SERDES fast clock\n      BUFIO i_dac_clk_in_gbuf (\n        .I (tx_dclk_in_s),\n        .O (dac_fast_clk));\n\n      // SERDES slow clock\n      BUFR #(.BUFR_DIVIDE(\"4\")) i_dac_div_clk_rbuf (\n        .CLR (mssi_sync),\n        .CE (1'b1),\n        .I (tx_dclk_in_s),\n        .O (dac_clk_div_s));\n\n      if (USE_BUFG == 1) begin\n        BUFG I_bufg (\n         .I (dac_clk_div_s),\n         .O (dac_clk_div)\n        );\n      end else begin\n        assign dac_clk_div = dac_clk_div_s;\n      end\n\n      xpm_cdc_async_rst\n      # (\n         .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n         .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n         .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n        )\n      rst_syncro\n      (\n       .src_arst (mssi_sync  ),\n       .dest_clk (dac_clk_div),\n       .dest_arst(ssi_rst    )\n      );\n\n    end else begin\n\n      reg mssi_sync_d = 1'b0;\n      reg mssi_sync_2d = 1'b0;\n      always @(posedge dac_fast_clk) begin\n        mssi_sync_d <= mssi_sync;\n        mssi_sync_2d <= mssi_sync_d;\n      end\n\n      BUFGCE #(\n         .CE_TYPE (\"SYNC\"),\n         .IS_CE_INVERTED (1'b0),\n         .IS_I_INVERTED (1'b0)\n      ) i_dac_clk_in_gbuf (\n         .O (dac_fast_clk),\n         .CE (1'b1),\n         .I (tx_dclk_in_s)\n      );\n\n      BUFGCE_DIV #(\n         .BUFGCE_DIVIDE (4),\n         .IS_CE_INVERTED (1'b0),\n         .IS_CLR_INVERTED (1'b0),\n         .IS_I_INVERTED (1'b0)\n      ) i_dac_div_clk_rbuf (\n         .O (dac_clk_div),\n         .CE (1'b1),\n         .CLR (mssi_sync_2d),\n         .I (tx_dclk_in_s)\n      );\n\n      assign ssi_rst = mssi_sync_2d;\n\n    end\n\n  end else begin\n\n    assign dac_fast_clk = rx_clk;\n    assign dac_clk_div = rx_clk_div;\n    assign ssi_rst = rx_ssi_rst;\n\n  end\n\n  endgenerate\n\n  assign dac_clk_ratio = 4;\n\n"], "Clone Blocks": [["hdl/library/axi_adrv9001/adrv9001_tx.v@172:261", "\n    assign {tx_dclk_out_n_NC,\n            tx_strobe_out_n_NC} = 2'b0;\n  end\n\n  if (USE_RX_CLK_FOR_TX == 0) begin\n\n    if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n\n      // SERDES fast clock\n      BUFIO i_dac_clk_in_gbuf (\n        .I (tx_dclk_in_s),\n        .O (dac_fast_clk));\n\n      // SERDES slow clock\n      BUFR #(.BUFR_DIVIDE(\"4\")) i_dac_div_clk_rbuf (\n        .CLR (mssi_sync),\n        .CE (1'b1),\n        .I (tx_dclk_in_s),\n        .O (dac_clk_div_s));\n\n      if (USE_BUFG == 1) begin\n        BUFG I_bufg (\n         .I (dac_clk_div_s),\n         .O (dac_clk_div)\n        );\n      end else begin\n        assign dac_clk_div = dac_clk_div_s;\n      end\n\n      xpm_cdc_async_rst\n      # (\n         .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n         .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n         .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n        )\n      rst_syncro\n      (\n       .src_arst (mssi_sync  ),\n       .dest_clk (dac_clk_div),\n       .dest_arst(ssi_rst    )\n      );\n\n    end else begin\n\n      reg mssi_sync_d = 1'b0;\n      reg mssi_sync_2d = 1'b0;\n      always @(posedge dac_fast_clk) begin\n        mssi_sync_d <= mssi_sync;\n        mssi_sync_2d <= mssi_sync_d;\n      end\n\n      BUFGCE #(\n         .CE_TYPE (\"SYNC\"),\n         .IS_CE_INVERTED (1'b0),\n         .IS_I_INVERTED (1'b0)\n      ) i_dac_clk_in_gbuf (\n         .O (dac_fast_clk),\n         .CE (1'b1),\n         .I (tx_dclk_in_s)\n      );\n\n      BUFGCE_DIV #(\n         .BUFGCE_DIVIDE (4),\n         .IS_CE_INVERTED (1'b0),\n         .IS_CLR_INVERTED (1'b0),\n         .IS_I_INVERTED (1'b0)\n      ) i_dac_div_clk_rbuf (\n         .O (dac_clk_div),\n         .CE (1'b1),\n         .CLR (mssi_sync_2d),\n         .I (tx_dclk_in_s)\n      );\n\n      assign ssi_rst = mssi_sync_2d;\n\n    end\n\n  end else begin\n\n    assign dac_fast_clk = rx_clk;\n    assign dac_clk_div = rx_clk_div;\n    assign ssi_rst = rx_ssi_rst;\n\n  end\n\n  endgenerate\n\n  assign dac_clk_ratio = 4;\n\n"]], "Diff Content": {"Delete": [[187, "      BUFR #(.BUFR_DIVIDE(\"4\")) i_dac_div_clk_rbuf (\n"], [195, "         .I (dac_clk_div_s),\n"], [196, "         .O (dac_clk_div)\n"], [197, "        );\n"], [202, "      xpm_cdc_async_rst\n"], [203, "      # (\n"], [204, "         .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n"], [205, "         .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n"], [206, "         .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n"], [207, "        )\n"], [208, "      rst_syncro\n"], [209, "      (\n"], [210, "       .src_arst (mssi_sync  ),\n"], [211, "       .dest_clk (dac_clk_div),\n"], [212, "       .dest_arst(ssi_rst    )\n"], [213, "      );\n"], [225, "         .CE_TYPE (\"SYNC\"),\n"], [226, "         .IS_CE_INVERTED (1'b0),\n"], [227, "         .IS_I_INVERTED (1'b0)\n"], [229, "         .O (dac_fast_clk),\n"], [230, "         .CE (1'b1),\n"], [231, "         .I (tx_dclk_in_s)\n"], [232, "      );\n"], [235, "         .BUFGCE_DIVIDE (4),\n"], [236, "         .IS_CE_INVERTED (1'b0),\n"], [237, "         .IS_CLR_INVERTED (1'b0),\n"], [238, "         .IS_I_INVERTED (1'b0)\n"], [240, "         .O (dac_clk_div),\n"], [241, "         .CE (1'b1),\n"], [242, "         .CLR (mssi_sync_2d),\n"], [243, "         .I (tx_dclk_in_s)\n"], [244, "      );\n"]], "Add": [[187, "      BUFR #(\n"], [187, "        .BUFR_DIVIDE(\"4\")\n"], [187, "      ) i_dac_div_clk_rbuf (\n"], [197, "          .I (dac_clk_div_s),\n"], [197, "          .O (dac_clk_div));\n"], [213, "      xpm_cdc_async_rst #(\n"], [213, "        .DEST_SYNC_FF    (10), // DECIMAL; range: 2-10\n"], [213, "        .INIT_SYNC_FF    ( 0), // DECIMAL; 0=disable simulation init values, 1=enable simulation init values\n"], [213, "        .RST_ACTIVE_HIGH ( 1)  // DECIMAL; 0=active low reset, 1=active high reset\n"], [213, "      ) rst_syncro (\n"], [213, "        .src_arst (mssi_sync),\n"], [213, "        .dest_clk (dac_clk_div),\n"], [213, "        .dest_arst(ssi_rst));\n"], [227, "        .CE_TYPE (\"SYNC\"),\n"], [227, "        .IS_CE_INVERTED (1'b0),\n"], [227, "        .IS_I_INVERTED (1'b0)\n"], [232, "        .O (dac_fast_clk),\n"], [232, "        .CE (1'b1),\n"], [232, "        .I (tx_dclk_in_s));\n"], [238, "        .BUFGCE_DIVIDE (4),\n"], [238, "        .IS_CE_INVERTED (1'b0),\n"], [238, "        .IS_CLR_INVERTED (1'b0),\n"], [238, "        .IS_I_INVERTED (1'b0)\n"], [244, "        .O (dac_clk_div),\n"], [244, "        .CE (1'b1),\n"], [244, "        .CLR (mssi_sync_2d),\n"], [244, "        .I (tx_dclk_in_s));\n"]]}}