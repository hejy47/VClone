{"Source Block": ["hdl/library/intel/util_clkdiv/util_clkdiv.v@60:79@HdlStmIf", "\nalways @(posedge clk) begin\n  enable <= ~enable;\nend\n\ngenerate if (SIM_DEVICE == \"CYCLONE5\") begin\n\tcyclonev_clkena #(\n\t\t.clock_type (\"Global Clock\"),\n\t\t.ena_register_mode (\"falling edge\"),\n\t\t.lpm_type (\"cyclonev_clkena\")\n  ) clock_divider_by_2 (\n\t.ena(enable),\n\t.enaout(),\n\t.inclk(clk),\n//\t.clkselect (2'b0),\n\t.outclk(clk_out));\n\nend endgenerate\n\nendmodule  // util_clkdiv\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[65, "generate if (SIM_DEVICE == \"CYCLONE5\") begin\n"], [66, "\tcyclonev_clkena #(\n"], [67, "\t\t.clock_type (\"Global Clock\"),\n"], [68, "\t\t.ena_register_mode (\"falling edge\"),\n"], [69, "\t\t.lpm_type (\"cyclonev_clkena\")\n"], [70, "  ) clock_divider_by_2 (\n"], [71, "\t.ena(enable),\n"], [72, "\t.enaout(),\n"], [73, "\t.inclk(clk),\n"], [75, "\t.outclk(clk_out));\n"], [77, "end endgenerate\n"]], "Add": [[75, "  generate if (SIM_DEVICE == \"CYCLONE5\") begin\n"], [75, "    cyclonev_clkena #(\n"], [75, "      .clock_type (\"Global Clock\"),\n"], [75, "      .ena_register_mode (\"falling edge\"),\n"], [75, "      .lpm_type (\"cyclonev_clkena\")\n"], [75, "    ) clock_divider_by_2 (\n"], [75, "      .ena(enable),\n"], [75, "      .enaout(),\n"], [75, "      .inclk(clk),\n"], [75, "      .outclk(clk_out));\n"], [77, "  end endgenerate\n"]]}}