{"Source Block": ["hdl/library/cn0363/cn0363_dma_sequencer/cn0363_dma_sequencer.v@117:148@HdlStmProcess", "  'hc: dma_wr_data <= i_q_filtered;\n  'hd: dma_wr_data <= i_q_filtered;\n  endcase\nend\n\nalways @(posedge clk) begin\n  if (processing_resetn == 1'b0 || channel_enable[count] == 1'b0) begin\n    dma_wr_en <= 1'b0;\n  end else begin\n    case (count)\n    'h0: dma_wr_en <= phase_valid;\n    'h1: dma_wr_en <= data_valid;\n    'h2: dma_wr_en <= data_filtered_valid;\n    'h3: dma_wr_en <= i_q_valid;\n    'h4: dma_wr_en <= i_q_valid;\n    'h5: dma_wr_en <= i_q_filtered_valid;\n    'h6: dma_wr_en <= i_q_filtered_valid;\n    'h7: dma_wr_en <= phase_valid;\n    'h8: dma_wr_en <= data_valid;\n    'h9: dma_wr_en <= data_filtered_valid;\n    'ha: dma_wr_en <= i_q_valid;\n    'hb: dma_wr_en <= i_q_valid;\n    'hc: dma_wr_en <= i_q_filtered_valid;\n    'hd: dma_wr_en <= i_q_filtered_valid;\n    endcase\n  end\nend\n\nalways @(posedge clk) begin\n  if (count == 'h00) begin\n    dma_wr_sync <= 1'b1;\n  end else if (dma_wr_en == 1'b1) begin\n"], "Clone Blocks": [["hdl/library/cn0363/cn0363_dma_sequencer/cn0363_dma_sequencer.v@98:125", "    'hd: if (i_q_filtered_valid) count <= 'h00;\n    endcase\n  end\nend\n\nalways @(posedge clk) begin\n  case (count)\n  'h0: dma_wr_data <= phase;\n  'h1: dma_wr_data <= {8'h00,data[23:0]};\n  'h2: dma_wr_data <= data_filtered;\n  'h3: dma_wr_data <= i_q;\n  'h4: dma_wr_data <= i_q;\n  'h5: dma_wr_data <= i_q_filtered;\n  'h6: dma_wr_data <= i_q_filtered;\n  'h7: dma_wr_data <= phase;\n  'h8: dma_wr_data <= {8'h00,data[23:0]};\n  'h9: dma_wr_data <= data_filtered;\n  'ha: dma_wr_data <= i_q;\n  'hb: dma_wr_data <= i_q;\n  'hc: dma_wr_data <= i_q_filtered;\n  'hd: dma_wr_data <= i_q_filtered;\n  endcase\nend\n\nalways @(posedge clk) begin\n  if (processing_resetn == 1'b0 || channel_enable[count] == 1'b0) begin\n    dma_wr_en <= 1'b0;\n  end else begin\n"]], "Diff Content": {"Delete": [[122, "always @(posedge clk) begin\n"], [123, "  if (processing_resetn == 1'b0 || channel_enable[count] == 1'b0) begin\n"], [124, "    dma_wr_en <= 1'b0;\n"], [125, "  end else begin\n"], [127, "    'h0: dma_wr_en <= phase_valid;\n"], [128, "    'h1: dma_wr_en <= data_valid;\n"], [129, "    'h2: dma_wr_en <= data_filtered_valid;\n"], [130, "    'h3: dma_wr_en <= i_q_valid;\n"], [131, "    'h4: dma_wr_en <= i_q_valid;\n"], [132, "    'h5: dma_wr_en <= i_q_filtered_valid;\n"], [133, "    'h6: dma_wr_en <= i_q_filtered_valid;\n"], [134, "    'h7: dma_wr_en <= phase_valid;\n"], [135, "    'h8: dma_wr_en <= data_valid;\n"], [136, "    'h9: dma_wr_en <= data_filtered_valid;\n"], [137, "    'ha: dma_wr_en <= i_q_valid;\n"], [138, "    'hb: dma_wr_en <= i_q_valid;\n"], [139, "    'hc: dma_wr_en <= i_q_filtered_valid;\n"], [140, "    'hd: dma_wr_en <= i_q_filtered_valid;\n"], [143, "end\n"]], "Add": [[125, "  always @(*) begin\n"], [140, "      'h1: data_ready <= 1'b1;\n"], [140, "      'h8: data_ready <= 1'b1;\n"], [140, "      default: data_ready <= 1'b0;\n"]]}}