Source Block: hdl/library/axi_dmac/address_generator.v@101:119@HdlStmProcess
reg addr_valid_d1;
reg last = 1'b0;

// If we already asserted addr_valid we have to wait until it is accepted before
// we can disable the address generator.
always @(posedge clk) begin
  if (resetn == 1'b0) begin
    enabled <= 1'b0;
  end else if (enable == 1'b1) begin
    enabled <= 1'b1;
  end else if (addr_valid == 1'b0) begin
    enabled <= 1'b0;
  end
end

always @(posedge clk) begin
  if (bl_valid == 1'b1 && bl_ready == 1'b1) begin
    last_burst_len <= measured_last_burst_length;
  end

Diff Content:
- 106 always @(posedge clk) begin
- 107   if (resetn == 1'b0) begin
- 108     enabled <= 1'b0;
- 109   end else if (enable == 1'b1) begin
- 110     enabled <= 1'b1;
- 111   end else if (addr_valid == 1'b0) begin
- 112     enabled <= 1'b0;
- 114 end
+ 112   assign burst = 2'b01;
+ 112   assign prot = 3'b000;
+ 112   assign cache = CACHE_COHERENT ? 4'b1110 : 4'b0011;
+ 112   assign size = DMA_DATA_WIDTH == 1024 ? 3'b111 :
+ 112                 DMA_DATA_WIDTH ==  512 ? 3'b110 :
+ 112                 DMA_DATA_WIDTH ==  256 ? 3'b101 :
+ 112                 DMA_DATA_WIDTH ==  128 ? 3'b100 :
+ 112                 DMA_DATA_WIDTH ==   64 ? 3'b011 :
+ 112                 DMA_DATA_WIDTH ==   32 ? 3'b010 :
+ 112                 DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;
+ 112   reg [LENGTH_WIDTH-1:0] length = 'h0;
+ 112   reg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;
+ 112   reg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;
+ 112   assign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};
+ 112   assign len = length;
+ 112   reg addr_valid_d1;
+ 112   reg last = 1'b0;
+ 112   always @(posedge clk) begin
+ 112     if (resetn == 1'b0) begin
+ 112       enabled <= 1'b0;
+ 112     end else if (enable == 1'b1) begin
+ 112       enabled <= 1'b1;
+ 112     end else if (addr_valid == 1'b0) begin
+ 112       enabled <= 1'b0;
+ 112     end

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_dmac/address_generator.v@117:136
  if (bl_valid == 1'b1 && bl_ready == 1'b1) begin
    last_burst_len <= measured_last_burst_length;
  end
end

always @(posedge clk) begin
  if (addr_valid == 1'b0) begin
    last <= eot;
    if (eot == 1'b1) begin
      length <= last_burst_len;
    end else begin
      length <= MAX_LENGTH;
    end
  end
end

always @(posedge clk) begin
  if (req_ready == 1'b1) begin
    address <= req_address;
  end else if (addr_valid == 1'b1 && addr_ready == 1'b1) begin

