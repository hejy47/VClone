{"Source Block": ["hdl/library/axi_fan_control/axi_fan_control.v@245:316@HdlStmIf", "  .up_raddr (up_raddr_s),\n  .up_rdata (up_rdata),\n  .up_rack (up_rack));\n\ngenerate\nif (INTERNAL_SYSMONE == 1) begin\n  SYSMONE4 #(\n    .COMMON_N_SOURCE(16'hFFFF),\n    .INIT_40(16'h1000), // config reg 0\n    .INIT_41(16'h2F9F), // config reg 1\n    .INIT_42(16'h1400), // config reg 2\n    .INIT_43(16'h200F), // config reg 3\n    .INIT_44(16'h0000), // config reg 4\n    .INIT_45(16'hE200), // Analog Bus Register\n    .INIT_46(16'h0000), // Sequencer Channel selection (Vuser0-3)\n    .INIT_47(16'h0000), // Sequencer Average selection (Vuser0-3)\n    .INIT_48(16'h0101), // Sequencer channel selection\n    .INIT_49(16'h0000), // Sequencer channel selection\n    .INIT_4A(16'h0000), // Sequencer Average selection\n    .INIT_4B(16'h0000), // Sequencer Average selection\n    .INIT_4C(16'h0000), // Sequencer Bipolar selection\n    .INIT_4D(16'h0000), // Sequencer Bipolar selection\n    .INIT_4E(16'h0000), // Sequencer Acq time selection\n    .INIT_4F(16'h0000), // Sequencer Acq time selection\n    .INIT_50(16'hB794), // Temp alarm trigger\n    .INIT_51(16'h4E81), // Vccint upper alarm limit\n    .INIT_52(16'hA147), // Vccaux upper alarm limit\n    .INIT_53(16'hBF13), // Temp alarm OT upper\n    .INIT_54(16'hAB02), // Temp alarm reset\n    .INIT_55(16'h4963), // Vccint lower alarm limit\n    .INIT_56(16'h9555), // Vccaux lower alarm limit\n    .INIT_57(16'hB00A), // Temp alarm OT reset\n    .INIT_58(16'h4E81), // VCCBRAM upper alarm limit\n    .INIT_5C(16'h4963), // VCCBRAM lower alarm limit\n    .INIT_59(16'h4963), // vccpsintlp upper alarm limit\n    .INIT_5D(16'h451E), // vccpsintlp lower alarm limit\n    .INIT_5A(16'h4963), // vccpsintfp upper alarm limit\n    .INIT_5E(16'h451E), // vccpsintfp lower alarm limit\n    .INIT_5B(16'h9A74), // vccpsaux upper alarm limit\n    .INIT_5F(16'h91EB), // vccpsaux lower alarm limit\n    .INIT_60(16'h4D39), // Vuser0 upper alarm limit\n    .INIT_61(16'h4DA7), // Vuser1 upper alarm limit\n    .INIT_62(16'h9A74), // Vuser2 upper alarm limit\n    .INIT_63(16'h9A74), // Vuser3 upper alarm limit\n    .INIT_68(16'h4C5E), // Vuser0 lower alarm limit\n    .INIT_69(16'h4BF2), // Vuser1 lower alarm limit\n    .INIT_6A(16'h98BF), // Vuser2 lower alarm limit\n    .INIT_6B(16'h98BF), // Vuser3 lower alarm limit\n    .INIT_7A(16'h0000), // DUAL0 Register\n    .INIT_7B(16'h0000), // DUAL1 Register\n    .INIT_7C(16'h0000), // DUAL2 Register\n    .INIT_7D(16'h0000), // DUAL3 Register\n    .SIM_DEVICE(\"ZYNQ_ULTRASCALE\"),\n    .SIM_MONITOR_FILE(\"design.txt\"))\n  inst_sysmon (\n    .DADDR(drp_daddr),\n    .DCLK(up_clk),\n    .DEN(drp_den_reg[0]),\n    .DI(drp_di),\n    .DWE(drp_dwe_reg[0]),\n    .RESET(!up_resetn),\n    .DO(drp_do),\n    .DRDY(drp_drdy),\n    .EOC(drp_eoc),\n    .EOS(drp_eos)\n  );\nend\nendgenerate\n\n//pulse generator instance\nutil_pulse_gen #(\n  .PULSE_WIDTH(0),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[250, "if (INTERNAL_SYSMONE == 1) begin\n"], [251, "  SYSMONE4 #(\n"], [252, "    .COMMON_N_SOURCE(16'hFFFF),\n"], [253, "    .INIT_40(16'h1000), // config reg 0\n"], [254, "    .INIT_41(16'h2F9F), // config reg 1\n"], [255, "    .INIT_42(16'h1400), // config reg 2\n"], [256, "    .INIT_43(16'h200F), // config reg 3\n"], [257, "    .INIT_44(16'h0000), // config reg 4\n"], [258, "    .INIT_45(16'hE200), // Analog Bus Register\n"], [259, "    .INIT_46(16'h0000), // Sequencer Channel selection (Vuser0-3)\n"], [260, "    .INIT_47(16'h0000), // Sequencer Average selection (Vuser0-3)\n"], [261, "    .INIT_48(16'h0101), // Sequencer channel selection\n"], [262, "    .INIT_49(16'h0000), // Sequencer channel selection\n"], [263, "    .INIT_4A(16'h0000), // Sequencer Average selection\n"], [264, "    .INIT_4B(16'h0000), // Sequencer Average selection\n"], [265, "    .INIT_4C(16'h0000), // Sequencer Bipolar selection\n"], [266, "    .INIT_4D(16'h0000), // Sequencer Bipolar selection\n"], [267, "    .INIT_4E(16'h0000), // Sequencer Acq time selection\n"], [268, "    .INIT_4F(16'h0000), // Sequencer Acq time selection\n"], [269, "    .INIT_50(16'hB794), // Temp alarm trigger\n"], [270, "    .INIT_51(16'h4E81), // Vccint upper alarm limit\n"], [271, "    .INIT_52(16'hA147), // Vccaux upper alarm limit\n"], [272, "    .INIT_53(16'hBF13), // Temp alarm OT upper\n"], [273, "    .INIT_54(16'hAB02), // Temp alarm reset\n"], [274, "    .INIT_55(16'h4963), // Vccint lower alarm limit\n"], [275, "    .INIT_56(16'h9555), // Vccaux lower alarm limit\n"], [276, "    .INIT_57(16'hB00A), // Temp alarm OT reset\n"], [277, "    .INIT_58(16'h4E81), // VCCBRAM upper alarm limit\n"], [278, "    .INIT_5C(16'h4963), // VCCBRAM lower alarm limit\n"], [279, "    .INIT_59(16'h4963), // vccpsintlp upper alarm limit\n"], [280, "    .INIT_5D(16'h451E), // vccpsintlp lower alarm limit\n"], [281, "    .INIT_5A(16'h4963), // vccpsintfp upper alarm limit\n"], [282, "    .INIT_5E(16'h451E), // vccpsintfp lower alarm limit\n"], [283, "    .INIT_5B(16'h9A74), // vccpsaux upper alarm limit\n"], [284, "    .INIT_5F(16'h91EB), // vccpsaux lower alarm limit\n"], [285, "    .INIT_60(16'h4D39), // Vuser0 upper alarm limit\n"], [286, "    .INIT_61(16'h4DA7), // Vuser1 upper alarm limit\n"], [287, "    .INIT_62(16'h9A74), // Vuser2 upper alarm limit\n"], [288, "    .INIT_63(16'h9A74), // Vuser3 upper alarm limit\n"], [289, "    .INIT_68(16'h4C5E), // Vuser0 lower alarm limit\n"], [290, "    .INIT_69(16'h4BF2), // Vuser1 lower alarm limit\n"], [291, "    .INIT_6A(16'h98BF), // Vuser2 lower alarm limit\n"], [292, "    .INIT_6B(16'h98BF), // Vuser3 lower alarm limit\n"], [293, "    .INIT_7A(16'h0000), // DUAL0 Register\n"], [294, "    .INIT_7B(16'h0000), // DUAL1 Register\n"], [295, "    .INIT_7C(16'h0000), // DUAL2 Register\n"], [296, "    .INIT_7D(16'h0000), // DUAL3 Register\n"], [297, "    .SIM_DEVICE(\"ZYNQ_ULTRASCALE\"),\n"], [298, "    .SIM_MONITOR_FILE(\"design.txt\"))\n"], [299, "  inst_sysmon (\n"], [300, "    .DADDR(drp_daddr),\n"], [301, "    .DCLK(up_clk),\n"], [302, "    .DEN(drp_den_reg[0]),\n"], [303, "    .DI(drp_di),\n"], [304, "    .DWE(drp_dwe_reg[0]),\n"], [305, "    .RESET(!up_resetn),\n"], [306, "    .DO(drp_do),\n"], [307, "    .DRDY(drp_drdy),\n"], [308, "    .EOC(drp_eoc),\n"], [309, "    .EOS(drp_eos)\n"], [310, "  );\n"], [311, "end\n"]], "Add": []}}