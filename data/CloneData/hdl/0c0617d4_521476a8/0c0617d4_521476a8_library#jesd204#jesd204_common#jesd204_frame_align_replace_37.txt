Source Block: hdl/library/jesd204/jesd204_common/jesd204_frame_align_replace.v@111:129@HdlStmProcess
always @(posedge clk) begin
  data_d1 <= data;
  data_d2 <= data_d1;
end

always @(posedge clk) begin
  if(reset) begin
    char_is_align_d1 <= 'b0;
    char_is_align_d2 <= 'b0;
  end else begin
    char_is_align_d1 <= char_is_align;
    char_is_align_d2 <= char_is_align_d1;
  end
end

// Capture single EOF in current cycle

always @(eof, data) begin
  data_prev_eof_single_int = 'b0;

Diff Content:
- 116 always @(posedge clk) begin
- 117   if(reset) begin
- 118     char_is_align_d1 <= 'b0;
- 119     char_is_align_d2 <= 'b0;
- 120   end else begin
- 121     char_is_align_d1 <= char_is_align;
- 122     char_is_align_d2 <= char_is_align_d1;
- 124 end
+ 122   localparam DPW_LOG2 = DATA_PATH_WIDTH == 8 ? 3 : DATA_PATH_WIDTH == 4 ? 2 : 1;
+ 122   wire                                  single_eof = cfg_octets_per_frame >= (DATA_PATH_WIDTH-1);
+ 122   reg  [DATA_PATH_WIDTH*8-1:0]          data_d1;
+ 122   reg  [DATA_PATH_WIDTH*8-1:0]          data_d2;
+ 122   wire [DATA_PATH_WIDTH-1:0]            char_is_align;
+ 122   reg  [DATA_PATH_WIDTH-1:0]            char_is_align_d1;
+ 122   reg  [DATA_PATH_WIDTH-1:0]            char_is_align_d2;
+ 122   wire [((DATA_PATH_WIDTH*2)+4)*8-1:0]  saved_data;
+ 122   wire [((DATA_PATH_WIDTH*2)+4)-1:0]    saved_char_is_align;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          data_replaced;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          data_prev_eof;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          data_prev_prev_eof;
+ 122   reg  [7:0]                            data_prev_eof_single;
+ 122   reg  [7:0]                            data_prev_eof_single_int;
+ 122   reg                                   char_is_align_prev_single;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_data_1;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_1;
+ 122   wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_1;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_data_2;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_2;
+ 122   wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_2;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_data_3;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_3;
+ 122   wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_3;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_data_4;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_4;
+ 122   wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_4;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_data_6;
+ 122   wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_6;
+ 122   wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_6;
+ 122   reg  [DATA_PATH_WIDTH*8-1:0]          prev_data;
+ 122   reg  [DATA_PATH_WIDTH*8-1:0]          prev_prev_data;
+ 122   reg  [DATA_PATH_WIDTH-1:0]            prev_char_is_align;
+ 122   reg  [DPW_LOG2:0]                     jj;
+ 122   reg  [DPW_LOG2:0]                     ll;
+ 122   always @(posedge clk) begin
+ 122     data_d1 <= data;
+ 122     data_d2 <= data_d1;

Clone Blocks:
