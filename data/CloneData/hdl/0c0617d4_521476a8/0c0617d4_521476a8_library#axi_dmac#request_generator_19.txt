Source Block: hdl/library/axi_dmac/request_generator.v@98:108@HdlIdDef

reg [BURSTS_PER_TRANSFER_WIDTH-1:0] burst_count = 'h00;
reg [BURSTS_PER_TRANSFER_WIDTH-1:0] cur_burst_length = 'h00;
reg [ID_WIDTH-1:0] id;
wire [ID_WIDTH-1:0] id_next = inc_id(id);
wire incr_en;
wire incr_id;

assign eot = burst_count == 'h00;
assign request_id = id;


Diff Content:
- 103 wire incr_en;

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_dmac/request_generator.v@96:106
 * care that only the requested ammount of bytes is transfered.
 */

reg [BURSTS_PER_TRANSFER_WIDTH-1:0] burst_count = 'h00;
reg [BURSTS_PER_TRANSFER_WIDTH-1:0] cur_burst_length = 'h00;
reg [ID_WIDTH-1:0] id;
wire [ID_WIDTH-1:0] id_next = inc_id(id);
wire incr_en;
wire incr_id;

assign eot = burst_count == 'h00;

Clone Blocks 2:
hdl/library/axi_dmac/request_generator.v@99:109
reg [BURSTS_PER_TRANSFER_WIDTH-1:0] burst_count = 'h00;
reg [BURSTS_PER_TRANSFER_WIDTH-1:0] cur_burst_length = 'h00;
reg [ID_WIDTH-1:0] id;
wire [ID_WIDTH-1:0] id_next = inc_id(id);
wire incr_en;
wire incr_id;

assign eot = burst_count == 'h00;
assign request_id = id;

assign incr_en = (response_id != id_next) && (enable == 1'b1);

Clone Blocks 3:
hdl/library/axi_dmac/request_generator.v@97:107
 */

reg [BURSTS_PER_TRANSFER_WIDTH-1:0] burst_count = 'h00;
reg [BURSTS_PER_TRANSFER_WIDTH-1:0] cur_burst_length = 'h00;
reg [ID_WIDTH-1:0] id;
wire [ID_WIDTH-1:0] id_next = inc_id(id);
wire incr_en;
wire incr_id;

assign eot = burst_count == 'h00;
assign request_id = id;

