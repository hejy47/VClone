{"Source Block": ["hdl/library/util_cic/cic_comb.v@60:84@HdlStmIf", "  for (x = 0; x < DATA_WIDTH; x = x + 1) begin\n    storage[x] = 'h00;\n  end\nend\n\ngenerate if (SEQ != 1) begin\n\nalways @(posedge clk) begin\n  if (ce == 1'b1) begin\n    counter <= SEQ-1;\n    active <= 1'b1;\n  end else if (active == 1'b1) begin\n    counter <= counter - 1'b1;\n    if (counter == 'h1) begin\n      active <= 1'b0;\n    end\n  end\nend\n\nend\nendgenerate\n\nwire [DATA_WIDTH-1:0] mask;\nreg [DATA_WIDTH-1:0] data_in_seq;\nwire [DATA_WIDTH-1:0] storage_out;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[65, "generate if (SEQ != 1) begin\n"], [67, "always @(posedge clk) begin\n"], [68, "  if (ce == 1'b1) begin\n"], [69, "    counter <= SEQ-1;\n"], [70, "    active <= 1'b1;\n"], [71, "  end else if (active == 1'b1) begin\n"], [72, "    counter <= counter - 1'b1;\n"], [73, "    if (counter == 'h1) begin\n"], [74, "      active <= 1'b0;\n"], [77, "end\n"], [79, "end\n"]], "Add": [[74, "  initial begin\n"], [74, "    for (x = 0; x < DATA_WIDTH; x = x + 1) begin\n"], [74, "      storage[x] = 'h00;\n"]]}}