{"Source Block": ["hdl/library/axi_dmac/axi_dmac_response_manager.v@178:229@HdlStmProcess", "  end else if (state == STATE_ACC) begin\n    measured_burst_length <= req_response_dest_data_burst_length;\n  end\nend\n\nalways @(*) begin\n  nx_state = state;\n  case (state)\n    STATE_IDLE: begin\n      if (response_dest_valid == 1'b1) begin\n        nx_state = STATE_ACC;\n      end else if (|to_complete_count) begin\n        if (transfer_id == completion_transfer_id)\n          nx_state = STATE_ZERO_COMPL;\n      end\n    end\n    STATE_ACC: begin\n      nx_state = STATE_WRITE_RESPR;\n    end\n    STATE_WRITE_RESPR: begin\n      if (response_ready == 1'b1) begin\n        if (|to_complete_count && transfer_id == completion_transfer_id) begin\n          nx_state = STATE_ZERO_COMPL;\n        end else begin\n          nx_state = STATE_IDLE;\n        end\n      end\n    end\n    STATE_ZERO_COMPL: begin\n      if (|to_complete_count) begin\n        nx_state = STATE_WRITE_ZRCMPL;\n      end else begin\n        if (completion_req_last_found == 1'b1) begin\n          nx_state = STATE_IDLE;\n        end\n      end\n    end\n    STATE_WRITE_ZRCMPL:begin\n      if (response_ready == 1'b1) begin\n        nx_state = STATE_ZERO_COMPL;\n      end\n    end\n    default: begin\n      nx_state = STATE_IDLE;\n    end\n  endcase\nend\n\nalways @(posedge req_clk) begin\n  if (req_resetn == 1'b0) begin\n    state <= STATE_IDLE;\n  end else begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[183, "always @(*) begin\n"], [184, "  nx_state = state;\n"], [185, "  case (state)\n"], [186, "    STATE_IDLE: begin\n"], [187, "      if (response_dest_valid == 1'b1) begin\n"], [188, "        nx_state = STATE_ACC;\n"], [189, "      end else if (|to_complete_count) begin\n"], [190, "        if (transfer_id == completion_transfer_id)\n"], [191, "          nx_state = STATE_ZERO_COMPL;\n"], [193, "    end\n"], [194, "    STATE_ACC: begin\n"], [195, "      nx_state = STATE_WRITE_RESPR;\n"], [196, "    end\n"], [197, "    STATE_WRITE_RESPR: begin\n"], [198, "      if (response_ready == 1'b1) begin\n"], [199, "        if (|to_complete_count && transfer_id == completion_transfer_id) begin\n"], [200, "          nx_state = STATE_ZERO_COMPL;\n"], [202, "          nx_state = STATE_IDLE;\n"], [205, "    end\n"], [206, "    STATE_ZERO_COMPL: begin\n"], [207, "      if (|to_complete_count) begin\n"], [208, "        nx_state = STATE_WRITE_ZRCMPL;\n"], [209, "      end else begin\n"], [210, "        if (completion_req_last_found == 1'b1) begin\n"], [211, "          nx_state = STATE_IDLE;\n"], [214, "    end\n"], [215, "    STATE_WRITE_ZRCMPL:begin\n"], [216, "      if (response_ready == 1'b1) begin\n"], [217, "        nx_state = STATE_ZERO_COMPL;\n"], [220, "    default: begin\n"], [221, "      nx_state = STATE_IDLE;\n"], [222, "    end\n"], [223, "  endcase\n"], [224, "end\n"]], "Add": [[191, "  always @(*) begin\n"], [191, "    nx_state = state;\n"], [191, "    case (state)\n"], [191, "      STATE_IDLE: begin\n"], [191, "        if (response_dest_valid == 1'b1) begin\n"], [191, "          nx_state = STATE_ACC;\n"], [191, "        end else if (|to_complete_count) begin\n"], [191, "          if (transfer_id == completion_transfer_id)\n"], [191, "            nx_state = STATE_ZERO_COMPL;\n"], [191, "        end\n"], [200, "      STATE_ACC: begin\n"], [200, "        nx_state = STATE_WRITE_RESPR;\n"], [200, "      end\n"], [200, "      STATE_WRITE_RESPR: begin\n"], [200, "        if (response_ready == 1'b1) begin\n"], [200, "          if (|to_complete_count && transfer_id == completion_transfer_id) begin\n"], [200, "            nx_state = STATE_ZERO_COMPL;\n"], [200, "          end else begin\n"], [200, "            nx_state = STATE_IDLE;\n"], [200, "          end\n"], [200, "        end\n"], [200, "      end\n"], [200, "      STATE_ZERO_COMPL: begin\n"], [200, "        if (|to_complete_count) begin\n"], [200, "          nx_state = STATE_WRITE_ZRCMPL;\n"], [202, "          if (completion_req_last_found == 1'b1) begin\n"], [202, "            nx_state = STATE_IDLE;\n"], [202, "          end\n"], [211, "      STATE_WRITE_ZRCMPL:begin\n"], [211, "        if (response_ready == 1'b1) begin\n"], [211, "          nx_state = STATE_ZERO_COMPL;\n"], [217, "      default: begin\n"], [217, "        nx_state = STATE_IDLE;\n"], [218, "    endcase\n"], [218, "  end\n"], [218, "  always @(posedge req_clk) begin\n"], [218, "    if (req_resetn == 1'b0) begin\n"], [218, "      state <= STATE_IDLE;\n"], [218, "    end else begin\n"], [218, "      state <= nx_state;\n"]]}}