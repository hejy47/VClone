{"Source Block": ["hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@241:292@HdlStmIf", "/* Count link enable */\nwire [8*16-1:0] up_irq_event_cnt_bus;\nwire [15:0] up_link_enable_cnt_s;\n\ngenvar i;\ngenerate if (ENABLE_LINK_STATS == 1) begin : g_link_stats\n\n  reg [15:0] up_link_enable_cnt = 'h0;\n  reg up_reset_core_d1 = 'b1;\n\n  wire up_stat_clear;\n\n  assign up_stat_clear = (up_waddr == 12'h0b0 && up_wreq && up_wdata[0]);\n\n  always @(posedge up_clk) begin\n    up_reset_core_d1 <= up_reset_core;\n    if (up_stat_clear) begin\n      up_link_enable_cnt <= 'h0;\n    end else begin\n      if (~up_reset_core & up_reset_core_d1) begin\n        up_link_enable_cnt <= up_link_enable_cnt + 16'd1;\n      end\n    end\n  end\n  assign up_link_enable_cnt_s = up_link_enable_cnt;\n\n  /* Count IRQ events for max 8 interrupt sources */\n\n  for (i = 0; i < NUM_IRQS; i=i+1) begin : irq_cnt\n\n    reg [15:0] up_irq_event_cnt = 'h0;\n\n    always @(posedge up_clk) begin\n      if (up_stat_clear) begin\n        up_irq_event_cnt <= 'h0;\n      end else if (up_irq_trigger[i]) begin\n        up_irq_event_cnt <= up_irq_event_cnt + 16'd1;\n      end\n    end\n\n    assign up_irq_event_cnt_bus[i*16 +: 16] = up_irq_event_cnt;\n\n  end\nend else begin : g_no_link_stats\n  assign up_irq_event_cnt_bus = 'h0;\n  assign up_link_enable_cnt_s = 'h0;\nend\nendgenerate\n\nwire [20:0] clk_mon_count;\nwire [20:0] device_clk_mon_count;\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[246, "generate if (ENABLE_LINK_STATS == 1) begin : g_link_stats\n"], [248, "  reg [15:0] up_link_enable_cnt = 'h0;\n"], [249, "  reg up_reset_core_d1 = 'b1;\n"], [251, "  wire up_stat_clear;\n"], [253, "  assign up_stat_clear = (up_waddr == 12'h0b0 && up_wreq && up_wdata[0]);\n"], [256, "    up_reset_core_d1 <= up_reset_core;\n"], [257, "    if (up_stat_clear) begin\n"], [258, "      up_link_enable_cnt <= 'h0;\n"], [260, "      if (~up_reset_core & up_reset_core_d1) begin\n"], [261, "        up_link_enable_cnt <= up_link_enable_cnt + 16'd1;\n"], [262, "      end\n"], [265, "  assign up_link_enable_cnt_s = up_link_enable_cnt;\n"], [267, "  /* Count IRQ events for max 8 interrupt sources */\n"], [269, "  for (i = 0; i < NUM_IRQS; i=i+1) begin : irq_cnt\n"], [271, "    reg [15:0] up_irq_event_cnt = 'h0;\n"], [275, "        up_irq_event_cnt <= 'h0;\n"], [276, "      end else if (up_irq_trigger[i]) begin\n"], [277, "        up_irq_event_cnt <= up_irq_event_cnt + 16'd1;\n"], [281, "    assign up_irq_event_cnt_bus[i*16 +: 16] = up_irq_event_cnt;\n"], [283, "  end\n"], [284, "end else begin : g_no_link_stats\n"], [285, "  assign up_irq_event_cnt_bus = 'h0;\n"], [286, "  assign up_link_enable_cnt_s = 'h0;\n"], [287, "end\n"]], "Add": [[249, "  /* Interupt handling */\n"], [249, "  reg [NUM_IRQS-1:0] up_irq_enable = {NUM_IRQS{1'b0}};\n"], [249, "  reg [NUM_IRQS-1:0] up_irq_source = 'h00;\n"], [249, "  reg [NUM_IRQS-1:0] up_irq_clear;\n"], [249, "  wire [NUM_IRQS-1:0] up_irq_pending;\n"], [251, "  assign up_irq_pending = up_irq_source & up_irq_enable;\n"], [253, "  always @(posedge up_clk) begin\n"], [253, "    if (up_reset == 1'b1) begin\n"], [253, "      irq <= 1'b0;\n"], [253, "    end else begin\n"], [253, "      irq <= |up_irq_pending;\n"], [253, "    end\n"], [253, "  end\n"], [258, "    if (up_reset == 1'b1) begin\n"], [258, "      up_irq_source <= 'h00;\n"], [262, "      up_irq_source <= (up_irq_source & ~up_irq_clear) | up_irq_trigger;\n"], [267, "  /* Count link enable */\n"], [267, "  wire [8*16-1:0] up_irq_event_cnt_bus;\n"], [267, "  wire [15:0] up_link_enable_cnt_s;\n"], [267, "  genvar i;\n"], [267, "  generate if (ENABLE_LINK_STATS == 1) begin : g_link_stats\n"], [269, "    reg [15:0] up_link_enable_cnt = 'h0;\n"], [269, "    reg up_reset_core_d1 = 'b1;\n"], [271, "    wire up_stat_clear;\n"], [271, "    assign up_stat_clear = (up_waddr == 12'h0b0 && up_wreq && up_wdata[0]);\n"], [273, "      up_reset_core_d1 <= up_reset_core;\n"], [277, "        up_link_enable_cnt <= 'h0;\n"], [277, "      end else begin\n"], [277, "        if (~up_reset_core & up_reset_core_d1) begin\n"], [277, "          up_link_enable_cnt <= up_link_enable_cnt + 16'd1;\n"], [277, "        end\n"]]}}