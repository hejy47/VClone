{"Source Block": ["hdl/library/axi_adrv9001/axi_adrv9001_tx_channel.v@115:251@HdlStmIf", "    .iqcor_enable (dac_iqcor_enb_s),\n    .iqcor_coeff_1 (dac_iqcor_coeff_1_s),\n    .iqcor_coeff_2 (dac_iqcor_coeff_2_s));\n  end\n\n  if (DISABLE == 1) begin\n    assign up_wack = 1'b0;\n    assign up_rdata =  32'b0;\n    assign up_rack = 1'b0;\n  end else begin\n\n  // PN7 x^7 + x^6 + 1\n  ad_pngen  #(\n    .POL_MASK ((1<<7) | (1<<6)),\n    .POL_W (7),\n    .DW (16)\n    ) PN7_gen (\n    .clk (dac_clk),\n    .reset (dac_rst),\n    .clk_en (dac_data_in_req),\n    .pn_init (1'b0),\n    .pn_data_out (pn7_data)\n  );\n\n  // PN15 x^15 + x^14 + 1\n  ad_pngen  #(\n    .POL_MASK ((1<<15) | (1<<14)),\n    .POL_W (15),\n    .DW (16)\n    ) PN15_gen (\n    .clk (dac_clk),\n    .reset (dac_rst),\n    .clk_en (dac_data_in_req),\n    .pn_init (1'b0),\n    .pn_data_out (pn15_data)\n  );\n\n  // full ramp generator\n  always @(posedge dac_clk) begin\n    if (dac_data_sync) begin\n      full_ramp_counter <= 'h0;\n    end else if (dac_data_in_req) begin\n      full_ramp_counter <= full_ramp_counter + 16'd1;\n    end\n  end\n\n  // dac mux\n\n  always @(posedge dac_clk) begin\n    dac_enable <= (dac_data_sel_s == 4'h2) ? 1'b1 : 1'b0;\n    case (dac_data_sel_s)\n      4'hB: dac_data_iq_out <= full_ramp_counter;           // full ramp\n      4'hA: dac_data_iq_out <= {4{full_ramp_counter[3:0]}}; // nibble ramp\n      4'h7: dac_data_iq_out <= pn15_data;\n      4'h6: dac_data_iq_out <= pn7_data;\n      4'h3: dac_data_iq_out <= 16'd0;\n      4'h2: dac_data_iq_out <= dac_data_in;\n      4'h1: dac_data_iq_out <= dac_pat_data_1_s;\n      default: dac_data_iq_out <= dac_dds_data_s;\n    endcase\n  end\n\n  // dds\n\n  ad_dds #(\n    .DISABLE (DDS_DISABLE),\n    .DDS_DW (16),\n    .PHASE_DW (16),\n    .DDS_TYPE (DAC_DDS_TYPE),\n    .CORDIC_DW (DAC_DDS_CORDIC_DW),\n    .CORDIC_PHASE_DW (DAC_DDS_CORDIC_PHASE_DW),\n    .CLK_RATIO (1))\n  i_dds (\n    .clk (dac_clk),\n    .dac_dds_format (dac_dds_format),\n    .dac_data_sync (dac_data_sync),\n    .dac_valid (dac_data_out_req),\n    .tone_1_scale (dac_dds_scale_1_s),\n    .tone_2_scale (dac_dds_scale_2_s),\n    .tone_1_init_offset (dac_dds_init_1_s),\n    .tone_2_init_offset (dac_dds_init_2_s),\n    .tone_1_freq_word (dac_dds_incr_1_s),\n    .tone_2_freq_word (dac_dds_incr_2_s),\n    .dac_dds_data (dac_dds_data_s));\n\n  // single channel processor\n\n  up_dac_channel #(\n    .COMMON_ID(COMMON_ID),\n    .CHANNEL_ID (CHANNEL_ID),\n    .DDS_DISABLE(DDS_DISABLE),\n    .USERPORTS_DISABLE(1),\n    .IQCORRECTION_DISABLE(IQCORRECTION_DISABLE))\n    i_up_dac_channel (\n    .dac_clk (dac_clk),\n    .dac_rst (dac_rst),\n    .dac_dds_scale_1 (dac_dds_scale_1_s),\n    .dac_dds_init_1 (dac_dds_init_1_s),\n    .dac_dds_incr_1 (dac_dds_incr_1_s),\n    .dac_dds_scale_2 (dac_dds_scale_2_s),\n    .dac_dds_init_2 (dac_dds_init_2_s),\n    .dac_dds_incr_2 (dac_dds_incr_2_s),\n    .dac_pat_data_1 (dac_pat_data_1_s),\n    .dac_pat_data_2 (dac_pat_data_2_s),\n    .dac_data_sel (dac_data_sel_s),\n    .dac_iq_mode (),\n    .dac_iqcor_enb (dac_iqcor_enb_s),\n    .dac_iqcor_coeff_1 (dac_iqcor_coeff_1_s),\n    .dac_iqcor_coeff_2 (dac_iqcor_coeff_2_s),\n    .up_usr_datatype_be (),\n    .up_usr_datatype_signed (),\n    .up_usr_datatype_shift (),\n    .up_usr_datatype_total_bits (),\n    .up_usr_datatype_bits (),\n    .up_usr_interpolation_m (),\n    .up_usr_interpolation_n (),\n    .dac_usr_datatype_be (1'b0),\n    .dac_usr_datatype_signed (1'b1),\n    .dac_usr_datatype_shift (8'd0),\n    .dac_usr_datatype_total_bits (8'd16),\n    .dac_usr_datatype_bits (8'd16),\n    .dac_usr_interpolation_m (16'd1),\n    .dac_usr_interpolation_n (16'd1),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata),\n    .up_rack (up_rack));\n  end\n  endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[131, "    ) PN7_gen (\n"], [136, "    .pn_data_out (pn7_data)\n"], [137, "  );\n"], [144, "    ) PN15_gen (\n"], [149, "    .pn_data_out (pn15_data)\n"], [150, "  );\n"], [186, "    .CLK_RATIO (1))\n"], [187, "  i_dds (\n"], [207, "    .IQCORRECTION_DISABLE(IQCORRECTION_DISABLE))\n"], [208, "    i_up_dac_channel (\n"]], "Add": [[131, "  ) PN7_gen (\n"], [137, "    .pn_data_out (pn7_data));\n"], [144, "  ) PN15_gen (\n"], [150, "    .pn_data_out (pn15_data));\n"], [187, "    .CLK_RATIO (1)\n"], [187, "  ) i_dds (\n"], [208, "    .IQCORRECTION_DISABLE(IQCORRECTION_DISABLE)\n"], [208, "  ) i_up_dac_channel (\n"]]}}