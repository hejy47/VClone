{"Source Block": ["hdl/library/common/ad_mux.v@54:64@HdlIdDef", "  output [CH_W-1:0] data_out\n);\n\n`define MIN(A,B) (A<B?A:B)\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = ($clog2(CH_CNT) / $clog2(MUX_SZ)) + // divide and round up\n                       |($clog2(CH_CNT) % $clog2(MUX_SZ));\n\n"], "Clone Blocks": [["hdl/library/common/ad_mux.v@57:68", "`define MIN(A,B) (A<B?A:B)\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = ($clog2(CH_CNT) / $clog2(MUX_SZ)) + // divide and round up\n                       |($clog2(CH_CNT) % $clog2(MUX_SZ));\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n\n\n"], ["hdl/library/common/ad_mux.v@55:65", ");\n\n`define MIN(A,B) (A<B?A:B)\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = ($clog2(CH_CNT) / $clog2(MUX_SZ)) + // divide and round up\n                       |($clog2(CH_CNT) % $clog2(MUX_SZ));\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\n"], ["hdl/library/common/ad_mux.v@56:66", "\n`define MIN(A,B) (A<B?A:B)\n\nlocalparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\nlocalparam CLOG2_CH_CNT = $clog2(CH_CNT);\nlocalparam CLOG2_MUX_SZ = $clog2(MUX_SZ);\nlocalparam NUM_STAGES = ($clog2(CH_CNT) / $clog2(MUX_SZ)) + // divide and round up\n                       |($clog2(CH_CNT) % $clog2(MUX_SZ));\n\nwire [NUM_STAGES*DW+CH_W-1:0] mux_in;\nwire [NUM_STAGES*CLOG2_CH_CNT-1:0] ch_sel_pln;\n"]], "Diff Content": {"Delete": [[59, "localparam MUX_SZ = CH_CNT < REQ_MUX_SZ ? CH_CNT : REQ_MUX_SZ;\n"]], "Add": []}}