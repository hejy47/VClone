{"Source Block": ["hdl/library/util_do_ram/util_do_ram.v@115:128@HdlStmProcess", "    wr_request_ready <= 1'b0;\n  else if (wr_response_eot)\n    wr_request_ready <= 1'b1;\nend\n\nalways @(posedge s_axis_aclk) begin\n  if (wr_request_valid & wr_request_ready)\n    wr_length <= wr_request_length[LENGTH_WIDTH-1:SRC_ADDR_ALIGN];\n  end\n\nwire wr_last_beat;\nassign wr_last_beat = s_axis_valid & s_axis_ready & ((wr_addr == wr_length) | s_axis_last);\n\nalways @(posedge s_axis_aclk) begin\n"], "Clone Blocks": [["hdl/library/util_do_ram/util_do_ram.v@120:130", "always @(posedge s_axis_aclk) begin\n  if (wr_request_valid & wr_request_ready)\n    wr_length <= wr_request_length[LENGTH_WIDTH-1:SRC_ADDR_ALIGN];\n  end\n\nwire wr_last_beat;\nassign wr_last_beat = s_axis_valid & s_axis_ready & ((wr_addr == wr_length) | s_axis_last);\n\nalways @(posedge s_axis_aclk) begin\n  if (~wr_request_enable)\n    s_axis_ready <= 1'b0;\n"], ["hdl/library/util_do_ram/util_do_ram.v@121:131", "  if (wr_request_valid & wr_request_ready)\n    wr_length <= wr_request_length[LENGTH_WIDTH-1:SRC_ADDR_ALIGN];\n  end\n\nwire wr_last_beat;\nassign wr_last_beat = s_axis_valid & s_axis_ready & ((wr_addr == wr_length) | s_axis_last);\n\nalways @(posedge s_axis_aclk) begin\n  if (~wr_request_enable)\n    s_axis_ready <= 1'b0;\n  else if (wr_request_valid & wr_request_ready)\n"]], "Diff Content": {"Delete": [[120, "always @(posedge s_axis_aclk) begin\n"], [121, "  if (wr_request_valid & wr_request_ready)\n"], [122, "    wr_length <= wr_request_length[LENGTH_WIDTH-1:SRC_ADDR_ALIGN];\n"]], "Add": [[122, "  localparam RAM_LATENCY = 2;\n"], [122, "  localparam SRC_ADDR_ALIGN = $clog2(SRC_DATA_WIDTH/8);\n"], [122, "  localparam DST_ADDR_ALIGN = $clog2(DST_DATA_WIDTH/8);\n"], [122, "  localparam SRC_ADDRESS_WIDTH = LENGTH_WIDTH - SRC_ADDR_ALIGN;\n"], [122, "  localparam DST_ADDRESS_WIDTH = LENGTH_WIDTH - DST_ADDR_ALIGN;\n"], [122, "  wire  wr_enable;\n"], [122, "  wire  [DST_DATA_WIDTH-1:0] rd_data;\n"], [122, "  wire  [1:0] rd_fifo_room;\n"], [122, "  wire        rd_enable;\n"], [122, "  wire        rd_last_beat;\n"], [122, "  wire        rd_fifo_s_ready;\n"], [122, "  wire        rd_fifo_s_valid;\n"], [122, "  reg [SRC_ADDRESS_WIDTH-1:0] wr_length = 'h0;\n"], [122, "  reg [SRC_ADDRESS_WIDTH-1:0] wr_addr = 'h0;\n"], [122, "  reg [DST_DATA_WIDTH-1:0]    rd_data_l2 = 'h0;\n"], [122, "  reg [DST_ADDRESS_WIDTH-1:0] rd_length = 'h0;\n"], [122, "  reg [DST_ADDRESS_WIDTH-1:0] rd_addr = 'h0;\n"], [122, "  reg rd_pending = 1'b0;\n"], [122, "  always @(posedge s_axis_aclk) begin\n"], [122, "    if (~s_axis_aresetn)\n"], [122, "      wr_request_ready <= 1'b1;\n"], [122, "    else if (wr_request_valid)\n"], [122, "      wr_request_ready <= 1'b0;\n"], [122, "    else if (wr_response_eot)\n"], [122, "      wr_request_ready <= 1'b1;\n"]]}}