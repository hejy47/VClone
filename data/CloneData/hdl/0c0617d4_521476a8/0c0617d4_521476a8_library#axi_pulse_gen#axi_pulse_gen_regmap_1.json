{"Source Block": ["hdl/library/axi_pulse_gen/axi_pulse_gen_regmap.v@127:180@HdlStmIf", "      end\n    end\n  end\n\n  generate\n  if (ASYNC_CLK_EN) begin : counter_external_clock\n\n    assign clk_out = ext_clk;\n\n    ad_rst i_d_rst_reg (\n      .rst_async (up_reset),\n      .clk (clk_out),\n      .rstn (pulse_gen_resetn),\n      .rst ());\n\n    sync_data #(\n      .NUM_OF_BITS (32),\n      .ASYNC_CLK (1))\n    i_pulse_period_sync (\n      .in_clk (up_clk),\n      .in_data (up_pulse_period),\n      .out_clk (clk_out),\n      .out_data (pulse_period));\n\n    sync_data #(\n      .NUM_OF_BITS (32),\n      .ASYNC_CLK (1))\n    i_pulse_width_sync (\n      .in_clk (up_clk),\n      .in_data (up_pulse_width),\n      .out_clk (clk_out),\n      .out_data (pulse_width));\n\n    sync_event #(\n      .NUM_OF_EVENTS (1),\n      .ASYNC_CLK (1))\n    i_load_config_sync (\n      .in_clk (up_clk),\n      .in_event (up_load_config),\n      .out_clk (clk_out),\n      .out_event (load_config));\n\n  end else begin : counter_sys_clock        // counter is running on system clk\n\n    assign clk_out = up_clk;\n    assign pulse_gen_resetn = ~up_reset;\n    assign pulse_period = up_pulse_period;\n    assign pulse_width = up_pulse_width;\n    assign load_config = up_load_config;\n\n  end\n  endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[144, "      .ASYNC_CLK (1))\n"], [145, "    i_pulse_period_sync (\n"], [153, "      .ASYNC_CLK (1))\n"], [154, "    i_pulse_width_sync (\n"], [162, "      .ASYNC_CLK (1))\n"], [163, "    i_load_config_sync (\n"]], "Add": [[145, "      .ASYNC_CLK (1)\n"], [145, "    ) i_pulse_period_sync (\n"], [154, "      .ASYNC_CLK (1)\n"], [154, "    ) i_pulse_width_sync (\n"], [163, "      .ASYNC_CLK (1)\n"], [163, "    ) i_load_config_sync (\n"]]}}