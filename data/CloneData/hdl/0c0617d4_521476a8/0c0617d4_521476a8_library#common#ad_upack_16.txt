Source Block: hdl/library/common/ad_upack.v@92:102@HdlStmAssign
wire [SH_W-1:0] unit_valid;
wire [O_W*UNIT_W-1:0] odata_s;
wire                  ovalid_s;

assign unit_valid = (in_use | inmask);
assign in_use_nx = unit_valid >> O_W;

always @(posedge clk) begin
  if (reset) begin
    in_use <= 'h0;
  end else if (ovalid_s) begin

Diff Content:
- 97 assign in_use_nx = unit_valid >> O_W;
+ 97   assign unit_valid = (in_use | inmask);
+ 97   assign in_use_nx = unit_valid >> O_W;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/ad_upack.v@91:101
wire [SH_W-1:0] in_use_nx;
wire [SH_W-1:0] unit_valid;
wire [O_W*UNIT_W-1:0] odata_s;
wire                  ovalid_s;

assign unit_valid = (in_use | inmask);
assign in_use_nx = unit_valid >> O_W;

always @(posedge clk) begin
  if (reset) begin
    in_use <= 'h0;

Clone Blocks 2:
hdl/library/common/ad_upack.v@94:110
wire                  ovalid_s;

assign unit_valid = (in_use | inmask);
assign in_use_nx = unit_valid >> O_W;

always @(posedge clk) begin
  if (reset) begin
    in_use <= 'h0;
  end else if (ovalid_s) begin
    in_use <= in_use_nx;
  end
end

always @(*) begin
  inmask = {I_W{ivalid}};
  if (STEP>0) begin
    for (i = STEP; i < O_W; i=i+STEP) begin

Clone Blocks 3:
hdl/library/common/ad_upack.v@89:99

wire [SH_W-1:0] out_mask = {O_W{1'b1}};
wire [SH_W-1:0] in_use_nx;
wire [SH_W-1:0] unit_valid;
wire [O_W*UNIT_W-1:0] odata_s;
wire                  ovalid_s;

assign unit_valid = (in_use | inmask);
assign in_use_nx = unit_valid >> O_W;

always @(posedge clk) begin

