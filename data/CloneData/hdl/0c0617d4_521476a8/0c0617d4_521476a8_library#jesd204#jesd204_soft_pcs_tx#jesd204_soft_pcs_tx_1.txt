Source Block: hdl/library/jesd204/jesd204_soft_pcs_tx/jesd204_soft_pcs_tx.v@56:66@HdlIdDef
   input [NUM_LANES*DATA_PATH_WIDTH-1:0] charisk,

   output reg [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data
);

reg [NUM_LANES-1:0] disparity = 'h00;

wire [DATA_PATH_WIDTH:0] disparity_chain[0:NUM_LANES-1];
wire [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data_s;

always @(posedge clk) begin

Diff Content:
- 61 reg [NUM_LANES-1:0] disparity = 'h00;
+ 61   reg [NUM_LANES-1:0] disparity = 'h00;

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_soft_pcs_tx/jesd204_soft_pcs_tx.v@58:68
   output reg [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data
);

reg [NUM_LANES-1:0] disparity = 'h00;

wire [DATA_PATH_WIDTH:0] disparity_chain[0:NUM_LANES-1];
wire [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data_s;

always @(posedge clk) begin
  data <= INVERT_OUTPUTS ? ~data_s : data_s;
end

Clone Blocks 2:
hdl/library/jesd204/jesd204_soft_pcs_rx/jesd204_soft_pcs_rx.v@73:83
wire [NUM_LANES*DATA_PATH_WIDTH-1:0] disperr_s;

reg [NUM_LANES-1:0] disparity = {NUM_LANES{1'b0}};
wire [DATA_PATH_WIDTH:0] disparity_chain[0:NUM_LANES-1];

wire [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data_s;
wire patternalign_en_s;

always @(posedge clk) begin
  char <= char_s;
  charisk <= charisk_s;

Clone Blocks 3:
hdl/library/jesd204/jesd204_soft_pcs_tx/jesd204_soft_pcs_tx.v@61:73
reg [NUM_LANES-1:0] disparity = 'h00;

wire [DATA_PATH_WIDTH:0] disparity_chain[0:NUM_LANES-1];
wire [NUM_LANES*DATA_PATH_WIDTH*10-1:0] data_s;

always @(posedge clk) begin
  data <= INVERT_OUTPUTS ? ~data_s : data_s;
end

generate
genvar lane;
genvar i;
for (lane = 0; lane < NUM_LANES; lane = lane + 1) begin: gen_lane

