{"Source Block": ["hdl/library/axi_dmac/address_generator.v@101:119@HdlStmProcess", "reg addr_valid_d1;\nreg last = 1'b0;\n\n// If we already asserted addr_valid we have to wait until it is accepted before\n// we can disable the address generator.\nalways @(posedge clk) begin\n  if (resetn == 1'b0) begin\n    enabled <= 1'b0;\n  end else if (enable == 1'b1) begin\n    enabled <= 1'b1;\n  end else if (addr_valid == 1'b0) begin\n    enabled <= 1'b0;\n  end\nend\n\nalways @(posedge clk) begin\n  if (bl_valid == 1'b1 && bl_ready == 1'b1) begin\n    last_burst_len <= measured_last_burst_length;\n  end\n"], "Clone Blocks": [["hdl/library/axi_dmac/address_generator.v@117:136", "  if (bl_valid == 1'b1 && bl_ready == 1'b1) begin\n    last_burst_len <= measured_last_burst_length;\n  end\nend\n\nalways @(posedge clk) begin\n  if (addr_valid == 1'b0) begin\n    last <= eot;\n    if (eot == 1'b1) begin\n      length <= last_burst_len;\n    end else begin\n      length <= MAX_LENGTH;\n    end\n  end\nend\n\nalways @(posedge clk) begin\n  if (req_ready == 1'b1) begin\n    address <= req_address;\n  end else if (addr_valid == 1'b1 && addr_ready == 1'b1) begin\n"]], "Diff Content": {"Delete": [[106, "always @(posedge clk) begin\n"], [107, "  if (resetn == 1'b0) begin\n"], [108, "    enabled <= 1'b0;\n"], [109, "  end else if (enable == 1'b1) begin\n"], [110, "    enabled <= 1'b1;\n"], [111, "  end else if (addr_valid == 1'b0) begin\n"], [112, "    enabled <= 1'b0;\n"], [114, "end\n"]], "Add": [[112, "  assign burst = 2'b01;\n"], [112, "  assign prot = 3'b000;\n"], [112, "  assign cache = CACHE_COHERENT ? 4'b1110 : 4'b0011;\n"], [112, "  assign size = DMA_DATA_WIDTH == 1024 ? 3'b111 :\n"], [112, "                DMA_DATA_WIDTH ==  512 ? 3'b110 :\n"], [112, "                DMA_DATA_WIDTH ==  256 ? 3'b101 :\n"], [112, "                DMA_DATA_WIDTH ==  128 ? 3'b100 :\n"], [112, "                DMA_DATA_WIDTH ==   64 ? 3'b011 :\n"], [112, "                DMA_DATA_WIDTH ==   32 ? 3'b010 :\n"], [112, "                DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;\n"], [112, "  reg [LENGTH_WIDTH-1:0] length = 'h0;\n"], [112, "  reg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\n"], [112, "  reg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\n"], [112, "  assign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\n"], [112, "  assign len = length;\n"], [112, "  reg addr_valid_d1;\n"], [112, "  reg last = 1'b0;\n"], [112, "  always @(posedge clk) begin\n"], [112, "    if (resetn == 1'b0) begin\n"], [112, "      enabled <= 1'b0;\n"], [112, "    end else if (enable == 1'b1) begin\n"], [112, "      enabled <= 1'b1;\n"], [112, "    end else if (addr_valid == 1'b0) begin\n"], [112, "      enabled <= 1'b0;\n"], [112, "    end\n"]]}}