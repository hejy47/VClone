{"Source Block": ["hdl/library/axi_dmac/splitter.v@52:69@HdlStmProcess", "reg [NUM_M-1:0] acked;\n\nassign s_ready = &(m_ready | acked);\nassign m_valid = s_valid ? ~acked : {NUM_M{1'b0}};\n\nalways @(posedge clk)\nbegin\n  if (resetn == 1'b0) begin\n    acked <= {NUM_M{1'b0}};\n  end else begin\n    if (s_valid & s_ready)\n      acked <= {NUM_M{1'b0}};\n    else\n      acked <= acked | (m_ready & m_valid);\n  end\nend\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[57, "always @(posedge clk)\n"], [58, "begin\n"], [59, "  if (resetn == 1'b0) begin\n"], [60, "    acked <= {NUM_M{1'b0}};\n"], [61, "  end else begin\n"], [62, "    if (s_valid & s_ready)\n"], [64, "    else\n"], [65, "      acked <= acked | (m_ready & m_valid);\n"], [67, "end\n"]], "Add": [[62, "  always @(posedge clk) begin\n"], [62, "    if (resetn == 1'b0) begin\n"], [65, "    end else begin\n"], [65, "      if (s_valid & s_ready)\n"], [65, "        acked <= {NUM_M{1'b0}};\n"], [65, "      else\n"], [65, "        acked <= acked | (m_ready & m_valid);\n"], [65, "    end\n"]]}}