{"Source Block": ["hdl/library/axi_adrv9001/axi_adrv9001_tdd.v@80:271@HdlStmIf", "  input       [13:0]      up_raddr,\n  output      [31:0]      up_rdata,\n  output                  up_rack);\n\n  generate\n  if (ENABLED == 1) begin\n\n  // internal signals\n\n  wire              tdd_enable_s;\n  wire              tdd_secondary_s;\n  wire    [ 7:0]    tdd_burst_count_s;\n  wire              tdd_rx_only_s;\n  wire              tdd_tx_only_s;\n  wire              tdd_gated_rx_dmapath_s;\n  wire              tdd_gated_tx_dmapath_s;\n  wire    [23:0]    tdd_counter_init_s;\n  wire    [23:0]    tdd_frame_length_s;\n  wire              tdd_terminal_type_s;\n  wire              tdd_sync_enable_s;\n  wire    [23:0]    tdd_vco_rx_on_1_s;\n  wire    [23:0]    tdd_vco_rx_off_1_s;\n  wire    [23:0]    tdd_vco_tx_on_1_s;\n  wire    [23:0]    tdd_vco_tx_off_1_s;\n  wire    [23:0]    tdd_rx_on_1_s;\n  wire    [23:0]    tdd_rx_off_1_s;\n  wire    [23:0]    tdd_rx_dp_on_1_s;\n  wire    [23:0]    tdd_rx_dp_off_1_s;\n  wire    [23:0]    tdd_tx_on_1_s;\n  wire    [23:0]    tdd_tx_off_1_s;\n  wire    [23:0]    tdd_tx_dp_on_1_s;\n  wire    [23:0]    tdd_tx_dp_off_1_s;\n  wire    [23:0]    tdd_vco_rx_on_2_s;\n  wire    [23:0]    tdd_vco_rx_off_2_s;\n  wire    [23:0]    tdd_vco_tx_on_2_s;\n  wire    [23:0]    tdd_vco_tx_off_2_s;\n  wire    [23:0]    tdd_rx_on_2_s;\n  wire    [23:0]    tdd_rx_off_2_s;\n  wire    [23:0]    tdd_rx_dp_on_2_s;\n  wire    [23:0]    tdd_rx_dp_off_2_s;\n  wire    [23:0]    tdd_tx_on_2_s;\n  wire    [23:0]    tdd_tx_off_2_s;\n  wire    [23:0]    tdd_tx_dp_on_2_s;\n  wire    [23:0]    tdd_tx_dp_off_2_s;\n\n  wire    [23:0]    tdd_counter_status;\n\n  wire              tdd_rx_dp_en_s;\n  wire              tdd_tx_dp_en_s;\n\n  assign  tdd_enabled = tdd_enable_s;\n\n  // syncronization control signal\n\n  always @(posedge clk) begin\n    if (tdd_enable_s == 1'b1) begin\n      tdd_sync_cntr <= ~tdd_terminal_type_s;\n    end else begin\n      tdd_sync_cntr <= 1'b0;\n    end\n  end\n\n  // tx/rx data flow control\n\n  always @(posedge clk) begin\n    if((tdd_enable_s == 1) && (tdd_gated_tx_dmapath_s == 1)) begin\n      tdd_tx_valid <= tdd_tx_dp_en_s;\n    end else begin\n      tdd_tx_valid <= 1'b1;\n    end\n  end\n\n  always @(posedge clk) begin\n    if((tdd_enable_s == 1) && (tdd_gated_tx_dmapath_s == 1)) begin\n      tdd_rx_valid <= tdd_rx_dp_en_s;\n    end else begin\n      tdd_rx_valid <= 1'b1;\n    end\n  end\n\n  // instantiations\n\n  up_tdd_cntrl #(\n    .BASE_ADDRESS (BASE_ADDRESS)\n  ) i_up_tdd_cntrl(\n    .clk(clk),\n    .rst(rst),\n    .tdd_enable(tdd_enable_s),\n    .tdd_secondary(tdd_secondary_s),\n    .tdd_burst_count(tdd_burst_count_s),\n    .tdd_tx_only(tdd_tx_only_s),\n    .tdd_rx_only(tdd_rx_only_s),\n    .tdd_gated_rx_dmapath(tdd_gated_rx_dmapath_s),\n    .tdd_gated_tx_dmapath(tdd_gated_tx_dmapath_s),\n    .tdd_counter_init(tdd_counter_init_s),\n    .tdd_frame_length(tdd_frame_length_s),\n    .tdd_terminal_type(tdd_terminal_type_s),\n    .tdd_vco_rx_on_1(tdd_vco_rx_on_1_s),\n    .tdd_vco_rx_off_1(tdd_vco_rx_off_1_s),\n    .tdd_vco_tx_on_1(tdd_vco_tx_on_1_s),\n    .tdd_vco_tx_off_1(tdd_vco_tx_off_1_s),\n    .tdd_rx_on_1(tdd_rx_on_1_s),\n    .tdd_rx_off_1(tdd_rx_off_1_s),\n    .tdd_rx_dp_on_1(tdd_rx_dp_on_1_s),\n    .tdd_rx_dp_off_1(tdd_rx_dp_off_1_s),\n    .tdd_tx_on_1(tdd_tx_on_1_s),\n    .tdd_tx_off_1(tdd_tx_off_1_s),\n    .tdd_tx_dp_on_1(tdd_tx_dp_on_1_s),\n    .tdd_tx_dp_off_1(tdd_tx_dp_off_1_s),\n    .tdd_vco_rx_on_2(tdd_vco_rx_on_2_s),\n    .tdd_vco_rx_off_2(tdd_vco_rx_off_2_s),\n    .tdd_vco_tx_on_2(tdd_vco_tx_on_2_s),\n    .tdd_vco_tx_off_2(tdd_vco_tx_off_2_s),\n    .tdd_rx_on_2(tdd_rx_on_2_s),\n    .tdd_rx_off_2(tdd_rx_off_2_s),\n    .tdd_rx_dp_on_2(tdd_rx_dp_on_2_s),\n    .tdd_rx_dp_off_2(tdd_rx_dp_off_2_s),\n    .tdd_tx_on_2(tdd_tx_on_2_s),\n    .tdd_tx_off_2(tdd_tx_off_2_s),\n    .tdd_tx_dp_on_2(tdd_tx_dp_on_2_s),\n    .tdd_tx_dp_off_2(tdd_tx_dp_off_2_s),\n    .tdd_status(tdd_status),\n    .up_rstn(up_rstn),\n    .up_clk(up_clk),\n    .up_wreq(up_wreq),\n    .up_waddr(up_waddr),\n    .up_wdata(up_wdata),\n    .up_wack(up_wack),\n    .up_rreq(up_rreq),\n    .up_raddr(up_raddr),\n    .up_rdata(up_rdata),\n    .up_rack(up_rack));\n\n  // the TX_DATA_PATH_DELAY and CONTROL_PATH_DELAY are specificly defined\n  // for the axi_adrv9001 core\n\n  ad_tdd_control #(\n    .TX_DATA_PATH_DELAY(),\n    .CONTROL_PATH_DELAY())\n  i_tdd_control(\n    .clk(clk),\n    .rst(rst),\n    .tdd_enable(tdd_enable_s),\n    .tdd_secondary(tdd_secondary_s),\n    .tdd_counter_init(tdd_counter_init_s),\n    .tdd_frame_length(tdd_frame_length_s),\n    .tdd_burst_count(tdd_burst_count_s),\n    .tdd_rx_only(tdd_rx_only_s),\n    .tdd_tx_only(tdd_tx_only_s),\n    .tdd_sync (tdd_sync),\n    .tdd_vco_rx_on_1(tdd_vco_rx_on_1_s),\n    .tdd_vco_rx_off_1(tdd_vco_rx_off_1_s),\n    .tdd_vco_tx_on_1(tdd_vco_tx_on_1_s),\n    .tdd_vco_tx_off_1(tdd_vco_tx_off_1_s),\n    .tdd_rx_on_1(tdd_rx_on_1_s),\n    .tdd_rx_off_1(tdd_rx_off_1_s),\n    .tdd_rx_dp_on_1(tdd_rx_dp_on_1_s),\n    .tdd_rx_dp_off_1(tdd_rx_dp_off_1_s),\n    .tdd_tx_on_1(tdd_tx_on_1_s),\n    .tdd_tx_off_1(tdd_tx_off_1_s),\n    .tdd_tx_dp_on_1(tdd_tx_dp_on_1_s),\n    .tdd_tx_dp_off_1(tdd_tx_dp_off_1_s),\n    .tdd_vco_rx_on_2(tdd_vco_rx_on_2_s),\n    .tdd_vco_rx_off_2(tdd_vco_rx_off_2_s),\n    .tdd_vco_tx_on_2(tdd_vco_tx_on_2_s),\n    .tdd_vco_tx_off_2(tdd_vco_tx_off_2_s),\n    .tdd_rx_on_2(tdd_rx_on_2_s),\n    .tdd_rx_off_2(tdd_rx_off_2_s),\n    .tdd_rx_dp_on_2(tdd_rx_dp_on_2_s),\n    .tdd_rx_dp_off_2(tdd_rx_dp_off_2_s),\n    .tdd_tx_on_2(tdd_tx_on_2_s),\n    .tdd_tx_off_2(tdd_tx_off_2_s),\n    .tdd_tx_dp_on_2(tdd_tx_dp_on_2_s),\n    .tdd_tx_dp_off_2(tdd_tx_dp_off_2_s),\n    .tdd_rx_dp_en(tdd_rx_dp_en_s),\n    .tdd_tx_dp_en(tdd_tx_dp_en_s),\n    .tdd_rx_vco_en(tdd_rx_vco_en),\n    .tdd_tx_vco_en(tdd_tx_vco_en),\n    .tdd_rx_rf_en(tdd_rx_rf_en),\n    .tdd_tx_rf_en(tdd_tx_rf_en),\n    .tdd_counter_status(tdd_counter_status));\n  end else begin\n    assign up_wack = 1'b0;\n    assign up_rack = 1'b0;\n    assign up_rdata = 32'h0;\n    assign tdd_rx_rf_en = 1'b1;\n    assign tdd_tx_rf_en = 1'b1;\n    assign tdd_enabled = 1'b0;\n  end\n  endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[218, "    .CONTROL_PATH_DELAY())\n"], [219, "  i_tdd_control(\n"]], "Add": [[219, "    .CONTROL_PATH_DELAY()\n"], [219, "  ) i_tdd_control(\n"]]}}