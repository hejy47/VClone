{"Source Block": ["hdl/library/axi_intr_monitor/axi_intr_monitor.v@174:207@HdlStmProcess", "      arm_counter <= 1'b1;\n    end\n  end\nend\n\nalways @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 0) begin\n    up_rack <= 'd0;\n    up_rdata <= 'd0;\n  end else begin\n    up_rack <= up_rreq_s;\n    if (up_rreq_s == 1'b1) begin\n      case (up_raddr_s[3:0])\n        4'h0: up_rdata <= VERSION;\n        4'h1: up_rdata <= scratch;\n        4'h2: up_rdata <= control;\n        4'h3: up_rdata <= {31'h0,interrupt};\n        4'h4: up_rdata <= counter_to_interrupt;\n        4'h5: up_rdata <= counter_from_interrupt;\n        4'h6: up_rdata <= counter_interrupt_handling;\n        4'h7: up_rdata <= min_interrupt_handling;\n        4'h8: up_rdata <= max_interrupt_handling;\n        default: up_rdata <= 0;\n      endcase\n    end else begin\n      up_rdata <= 32'd0;\n    end\n  end\nend\n\n// up bus interface\n\nup_axi i_up_axi(\n  .up_rstn(s_axi_aresetn),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[179, "always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [180, "  if (s_axi_aresetn == 0) begin\n"], [181, "    up_rack <= 'd0;\n"], [182, "    up_rdata <= 'd0;\n"], [183, "  end else begin\n"], [184, "    up_rack <= up_rreq_s;\n"], [185, "    if (up_rreq_s == 1'b1) begin\n"], [186, "      case (up_raddr_s[3:0])\n"], [187, "        4'h0: up_rdata <= VERSION;\n"], [188, "        4'h1: up_rdata <= scratch;\n"], [189, "        4'h2: up_rdata <= control;\n"], [190, "        4'h3: up_rdata <= {31'h0,interrupt};\n"], [191, "        4'h4: up_rdata <= counter_to_interrupt;\n"], [192, "        4'h5: up_rdata <= counter_from_interrupt;\n"], [193, "        4'h6: up_rdata <= counter_interrupt_handling;\n"], [194, "        4'h7: up_rdata <= min_interrupt_handling;\n"], [195, "        4'h8: up_rdata <= max_interrupt_handling;\n"], [196, "        default: up_rdata <= 0;\n"], [197, "      endcase\n"], [199, "      up_rdata <= 32'd0;\n"], [202, "end\n"]], "Add": [[197, "  always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [197, "    if (s_axi_aresetn == 0) begin\n"], [197, "      up_rack <= 'd0;\n"], [197, "      up_rdata <= 'd0;\n"], [199, "      up_rack <= up_rreq_s;\n"], [199, "      if (up_rreq_s == 1'b1) begin\n"], [199, "        case (up_raddr_s[3:0])\n"], [199, "          4'h0: up_rdata <= VERSION;\n"], [199, "          4'h1: up_rdata <= scratch;\n"], [199, "          4'h2: up_rdata <= control;\n"], [199, "          4'h3: up_rdata <= {31'h0,interrupt};\n"], [199, "          4'h4: up_rdata <= counter_to_interrupt;\n"], [199, "          4'h5: up_rdata <= counter_from_interrupt;\n"], [199, "          4'h6: up_rdata <= counter_interrupt_handling;\n"], [199, "          4'h7: up_rdata <= min_interrupt_handling;\n"], [199, "          4'h8: up_rdata <= max_interrupt_handling;\n"], [199, "          default: up_rdata <= 0;\n"], [199, "        endcase\n"], [199, "      end else begin\n"], [199, "        up_rdata <= 32'd0;\n"], [199, "      end\n"]]}}