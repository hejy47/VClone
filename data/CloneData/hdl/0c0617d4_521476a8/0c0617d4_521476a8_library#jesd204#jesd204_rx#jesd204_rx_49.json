{"Source Block": ["hdl/library/jesd204/jesd204_rx/jesd204_rx.v@502:608@HdlStmIf", "\nassign status_lane_emb_state = 'b0;\n\nend\n\nif (LINK_MODE[1] == 1) begin : mode_64b66b\n\nwire [NUM_LANES-1:0] emb_lock;\nwire link_buffer_release_n;\n\nsync_bits #(\n  .NUM_OF_BITS (1),\n  .ASYNC_CLK(ASYNC_CLK)\n) i_buffer_release_cdc (\n  .in_bits(buffer_release_n),\n  .out_clk(clk),\n  .out_resetn(1'b1),\n  .out_bits(link_buffer_release_n)\n);\n\njesd204_rx_ctrl_64b  #(\n  .NUM_LANES(NUM_LANES)\n) i_jesd204_rx_ctrl_64b (\n  .clk(clk),\n  .reset(reset),\n\n  .cfg_lanes_disable(cfg_lanes_disable),\n\n  .phy_block_sync(phy_block_sync_r),\n  .emb_lock(emb_lock),\n\n  .all_emb_lock(all_emb_lock),\n  .buffer_release_n(link_buffer_release_n),\n\n  .status_state(status_ctrl_state),\n  .event_unexpected_lane_state_error(event_unexpected_lane_state_error)\n);\n\nfor (i = 0; i < NUM_LANES; i = i + 1) begin: gen_lane\n\n  localparam D_START = i * DATA_PATH_WIDTH*8;\n  localparam D_STOP = D_START + DATA_PATH_WIDTH*8-1;\n  localparam TPL_D_START = i * TPL_DATA_PATH_WIDTH*8;\n  localparam TPL_D_STOP = TPL_D_START + TPL_DATA_PATH_WIDTH*8-1;\n  localparam H_START = i * 2;\n  localparam H_STOP = H_START + 2-1;\n\n  wire [7:0] status_lane_skew;\n\n  jesd204_rx_lane_64b #(\n    .ELASTIC_BUFFER_SIZE(ELASTIC_BUFFER_SIZE),\n    .TPL_DATA_PATH_WIDTH(TPL_DATA_PATH_WIDTH),\n    .ASYNC_CLK(ASYNC_CLK)\n  ) i_lane (\n    .clk(clk),\n    .reset(reset),\n\n    .device_clk(device_clk),\n    .device_reset(device_reset),\n\n    .phy_data(phy_data_r[D_STOP:D_START]),\n    .phy_header(phy_header_r[H_STOP:H_START]),\n    .phy_block_sync(phy_block_sync_r[i]),\n\n    .cfg_disable_scrambler(cfg_disable_scrambler),\n    .cfg_header_mode(2'b0),\n    .cfg_rx_thresh_emb_err(5'd8),\n    .cfg_beats_per_multiframe(cfg_beats_per_multiframe),\n\n    .rx_data(rx_data_s[TPL_D_STOP:TPL_D_START]),\n\n    .buffer_release_n(buffer_release_n),\n    .buffer_ready_n(buffer_ready_n[i]),\n    .all_buffer_ready_n(all_buffer_ready_n),\n\n    .lmfc_edge(lmfc_edge_synced),\n    .emb_lock(emb_lock[i]),\n\n    .ctrl_err_statistics_reset(ctrl_err_statistics_reset),\n    .ctrl_err_statistics_mask(ctrl_err_statistics_mask[6:3]),\n    .status_err_statistics_cnt(status_err_statistics_cnt[32*i+31:32*i]),\n\n    .status_lane_emb_state(status_lane_emb_state[3*i+2:3*i]),\n    .status_lane_skew(status_lane_skew)\n  );\n\nassign status_lane_latency[14*(i+1)-1:14*i] = {3'b0,status_lane_skew,3'b0};\n\nend\n\n// Assign unused outputs\nassign sync = 'b0;\nassign phy_en_char_align = 1'b0;\n\nassign ilas_config_valid ='b0;\nassign ilas_config_addr = 'b0;\nassign ilas_config_data = 'b0;\nassign status_lane_cgs_state = 'b0;\nassign status_lane_ifs_ready = {NUM_LANES{1'b1}};\nassign event_frame_alignment_error = 1'b0;\n\nend\n\n\nendgenerate\n\n// Core static parameters\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[507, "if (LINK_MODE[1] == 1) begin : mode_64b66b\n"], [509, "wire [NUM_LANES-1:0] emb_lock;\n"], [510, "wire link_buffer_release_n;\n"], [512, "sync_bits #(\n"], [513, "  .NUM_OF_BITS (1),\n"], [514, "  .ASYNC_CLK(ASYNC_CLK)\n"], [515, ") i_buffer_release_cdc (\n"], [516, "  .in_bits(buffer_release_n),\n"], [517, "  .out_clk(clk),\n"], [518, "  .out_resetn(1'b1),\n"], [519, "  .out_bits(link_buffer_release_n)\n"], [520, ");\n"], [522, "jesd204_rx_ctrl_64b  #(\n"], [523, "  .NUM_LANES(NUM_LANES)\n"], [524, ") i_jesd204_rx_ctrl_64b (\n"], [525, "  .clk(clk),\n"], [526, "  .reset(reset),\n"], [528, "  .cfg_lanes_disable(cfg_lanes_disable),\n"], [530, "  .phy_block_sync(phy_block_sync_r),\n"], [531, "  .emb_lock(emb_lock),\n"], [533, "  .all_emb_lock(all_emb_lock),\n"], [534, "  .buffer_release_n(link_buffer_release_n),\n"], [536, "  .status_state(status_ctrl_state),\n"], [537, "  .event_unexpected_lane_state_error(event_unexpected_lane_state_error)\n"], [538, ");\n"], [540, "for (i = 0; i < NUM_LANES; i = i + 1) begin: gen_lane\n"], [542, "  localparam D_START = i * DATA_PATH_WIDTH*8;\n"], [543, "  localparam D_STOP = D_START + DATA_PATH_WIDTH*8-1;\n"], [544, "  localparam TPL_D_START = i * TPL_DATA_PATH_WIDTH*8;\n"], [545, "  localparam TPL_D_STOP = TPL_D_START + TPL_DATA_PATH_WIDTH*8-1;\n"], [546, "  localparam H_START = i * 2;\n"], [547, "  localparam H_STOP = H_START + 2-1;\n"], [549, "  wire [7:0] status_lane_skew;\n"], [551, "  jesd204_rx_lane_64b #(\n"], [552, "    .ELASTIC_BUFFER_SIZE(ELASTIC_BUFFER_SIZE),\n"], [553, "    .TPL_DATA_PATH_WIDTH(TPL_DATA_PATH_WIDTH),\n"], [555, "  ) i_lane (\n"], [559, "    .device_clk(device_clk),\n"], [560, "    .device_reset(device_reset),\n"], [562, "    .phy_data(phy_data_r[D_STOP:D_START]),\n"], [563, "    .phy_header(phy_header_r[H_STOP:H_START]),\n"], [564, "    .phy_block_sync(phy_block_sync_r[i]),\n"], [566, "    .cfg_disable_scrambler(cfg_disable_scrambler),\n"], [567, "    .cfg_header_mode(2'b0),\n"], [568, "    .cfg_rx_thresh_emb_err(5'd8),\n"], [569, "    .cfg_beats_per_multiframe(cfg_beats_per_multiframe),\n"], [571, "    .rx_data(rx_data_s[TPL_D_STOP:TPL_D_START]),\n"], [573, "    .buffer_release_n(buffer_release_n),\n"], [574, "    .buffer_ready_n(buffer_ready_n[i]),\n"], [575, "    .all_buffer_ready_n(all_buffer_ready_n),\n"], [577, "    .lmfc_edge(lmfc_edge_synced),\n"], [578, "    .emb_lock(emb_lock[i]),\n"], [580, "    .ctrl_err_statistics_reset(ctrl_err_statistics_reset),\n"], [581, "    .ctrl_err_statistics_mask(ctrl_err_statistics_mask[6:3]),\n"], [582, "    .status_err_statistics_cnt(status_err_statistics_cnt[32*i+31:32*i]),\n"], [584, "    .status_lane_emb_state(status_lane_emb_state[3*i+2:3*i]),\n"], [585, "    .status_lane_skew(status_lane_skew)\n"], [586, "  );\n"], [588, "assign status_lane_latency[14*(i+1)-1:14*i] = {3'b0,status_lane_skew,3'b0};\n"], [590, "end\n"], [593, "assign sync = 'b0;\n"], [594, "assign phy_en_char_align = 1'b0;\n"], [596, "assign ilas_config_valid ='b0;\n"], [597, "assign ilas_config_addr = 'b0;\n"], [598, "assign ilas_config_data = 'b0;\n"], [599, "assign status_lane_cgs_state = 'b0;\n"], [600, "assign status_lane_ifs_ready = {NUM_LANES{1'b1}};\n"], [601, "assign event_frame_alignment_error = 1'b0;\n"], [603, "end\n"]], "Add": [[507, "  /* If one of the enabled lanes falls out of DATA phase while the link is in DATA phase\n"], [507, "   * report an error event */\n"], [507, "  assign unexpected_lane_state_error = |(~(cgs_ready|cfg_lanes_disable)) & &status_ctrl_state;\n"], [507, "  always @(posedge clk) begin\n"], [507, "    unexpected_lane_state_error_d <= unexpected_lane_state_error;\n"], [507, "  end\n"], [507, "  assign event_unexpected_lane_state_error = unexpected_lane_state_error & ~unexpected_lane_state_error_d;\n"], [510, "  /* Delay matching based on the number of pipeline stages */\n"], [510, "  reg [NUM_LANES-1:0] ifs_ready_d1 = 1'b0;\n"], [510, "  reg [NUM_LANES-1:0] ifs_ready_d2 = 1'b0;\n"], [510, "  reg [NUM_LANES-1:0] ifs_ready_mux;\n"], [520, "  always @(posedge clk) begin\n"], [520, "    ifs_ready_d1 <= ifs_ready;\n"], [520, "    ifs_ready_d2 <= ifs_ready_d1;\n"], [520, "  end\n"], [526, "  always @(*) begin\n"], [526, "    case (SCRAMBLER_REGISTERED + ALIGN_MUX_REGISTERED)\n"], [526, "    1: ifs_ready_mux = ifs_ready_d1;\n"], [526, "    2: ifs_ready_mux = ifs_ready_d2;\n"], [526, "    default: ifs_ready_mux = ifs_ready;\n"], [526, "    endcase\n"], [526, "  end\n"], [528, "  jesd204_lane_latency_monitor #(\n"], [528, "    .NUM_LANES(NUM_LANES),\n"], [528, "    .DATA_PATH_WIDTH(DATA_PATH_WIDTH)\n"], [528, "  ) i_lane_latency_monitor (\n"], [528, "    .clk(clk),\n"], [528, "    .reset(latency_monitor_reset),\n"], [531, "    .lane_ready(ifs_ready_mux),\n"], [531, "    .lane_frame_align(frame_align),\n"], [531, "    .lane_latency_ready(status_lane_ifs_ready),\n"], [531, "    .lane_latency(status_lane_latency));\n"], [534, "  assign status_lane_emb_state = 'b0;\n"], [540, "  end\n"], [547, "  if (LINK_MODE[1] == 1) begin : mode_64b66b\n"], [549, "  wire [NUM_LANES-1:0] emb_lock;\n"], [549, "  wire link_buffer_release_n;\n"], [553, "  sync_bits #(\n"], [553, "    .NUM_OF_BITS (1),\n"], [555, "  ) i_buffer_release_cdc (\n"], [555, "    .in_bits(buffer_release_n),\n"], [555, "    .out_clk(clk),\n"], [555, "    .out_resetn(1'b1),\n"], [555, "    .out_bits(link_buffer_release_n));\n"], [555, "  jesd204_rx_ctrl_64b  #(\n"], [555, "    .NUM_LANES(NUM_LANES)\n"], [555, "  ) i_jesd204_rx_ctrl_64b (\n"], [560, "    .cfg_lanes_disable(cfg_lanes_disable),\n"], [560, "    .phy_block_sync(phy_block_sync_r),\n"], [560, "    .emb_lock(emb_lock),\n"], [560, "    .all_emb_lock(all_emb_lock),\n"], [560, "    .buffer_release_n(link_buffer_release_n),\n"], [560, "    .status_state(status_ctrl_state),\n"], [560, "    .event_unexpected_lane_state_error(event_unexpected_lane_state_error));\n"], [564, "  for (i = 0; i < NUM_LANES; i = i + 1) begin: gen_lane\n"], [569, "    localparam D_START = i * DATA_PATH_WIDTH*8;\n"], [569, "    localparam D_STOP = D_START + DATA_PATH_WIDTH*8-1;\n"], [569, "    localparam TPL_D_START = i * TPL_DATA_PATH_WIDTH*8;\n"], [569, "    localparam TPL_D_STOP = TPL_D_START + TPL_DATA_PATH_WIDTH*8-1;\n"], [569, "    localparam H_START = i * 2;\n"], [569, "    localparam H_STOP = H_START + 2-1;\n"], [571, "    wire [7:0] status_lane_skew;\n"], [575, "    jesd204_rx_lane_64b #(\n"], [575, "      .ELASTIC_BUFFER_SIZE(ELASTIC_BUFFER_SIZE),\n"], [575, "      .TPL_DATA_PATH_WIDTH(TPL_DATA_PATH_WIDTH),\n"], [575, "      .ASYNC_CLK(ASYNC_CLK)\n"], [575, "    ) i_lane (\n"], [575, "      .clk(clk),\n"], [575, "      .reset(reset),\n"], [578, "      .device_clk(device_clk),\n"], [578, "      .device_reset(device_reset),\n"], [582, "      .phy_data(phy_data_r[D_STOP:D_START]),\n"], [582, "      .phy_header(phy_header_r[H_STOP:H_START]),\n"], [582, "      .phy_block_sync(phy_block_sync_r[i]),\n"], [586, "      .cfg_disable_scrambler(cfg_disable_scrambler),\n"], [586, "      .cfg_header_mode(2'b0),\n"], [586, "      .cfg_rx_thresh_emb_err(5'd8),\n"], [586, "      .cfg_beats_per_multiframe(cfg_beats_per_multiframe),\n"], [588, "      .rx_data(rx_data_s[TPL_D_STOP:TPL_D_START]),\n"], [590, "      .buffer_release_n(buffer_release_n),\n"], [590, "      .buffer_ready_n(buffer_ready_n[i]),\n"], [590, "      .all_buffer_ready_n(all_buffer_ready_n),\n"], [594, "      .lmfc_edge(lmfc_edge_synced),\n"], [594, "      .emb_lock(emb_lock[i]),\n"], [601, "      .ctrl_err_statistics_reset(ctrl_err_statistics_reset),\n"], [601, "      .ctrl_err_statistics_mask(ctrl_err_statistics_mask[6:3]),\n"], [601, "      .status_err_statistics_cnt(status_err_statistics_cnt[32*i+31:32*i]),\n"], [603, "      .status_lane_emb_state(status_lane_emb_state[3*i+2:3*i]),\n"], [603, "      .status_lane_skew(status_lane_skew));\n"], [603, "  assign status_lane_latency[14*(i+1)-1:14*i] = {3'b0,status_lane_skew,3'b0};\n"]]}}