Source Block: hdl/library/jesd204/jesd204_common/jesd204_frame_align_replace.v@130:148@HdlStmProcess
  for(ll = 0; ll < DATA_PATH_WIDTH; ll=ll+1) begin
    data_prev_eof_single_int = data_prev_eof_single_int | (data[ll*8 +: 8] & {8{eof[ll]}});
  end
end

always @(posedge clk) begin
  if(reset) begin
    data_prev_eof_single <= 'b0;
  end else begin
    if(|eof && (!IS_RX || !(|char_is_align))) begin
      data_prev_eof_single <= data_prev_eof_single_int;
    end
  end
end

always @(posedge clk) begin
  if(reset) begin
    char_is_align_prev_single <= 'b0;
  end else begin

Diff Content:
- 135 always @(posedge clk) begin
- 136   if(reset) begin
- 137     data_prev_eof_single <= 'b0;
- 138   end else begin
- 139     if(|eof && (!IS_RX || !(|char_is_align))) begin
- 140       data_prev_eof_single <= data_prev_eof_single_int;
- 143 end
+ 140   always @(posedge clk) begin
+ 140     if(reset) begin
+ 140       char_is_align_d1 <= 'b0;
+ 140       char_is_align_d2 <= 'b0;
+ 140     end else begin
+ 140       char_is_align_d1 <= char_is_align;
+ 140       char_is_align_d2 <= char_is_align_d1;

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_common/jesd204_frame_align_replace.v@123:138
  end
end

// Capture single EOF in current cycle

always @(eof, data) begin
  data_prev_eof_single_int = 'b0;
  for(ll = 0; ll < DATA_PATH_WIDTH; ll=ll+1) begin
    data_prev_eof_single_int = data_prev_eof_single_int | (data[ll*8 +: 8] & {8{eof[ll]}});
  end
end

always @(posedge clk) begin
  if(reset) begin
    data_prev_eof_single <= 'b0;
  end else begin

