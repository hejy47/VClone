{"Source Block": ["hdl/library/data_offload/data_offload_regmap.v@292:330@HdlStmIf", "    .out_clk (up_clk),\n    .out_data (up_wr_fsm_status_s)\n  );\n\n  generate\n  if (TX_OR_RXN_PATH) begin : sync_tx_path\n\n    sync_data #(\n      .NUM_OF_BITS (3),\n      .ASYNC_CLK (1))\n    i_sync_xfer_control (\n      .in_clk (up_clk),\n      .in_data ({up_sync_config,\n                 up_sync}),\n      .out_clk (dst_clk),\n      .out_data ({sync_config,\n                  sync})\n    );\n\n  end else begin : sync_rx_path\n\n    sync_data #(\n      .NUM_OF_BITS (3),\n      .ASYNC_CLK (1))\n    i_sync_xfer_control (\n      .in_clk (up_clk),\n      .in_data ({up_sync_config,\n                 up_sync}),\n      .out_clk (src_clk),\n      .out_data ({sync_config,\n                  sync})\n    );\n\n  end\n  endgenerate\n\n  sync_bits #(\n    .NUM_OF_BITS (2),\n    .ASYNC_CLK (1))\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[301, "      .ASYNC_CLK (1))\n"], [302, "    i_sync_xfer_control (\n"], [308, "                  sync})\n"], [309, "    );\n"], [315, "      .ASYNC_CLK (1))\n"], [316, "    i_sync_xfer_control (\n"], [322, "                  sync})\n"], [323, "    );\n"]], "Add": [[302, "      .ASYNC_CLK (1)\n"], [302, "    ) i_sync_xfer_control (\n"], [309, "                  sync}));\n"], [316, "      .ASYNC_CLK (1)\n"], [316, "    ) i_sync_xfer_control (\n"], [323, "                  sync}));\n"]]}}