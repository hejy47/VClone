{"Source Block": ["hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@142:162@HdlStmProcess", "    emb_vcount <= emb_vcount + 'b1;\n  end\nend\n\nreg [4:0] emb_icount = 'b0;\nalways @(posedge clk) begin\n  if (state[BIT_EMB_INIT]) begin\n    emb_icount <= 'b0;\n  end else if (state[BIT_EMB_LOCK]) begin\n    if (sh_count == 0 && eoemb) begin\n      emb_icount <= 'b0;\n    end else if (invalid_eoemb || invalid_eomb) begin\n      emb_icount <= emb_icount + 5'b1;\n    end\n  end\nend\n\n\nalways @(*) begin\n  next_state = state;\n  case (state)\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[147, "always @(posedge clk) begin\n"], [148, "  if (state[BIT_EMB_INIT]) begin\n"], [149, "    emb_icount <= 'b0;\n"], [150, "  end else if (state[BIT_EMB_LOCK]) begin\n"], [151, "    if (sh_count == 0 && eoemb) begin\n"], [153, "    end else if (invalid_eoemb || invalid_eomb) begin\n"], [154, "      emb_icount <= emb_icount + 5'b1;\n"], [157, "end\n"]], "Add": [[151, "  reg [4:0] emb_icount = 'b0;\n"], [151, "  always @(posedge clk) begin\n"], [151, "    if (state[BIT_EMB_INIT]) begin\n"], [154, "    end else if (state[BIT_EMB_LOCK]) begin\n"], [154, "      if (sh_count == 0 && eoemb) begin\n"], [154, "        emb_icount <= 'b0;\n"], [154, "      end else if (invalid_eoemb || invalid_eomb) begin\n"], [154, "        emb_icount <= emb_icount + 5'b1;\n"], [154, "      end\n"], [157, "  always @(*) begin\n"], [157, "    next_state = state;\n"], [157, "    case (state)\n"], [157, "      STATE_EMB_INIT:\n"], [157, "        if (eoemb) begin\n"], [157, "          next_state = STATE_EMB_HUNT;\n"], [157, "        end\n"], [157, "      STATE_EMB_HUNT:\n"], [157, "        if (invalid_sequence) begin\n"], [157, "          next_state = STATE_EMB_INIT;\n"], [157, "        end else if (eoemb && emb_vcount == 2'd3) begin\n"], [157, "          next_state = STATE_EMB_LOCK;\n"], [157, "        end\n"], [157, "      STATE_EMB_LOCK:\n"], [157, "        if (emb_icount == cfg_rx_thresh_emb_err) begin\n"], [157, "          next_state = STATE_EMB_INIT;\n"], [157, "        end\n"], [157, "    endcase\n"], [157, "    if (sh_lock == 1'b0) next_state = STATE_EMB_INIT;\n"], [157, "  end\n"]]}}