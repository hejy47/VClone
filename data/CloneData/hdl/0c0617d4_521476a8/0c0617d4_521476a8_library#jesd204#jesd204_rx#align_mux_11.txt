Source Block: hdl/library/jesd204/jesd204_rx/align_mux.v@71:79@HdlStmAssign
assign data = {in_data, in_data_d1};
assign charisk = {in_charisk, in_charisk_d1};

assign align_int = align[DPW_LOG2-1:0];

assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];
assign out_charisk = charisk[align_int +: DATA_PATH_WIDTH];

endmodule

Diff Content:
- 76 assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_rx/align_mux.v@72:79
assign charisk = {in_charisk, in_charisk_d1};

assign align_int = align[DPW_LOG2-1:0];

assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];
assign out_charisk = charisk[align_int +: DATA_PATH_WIDTH];

endmodule

Clone Blocks 2:
hdl/library/jesd204/jesd204_rx/align_mux.v@67:77
  in_data_d1 <= in_data;
  in_charisk_d1 <= in_charisk;
end

assign data = {in_data, in_data_d1};
assign charisk = {in_charisk, in_charisk_d1};

assign align_int = align[DPW_LOG2-1:0];

assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];
assign out_charisk = charisk[align_int +: DATA_PATH_WIDTH];

Clone Blocks 3:
hdl/library/jesd204/jesd204_rx/align_mux.v@66:76
always @(posedge clk) begin
  in_data_d1 <= in_data;
  in_charisk_d1 <= in_charisk;
end

assign data = {in_data, in_data_d1};
assign charisk = {in_charisk, in_charisk_d1};

assign align_int = align[DPW_LOG2-1:0];

assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];

Clone Blocks 4:
hdl/library/jesd204/jesd204_rx/align_mux.v@69:79
end

assign data = {in_data, in_data_d1};
assign charisk = {in_charisk, in_charisk_d1};

assign align_int = align[DPW_LOG2-1:0];

assign out_data = data[align_int*8 +: (DATA_PATH_WIDTH*8)];
assign out_charisk = charisk[align_int +: DATA_PATH_WIDTH];

endmodule

