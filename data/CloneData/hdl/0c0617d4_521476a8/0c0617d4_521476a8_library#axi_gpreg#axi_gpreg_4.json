{"Source Block": ["hdl/library/axi_gpreg/axi_gpreg.v@296:322@HdlStmFor", "  assign up_rdata_s[(8+n)] = 32'd0;\n  assign up_rack_s[(8+n)] = 1'd0;\n  end\n  end\n\n  for (n = 0; n < NUM_OF_CLK_MONS; n = n + 1) begin: g_clock_mon\n  axi_gpreg_clock_mon #(\n    .ID (32+n),\n    .BUF_ENABLE (BUF_ENABLE[n]))\n  i_gpreg_clock_mon (\n    .d_clk (d_clk_s[n]),\n    .up_rstn (up_rstn),\n    .up_clk (up_clk),\n    .up_wreq (up_wreq),\n    .up_waddr (up_waddr),\n    .up_wdata (up_wdata),\n    .up_wack (up_wack_s[(8+n)]),\n    .up_rreq (up_rreq),\n    .up_raddr (up_raddr),\n    .up_rdata (up_rdata_s[(8+n)]),\n    .up_rack (up_rack_s[(8+n)]));\n  end\n\n  endgenerate\n\n  up_axi i_up_axi (\n    .up_rstn (up_rstn),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[301, "  for (n = 0; n < NUM_OF_CLK_MONS; n = n + 1) begin: g_clock_mon\n"], [302, "  axi_gpreg_clock_mon #(\n"], [303, "    .ID (32+n),\n"], [304, "    .BUF_ENABLE (BUF_ENABLE[n]))\n"], [305, "  i_gpreg_clock_mon (\n"], [306, "    .d_clk (d_clk_s[n]),\n"], [307, "    .up_rstn (up_rstn),\n"], [308, "    .up_clk (up_clk),\n"], [309, "    .up_wreq (up_wreq),\n"], [310, "    .up_waddr (up_waddr),\n"], [311, "    .up_wdata (up_wdata),\n"], [312, "    .up_wack (up_wack_s[(8+n)]),\n"], [313, "    .up_rreq (up_rreq),\n"], [314, "    .up_raddr (up_raddr),\n"], [315, "    .up_rdata (up_rdata_s[(8+n)]),\n"], [316, "    .up_rack (up_rack_s[(8+n)]));\n"], [317, "  end\n"]], "Add": [[317, "    if (NUM_OF_CLK_MONS < 8) begin\n"], [317, "      for (n = NUM_OF_CLK_MONS; n < 8; n = n + 1) begin: g_unused_clock_mon\n"], [317, "        assign up_wack_s[(8+n)] = 1'd0;\n"], [317, "        assign up_rdata_s[(8+n)] = 32'd0;\n"], [317, "        assign up_rack_s[(8+n)] = 1'd0;\n"], [317, "      end\n"], [317, "    end\n"], [317, "    for (n = 0; n < NUM_OF_CLK_MONS; n = n + 1) begin: g_clock_mon\n"], [317, "      axi_gpreg_clock_mon #(\n"], [317, "        .ID (32+n),\n"], [317, "        .BUF_ENABLE (BUF_ENABLE[n])\n"], [317, "      ) i_gpreg_clock_mon (\n"], [317, "        .d_clk (d_clk_s[n]),\n"], [317, "        .up_rstn (up_rstn),\n"], [317, "        .up_clk (up_clk),\n"], [317, "        .up_wreq (up_wreq),\n"], [317, "        .up_waddr (up_waddr),\n"], [317, "        .up_wdata (up_wdata),\n"], [317, "        .up_wack (up_wack_s[(8+n)]),\n"], [317, "        .up_rreq (up_rreq),\n"], [317, "        .up_raddr (up_raddr),\n"], [317, "        .up_rdata (up_rdata_s[(8+n)]),\n"], [317, "        .up_rack (up_rack_s[(8+n)]));\n"], [317, "    end\n"]]}}