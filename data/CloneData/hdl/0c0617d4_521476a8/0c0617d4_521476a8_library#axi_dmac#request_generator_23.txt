Source Block: hdl/library/axi_dmac/request_generator.v@104:114@HdlStmAssign
wire incr_id;

assign eot = burst_count == 'h00;
assign request_id = id;

assign incr_en = (response_id != id_next) && (enable == 1'b1);
assign incr_id = (state == STATE_GEN_ID) && (incr_en == 1'b1);

always @(posedge clk) begin
  if (state == STATE_IDLE) begin
    burst_count <= req_burst_count;

Diff Content:
- 109 assign incr_en = (response_id != id_next) && (enable == 1'b1);

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_dmac/request_generator.v@102:112
wire [ID_WIDTH-1:0] id_next = inc_id(id);
wire incr_en;
wire incr_id;

assign eot = burst_count == 'h00;
assign request_id = id;

assign incr_en = (response_id != id_next) && (enable == 1'b1);
assign incr_id = (state == STATE_GEN_ID) && (incr_en == 1'b1);

always @(posedge clk) begin

Clone Blocks 2:
hdl/library/axi_dmac/request_generator.v@105:115

assign eot = burst_count == 'h00;
assign request_id = id;

assign incr_en = (response_id != id_next) && (enable == 1'b1);
assign incr_id = (state == STATE_GEN_ID) && (incr_en == 1'b1);

always @(posedge clk) begin
  if (state == STATE_IDLE) begin
    burst_count <= req_burst_count;
  end else if (state == STATE_REWIND_ID) begin

