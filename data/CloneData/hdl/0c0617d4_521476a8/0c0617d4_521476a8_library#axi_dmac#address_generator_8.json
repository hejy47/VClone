{"Source Block": ["hdl/library/axi_dmac/address_generator.v@91:101@HdlIdDef", "              DMA_DATA_WIDTH ==   64 ? 3'b011 :\n              DMA_DATA_WIDTH ==   32 ? 3'b010 :\n              DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;\n\nreg [LENGTH_WIDTH-1:0] length = 'h0;\nreg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\nreg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\nassign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\nassign len = length;\n\nreg addr_valid_d1;\n"], "Clone Blocks": [["hdl/library/axi_dmac/address_generator.v@93:103", "              DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;\n\nreg [LENGTH_WIDTH-1:0] length = 'h0;\nreg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\nreg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\nassign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\nassign len = length;\n\nreg addr_valid_d1;\nreg last = 1'b0;\n\n"], ["hdl/library/axi_dmac/address_generator.v@92:102", "              DMA_DATA_WIDTH ==   32 ? 3'b010 :\n              DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;\n\nreg [LENGTH_WIDTH-1:0] length = 'h0;\nreg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\nreg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\nassign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\nassign len = length;\n\nreg addr_valid_d1;\nreg last = 1'b0;\n"], ["hdl/library/axi_dmac/address_generator.v@94:104", "\nreg [LENGTH_WIDTH-1:0] length = 'h0;\nreg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\nreg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\nassign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\nassign len = length;\n\nreg addr_valid_d1;\nreg last = 1'b0;\n\n// If we already asserted addr_valid we have to wait until it is accepted before\n"], ["hdl/library/axi_dmac/address_generator.v@90:100", "              DMA_DATA_WIDTH ==  128 ? 3'b100 :\n              DMA_DATA_WIDTH ==   64 ? 3'b011 :\n              DMA_DATA_WIDTH ==   32 ? 3'b010 :\n              DMA_DATA_WIDTH ==   16 ? 3'b001 : 3'b000;\n\nreg [LENGTH_WIDTH-1:0] length = 'h0;\nreg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\nreg [BEATS_PER_BURST_WIDTH-1:0] last_burst_len = 'h00;\nassign addr = {address, {BYTES_PER_BEAT_WIDTH{1'b0}}};\nassign len = length;\n\n"]], "Diff Content": {"Delete": [[96, "reg [DMA_ADDR_WIDTH-BYTES_PER_BEAT_WIDTH-1:0] address = 'h00;\n"]], "Add": []}}