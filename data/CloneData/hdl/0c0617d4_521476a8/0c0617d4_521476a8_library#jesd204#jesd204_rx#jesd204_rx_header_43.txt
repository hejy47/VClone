Source Block: hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@194:204@HdlStmAssign
end

assign emb_lock = next_state[BIT_EMB_LOCK];

// Status & error events
assign status_lane_emb_state = state;

always @(posedge clk) begin
  event_invalid_header <= (~state[BIT_EMB_INIT]) && (header[0] == header[1]);
  event_unexpected_eomb <= (~state[BIT_EMB_INIT]) && (sh_count[4:0] != 0 && eomb);
  event_unexpected_eoemb <= (~state[BIT_EMB_INIT]) && invalid_eoemb;

Diff Content:
- 199 assign status_lane_emb_state = state;
+ 199   assign status_lane_emb_state = state;

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/jesd204_rx/jesd204_rx_header.v@196:207
assign emb_lock = next_state[BIT_EMB_LOCK];

// Status & error events
assign status_lane_emb_state = state;

always @(posedge clk) begin
  event_invalid_header <= (~state[BIT_EMB_INIT]) && (header[0] == header[1]);
  event_unexpected_eomb <= (~state[BIT_EMB_INIT]) && (sh_count[4:0] != 0 && eomb);
  event_unexpected_eoemb <= (~state[BIT_EMB_INIT]) && invalid_eoemb;
end

endmodule

