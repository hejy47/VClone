Source Block: hdl/library/axi_dmac/request_generator.v@107:125@HdlStmProcess
assign request_id = id;

assign incr_en = (response_id != id_next) && (enable == 1'b1);
assign incr_id = (state == STATE_GEN_ID) && (incr_en == 1'b1);

always @(posedge clk) begin
  if (state == STATE_IDLE) begin
    burst_count <= req_burst_count;
  end else if (state == STATE_REWIND_ID) begin
    burst_count <= cur_burst_length;
  end else if (incr_id == 1'b1) begin
    burst_count <= burst_count - 1'b1;
  end
end
always @(posedge clk) begin
  if (req_ready == 1'b1 & req_valid == 1'b1) begin
    cur_req_xlast <= req_xlast;
    cur_burst_length <= req_burst_count;
  end

Diff Content:
- 112 always @(posedge clk) begin
- 113   if (state == STATE_IDLE) begin
- 114     burst_count <= req_burst_count;
- 115   end else if (state == STATE_REWIND_ID) begin
- 116     burst_count <= cur_burst_length;
- 117   end else if (incr_id == 1'b1) begin
- 118     burst_count <= burst_count - 1'b1;
- 120 end
+ 118   `include "inc_id.vh"
+ 118   localparam STATE_IDLE      = 3'h0;
+ 118   localparam STATE_GEN_ID    = 3'h1;
+ 118   localparam STATE_REWIND_ID = 3'h2;
+ 118   localparam STATE_CONSUME   = 3'h3;
+ 118   localparam STATE_WAIT_LAST = 3'h4;
+ 118   reg [2:0] state = STATE_IDLE;
+ 118   reg [2:0] nx_state;
+ 118   reg [1:0] rew_transfer_id = 1'b0;
+ 118   reg rew_req_xlast;
+ 118   reg [ID_WIDTH-1:0] rew_id = 'h0;
+ 118   reg cur_transfer_id = 1'b0;
+ 118   reg cur_req_xlast;
+ 118   wire transfer_id_match;
+ 118   reg nx_completion_req_valid;
+ 118   /*
+ 118    * Here we only need to count the number of bursts, which means we can ignore
+ 118    * the lower bits of the byte count. The last last burst may not contain the
+ 118    * maximum number of bytes, but the address_generator and data_mover will take
+ 118    * care that only the requested ammount of bytes is transfered.
+ 118    */
+ 118   reg [BURSTS_PER_TRANSFER_WIDTH-1:0] burst_count = 'h00;
+ 118   reg [BURSTS_PER_TRANSFER_WIDTH-1:0] cur_burst_length = 'h00;
+ 118   reg [ID_WIDTH-1:0] id;
+ 118   wire [ID_WIDTH-1:0] id_next = inc_id(id);
+ 118   wire incr_en;
+ 118   wire incr_id;
+ 118   assign eot = burst_count == 'h00;
+ 118   assign request_id = id;
+ 118   assign incr_en = (response_id != id_next) && (enable == 1'b1);
+ 118   assign incr_id = (state == STATE_GEN_ID) && (incr_en == 1'b1);
+ 118   always @(posedge clk) begin
+ 118     if (state == STATE_IDLE) begin
+ 118       burst_count <= req_burst_count;
+ 118     end else if (state == STATE_REWIND_ID) begin
+ 118       burst_count <= cur_burst_length;
+ 118     end else if (incr_id == 1'b1) begin
+ 118       burst_count <= burst_count - 1'b1;
+ 118     end

Clone Blocks:
