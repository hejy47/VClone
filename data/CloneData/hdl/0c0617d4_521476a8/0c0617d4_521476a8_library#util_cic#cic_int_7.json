{"Source Block": ["hdl/library/util_cic/cic_int.v@53:74@HdlStmFor", "assign data_out = state;\nassign sum = (data_in & mask) + (state & mask);\ngenerate\ngenvar i;\n\nfor (i = 0; i < NUM_STAGES; i = i + 1) begin\n  localparam j = NUM_STAGES - i - 1;\n  localparam H = DATA_WIDTH - STAGE_WIDTH * i - 1;\n  localparam L = j == 0 ? 0 : DATA_WIDTH - STAGE_WIDTH * (i+1);\n\n  assign mask[H:L] = {{H-L{1'b1}},j != 0 ? ce[j] : 1'b1};\n\n  always @(posedge clk) begin\n    if (ce[j] == 1'b1) begin\n      state[H:L] <= sum[H:L];\n    end\n  end\nend\n\nendgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[58, "for (i = 0; i < NUM_STAGES; i = i + 1) begin\n"], [59, "  localparam j = NUM_STAGES - i - 1;\n"], [60, "  localparam H = DATA_WIDTH - STAGE_WIDTH * i - 1;\n"], [61, "  localparam L = j == 0 ? 0 : DATA_WIDTH - STAGE_WIDTH * (i+1);\n"], [63, "  assign mask[H:L] = {{H-L{1'b1}},j != 0 ? ce[j] : 1'b1};\n"], [65, "  always @(posedge clk) begin\n"], [66, "    if (ce[j] == 1'b1) begin\n"], [67, "      state[H:L] <= sum[H:L];\n"], [70, "end\n"]], "Add": [[61, "  for (i = 0; i < NUM_STAGES; i = i + 1) begin\n"], [61, "    localparam j = NUM_STAGES - i - 1;\n"], [61, "    localparam H = DATA_WIDTH - STAGE_WIDTH * i - 1;\n"], [61, "    localparam L = j == 0 ? 0 : DATA_WIDTH - STAGE_WIDTH * (i+1);\n"], [63, "    assign mask[H:L] = {{H-L{1'b1}},j != 0 ? ce[j] : 1'b1};\n"], [67, "    always @(posedge clk) begin\n"], [67, "      if (ce[j] == 1'b1) begin\n"], [67, "        state[H:L] <= sum[H:L];\n"], [67, "      end\n"]]}}