{"Source Block": ["hdl/library/axi_intr_monitor/axi_intr_monitor.v@102:149@HdlStmProcess", "//----------- Assign/Always Blocks ---------------------------------------------\n//------------------------------------------------------------------------------\n\nassign irq = interrupt;\n\nalways @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0 || control[0] == 1'b0) begin\n    counter_to_interrupt_cnt <= 0;\n    counter_interrupt_handling <= 'd0;\n    counter_from_interrupt <= 32'h0;\n    min_interrupt_handling <= 'd0;\n    max_interrupt_handling <= 'd0;\n    interrupt_d1 <= 0;\n    counter_active <= 1'b0;\n  end else begin\n    interrupt_d1 <= irq;\n\n    if (arm_counter == 1'b1) begin\n      counter_to_interrupt_cnt <= counter_to_interrupt;\n      counter_active <= 1'b1;\n    end else if (counter_to_interrupt_cnt > 0) begin\n      counter_to_interrupt_cnt <= counter_to_interrupt_cnt - 1;\n    end else begin\n      counter_active <= 1'b0;\n    end\n\n    if (irq == 1'b1 && interrupt_d1 == 1'b0) begin\n      counter_from_interrupt <= 32'h0;\n    end else begin\n      counter_from_interrupt <= counter_from_interrupt + 1;\n    end\n\n    if (irq == 1'b0 && interrupt_d1 == 1'b1) begin\n      counter_interrupt_handling <= counter_from_interrupt;\n      if (min_interrupt_handling > counter_from_interrupt) begin\n        min_interrupt_handling <= counter_from_interrupt;\n      end\n      if (max_interrupt_handling < counter_from_interrupt) begin\n        max_interrupt_handling <= counter_from_interrupt;\n      end\n    end\n  end\nend\n\nalways @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 0) begin\n    up_wack                    <= 1'b0;\n    scratch                    <= 'd0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[107, "always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [108, "  if (s_axi_aresetn == 1'b0 || control[0] == 1'b0) begin\n"], [109, "    counter_to_interrupt_cnt <= 0;\n"], [110, "    counter_interrupt_handling <= 'd0;\n"], [111, "    counter_from_interrupt <= 32'h0;\n"], [112, "    min_interrupt_handling <= 'd0;\n"], [113, "    max_interrupt_handling <= 'd0;\n"], [114, "    interrupt_d1 <= 0;\n"], [115, "    counter_active <= 1'b0;\n"], [116, "  end else begin\n"], [117, "    interrupt_d1 <= irq;\n"], [119, "    if (arm_counter == 1'b1) begin\n"], [120, "      counter_to_interrupt_cnt <= counter_to_interrupt;\n"], [121, "      counter_active <= 1'b1;\n"], [122, "    end else if (counter_to_interrupt_cnt > 0) begin\n"], [123, "      counter_to_interrupt_cnt <= counter_to_interrupt_cnt - 1;\n"], [124, "    end else begin\n"], [125, "      counter_active <= 1'b0;\n"], [126, "    end\n"], [128, "    if (irq == 1'b1 && interrupt_d1 == 1'b0) begin\n"], [131, "      counter_from_interrupt <= counter_from_interrupt + 1;\n"], [132, "    end\n"], [134, "    if (irq == 1'b0 && interrupt_d1 == 1'b1) begin\n"], [135, "      counter_interrupt_handling <= counter_from_interrupt;\n"], [136, "      if (min_interrupt_handling > counter_from_interrupt) begin\n"], [137, "        min_interrupt_handling <= counter_from_interrupt;\n"], [139, "      if (max_interrupt_handling < counter_from_interrupt) begin\n"], [140, "        max_interrupt_handling <= counter_from_interrupt;\n"], [144, "end\n"]], "Add": [[128, "  parameter VERSION = 32'h00010000;\n"], [128, "  reg     [31:0]  up_rdata                    = 'd0;\n"], [128, "  reg             up_wack                     = 'd0;\n"], [128, "  reg             up_rack                     = 'd0;\n"], [128, "  reg             pwm_gen_clk                 = 'd0;\n"], [128, "  reg     [31:0]  scratch                     = 'd0;\n"], [128, "  reg     [31:0]  control                     = 'd0;\n"], [128, "  reg             interrupt                   = 'd0;\n"], [128, "  reg     [31:0]  counter_to_interrupt        = 'd0;\n"], [128, "  reg     [31:0]  counter_to_interrupt_cnt    = 'd0;\n"], [128, "  reg     [31:0]  counter_from_interrupt      = 'd0;\n"], [128, "  reg     [31:0]  counter_interrupt_handling  = 'd0;\n"], [128, "  reg     [31:0]  min_interrupt_handling      = 'd0;\n"], [128, "  reg     [31:0]  max_interrupt_handling      = 'd0;\n"], [128, "  reg             interrupt_d1                = 'd0;\n"], [128, "  reg             arm_counter                 = 'd0;\n"], [128, "  reg             counter_active              = 'd0;\n"], [128, "  wire            up_rreq_s;\n"], [128, "  wire            up_wreq_s;\n"], [128, "  wire    [13:0]  up_raddr_s;\n"], [128, "  wire    [13:0]  up_waddr_s;\n"], [128, "  wire    [31:0]  up_wdata_s;\n"], [128, "  assign irq = interrupt;\n"], [128, "  always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [128, "    if (s_axi_aresetn == 1'b0 || control[0] == 1'b0) begin\n"], [128, "      counter_to_interrupt_cnt <= 0;\n"], [128, "      counter_interrupt_handling <= 'd0;\n"], [129, "      min_interrupt_handling <= 'd0;\n"], [129, "      max_interrupt_handling <= 'd0;\n"], [129, "      interrupt_d1 <= 0;\n"], [129, "      counter_active <= 1'b0;\n"], [132, "      interrupt_d1 <= irq;\n"], [132, "      if (arm_counter == 1'b1) begin\n"], [132, "        counter_to_interrupt_cnt <= counter_to_interrupt;\n"], [132, "        counter_active <= 1'b1;\n"], [132, "      end else if (counter_to_interrupt_cnt > 0) begin\n"], [132, "        counter_to_interrupt_cnt <= counter_to_interrupt_cnt - 1;\n"], [132, "      end else begin\n"], [132, "        counter_active <= 1'b0;\n"], [132, "      end\n"], [137, "      if (irq == 1'b1 && interrupt_d1 == 1'b0) begin\n"], [137, "        counter_from_interrupt <= 32'h0;\n"], [137, "      end else begin\n"], [137, "        counter_from_interrupt <= counter_from_interrupt + 1;\n"], [140, "      if (irq == 1'b0 && interrupt_d1 == 1'b1) begin\n"], [140, "        counter_interrupt_handling <= counter_from_interrupt;\n"], [140, "        if (min_interrupt_handling > counter_from_interrupt) begin\n"], [140, "          min_interrupt_handling <= counter_from_interrupt;\n"], [140, "        end\n"], [140, "        if (max_interrupt_handling < counter_from_interrupt) begin\n"], [140, "          max_interrupt_handling <= counter_from_interrupt;\n"], [140, "        end\n"]]}}