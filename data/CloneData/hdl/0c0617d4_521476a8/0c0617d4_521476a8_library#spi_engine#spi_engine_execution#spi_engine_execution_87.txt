Source Block: hdl/library/spi_engine/spi_engine_execution/spi_engine_execution.v@367:386@HdlStmProcess
  end
end

// Load the SDO parallel data into the SDO shift register. In case of a custom
// data width, additional bit shifting must done at load.
always @(posedge clk) begin
  if ((inst_d1 == CMD_TRANSFER) && (!sdo_enabled)) begin
    data_sdo_shift <= {DATA_WIDTH{SDO_DEFAULT}};
  end else if (transfer_active == 1'b1 && trigger_tx == 1'b1) begin
    if (first_bit == 1'b1)
      data_sdo_shift <= sdo_data << left_aligned;
    else
      data_sdo_shift <= {data_sdo_shift[(DATA_WIDTH-2):0], 1'b0};
  end
end

assign sdo_int_s = data_sdo_shift[DATA_WIDTH-1];

// In case of an interface with high clock rate (SCLK > 50MHz), the latch of
// the SDI line can be delayed with 1, 2 or 3 SPI core clock cycle.

Diff Content:
- 372 always @(posedge clk) begin
- 373   if ((inst_d1 == CMD_TRANSFER) && (!sdo_enabled)) begin
- 374     data_sdo_shift <= {DATA_WIDTH{SDO_DEFAULT}};
- 375   end else if (transfer_active == 1'b1 && trigger_tx == 1'b1) begin
- 376     if (first_bit == 1'b1)
- 377       data_sdo_shift <= sdo_data << left_aligned;
- 378     else
- 379       data_sdo_shift <= {data_sdo_shift[(DATA_WIDTH-2):0], 1'b0};
- 380   end
- 381 end

Clone Blocks:
