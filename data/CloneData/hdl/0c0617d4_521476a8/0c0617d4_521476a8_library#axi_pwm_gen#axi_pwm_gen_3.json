{"Source Block": ["hdl/library/axi_pwm_gen/axi_pwm_gen.v@291:325@HdlStmIf", "    end else begin\n      assign pwm_2 = 1'b0;\n      assign pwm_counter[2] = 32'd1;\n    end\n\n    if (N_PWMS >= 4) begin\n      axi_pwm_gen_1  #(\n        .PULSE_WIDTH (PULSE_3_WIDTH),\n        .PULSE_PERIOD (PULSE_3_PERIOD))\n      i3_axi_pwm_gen_1(\n        .clk (clk),\n        .rstn (pwm_gen_resetn),\n        .pulse_width (pwm_width_s[127:96]),\n        .pulse_period (pwm_period_s[127:96]),\n        .load_config (load_config_s),\n        .sync (sync_3),\n        .pulse (pwm_3),\n        .pulse_counter (pwm_counter[3]));\n\n      always @(posedge clk) begin\n        if (pwm_gen_resetn == 1'b0) begin\n          sync_3 <= 1'b1;\n        end else begin\n          sync_3 <= (offset_cnt == pwm_offset_s[127:96]) ? 1'b0 : 1'b1;\n        end\n      end\n    end else begin\n      assign pwm_3 = 1'b0;\n      assign pwm_counter[3] = 32'd1;\n    end\n  endgenerate\n\n  up_axi #(\n    .AXI_ADDRESS_WIDTH(16))\n  i_up_axi (\n"], "Clone Blocks": [["hdl/library/axi_pwm_gen/axi_pwm_gen.v@265:299", "    end else begin\n      assign pwm_1 = 1'b0;\n      assign pwm_counter[1] = 32'd1;\n    end\n\n    if (N_PWMS >= 3) begin\n      axi_pwm_gen_1  #(\n        .PULSE_WIDTH (PULSE_2_WIDTH),\n        .PULSE_PERIOD (PULSE_2_PERIOD))\n      i2_axi_pwm_gen_1(\n        .clk (clk),\n        .rstn (pwm_gen_resetn),\n        .pulse_width (pwm_width_s[95:64]),\n        .pulse_period (pwm_period_s[95:64]),\n        .load_config (load_config_s),\n        .sync (sync_2),\n        .pulse (pwm_2),\n        .pulse_counter (pwm_counter[2]));\n\n      always @(posedge clk) begin\n        if (pwm_gen_resetn == 1'b0) begin\n          sync_2 <= 1'b1;\n        end else begin\n          sync_2 <= (offset_cnt == pwm_offset_s[95:64]) ? 1'b0 : 1'b1;\n        end\n      end\n    end else begin\n      assign pwm_2 = 1'b0;\n      assign pwm_counter[2] = 32'd1;\n    end\n\n    if (N_PWMS >= 4) begin\n      axi_pwm_gen_1  #(\n        .PULSE_WIDTH (PULSE_3_WIDTH),\n        .PULSE_PERIOD (PULSE_3_PERIOD))\n"], ["hdl/library/axi_pwm_gen/axi_pwm_gen.v@239:273", "    end\n  end\n\n  generate\n\n    if (N_PWMS >= 2) begin\n      axi_pwm_gen_1  #(\n        .PULSE_WIDTH (PULSE_1_WIDTH),\n        .PULSE_PERIOD (PULSE_1_PERIOD))\n      i1_axi_pwm_gen_1(\n        .clk (clk),\n        .rstn (pwm_gen_resetn),\n        .pulse_width (pwm_width_s[63:32]),\n        .pulse_period (pwm_period_s[63:32]),\n        .load_config (load_config_s),\n        .sync (sync_1),\n        .pulse (pwm_1),\n        .pulse_counter (pwm_counter[1]));\n\n      always @(posedge clk) begin\n        if (pwm_gen_resetn == 1'b0) begin\n          sync_1 <= 1'b1;\n        end else begin\n          sync_1 <= (offset_cnt == pwm_offset_s[63:32]) ? 1'b0 : 1'b1;\n        end\n      end\n    end else begin\n      assign pwm_1 = 1'b0;\n      assign pwm_counter[1] = 32'd1;\n    end\n\n    if (N_PWMS >= 3) begin\n      axi_pwm_gen_1  #(\n        .PULSE_WIDTH (PULSE_2_WIDTH),\n        .PULSE_PERIOD (PULSE_2_PERIOD))\n"]], "Diff Content": {"Delete": [[299, "        .PULSE_PERIOD (PULSE_3_PERIOD))\n"], [300, "      i3_axi_pwm_gen_1(\n"]], "Add": [[300, "        .PULSE_PERIOD (PULSE_3_PERIOD)\n"], [300, "      ) i3_axi_pwm_gen_1(\n"]]}}