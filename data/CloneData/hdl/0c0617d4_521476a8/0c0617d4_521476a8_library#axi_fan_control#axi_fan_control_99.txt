Source Block: hdl/library/axi_fan_control/axi_fan_control.v@200:210@HdlStmAssign
wire  [31:0]  up_wdata_s;
wire  [3:0]   up_irq_pending;
wire  [3:0]   up_irq_trigger;
wire  [3:0]   up_irq_source_clear;

assign up_clk = s_axi_aclk;
assign pwm = ~pulse_gen_out & up_resetn; //reverse polarity because the board is also reversing it
assign pwm_change_done_int = counter_overflow & !pwm_change_done;

//IRQ handling
assign up_irq_pending = ~up_irq_mask & up_irq_source;

Diff Content:
- 205 assign up_clk = s_axi_aclk;

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_fan_control/axi_fan_control.v@197:207
wire  [7:0]   up_raddr_s;
wire          up_wreq_s;
wire  [7:0]   up_waddr_s;
wire  [31:0]  up_wdata_s;
wire  [3:0]   up_irq_pending;
wire  [3:0]   up_irq_trigger;
wire  [3:0]   up_irq_source_clear;

assign up_clk = s_axi_aclk;
assign pwm = ~pulse_gen_out & up_resetn; //reverse polarity because the board is also reversing it
assign pwm_change_done_int = counter_overflow & !pwm_change_done;

Clone Blocks 2:
hdl/library/axi_fan_control/axi_fan_control.v@201:211
wire  [3:0]   up_irq_pending;
wire  [3:0]   up_irq_trigger;
wire  [3:0]   up_irq_source_clear;

assign up_clk = s_axi_aclk;
assign pwm = ~pulse_gen_out & up_resetn; //reverse polarity because the board is also reversing it
assign pwm_change_done_int = counter_overflow & !pwm_change_done;

//IRQ handling
assign up_irq_pending = ~up_irq_mask & up_irq_source;
assign up_irq_trigger  = {tacho_meas_int, temp_increase_alarm, tacho_alarm, pwm_change_done_int};

Clone Blocks 3:
hdl/library/axi_fan_control/axi_fan_control.v@198:208
wire          up_wreq_s;
wire  [7:0]   up_waddr_s;
wire  [31:0]  up_wdata_s;
wire  [3:0]   up_irq_pending;
wire  [3:0]   up_irq_trigger;
wire  [3:0]   up_irq_source_clear;

assign up_clk = s_axi_aclk;
assign pwm = ~pulse_gen_out & up_resetn; //reverse polarity because the board is also reversing it
assign pwm_change_done_int = counter_overflow & !pwm_change_done;


