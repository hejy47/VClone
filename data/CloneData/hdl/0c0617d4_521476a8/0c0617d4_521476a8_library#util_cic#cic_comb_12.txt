Source Block: hdl/library/util_cic/cic_comb.v@82:98@HdlStmProcess
wire [DATA_WIDTH-1:0] mask;
reg [DATA_WIDTH-1:0] data_in_seq;
wire [DATA_WIDTH-1:0] storage_out;
wire [DATA_WIDTH-1:0] diff = (data_in_seq | ~mask) - (storage_out & mask);

always @(*) begin
  if (ce == 1'b1) begin
    data_in_seq <= data_in;
  end else begin
    data_in_seq <= SEQ != 1 ? state : 'h00;
  end
end

generate
genvar i, j;

for (j = 0; j < NUM_STAGES; j = j + 1) begin

Diff Content:
- 87 always @(*) begin
- 88   if (ce == 1'b1) begin
- 89     data_in_seq <= data_in;
- 90   end else begin
- 91     data_in_seq <= SEQ != 1 ? state : 'h00;
- 93 end
+ 93   endgenerate
+ 93   wire [DATA_WIDTH-1:0] mask;
+ 93   reg [DATA_WIDTH-1:0] data_in_seq;
+ 93   wire [DATA_WIDTH-1:0] storage_out;
+ 93   wire [DATA_WIDTH-1:0] diff = (data_in_seq | ~mask) - (storage_out & mask);
+ 93   always @(*) begin
+ 93     if (ce == 1'b1) begin
+ 93       data_in_seq <= data_in;
+ 93     end else begin
+ 93       data_in_seq <= SEQ != 1 ? state : 'h00;
+ 93     end
+ 93   end

Clone Blocks:
Clone Blocks 1:
hdl/library/util_cic/cic_comb.v@80:90
endgenerate

wire [DATA_WIDTH-1:0] mask;
reg [DATA_WIDTH-1:0] data_in_seq;
wire [DATA_WIDTH-1:0] storage_out;
wire [DATA_WIDTH-1:0] diff = (data_in_seq | ~mask) - (storage_out & mask);

always @(*) begin
  if (ce == 1'b1) begin
    data_in_seq <= data_in;
  end else begin

Clone Blocks 2:
hdl/library/util_cic/cic_comb.v@79:89
end
endgenerate

wire [DATA_WIDTH-1:0] mask;
reg [DATA_WIDTH-1:0] data_in_seq;
wire [DATA_WIDTH-1:0] storage_out;
wire [DATA_WIDTH-1:0] diff = (data_in_seq | ~mask) - (storage_out & mask);

always @(*) begin
  if (ce == 1'b1) begin
    data_in_seq <= data_in;

