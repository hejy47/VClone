{"Source Block": ["hdl/library/jesd204/jesd204_soft_pcs_tx/jesd204_8b10b_encoder.v@258:315@HdlStmProcess", "      default: alt7 = 1'b0;\n      endcase\n  end\nend\n\nalways @(*) begin\n  case (in_char[7:5])\n  3'd0: begin\n    data4b = 4'b0010;\n    may_invert4b = 1'b1;\n    disparity4b = 1'b1;\n  end\n  3'd1: begin\n    data4b = 4'b1001;\n    may_invert4b = in_charisk;\n    disparity4b = 1'b0;\n  end\n  3'd2: begin\n    data4b = 4'b1010;\n    may_invert4b = in_charisk;\n    disparity4b = 1'b0;\n  end\n  3'd3: begin\n    data4b = 4'b1100;\n    may_invert4b = 1'b1;\n    disparity4b = 1'b0;\n  end\n  3'd4: begin\n    data4b = 4'b0100;\n    may_invert4b = 1'b1;\n    disparity4b = 1'b1;\n  end\n  3'd5: begin\n    data4b = 4'b0101;\n    may_invert4b = in_charisk;\n    disparity4b = 1'b0;\n  end\n  3'd6: begin\n    data4b = 4'b0110;\n    may_invert4b = in_charisk;\n    disparity4b = 1'b0;\n  end\n  default: begin\n    if (alt7 == 1'b1) begin\n      data4b = 4'b0001;\n    end else begin\n      data4b = 4'b1000;\n    end\n    may_invert4b = 1'b1;\n    disparity4b = 1'b1;\n  end\n  endcase\nend\n\nassign disparity4b_in = in_disparity ^ disparity6b;\nassign out_disparity = disparity4b_in ^ disparity4b;\n\nalways @(*) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[263, "always @(*) begin\n"], [264, "  case (in_char[7:5])\n"], [265, "  3'd0: begin\n"], [266, "    data4b = 4'b0010;\n"], [267, "    may_invert4b = 1'b1;\n"], [268, "    disparity4b = 1'b1;\n"], [269, "  end\n"], [270, "  3'd1: begin\n"], [271, "    data4b = 4'b1001;\n"], [272, "    may_invert4b = in_charisk;\n"], [273, "    disparity4b = 1'b0;\n"], [274, "  end\n"], [275, "  3'd2: begin\n"], [276, "    data4b = 4'b1010;\n"], [277, "    may_invert4b = in_charisk;\n"], [278, "    disparity4b = 1'b0;\n"], [279, "  end\n"], [280, "  3'd3: begin\n"], [281, "    data4b = 4'b1100;\n"], [282, "    may_invert4b = 1'b1;\n"], [283, "    disparity4b = 1'b0;\n"], [284, "  end\n"], [285, "  3'd4: begin\n"], [286, "    data4b = 4'b0100;\n"], [287, "    may_invert4b = 1'b1;\n"], [288, "    disparity4b = 1'b1;\n"], [289, "  end\n"], [290, "  3'd5: begin\n"], [291, "    data4b = 4'b0101;\n"], [292, "    may_invert4b = in_charisk;\n"], [293, "    disparity4b = 1'b0;\n"], [294, "  end\n"], [295, "  3'd6: begin\n"], [296, "    data4b = 4'b0110;\n"], [297, "    may_invert4b = in_charisk;\n"], [298, "    disparity4b = 1'b0;\n"], [299, "  end\n"], [300, "  default: begin\n"], [301, "    if (alt7 == 1'b1) begin\n"], [302, "      data4b = 4'b0001;\n"], [304, "      data4b = 4'b1000;\n"], [306, "    may_invert4b = 1'b1;\n"], [307, "    disparity4b = 1'b1;\n"], [308, "  end\n"], [309, "  endcase\n"], [310, "end\n"]], "Add": [[302, "  always @(*) begin\n"], [302, "    if (in_disparity == 1'b0 && may_invert6b == 1'b1) begin\n"], [302, "      out6b = ~data6b;\n"], [304, "      out6b = data6b;\n"], [304, "    end\n"], [304, "    if (disparity4b_in == 1'b0 && may_invert4b == 1'b1) begin\n"], [304, "      out4b = ~data4b;\n"], [304, "    end else begin\n"], [304, "      out4b = data4b;\n"]]}}