{"Source Block": ["hdl/library/axi_dmac/axi_dmac_burst_memory.v@317:331@HdlStmProcess", "    dest_id_next <= dest_id_next_inc;\n    dest_id_reduced_msb_next <= ^dest_id_next_inc[ID_WIDTH-1-:2];\n  end\nend\n\nalways @(posedge dest_clk) begin\n  if (dest_burst_valid == 1'b1 && dest_burst_ready == 1'b1) begin\n    dest_burst_len_data[BYTES_PER_BURST_WIDTH:DMA_LENGTH_ALIGN] <= burst_len_mem[dest_id_reduced_next];\n  end\nend\n\nalways @(posedge dest_clk) begin\n  if (dest_burst_ready == 1'b1) begin\n    dest_id <= dest_id_next;\n    dest_id_reduced_msb <= dest_id_reduced_msb_next;\n"], "Clone Blocks": [["hdl/library/axi_dmac/axi_dmac_burst_memory.v@323:338", "  if (dest_burst_valid == 1'b1 && dest_burst_ready == 1'b1) begin\n    dest_burst_len_data[BYTES_PER_BURST_WIDTH:DMA_LENGTH_ALIGN] <= burst_len_mem[dest_id_reduced_next];\n  end\nend\n\nalways @(posedge dest_clk) begin\n  if (dest_burst_ready == 1'b1) begin\n    dest_id <= dest_id_next;\n    dest_id_reduced_msb <= dest_id_reduced_msb_next;\n  end\nend\n\nalways @(posedge dest_clk) begin\n  if (dest_reset == 1'b1 || dest_last_beat == 1'b1) begin\n    dest_beat_counter <= 'h00;\n  end else if (dest_beat == 1'b1) begin\n"], ["hdl/library/axi_dmac/axi_dmac_burst_memory.v@307:325", "  end\nend\n\nassign dest_id_next_inc = inc_id(dest_id_next);\n\nalways @(posedge dest_clk) begin\n  if (dest_reset == 1'b1) begin\n    dest_id_next <= 'h00;\n    dest_id_reduced_msb_next <= 1'b0;\n  end else if (dest_burst_valid == 1'b1 && dest_burst_ready == 1'b1) begin\n    dest_id_next <= dest_id_next_inc;\n    dest_id_reduced_msb_next <= ^dest_id_next_inc[ID_WIDTH-1-:2];\n  end\nend\n\nalways @(posedge dest_clk) begin\n  if (dest_burst_valid == 1'b1 && dest_burst_ready == 1'b1) begin\n    dest_burst_len_data[BYTES_PER_BURST_WIDTH:DMA_LENGTH_ALIGN] <= burst_len_mem[dest_id_reduced_next];\n  end\n"]], "Diff Content": {"Delete": [[322, "always @(posedge dest_clk) begin\n"], [323, "  if (dest_burst_valid == 1'b1 && dest_burst_ready == 1'b1) begin\n"], [324, "    dest_burst_len_data[BYTES_PER_BURST_WIDTH:DMA_LENGTH_ALIGN] <= burst_len_mem[dest_id_reduced_next];\n"], [326, "end\n"]], "Add": [[324, "  assign dest_ready = ~dest_mem_data_valid | dest_mem_data_ready;\n"], [324, "  assign dest_last = dest_beat_counter == dest_burst_len;\n"], [324, "  assign dest_beat = dest_valid & dest_ready;\n"], [324, "  assign dest_last_beat = dest_last & dest_beat;\n"], [324, "  assign dest_raddr = {dest_id_reduced,dest_beat_counter};\n"], [324, "  assign dest_burst_valid = dest_data_request_id != dest_id_next;\n"], [324, "  assign dest_burst_ready = ~dest_valid | dest_last_beat;\n"], [324, "  /*\n"], [324, "   * The data valid signal for the destination side is asserted if there are one\n"], [324, "   * or more pending bursts. It is de-asserted if there are no more pending burst\n"], [324, "   * and it is the last beat of the current burst\n"], [324, "   */\n"], [324, "  always @(posedge dest_clk) begin\n"], [324, "    if (dest_reset == 1'b1) begin\n"], [324, "      dest_valid <= 1'b0;\n"], [324, "    end else if (dest_burst_valid == 1'b1) begin\n"], [324, "      dest_valid <= 1'b1;\n"], [324, "    end else if (dest_last_beat == 1'b1) begin\n"], [324, "      dest_valid <= 1'b0;\n"], [324, "    end\n"]]}}