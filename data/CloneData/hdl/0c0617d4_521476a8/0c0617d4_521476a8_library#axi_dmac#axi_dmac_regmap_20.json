{"Source Block": ["hdl/library/axi_dmac/axi_dmac_regmap.v@144:154@HdlStmAssign", "wire [1:0] up_irq_trigger;\nwire [1:0] up_irq_source_clear;\n\n// IRQ handling\nassign up_irq_pending = ~up_irq_mask & up_irq_source;\nassign up_irq_trigger  = {up_eot, up_sot};\nassign up_irq_source_clear = (up_wreq == 1'b1 && up_waddr == 9'h021) ? up_wdata[1:0] : 2'b00;\n\nalways @(posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0) begin\n    irq <= 1'b0;\n"], "Clone Blocks": [["hdl/library/axi_dmac/axi_dmac_regmap.v@145:155", "wire [1:0] up_irq_source_clear;\n\n// IRQ handling\nassign up_irq_pending = ~up_irq_mask & up_irq_source;\nassign up_irq_trigger  = {up_eot, up_sot};\nassign up_irq_source_clear = (up_wreq == 1'b1 && up_waddr == 9'h021) ? up_wdata[1:0] : 2'b00;\n\nalways @(posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0) begin\n    irq <= 1'b0;\n  end else begin\n"], ["hdl/library/axi_dmac/axi_dmac_regmap.v@140:150", "reg [1:0] up_irq_mask = 2'h3;\nreg [1:0] up_irq_source = 2'h0;\n\nwire [1:0] up_irq_pending;\nwire [1:0] up_irq_trigger;\nwire [1:0] up_irq_source_clear;\n\n// IRQ handling\nassign up_irq_pending = ~up_irq_mask & up_irq_source;\nassign up_irq_trigger  = {up_eot, up_sot};\nassign up_irq_source_clear = (up_wreq == 1'b1 && up_waddr == 9'h021) ? up_wdata[1:0] : 2'b00;\n"], ["hdl/library/axi_dmac/axi_dmac_regmap.v@143:153", "wire [1:0] up_irq_pending;\nwire [1:0] up_irq_trigger;\nwire [1:0] up_irq_source_clear;\n\n// IRQ handling\nassign up_irq_pending = ~up_irq_mask & up_irq_source;\nassign up_irq_trigger  = {up_eot, up_sot};\nassign up_irq_source_clear = (up_wreq == 1'b1 && up_waddr == 9'h021) ? up_wdata[1:0] : 2'b00;\n\nalways @(posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0) begin\n"], ["hdl/library/axi_dmac/axi_dmac_regmap.v@147:163", "// IRQ handling\nassign up_irq_pending = ~up_irq_mask & up_irq_source;\nassign up_irq_trigger  = {up_eot, up_sot};\nassign up_irq_source_clear = (up_wreq == 1'b1 && up_waddr == 9'h021) ? up_wdata[1:0] : 2'b00;\n\nalways @(posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0) begin\n    irq <= 1'b0;\n  end else begin\n    irq <= |up_irq_pending;\n  end\nend\n\nalways @(posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 1'b0) begin\n    up_irq_source <= 2'b00;\n  end else begin\n"]], "Diff Content": {"Delete": [[149, "assign up_irq_trigger  = {up_eot, up_sot};\n"]], "Add": []}}