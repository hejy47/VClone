Source Block: hdl/library/common/util_axis_upscale.v@70:89@HdlStmFor
  assign type_s = dfmt_enable & dfmt_type;
  assign signext_s = dfmt_enable & dfmt_se;

  genvar i;
  generate
  for (i=1; i <= NUM_OF_CHANNELS; i=i+1) begin : signext_data

    wire sign_s;

    assign sign_s = signext_s & (type_s ^ s_axis_data[(i*DATA_WIDTH-1)]);
    assign data_out_s[(i*UDATA_WIDTH-1):(i*UDATA_WIDTH-MSB_WIDTH)] = {(MSB_WIDTH){sign_s}};
    assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-1)] = type_s ^ s_axis_data[(i*DATA_WIDTH-1)];
    assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-2):((i-1)*UDATA_WIDTH)] = s_axis_data[(i*DATA_WIDTH-2):((i-1)*DATA_WIDTH)];

  end
  endgenerate

  always @(posedge clk) begin
    if (resetn == 1'b0) begin
      m_axis_valid <= 1'b0;

Diff Content:
- 75   for (i=1; i <= NUM_OF_CHANNELS; i=i+1) begin : signext_data
- 77     wire sign_s;
- 79     assign sign_s = signext_s & (type_s ^ s_axis_data[(i*DATA_WIDTH-1)]);
- 80     assign data_out_s[(i*UDATA_WIDTH-1):(i*UDATA_WIDTH-MSB_WIDTH)] = {(MSB_WIDTH){sign_s}};
- 81     assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-1)] = type_s ^ s_axis_data[(i*DATA_WIDTH-1)];
- 82     assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-2):((i-1)*UDATA_WIDTH)] = s_axis_data[(i*DATA_WIDTH-2):((i-1)*DATA_WIDTH)];
- 84   end
+ 82     for (i=1; i <= NUM_OF_CHANNELS; i=i+1) begin : signext_data
+ 82       wire sign_s;
+ 84       assign sign_s = signext_s & (type_s ^ s_axis_data[(i*DATA_WIDTH-1)]);
+ 84       assign data_out_s[(i*UDATA_WIDTH-1):(i*UDATA_WIDTH-MSB_WIDTH)] = {(MSB_WIDTH){sign_s}};
+ 84       assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-1)] = type_s ^ s_axis_data[(i*DATA_WIDTH-1)];
+ 84       assign data_out_s[((i-1)*UDATA_WIDTH+DATA_WIDTH-2):((i-1)*UDATA_WIDTH)] = s_axis_data[(i*DATA_WIDTH-2):((i-1)*DATA_WIDTH)];
+ 84     end

Clone Blocks:
