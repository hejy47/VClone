Source Block: hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@139:149@HdlIdDef
wire up_core_reset_ext;

assign up_core_reset_ext = up_core_reset_ext_synchronizer_vector[0];

/* Transfer two cycles before the core comes out of reset */
wire core_cfg_transfer_en;
assign core_cfg_transfer_en = core_reset_vector[2] ^ core_reset_vector[1];

wire device_cfg_transfer_en;
assign device_cfg_transfer_en = device_reset_vector[2] ^ device_reset_vector[1];


Diff Content:
- 144 wire core_cfg_transfer_en;

Clone Blocks:
Clone Blocks 1:
hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@143:153
/* Transfer two cycles before the core comes out of reset */
wire core_cfg_transfer_en;
assign core_cfg_transfer_en = core_reset_vector[2] ^ core_reset_vector[1];

wire device_cfg_transfer_en;
assign device_cfg_transfer_en = device_reset_vector[2] ^ device_reset_vector[1];

reg up_reset_core = 1'b1;

assign up_cfg_is_writeable = up_reset_core;


Clone Blocks 2:
hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@142:152

/* Transfer two cycles before the core comes out of reset */
wire core_cfg_transfer_en;
assign core_cfg_transfer_en = core_reset_vector[2] ^ core_reset_vector[1];

wire device_cfg_transfer_en;
assign device_cfg_transfer_en = device_reset_vector[2] ^ device_reset_vector[1];

reg up_reset_core = 1'b1;

assign up_cfg_is_writeable = up_reset_core;

Clone Blocks 3:
hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@140:150

assign up_core_reset_ext = up_core_reset_ext_synchronizer_vector[0];

/* Transfer two cycles before the core comes out of reset */
wire core_cfg_transfer_en;
assign core_cfg_transfer_en = core_reset_vector[2] ^ core_reset_vector[1];

wire device_cfg_transfer_en;
assign device_cfg_transfer_en = device_reset_vector[2] ^ device_reset_vector[1];

reg up_reset_core = 1'b1;

Clone Blocks 4:
hdl/library/jesd204/axi_jesd204_common/jesd204_up_common.v@136:146
 * can be shown in the register map. This is useful for debugging.
 */
reg [1:0] up_core_reset_ext_synchronizer_vector = 2'b11;
wire up_core_reset_ext;

assign up_core_reset_ext = up_core_reset_ext_synchronizer_vector[0];

/* Transfer two cycles before the core comes out of reset */
wire core_cfg_transfer_en;
assign core_cfg_transfer_en = core_reset_vector[2] ^ core_reset_vector[1];


