{"Source Block": ["hdl/library/axi_adaq8092/axi_adaq8092_if.v@104:173@HdlStmProcess", "  // LOCAL parameters\n\n  localparam LVDS =  0;\n  localparam CMOS =  1;\n  \n  always @(posedge adc_clk) begin\n\n    adc_status <= 1'b1;\n    \n    if (OUTPUT_MODE == LVDS) begin         \n    \n      adc_or <= adc_or_s_1 | adc_or_s_2;\n      adc_data <= POLARITY_MASK ^ adc_data_s; \n      adc_data_s <= { lvds_adc_data_n_s[13], lvds_adc_data_p_s[13], \n                      lvds_adc_data_n_s[12], lvds_adc_data_p_s[12], \n                      lvds_adc_data_n_s[11], lvds_adc_data_p_s[11], \n                      lvds_adc_data_n_s[10], lvds_adc_data_p_s[10], \n                      lvds_adc_data_n_s[9],  lvds_adc_data_p_s[9], \n                      lvds_adc_data_n_s[8],  lvds_adc_data_p_s[8], \n                      lvds_adc_data_n_s[7],  lvds_adc_data_p_s[7], \n                      lvds_adc_data_n_s[6],  lvds_adc_data_p_s[6], \n                      lvds_adc_data_n_s[5],  lvds_adc_data_p_s[5], \n                      lvds_adc_data_n_s[4],  lvds_adc_data_p_s[4], \n                      lvds_adc_data_n_s[3],  lvds_adc_data_p_s[3], \n                      lvds_adc_data_n_s[2],  lvds_adc_data_p_s[2], \n                      lvds_adc_data_n_s[1],  lvds_adc_data_p_s[1], \n                      lvds_adc_data_n_s[0],  lvds_adc_data_p_s[0]};\n    \n    end else if (OUTPUT_MODE == CMOS) begin  \n      adc_data <= adc_data_s;\n      if (sdr_or_ddr == 0) begin            //DDR_CMOS\n        adc_or <= adc_or_s_1_p | adc_or_s_1_n;\n        adc_data_s <= { cmos_adc_data_n_s[27], cmos_adc_data_p_s[27], \n                        cmos_adc_data_n_s[25], cmos_adc_data_p_s[25], \n                        cmos_adc_data_n_s[23], cmos_adc_data_p_s[23], \n                        cmos_adc_data_n_s[21], cmos_adc_data_p_s[21], \n                        cmos_adc_data_n_s[19], cmos_adc_data_p_s[19], \n                        cmos_adc_data_n_s[17], cmos_adc_data_p_s[17], \n                        cmos_adc_data_n_s[15], cmos_adc_data_p_s[15], \n                        cmos_adc_data_n_s[13], cmos_adc_data_p_s[13], \n                        cmos_adc_data_n_s[11], cmos_adc_data_p_s[11], \n                        cmos_adc_data_n_s[9],  cmos_adc_data_p_s[9], \n                        cmos_adc_data_n_s[7],  cmos_adc_data_p_s[7], \n                        cmos_adc_data_n_s[5],  cmos_adc_data_p_s[5], \n                        cmos_adc_data_n_s[3],  cmos_adc_data_p_s[3], \n                        cmos_adc_data_n_s[1],  cmos_adc_data_p_s[1]};\n      end else if (sdr_or_ddr == 1) begin    //SDR_CMOS\n        adc_or <= adc_or_s_1_p | adc_or_s_2_p;\n        adc_data_s <= { cmos_adc_data_p_s[27], cmos_adc_data_p_s[26], \n                        cmos_adc_data_p_s[25], cmos_adc_data_p_s[24], \n                        cmos_adc_data_p_s[23], cmos_adc_data_p_s[22], \n                        cmos_adc_data_p_s[21], cmos_adc_data_p_s[20], \n                        cmos_adc_data_p_s[19], cmos_adc_data_p_s[18], \n                        cmos_adc_data_p_s[17], cmos_adc_data_p_s[16], \n                        cmos_adc_data_p_s[15], cmos_adc_data_p_s[14], \n                        cmos_adc_data_p_s[13], cmos_adc_data_p_s[12], \n                        cmos_adc_data_p_s[11], cmos_adc_data_p_s[10], \n                        cmos_adc_data_p_s[9],  cmos_adc_data_p_s[8], \n                        cmos_adc_data_p_s[7],  cmos_adc_data_p_s[6], \n                        cmos_adc_data_p_s[5],  cmos_adc_data_p_s[4], \n                        cmos_adc_data_p_s[3],  cmos_adc_data_p_s[2], \n                        cmos_adc_data_p_s[1],  cmos_adc_data_p_s[0]}; \n      end\n    end \n  end\n\n  // data interface\n\n  generate\n    if (OUTPUT_MODE == LVDS) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[113, "    if (OUTPUT_MODE == LVDS) begin         \n"], [116, "      adc_data <= POLARITY_MASK ^ adc_data_s; \n"], [117, "      adc_data_s <= { lvds_adc_data_n_s[13], lvds_adc_data_p_s[13], \n"], [118, "                      lvds_adc_data_n_s[12], lvds_adc_data_p_s[12], \n"], [119, "                      lvds_adc_data_n_s[11], lvds_adc_data_p_s[11], \n"], [120, "                      lvds_adc_data_n_s[10], lvds_adc_data_p_s[10], \n"], [121, "                      lvds_adc_data_n_s[9],  lvds_adc_data_p_s[9], \n"], [122, "                      lvds_adc_data_n_s[8],  lvds_adc_data_p_s[8], \n"], [123, "                      lvds_adc_data_n_s[7],  lvds_adc_data_p_s[7], \n"], [124, "                      lvds_adc_data_n_s[6],  lvds_adc_data_p_s[6], \n"], [125, "                      lvds_adc_data_n_s[5],  lvds_adc_data_p_s[5], \n"], [126, "                      lvds_adc_data_n_s[4],  lvds_adc_data_p_s[4], \n"], [127, "                      lvds_adc_data_n_s[3],  lvds_adc_data_p_s[3], \n"], [128, "                      lvds_adc_data_n_s[2],  lvds_adc_data_p_s[2], \n"], [129, "                      lvds_adc_data_n_s[1],  lvds_adc_data_p_s[1], \n"], [132, "    end else if (OUTPUT_MODE == CMOS) begin  \n"], [136, "        adc_data_s <= { cmos_adc_data_n_s[27], cmos_adc_data_p_s[27], \n"], [137, "                        cmos_adc_data_n_s[25], cmos_adc_data_p_s[25], \n"], [138, "                        cmos_adc_data_n_s[23], cmos_adc_data_p_s[23], \n"], [139, "                        cmos_adc_data_n_s[21], cmos_adc_data_p_s[21], \n"], [140, "                        cmos_adc_data_n_s[19], cmos_adc_data_p_s[19], \n"], [141, "                        cmos_adc_data_n_s[17], cmos_adc_data_p_s[17], \n"], [142, "                        cmos_adc_data_n_s[15], cmos_adc_data_p_s[15], \n"], [143, "                        cmos_adc_data_n_s[13], cmos_adc_data_p_s[13], \n"], [144, "                        cmos_adc_data_n_s[11], cmos_adc_data_p_s[11], \n"], [145, "                        cmos_adc_data_n_s[9],  cmos_adc_data_p_s[9], \n"], [146, "                        cmos_adc_data_n_s[7],  cmos_adc_data_p_s[7], \n"], [147, "                        cmos_adc_data_n_s[5],  cmos_adc_data_p_s[5], \n"], [148, "                        cmos_adc_data_n_s[3],  cmos_adc_data_p_s[3], \n"], [152, "        adc_data_s <= { cmos_adc_data_p_s[27], cmos_adc_data_p_s[26], \n"], [153, "                        cmos_adc_data_p_s[25], cmos_adc_data_p_s[24], \n"], [154, "                        cmos_adc_data_p_s[23], cmos_adc_data_p_s[22], \n"], [155, "                        cmos_adc_data_p_s[21], cmos_adc_data_p_s[20], \n"], [156, "                        cmos_adc_data_p_s[19], cmos_adc_data_p_s[18], \n"], [157, "                        cmos_adc_data_p_s[17], cmos_adc_data_p_s[16], \n"], [158, "                        cmos_adc_data_p_s[15], cmos_adc_data_p_s[14], \n"], [159, "                        cmos_adc_data_p_s[13], cmos_adc_data_p_s[12], \n"], [160, "                        cmos_adc_data_p_s[11], cmos_adc_data_p_s[10], \n"], [161, "                        cmos_adc_data_p_s[9],  cmos_adc_data_p_s[8], \n"], [162, "                        cmos_adc_data_p_s[7],  cmos_adc_data_p_s[6], \n"], [163, "                        cmos_adc_data_p_s[5],  cmos_adc_data_p_s[4], \n"], [164, "                        cmos_adc_data_p_s[3],  cmos_adc_data_p_s[2], \n"], [165, "                        cmos_adc_data_p_s[1],  cmos_adc_data_p_s[0]}; \n"], [167, "    end \n"]], "Add": [[113, "    if (OUTPUT_MODE == LVDS) begin\n"], [129, "      adc_data <= POLARITY_MASK ^ adc_data_s;\n"], [129, "      adc_data_s <= { lvds_adc_data_n_s[13], lvds_adc_data_p_s[13],\n"], [129, "                      lvds_adc_data_n_s[12], lvds_adc_data_p_s[12],\n"], [129, "                      lvds_adc_data_n_s[11], lvds_adc_data_p_s[11],\n"], [129, "                      lvds_adc_data_n_s[10], lvds_adc_data_p_s[10],\n"], [129, "                      lvds_adc_data_n_s[9],  lvds_adc_data_p_s[9],\n"], [129, "                      lvds_adc_data_n_s[8],  lvds_adc_data_p_s[8],\n"], [129, "                      lvds_adc_data_n_s[7],  lvds_adc_data_p_s[7],\n"], [129, "                      lvds_adc_data_n_s[6],  lvds_adc_data_p_s[6],\n"], [129, "                      lvds_adc_data_n_s[5],  lvds_adc_data_p_s[5],\n"], [129, "                      lvds_adc_data_n_s[4],  lvds_adc_data_p_s[4],\n"], [129, "                      lvds_adc_data_n_s[3],  lvds_adc_data_p_s[3],\n"], [129, "                      lvds_adc_data_n_s[2],  lvds_adc_data_p_s[2],\n"], [129, "                      lvds_adc_data_n_s[1],  lvds_adc_data_p_s[1],\n"], [132, "    end else if (OUTPUT_MODE == CMOS) begin\n"], [148, "        adc_data_s <= { cmos_adc_data_n_s[27], cmos_adc_data_p_s[27],\n"], [148, "                        cmos_adc_data_n_s[25], cmos_adc_data_p_s[25],\n"], [148, "                        cmos_adc_data_n_s[23], cmos_adc_data_p_s[23],\n"], [148, "                        cmos_adc_data_n_s[21], cmos_adc_data_p_s[21],\n"], [148, "                        cmos_adc_data_n_s[19], cmos_adc_data_p_s[19],\n"], [148, "                        cmos_adc_data_n_s[17], cmos_adc_data_p_s[17],\n"], [148, "                        cmos_adc_data_n_s[15], cmos_adc_data_p_s[15],\n"], [148, "                        cmos_adc_data_n_s[13], cmos_adc_data_p_s[13],\n"], [148, "                        cmos_adc_data_n_s[11], cmos_adc_data_p_s[11],\n"], [148, "                        cmos_adc_data_n_s[9],  cmos_adc_data_p_s[9],\n"], [148, "                        cmos_adc_data_n_s[7],  cmos_adc_data_p_s[7],\n"], [148, "                        cmos_adc_data_n_s[5],  cmos_adc_data_p_s[5],\n"], [148, "                        cmos_adc_data_n_s[3],  cmos_adc_data_p_s[3],\n"], [165, "        adc_data_s <= { cmos_adc_data_p_s[27], cmos_adc_data_p_s[26],\n"], [165, "                        cmos_adc_data_p_s[25], cmos_adc_data_p_s[24],\n"], [165, "                        cmos_adc_data_p_s[23], cmos_adc_data_p_s[22],\n"], [165, "                        cmos_adc_data_p_s[21], cmos_adc_data_p_s[20],\n"], [165, "                        cmos_adc_data_p_s[19], cmos_adc_data_p_s[18],\n"], [165, "                        cmos_adc_data_p_s[17], cmos_adc_data_p_s[16],\n"], [165, "                        cmos_adc_data_p_s[15], cmos_adc_data_p_s[14],\n"], [165, "                        cmos_adc_data_p_s[13], cmos_adc_data_p_s[12],\n"], [165, "                        cmos_adc_data_p_s[11], cmos_adc_data_p_s[10],\n"], [165, "                        cmos_adc_data_p_s[9],  cmos_adc_data_p_s[8],\n"], [165, "                        cmos_adc_data_p_s[7],  cmos_adc_data_p_s[6],\n"], [165, "                        cmos_adc_data_p_s[5],  cmos_adc_data_p_s[4],\n"], [165, "                        cmos_adc_data_p_s[3],  cmos_adc_data_p_s[2],\n"], [165, "                        cmos_adc_data_p_s[1],  cmos_adc_data_p_s[0]};\n"], [167, "    end\n"]]}}