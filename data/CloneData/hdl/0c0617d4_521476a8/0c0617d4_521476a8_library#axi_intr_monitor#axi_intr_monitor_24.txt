Source Block: hdl/library/axi_intr_monitor/axi_intr_monitor.v@141:182@HdlStmProcess
      end
    end
  end
end

always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin
  if (s_axi_aresetn == 0) begin
    up_wack                    <= 1'b0;
    scratch                    <= 'd0;
    control                    <= 'd0;
    interrupt                  <= 'd0;
    counter_to_interrupt       <= 'd0;
    arm_counter                <= 'd0;
  end else begin
    up_wack  <= up_wreq_s;
    arm_counter <= 1'b0;
    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin
      scratch <= up_wdata_s;
    end
    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin
      control <= up_wdata_s;
    end
    if (control[0] == 1'b0) begin
      interrupt <= 1'b0;
    end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin
      interrupt <= interrupt & ~up_wdata_s[0];
    end else begin
      if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin
        interrupt <= 1'b1;
      end
    end
    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin
      counter_to_interrupt <= up_wdata_s;
      arm_counter <= 1'b1;
    end
  end
end

always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin
  if (s_axi_aresetn == 0) begin
    up_rack <= 'd0;
    up_rdata <= 'd0;

Diff Content:
- 146 always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin
- 147   if (s_axi_aresetn == 0) begin
- 148     up_wack                    <= 1'b0;
- 149     scratch                    <= 'd0;
- 150     control                    <= 'd0;
- 151     interrupt                  <= 'd0;
- 152     counter_to_interrupt       <= 'd0;
- 153     arm_counter                <= 'd0;
- 154   end else begin
- 155     up_wack  <= up_wreq_s;
- 156     arm_counter <= 1'b0;
- 157     if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin
- 158       scratch <= up_wdata_s;
- 159     end
- 160     if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin
- 161       control <= up_wdata_s;
- 162     end
- 163     if (control[0] == 1'b0) begin
- 164       interrupt <= 1'b0;
- 165     end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin
- 166       interrupt <= interrupt & ~up_wdata_s[0];
- 168       if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin
- 169         interrupt <= 1'b1;
- 171     end
- 172     if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin
- 173       counter_to_interrupt <= up_wdata_s;
- 174       arm_counter <= 1'b1;
- 177 end
+ 166   always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin
+ 166     if (s_axi_aresetn == 0) begin
+ 166       up_wack                    <= 1'b0;
+ 166       scratch                    <= 'd0;
+ 166       control                    <= 'd0;
+ 166       interrupt                  <= 'd0;
+ 166       counter_to_interrupt       <= 'd0;
+ 166       arm_counter                <= 'd0;
+ 169       up_wack  <= up_wreq_s;
+ 169       arm_counter <= 1'b0;
+ 169       if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin
+ 169         scratch <= up_wdata_s;
+ 169       end
+ 169       if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin
+ 169         control <= up_wdata_s;
+ 169       end
+ 169       if (control[0] == 1'b0) begin
+ 169         interrupt <= 1'b0;
+ 169       end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin
+ 169         interrupt <= interrupt & ~up_wdata_s[0];
+ 169       end else begin
+ 169         if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin
+ 169           interrupt <= 1'b1;
+ 169         end
+ 169       end
+ 169       if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin
+ 169         counter_to_interrupt <= up_wdata_s;
+ 169         arm_counter <= 1'b1;

Clone Blocks:
