{"Source Block": ["hdl/library/jesd204/jesd204_rx/jesd204_rx_ctrl.v@138:160@HdlStmProcess", "assign good_cnt_limit_s = (state == STATE_CGS) ? 'hff : 'h7;\nassign good_cnt_limit_reached_s = good_counter == good_cnt_limit_s;\n\nassign goto_next_state_s = good_cnt_limit_reached_s || (state == STATE_SYNCHRONIZED);\n\nalways @(posedge clk) begin\n  if (reset) begin\n    good_counter <= 'h00;\n  end else if (state_good == 1'b1) begin\n    if (good_cnt_limit_reached_s) begin\n      good_counter <= 'h00;\n    end else begin\n      good_counter <= good_counter + 1'b1;\n    end\n  end else begin\n    good_counter <= 'h00;\n  end\nend\n\nalways @(posedge clk) begin\n  case (state)\n  STATE_CGS: en_align <= 1'b1;\n  default: en_align <= 1'b0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[143, "always @(posedge clk) begin\n"], [144, "  if (reset) begin\n"], [145, "    good_counter <= 'h00;\n"], [146, "  end else if (state_good == 1'b1) begin\n"], [147, "    if (good_cnt_limit_reached_s) begin\n"], [150, "      good_counter <= good_counter + 1'b1;\n"], [152, "  end else begin\n"], [153, "    good_counter <= 'h00;\n"], [155, "end\n"]], "Add": [[147, "  always @(*) begin\n"], [147, "    case (state)\n"], [147, "    STATE_RESET: state_good = 1'b1;\n"], [147, "    STATE_WAIT_FOR_PHY: state_good = phy_ready;\n"], [147, "    STATE_CGS: state_good = &(cgs_ready | cfg_lanes_disable);\n"], [147, "    STATE_SYNCHRONIZED: state_good = ENABLE_FRAME_ALIGN_ERR_RESET ?\n"], [147, "                                     &(~frame_align_err_thresh_met | cfg_lanes_disable) :\n"], [147, "                                     1'b1;\n"], [147, "    default: state_good = 1'b0;\n"], [147, "    endcase\n"], [147, "  end\n"], [147, "  assign good_cnt_limit_s = (state == STATE_CGS) ? 'hff : 'h7;\n"], [147, "  assign good_cnt_limit_reached_s = good_counter == good_cnt_limit_s;\n"], [147, "  assign goto_next_state_s = good_cnt_limit_reached_s || (state == STATE_SYNCHRONIZED);\n"], [147, "  always @(posedge clk) begin\n"], [147, "    if (reset) begin\n"], [148, "    end else if (state_good == 1'b1) begin\n"], [148, "      if (good_cnt_limit_reached_s) begin\n"], [148, "        good_counter <= 'h00;\n"], [148, "      end else begin\n"], [148, "        good_counter <= good_counter + 1'b1;\n"], [148, "      end\n"], [150, "      good_counter <= 'h00;\n"]]}}