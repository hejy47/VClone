{"Source Block": ["hdl/library/axi_dmac/axi_dmac_reset_manager.v@139:155@HdlStmProcess", " * If ctrl_enable goes low, even for a single clock cycle, we want to go through\n * a full reset sequence. This might happen when the state machine is busy, e.g.\n * going through a startup sequence. To avoid missing the event store it for\n * later.\n */\nalways @(posedge clk) begin\n  if (state == STATE_RESET) begin\n    needs_reset <= 1'b0;\n  end else if (ctrl_enable == 1'b0) begin\n    needs_reset <= 1'b1;\n  end\nend\n\nalways @(posedge clk) begin\n  if (resetn == 1'b0) begin\n    state <= STATE_DO_RESET;\n  end else begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[144, "always @(posedge clk) begin\n"], [145, "  if (state == STATE_RESET) begin\n"], [146, "    needs_reset <= 1'b0;\n"], [147, "  end else if (ctrl_enable == 1'b0) begin\n"], [148, "    needs_reset <= 1'b1;\n"], [150, "end\n"]], "Add": [[148, "  always @(posedge clk) begin\n"], [148, "    if (state == STATE_STARTUP || state == STATE_ENABLED) begin\n"], [148, "      do_enable <= 1'b1;\n"], [148, "    end else begin\n"], [148, "      do_enable <= 1'b0;\n"], [148, "    end\n"]]}}