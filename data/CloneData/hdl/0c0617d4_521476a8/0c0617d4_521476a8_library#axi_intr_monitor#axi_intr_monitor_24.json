{"Source Block": ["hdl/library/axi_intr_monitor/axi_intr_monitor.v@141:182@HdlStmProcess", "      end\n    end\n  end\nend\n\nalways @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 0) begin\n    up_wack                    <= 1'b0;\n    scratch                    <= 'd0;\n    control                    <= 'd0;\n    interrupt                  <= 'd0;\n    counter_to_interrupt       <= 'd0;\n    arm_counter                <= 'd0;\n  end else begin\n    up_wack  <= up_wreq_s;\n    arm_counter <= 1'b0;\n    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin\n      scratch <= up_wdata_s;\n    end\n    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin\n      control <= up_wdata_s;\n    end\n    if (control[0] == 1'b0) begin\n      interrupt <= 1'b0;\n    end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin\n      interrupt <= interrupt & ~up_wdata_s[0];\n    end else begin\n      if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin\n        interrupt <= 1'b1;\n      end\n    end\n    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin\n      counter_to_interrupt <= up_wdata_s;\n      arm_counter <= 1'b1;\n    end\n  end\nend\n\nalways @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n  if (s_axi_aresetn == 0) begin\n    up_rack <= 'd0;\n    up_rdata <= 'd0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[146, "always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [147, "  if (s_axi_aresetn == 0) begin\n"], [148, "    up_wack                    <= 1'b0;\n"], [149, "    scratch                    <= 'd0;\n"], [150, "    control                    <= 'd0;\n"], [151, "    interrupt                  <= 'd0;\n"], [152, "    counter_to_interrupt       <= 'd0;\n"], [153, "    arm_counter                <= 'd0;\n"], [154, "  end else begin\n"], [155, "    up_wack  <= up_wreq_s;\n"], [156, "    arm_counter <= 1'b0;\n"], [157, "    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin\n"], [158, "      scratch <= up_wdata_s;\n"], [159, "    end\n"], [160, "    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin\n"], [161, "      control <= up_wdata_s;\n"], [162, "    end\n"], [163, "    if (control[0] == 1'b0) begin\n"], [164, "      interrupt <= 1'b0;\n"], [165, "    end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin\n"], [166, "      interrupt <= interrupt & ~up_wdata_s[0];\n"], [168, "      if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin\n"], [169, "        interrupt <= 1'b1;\n"], [171, "    end\n"], [172, "    if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin\n"], [173, "      counter_to_interrupt <= up_wdata_s;\n"], [174, "      arm_counter <= 1'b1;\n"], [177, "end\n"]], "Add": [[166, "  always @(negedge s_axi_aresetn or posedge s_axi_aclk) begin\n"], [166, "    if (s_axi_aresetn == 0) begin\n"], [166, "      up_wack                    <= 1'b0;\n"], [166, "      scratch                    <= 'd0;\n"], [166, "      control                    <= 'd0;\n"], [166, "      interrupt                  <= 'd0;\n"], [166, "      counter_to_interrupt       <= 'd0;\n"], [166, "      arm_counter                <= 'd0;\n"], [169, "      up_wack  <= up_wreq_s;\n"], [169, "      arm_counter <= 1'b0;\n"], [169, "      if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h1)) begin\n"], [169, "        scratch <= up_wdata_s;\n"], [169, "      end\n"], [169, "      if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h2)) begin\n"], [169, "        control <= up_wdata_s;\n"], [169, "      end\n"], [169, "      if (control[0] == 1'b0) begin\n"], [169, "        interrupt <= 1'b0;\n"], [169, "      end else if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h3)) begin\n"], [169, "        interrupt <= interrupt & ~up_wdata_s[0];\n"], [169, "      end else begin\n"], [169, "        if (counter_to_interrupt_cnt == 32'h0 && counter_active == 1'b1) begin\n"], [169, "          interrupt <= 1'b1;\n"], [169, "        end\n"], [169, "      end\n"], [169, "      if ((up_wreq_s == 1'b1) && (up_waddr_s[3:0] == 4'h4)) begin\n"], [169, "        counter_to_interrupt <= up_wdata_s;\n"], [169, "        arm_counter <= 1'b1;\n"]]}}