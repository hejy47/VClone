{"Source Block": ["hdl/library/axi_dmac/axi_dmac_regmap_request.v@122:165@HdlStmProcess", "assign request_src_address = up_dma_src_address;\nassign request_x_length = up_dma_x_length;\nassign request_sync_transfer_start = SYNC_TRANSFER_START ? 1'b1 : 1'b0;\nassign request_last = up_dma_last;\n\nalways @(posedge clk) begin\n  if (reset == 1'b1) begin\n    up_dma_src_address <= 'h00;\n    up_dma_dest_address <= 'h00;\n    up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= 'h00;\n    up_dma_req_valid <= 1'b0;\n    up_dma_cyclic <= DMA_CYCLIC ? 1'b1 : 1'b0;\n    up_dma_last <= 1'b1;\n    up_dma_enable_tlen_reporting <= 1'b0;\n  end else begin\n    if (ctrl_enable == 1'b1) begin\n      if (up_wreq == 1'b1 && up_waddr == 9'h102) begin\n        up_dma_req_valid <= up_dma_req_valid | up_wdata[0];\n      end else if (up_sot == 1'b1) begin\n        up_dma_req_valid <= 1'b0;\n      end\n    end else begin\n      up_dma_req_valid <= 1'b0;\n    end\n\n    if (up_wreq == 1'b1) begin\n      case (up_waddr)\n      9'h103: begin\n        if (DMA_CYCLIC) up_dma_cyclic <= up_wdata[0];\n        up_dma_last <= up_wdata[1];\n        up_dma_enable_tlen_reporting <= up_wdata[2];\n      end\n      9'h104: up_dma_dest_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n      9'h105: up_dma_src_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n      9'h106: up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= up_wdata[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN];\n      endcase\n    end\n  end\nend\n\nalways @(*) begin\n  case (up_raddr)\n  9'h101: up_rdata <= up_transfer_id;\n  9'h102: up_rdata <= up_dma_req_valid;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[127, "always @(posedge clk) begin\n"], [128, "  if (reset == 1'b1) begin\n"], [129, "    up_dma_src_address <= 'h00;\n"], [130, "    up_dma_dest_address <= 'h00;\n"], [131, "    up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= 'h00;\n"], [132, "    up_dma_req_valid <= 1'b0;\n"], [133, "    up_dma_cyclic <= DMA_CYCLIC ? 1'b1 : 1'b0;\n"], [134, "    up_dma_last <= 1'b1;\n"], [135, "    up_dma_enable_tlen_reporting <= 1'b0;\n"], [136, "  end else begin\n"], [137, "    if (ctrl_enable == 1'b1) begin\n"], [138, "      if (up_wreq == 1'b1 && up_waddr == 9'h102) begin\n"], [139, "        up_dma_req_valid <= up_dma_req_valid | up_wdata[0];\n"], [140, "      end else if (up_sot == 1'b1) begin\n"], [143, "    end else begin\n"], [144, "      up_dma_req_valid <= 1'b0;\n"], [145, "    end\n"], [147, "    if (up_wreq == 1'b1) begin\n"], [148, "      case (up_waddr)\n"], [149, "      9'h103: begin\n"], [150, "        if (DMA_CYCLIC) up_dma_cyclic <= up_wdata[0];\n"], [151, "        up_dma_last <= up_wdata[1];\n"], [152, "        up_dma_enable_tlen_reporting <= up_wdata[2];\n"], [154, "      9'h104: up_dma_dest_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n"], [155, "      9'h105: up_dma_src_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n"], [156, "      9'h106: up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= up_wdata[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN];\n"], [157, "      endcase\n"], [160, "end\n"]], "Add": [[140, "  localparam MEASURED_LENGTH_WIDTH = (DMA_2D_TRANSFER == 1) ? 32 : DMA_LENGTH_WIDTH;\n"], [140, "  reg up_dma_req_valid = 1'b0;\n"], [140, "  wire up_dma_req_ready;\n"], [140, "  reg [1:0] up_transfer_id = 2'b0;\n"], [140, "  reg [1:0] up_transfer_id_eot = 2'b0;\n"], [140, "  reg [3:0] up_transfer_done_bitmap = 4'b0;\n"], [140, "  reg [DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] up_dma_dest_address = 'h00;\n"], [140, "  reg [DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC]  up_dma_src_address = 'h00;\n"], [140, "  reg [DMA_LENGTH_WIDTH-1:0] up_dma_x_length = {DMA_LENGTH_ALIGN{1'b1}};\n"], [140, "  reg up_dma_cyclic = DMA_CYCLIC ? 1'b1 : 1'b0;\n"], [140, "  reg up_dma_last = 1'b1;\n"], [140, "  reg up_dma_enable_tlen_reporting = 1'b0;\n"], [140, "  wire up_tlf_s_ready;\n"], [140, "  reg up_tlf_s_valid = 1'b0;\n"], [140, "  wire [MEASURED_LENGTH_WIDTH+2-1:0] up_tlf_data;\n"], [140, "  wire up_tlf_valid;\n"], [140, "  wire up_tlf_rd;\n"], [140, "  reg up_partial_length_valid = 1'b0;\n"], [140, "  reg [MEASURED_LENGTH_WIDTH-1:0] up_measured_transfer_length = 'h0;\n"], [140, "  reg up_clear_tl = 1'b0;\n"], [140, "  reg [1:0] up_transfer_id_eot_d = 'h0;\n"], [140, "  wire up_bl_partial;\n"], [140, "  assign request_dest_address = up_dma_dest_address;\n"], [140, "  assign request_src_address = up_dma_src_address;\n"], [140, "  assign request_x_length = up_dma_x_length;\n"], [140, "  assign request_sync_transfer_start = SYNC_TRANSFER_START ? 1'b1 : 1'b0;\n"], [140, "  assign request_last = up_dma_last;\n"], [140, "  always @(posedge clk) begin\n"], [140, "    if (reset == 1'b1) begin\n"], [140, "      up_dma_src_address <= 'h00;\n"], [140, "      up_dma_dest_address <= 'h00;\n"], [140, "      up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= 'h00;\n"], [140, "      up_dma_req_valid <= 1'b0;\n"], [140, "      up_dma_cyclic <= DMA_CYCLIC ? 1'b1 : 1'b0;\n"], [140, "      up_dma_last <= 1'b1;\n"], [140, "      up_dma_enable_tlen_reporting <= 1'b0;\n"], [140, "    end else begin\n"], [140, "      if (ctrl_enable == 1'b1) begin\n"], [140, "        if (up_wreq == 1'b1 && up_waddr == 9'h102) begin\n"], [140, "          up_dma_req_valid <= up_dma_req_valid | up_wdata[0];\n"], [140, "        end else if (up_sot == 1'b1) begin\n"], [140, "          up_dma_req_valid <= 1'b0;\n"], [140, "        end\n"], [140, "      end else begin\n"], [152, "      if (up_wreq == 1'b1) begin\n"], [152, "        case (up_waddr)\n"], [152, "        9'h103: begin\n"], [152, "          if (DMA_CYCLIC) up_dma_cyclic <= up_wdata[0];\n"], [152, "          up_dma_last <= up_wdata[1];\n"], [152, "          up_dma_enable_tlen_reporting <= up_wdata[2];\n"], [152, "        end\n"], [152, "        9'h104: up_dma_dest_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n"], [152, "        9'h105: up_dma_src_address <= up_wdata[DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n"], [152, "        9'h106: up_dma_x_length[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN] <= up_wdata[DMA_LENGTH_WIDTH-1:DMA_LENGTH_ALIGN];\n"], [152, "        endcase\n"]]}}