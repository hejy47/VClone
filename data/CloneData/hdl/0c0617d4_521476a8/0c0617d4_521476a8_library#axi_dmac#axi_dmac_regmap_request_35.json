{"Source Block": ["hdl/library/axi_dmac/axi_dmac_regmap_request.v@215:241@HdlStmProcess", "\nassign request_valid = up_dma_req_valid;\nassign up_dma_req_ready = request_ready;\n\n// Request ID and Request done bitmap handling\nalways @(posedge clk) begin\n  if (ctrl_enable == 1'b0) begin\n    up_transfer_id <= 2'h0;\n    up_transfer_id_eot <= 2'h0;\n    up_transfer_done_bitmap <= 4'h0;\n  end else begin\n    if (up_sot == 1'b1) begin\n      up_transfer_id <= up_transfer_id + 1'b1;\n      up_transfer_done_bitmap[up_transfer_id] <= 1'b0;\n    end\n\n    if (up_eot == 1'b1) begin\n      up_transfer_id_eot <= up_transfer_id_eot + 1'b1;\n      up_transfer_done_bitmap[up_transfer_id_eot] <= 1'b1;\n    end\n  end\nend\n\nassign up_tlf_rd = up_rreq && up_raddr == 'h114;\nassign up_bl_partial = response_valid & response_ready & response_partial & up_dma_enable_tlen_reporting;\n\nalways @(posedge clk) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[220, "always @(posedge clk) begin\n"], [221, "  if (ctrl_enable == 1'b0) begin\n"], [222, "    up_transfer_id <= 2'h0;\n"], [223, "    up_transfer_id_eot <= 2'h0;\n"], [224, "    up_transfer_done_bitmap <= 4'h0;\n"], [225, "  end else begin\n"], [226, "    if (up_sot == 1'b1) begin\n"], [227, "      up_transfer_id <= up_transfer_id + 1'b1;\n"], [228, "      up_transfer_done_bitmap[up_transfer_id] <= 1'b0;\n"], [231, "    if (up_eot == 1'b1) begin\n"], [232, "      up_transfer_id_eot <= up_transfer_id_eot + 1'b1;\n"], [233, "      up_transfer_done_bitmap[up_transfer_id_eot] <= 1'b1;\n"], [236, "end\n"]], "Add": [[228, "  generate\n"], [228, "  if (DMA_2D_TRANSFER == 1) begin\n"], [228, "    reg [DMA_LENGTH_WIDTH-1:0] up_dma_y_length = 'h00;\n"], [228, "    reg [DMA_LENGTH_WIDTH-1:0] up_dma_src_stride = 'h00;\n"], [228, "    reg [DMA_LENGTH_WIDTH-1:0] up_dma_dest_stride = 'h00;\n"], [228, "    always @(posedge clk) begin\n"], [228, "      if (reset == 1'b1) begin\n"], [228, "        up_dma_y_length <= 'h00;\n"], [228, "        up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= 'h00;\n"], [228, "        up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= 'h00;\n"], [228, "      end else if (up_wreq == 1'b1) begin\n"], [228, "        case (up_waddr)\n"], [228, "        9'h107: up_dma_y_length <= up_wdata[DMA_LENGTH_WIDTH-1:0];\n"], [228, "        9'h108: up_dma_dest_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST];\n"], [228, "        9'h109: up_dma_src_stride[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] <= up_wdata[DMA_LENGTH_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC];\n"], [228, "        endcase\n"], [228, "      end\n"], [229, "    assign request_y_length = up_dma_y_length;\n"], [229, "    assign request_dest_stride = up_dma_dest_stride;\n"], [229, "    assign request_src_stride = up_dma_src_stride;\n"], [229, "  end else begin\n"], [229, "    assign request_y_length = 'h0;\n"], [229, "    assign request_dest_stride = 'h0;\n"], [229, "    assign request_src_stride = 'h0;\n"], [229, "  end\n"], [229, "  endgenerate\n"], [229, "  assign up_sot = up_dma_cyclic ? 1'b0 : up_dma_req_valid & up_dma_req_ready;\n"], [229, "  assign up_eot = up_dma_cyclic ? 1'b0 : response_eot & response_valid & response_ready;\n"], [229, "  assign request_valid = up_dma_req_valid;\n"], [229, "  assign up_dma_req_ready = request_ready;\n"], [229, "  always @(posedge clk) begin\n"], [229, "    if (ctrl_enable == 1'b0) begin\n"], [229, "      up_transfer_id <= 2'h0;\n"], [229, "      up_transfer_id_eot <= 2'h0;\n"], [229, "      up_transfer_done_bitmap <= 4'h0;\n"], [229, "    end else begin\n"], [229, "      if (up_sot == 1'b1) begin\n"], [229, "        up_transfer_id <= up_transfer_id + 1'b1;\n"], [229, "        up_transfer_done_bitmap[up_transfer_id] <= 1'b0;\n"], [229, "      end\n"], [233, "      if (up_eot == 1'b1) begin\n"], [233, "        up_transfer_id_eot <= up_transfer_id_eot + 1'b1;\n"], [233, "        up_transfer_done_bitmap[up_transfer_id_eot] <= 1'b1;\n"], [233, "      end\n"]]}}