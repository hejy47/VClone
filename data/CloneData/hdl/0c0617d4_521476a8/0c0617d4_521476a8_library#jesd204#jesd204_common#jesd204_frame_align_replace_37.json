{"Source Block": ["hdl/library/jesd204/jesd204_common/jesd204_frame_align_replace.v@111:129@HdlStmProcess", "always @(posedge clk) begin\n  data_d1 <= data;\n  data_d2 <= data_d1;\nend\n\nalways @(posedge clk) begin\n  if(reset) begin\n    char_is_align_d1 <= 'b0;\n    char_is_align_d2 <= 'b0;\n  end else begin\n    char_is_align_d1 <= char_is_align;\n    char_is_align_d2 <= char_is_align_d1;\n  end\nend\n\n// Capture single EOF in current cycle\n\nalways @(eof, data) begin\n  data_prev_eof_single_int = 'b0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[116, "always @(posedge clk) begin\n"], [117, "  if(reset) begin\n"], [118, "    char_is_align_d1 <= 'b0;\n"], [119, "    char_is_align_d2 <= 'b0;\n"], [120, "  end else begin\n"], [121, "    char_is_align_d1 <= char_is_align;\n"], [122, "    char_is_align_d2 <= char_is_align_d1;\n"], [124, "end\n"]], "Add": [[122, "  localparam DPW_LOG2 = DATA_PATH_WIDTH == 8 ? 3 : DATA_PATH_WIDTH == 4 ? 2 : 1;\n"], [122, "  wire                                  single_eof = cfg_octets_per_frame >= (DATA_PATH_WIDTH-1);\n"], [122, "  reg  [DATA_PATH_WIDTH*8-1:0]          data_d1;\n"], [122, "  reg  [DATA_PATH_WIDTH*8-1:0]          data_d2;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            char_is_align;\n"], [122, "  reg  [DATA_PATH_WIDTH-1:0]            char_is_align_d1;\n"], [122, "  reg  [DATA_PATH_WIDTH-1:0]            char_is_align_d2;\n"], [122, "  wire [((DATA_PATH_WIDTH*2)+4)*8-1:0]  saved_data;\n"], [122, "  wire [((DATA_PATH_WIDTH*2)+4)-1:0]    saved_char_is_align;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          data_replaced;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          data_prev_eof;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          data_prev_prev_eof;\n"], [122, "  reg  [7:0]                            data_prev_eof_single;\n"], [122, "  reg  [7:0]                            data_prev_eof_single_int;\n"], [122, "  reg                                   char_is_align_prev_single;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_data_1;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_1;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_1;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_data_2;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_2;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_2;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_data_3;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_3;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_3;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_data_4;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_4;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_4;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_data_6;\n"], [122, "  wire [DATA_PATH_WIDTH*8-1:0]          prev_prev_data_6;\n"], [122, "  wire [DATA_PATH_WIDTH-1:0]            prev_char_is_align_6;\n"], [122, "  reg  [DATA_PATH_WIDTH*8-1:0]          prev_data;\n"], [122, "  reg  [DATA_PATH_WIDTH*8-1:0]          prev_prev_data;\n"], [122, "  reg  [DATA_PATH_WIDTH-1:0]            prev_char_is_align;\n"], [122, "  reg  [DPW_LOG2:0]                     jj;\n"], [122, "  reg  [DPW_LOG2:0]                     ll;\n"], [122, "  always @(posedge clk) begin\n"], [122, "    data_d1 <= data;\n"], [122, "    data_d2 <= data_d1;\n"]]}}