Source Block: hdl/library/jesd204/axi_jesd204_rx/jesd204_up_rx_lane.v@99:141@HdlStmProcess
      up_status_latency <= core_status_latency;
    end
  end
end

always @(*) begin
  if (up_raddr[2] == 1'b1) begin
    if (up_ilas_ready == 1'b1) begin
      up_rdata = up_ilas_rdata;
    end else begin
      up_rdata = 'h00;
    end
  end else begin
    case (up_raddr[1:0])
    2'b00: up_rdata = {
      /* 11-31 */ 21'h0, /* Reserved for future use */
      /* 08-10 */ up_status_emb_state,
      /* 06-07 */ 2'h00,
      /*    05 */ up_ilas_ready,
      /*    04 */ up_status_ifs_ready,
      /* 02-03 */ 2'b00, /* Reserved for future extensions of cgs_state */
      /* 00-01 */ up_status_cgs_state
    };
    2'b01: up_rdata = {
      /* 14-31 */ 18'h00, /* Reserved for future use */
      /* 00-13 */ up_status_latency
    };
    2'b10: up_rdata = {
      /* 00-31 */ up_status_err_statistics_cnt
    };
    2'b11: up_rdata = {
      /* 08-31 */ 24'h0, /* Reserved for future use */
      /* 00-07 */ up_status_lane_frame_align_err_cnt
    };
    default: up_rdata = 'h00;
    endcase
  end
end

jesd204_up_ilas_mem #(
  .DATA_PATH_WIDTH(DATA_PATH_WIDTH)
) i_ilas_mem (
  .up_clk(up_clk),

Diff Content:
- 104 always @(*) begin
- 105   if (up_raddr[2] == 1'b1) begin
- 106     if (up_ilas_ready == 1'b1) begin
- 107       up_rdata = up_ilas_rdata;
- 109       up_rdata = 'h00;
- 111   end else begin
- 112     case (up_raddr[1:0])
- 113     2'b00: up_rdata = {
- 114       /* 11-31 */ 21'h0, /* Reserved for future use */
- 115       /* 08-10 */ up_status_emb_state,
- 116       /* 06-07 */ 2'h00,
- 117       /*    05 */ up_ilas_ready,
- 118       /*    04 */ up_status_ifs_ready,
- 119       /* 02-03 */ 2'b00, /* Reserved for future extensions of cgs_state */
- 120       /* 00-01 */ up_status_cgs_state
- 121     };
- 122     2'b01: up_rdata = {
- 123       /* 14-31 */ 18'h00, /* Reserved for future use */
- 124       /* 00-13 */ up_status_latency
- 125     };
- 126     2'b10: up_rdata = {
- 127       /* 00-31 */ up_status_err_statistics_cnt
- 128     };
- 129     2'b11: up_rdata = {
- 130       /* 08-31 */ 24'h0, /* Reserved for future use */
- 131       /* 00-07 */ up_status_lane_frame_align_err_cnt
- 132     };
- 133     default: up_rdata = 'h00;
- 134     endcase
- 136 end
+ 107   always @(*) begin
+ 107     if (up_raddr[2] == 1'b1) begin
+ 107       if (up_ilas_ready == 1'b1) begin
+ 107         up_rdata = up_ilas_rdata;
+ 107       end else begin
+ 107         up_rdata = 'h00;
+ 107       end
+ 109       case (up_raddr[1:0])
+ 109       2'b00: up_rdata = {
+ 109         /* 11-31 */ 21'h0, /* Reserved for future use */
+ 109         /* 08-10 */ up_status_emb_state,
+ 109         /* 06-07 */ 2'h00,
+ 109         /*    05 */ up_ilas_ready,
+ 109         /*    04 */ up_status_ifs_ready,
+ 109         /* 02-03 */ 2'b00, /* Reserved for future extensions of cgs_state */
+ 109         /* 00-01 */ up_status_cgs_state
+ 109       };
+ 109       2'b01: up_rdata = {
+ 109         /* 14-31 */ 18'h00, /* Reserved for future use */
+ 109         /* 00-13 */ up_status_latency
+ 109       };
+ 109       2'b10: up_rdata = {
+ 109         /* 00-31 */ up_status_err_statistics_cnt
+ 109       };
+ 109       2'b11: up_rdata = {
+ 109         /* 08-31 */ 24'h0, /* Reserved for future use */
+ 109         /* 00-07 */ up_status_lane_frame_align_err_cnt
+ 109       };
+ 109       default: up_rdata = 'h00;
+ 109       endcase

Clone Blocks:
