{"Source Block": ["hdl/library/xilinx/common/ad_serdes_in.v@144:230@HdlStmIf", "  begin\n      if   (rst) serdes_rst_seq [6:0] <= 7'b0001110;\n      else       serdes_rst_seq [6:0] <= {serdes_rst_seq [5:0], 1'b0};\n  end\n\n  generate if (FPGA_TECHNOLOGY == SEVEN_SERIES) begin\n    for (l_inst = 0; l_inst <= (DATA_WIDTH-1); l_inst = l_inst + 1) begin: g_data\n\n      (* IODELAY_GROUP = IODELAY_GROUP *)\n      IDELAYE2 #(\n        .CINVCTRL_SEL (\"FALSE\"),\n        .DELAY_SRC (\"IDATAIN\"),\n        .HIGH_PERFORMANCE_MODE (\"FALSE\"),\n        .IDELAY_TYPE (\"VAR_LOAD\"),\n        .IDELAY_VALUE (0),\n        .REFCLK_FREQUENCY (REFCLK_FREQUENCY),\n        .PIPE_SEL (\"FALSE\"),\n        .SIGNAL_PATTERN (\"DATA\"))\n      i_idelay (\n        .CE (1'b0),\n        .INC (1'b0),\n        .DATAIN (1'b0),\n        .LDPIPEEN (1'b0),\n        .CINVCTRL (1'b0),\n        .REGRST (1'b0),\n        .C (up_clk),\n        .IDATAIN (data_in_ibuf_s[l_inst]),\n        .DATAOUT (data_in_idelay_s[l_inst]),\n        .LD (up_dld[l_inst]),\n        .CNTVALUEIN (up_dwdata[DRP_WIDTH*l_inst +: DRP_WIDTH]),\n        .CNTVALUEOUT (up_drdata[DRP_WIDTH*l_inst +: DRP_WIDTH]));\n\n      ISERDESE2  #(\n        .DATA_RATE (DATA_RATE),\n        .DATA_WIDTH (SERDES_FACTOR),\n        .DYN_CLKDIV_INV_EN (\"FALSE\"),\n        .DYN_CLK_INV_EN (\"FALSE\"),\n        .INIT_Q1 (1'b0),\n        .INIT_Q2 (1'b0),\n        .INIT_Q3 (1'b0),\n        .INIT_Q4 (1'b0),\n        .INTERFACE_TYPE (\"NETWORKING\"),\n        .IOBDELAY (\"IFD\"),\n        .NUM_CE (2),\n        .OFB_USED (\"FALSE\"),\n        .SERDES_MODE (\"MASTER\"),\n        .SRVAL_Q1 (1'b0),\n        .SRVAL_Q2 (1'b0),\n        .SRVAL_Q3 (1'b0),\n        .SRVAL_Q4 (1'b0))\n      i_iserdes (\n        .O (),\n        .Q1 (data_s0[l_inst]),\n        .Q2 (data_s1[l_inst]),\n        .Q3 (data_s2[l_inst]),\n        .Q4 (data_s3[l_inst]),\n        .Q5 (data_s4[l_inst]),\n        .Q6 (data_s5[l_inst]),\n        .Q7 (data_s6[l_inst]),\n        .Q8 (data_s7[l_inst]),\n        .SHIFTOUT1 (),\n        .SHIFTOUT2 (),\n        .BITSLIP (1'b0),\n        .CE1 (1'b1),\n        .CE2 (1'b1),\n        .CLKDIVP (1'b0),\n        .CLK (clk),\n        .CLKB (~clk),\n        .CLKDIV (div_clk),\n        .OCLK (1'b0),\n        .DYNCLKDIVSEL (1'b0),\n        .DYNCLKSEL (1'b0),\n        .D (1'b0),\n        .DDLY (data_in_idelay_s[l_inst]),\n        .OFB (1'b0),\n        .OCLKB (1'b0),\n        .RST (serdes_rst),\n        .SHIFTIN1 (1'b0),\n        .SHIFTIN2 (1'b0));\n      end /* g_data */\n\n    end\n  endgenerate\n\n  generate if (FPGA_TECHNOLOGY == ULTRASCALE || FPGA_TECHNOLOGY == ULTRASCALE_PLUS) begin\n\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[161, "        .SIGNAL_PATTERN (\"DATA\"))\n"], [162, "      i_idelay (\n"], [193, "        .SRVAL_Q4 (1'b0))\n"], [194, "      i_iserdes (\n"]], "Add": [[162, "        .SIGNAL_PATTERN (\"DATA\")\n"], [162, "      ) i_idelay (\n"], [194, "        .SRVAL_Q4 (1'b0)\n"], [194, "      ) i_iserdes (\n"]]}}