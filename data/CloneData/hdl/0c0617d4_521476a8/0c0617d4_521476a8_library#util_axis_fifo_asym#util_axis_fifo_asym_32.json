{"Source Block": ["hdl/library/util_axis_fifo_asym/util_axis_fifo_asym.v@254:291@HdlStmIf", "always @(posedge s_axis_aclk) begin\n  s_axis_tlast_d <= s_axis_tlast;\nend\n\ngenerate\n  if (RATIO == 1) begin\n    always @(*) begin\n      s_axis_counter <= 1'b1;\n    end\n  end else if (RATIO > 1) begin\n    if (RATIO_TYPE) begin\n      always @(posedge s_axis_aclk) begin\n        if (!s_axis_aresetn) begin\n          s_axis_counter <= 0;\n        end else begin\n          if (s_axis_ready && s_axis_valid) begin\n            s_axis_counter <= s_axis_counter + 1'b1;\n          end\n        end\n      end\n    end else begin\n      // in case of a small slave, after an active TLAST reset the counter\n      always @(posedge s_axis_aclk) begin\n        if (!s_axis_aresetn || s_axis_tlast_d) begin\n          s_axis_counter <= 0;\n        end else begin\n          if (s_axis_ready && s_axis_valid) begin\n            s_axis_counter <= s_axis_counter + 1'b1;\n          end\n        end\n      end\n    end\n  end\nendgenerate\n\n// master handshake sequencer\n\ngenerate\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[259, "  if (RATIO == 1) begin\n"], [260, "    always @(*) begin\n"], [261, "      s_axis_counter <= 1'b1;\n"], [262, "    end\n"], [263, "  end else if (RATIO > 1) begin\n"], [264, "    if (RATIO_TYPE) begin\n"], [265, "      always @(posedge s_axis_aclk) begin\n"], [266, "        if (!s_axis_aresetn) begin\n"], [267, "          s_axis_counter <= 0;\n"], [268, "        end else begin\n"], [269, "          if (s_axis_ready && s_axis_valid) begin\n"], [270, "            s_axis_counter <= s_axis_counter + 1'b1;\n"], [273, "      end\n"], [274, "    end else begin\n"], [276, "      always @(posedge s_axis_aclk) begin\n"], [277, "        if (!s_axis_aresetn || s_axis_tlast_d) begin\n"], [278, "          s_axis_counter <= 0;\n"], [279, "        end else begin\n"], [280, "          if (s_axis_ready && s_axis_valid) begin\n"], [281, "            s_axis_counter <= s_axis_counter + 1'b1;\n"], [286, "  end\n"]], "Add": [[270, "  endgenerate\n"], [270, "  reg s_axis_tlast_d = 0;\n"], [270, "  always @(posedge s_axis_aclk) begin\n"], [270, "    s_axis_tlast_d <= s_axis_tlast;\n"], [270, "  end\n"], [270, "  generate\n"], [270, "    if (RATIO == 1) begin\n"], [270, "      always @(*) begin\n"], [270, "        s_axis_counter <= 1'b1;\n"], [270, "      end\n"], [270, "    end else if (RATIO > 1) begin\n"], [270, "      if (RATIO_TYPE) begin\n"], [270, "        always @(posedge s_axis_aclk) begin\n"], [270, "          if (!s_axis_aresetn) begin\n"], [270, "            s_axis_counter <= 0;\n"], [270, "          end else begin\n"], [270, "            if (s_axis_ready && s_axis_valid) begin\n"], [270, "              s_axis_counter <= s_axis_counter + 1'b1;\n"], [270, "            end\n"], [281, "      end else begin\n"], [281, "        always @(posedge s_axis_aclk) begin\n"], [281, "          if (!s_axis_aresetn || s_axis_tlast_d) begin\n"], [281, "            s_axis_counter <= 0;\n"], [281, "          end else begin\n"], [281, "            if (s_axis_ready && s_axis_valid) begin\n"], [281, "              s_axis_counter <= s_axis_counter + 1'b1;\n"], [281, "            end\n"]]}}