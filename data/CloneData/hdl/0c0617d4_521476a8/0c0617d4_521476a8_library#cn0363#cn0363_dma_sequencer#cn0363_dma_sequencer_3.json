{"Source Block": ["hdl/library/cn0363/cn0363_dma_sequencer/cn0363_dma_sequencer.v@73:83@HdlStmAssign", ");\n\nreg [3:0] count = 'h00;\n\nassign overflow = dma_wr_overflow;\nassign processing_resetn = dma_wr_xfer_req;\n\nalways @(posedge clk) begin\n  if (processing_resetn == 1'b0) begin\n    count <= 'h0;\n  end else begin\n"], "Clone Blocks": [["hdl/library/cn0363/cn0363_dma_sequencer/cn0363_dma_sequencer.v@70:80", "  input [13:0] channel_enable,\n\n  output processing_resetn\n);\n\nreg [3:0] count = 'h00;\n\nassign overflow = dma_wr_overflow;\nassign processing_resetn = dma_wr_xfer_req;\n\nalways @(posedge clk) begin\n"], ["hdl/library/cn0363/cn0363_dma_sequencer/cn0363_dma_sequencer.v@72:82", "  output processing_resetn\n);\n\nreg [3:0] count = 'h00;\n\nassign overflow = dma_wr_overflow;\nassign processing_resetn = dma_wr_xfer_req;\n\nalways @(posedge clk) begin\n  if (processing_resetn == 1'b0) begin\n    count <= 'h0;\n"]], "Diff Content": {"Delete": [[78, "assign processing_resetn = dma_wr_xfer_req;\n"]], "Add": [[78, "  always @(posedge clk) begin\n"], [78, "    if (processing_resetn == 1'b0 || channel_enable[count] == 1'b0) begin\n"], [78, "      dma_wr_en <= 1'b0;\n"], [78, "    end else begin\n"], [78, "      case (count)\n"], [78, "        'h0: dma_wr_en <= phase_valid;\n"], [78, "        'h1: dma_wr_en <= data_valid;\n"], [78, "        'h2: dma_wr_en <= data_filtered_valid;\n"], [78, "        'h3: dma_wr_en <= i_q_valid;\n"], [78, "        'h4: dma_wr_en <= i_q_valid;\n"], [78, "        'h5: dma_wr_en <= i_q_filtered_valid;\n"], [78, "        'h6: dma_wr_en <= i_q_filtered_valid;\n"], [78, "        'h7: dma_wr_en <= phase_valid;\n"], [78, "        'h8: dma_wr_en <= data_valid;\n"], [78, "        'h9: dma_wr_en <= data_filtered_valid;\n"], [78, "        'ha: dma_wr_en <= i_q_valid;\n"], [78, "        'hb: dma_wr_en <= i_q_valid;\n"], [78, "        'hc: dma_wr_en <= i_q_filtered_valid;\n"], [78, "        'hd: dma_wr_en <= i_q_filtered_valid;\n"], [78, "      endcase\n"], [78, "    end\n"], [78, "  end\n"], [78, "  always @(posedge clk) begin\n"], [78, "    if (count == 'h00) begin\n"], [78, "      dma_wr_sync <= 1'b1;\n"], [78, "    end else if (dma_wr_en == 1'b1) begin\n"], [78, "      dma_wr_sync = 1'b0;\n"], [78, "    end\n"], [78, "  end\n"]]}}