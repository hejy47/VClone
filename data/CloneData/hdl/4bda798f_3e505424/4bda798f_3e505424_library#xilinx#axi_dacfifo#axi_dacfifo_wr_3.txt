Source Block: hdl/library/xilinx/axi_dacfifo/axi_dacfifo_wr.v@411:435@HdlStmProcess
                           (MEM_RATIO == 8) ? axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):3] :
                                              axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):4];

  assign axi_mem_addr_diff_s = {1'b1, axi_mem_waddr_s} - axi_mem_raddr;

  always @(posedge axi_clk) begin
    if (axi_resetn == 1'b0) begin
      axi_endof_transaction <= 1'b0;
      axi_endof_transaction_d <= 1'b0;
      axi_mem_addr_diff <= 'b0;
    end else begin
     axi_mem_addr_diff <= axi_mem_addr_diff_s[(AXI_MEM_ADDRESS_WIDTH-1):0];
     axi_endof_transaction_d <= axi_endof_transaction;
     if ((axi_xfer_req_m[4] == 1'b1) && (axi_xfer_last_m[4] == 1'b1) && (axi_xfer_last_m[3] == 1'b0)) begin
        axi_endof_transaction <= 1'b1;
      end else if((axi_endof_transaction == 1'b1) && (axi_wlast == 1'b1) && ((axi_mem_addr_diff == 0) || (axi_mem_addr_diff > AXI_LENGTH))) begin
        axi_endof_transaction <= 1'b0;
      end
    end
  end

  // The asymmetric memory have to have enough data for at least one AXI burst,
  // before the controller start an AXI write transaction.

  always @(posedge axi_clk) begin

Diff Content:
- 420       axi_mem_addr_diff <= 'b0;
- 422      axi_mem_addr_diff <= axi_mem_addr_diff_s[(AXI_MEM_ADDRESS_WIDTH-1):0];

Clone Blocks:
