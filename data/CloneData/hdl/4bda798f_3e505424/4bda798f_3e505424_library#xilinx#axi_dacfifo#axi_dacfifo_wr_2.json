{"Source Block": ["hdl/library/xilinx/axi_dacfifo/axi_dacfifo_wr.v@331:361@HdlStmProcess", "                           (MEM_RATIO == 8) ? {dma_mem_raddr, 3'b0} :\n                                              {dma_mem_raddr, 4'b0};\n  assign dma_mem_last_read_s = dma_mem_last_read_toggle_m[2] ^ dma_mem_last_read_toggle_m[1];\n  assign dma_mem_wea_s = dma_xfer_req & dma_valid;\n\n  always @(posedge dma_clk) begin\n    if (dma_rst_s == 1'b1) begin\n      dma_mem_waddr <= 'h0;\n      dma_mem_waddr_g <= 'h0;\n      dma_mem_last_read_toggle_m <= 3'b0;\n    end else begin\n      dma_mem_last_read_toggle_m = {dma_mem_last_read_toggle_m[1:0], axi_mem_last_read_toggle};\n      if (dma_mem_wea_s == 1'b1) begin\n        dma_mem_waddr <= dma_mem_waddr + 8'b1;\n        if (dma_xfer_last == 1'b1) begin\n          if (dma_last_beats != (MEM_RATIO - 1)) begin\n            dma_mem_waddr <= dma_mem_waddr + (MEM_RATIO - dma_last_beats);\n          end\n        end\n      end\n      if (dma_mem_last_read_s == 1'b1) begin\n        dma_mem_waddr <= 'h0;\n      end\n      dma_mem_waddr_g <= b2g(dma_mem_waddr);\n    end\n  end\n\n  // The memory module request data until reaches the high threshold.\n\n  always @(posedge dma_clk) begin\n    if (dma_rst_s == 1'b1) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[344, "        dma_mem_waddr <= dma_mem_waddr + 8'b1;\n"]], "Add": [[344, "        dma_mem_waddr <= dma_mem_waddr + 1;\n"]]}}