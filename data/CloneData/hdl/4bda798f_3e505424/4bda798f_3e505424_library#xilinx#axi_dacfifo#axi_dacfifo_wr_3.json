{"Source Block": ["hdl/library/xilinx/axi_dacfifo/axi_dacfifo_wr.v@411:435@HdlStmProcess", "                           (MEM_RATIO == 8) ? axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):3] :\n                                              axi_mem_waddr[(DMA_MEM_ADDRESS_WIDTH-1):4];\n\n  assign axi_mem_addr_diff_s = {1'b1, axi_mem_waddr_s} - axi_mem_raddr;\n\n  always @(posedge axi_clk) begin\n    if (axi_resetn == 1'b0) begin\n      axi_endof_transaction <= 1'b0;\n      axi_endof_transaction_d <= 1'b0;\n      axi_mem_addr_diff <= 'b0;\n    end else begin\n     axi_mem_addr_diff <= axi_mem_addr_diff_s[(AXI_MEM_ADDRESS_WIDTH-1):0];\n     axi_endof_transaction_d <= axi_endof_transaction;\n     if ((axi_xfer_req_m[4] == 1'b1) && (axi_xfer_last_m[4] == 1'b1) && (axi_xfer_last_m[3] == 1'b0)) begin\n        axi_endof_transaction <= 1'b1;\n      end else if((axi_endof_transaction == 1'b1) && (axi_wlast == 1'b1) && ((axi_mem_addr_diff == 0) || (axi_mem_addr_diff > AXI_LENGTH))) begin\n        axi_endof_transaction <= 1'b0;\n      end\n    end\n  end\n\n  // The asymmetric memory have to have enough data for at least one AXI burst,\n  // before the controller start an AXI write transaction.\n\n  always @(posedge axi_clk) begin\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[420, "      axi_mem_addr_diff <= 'b0;\n"], [422, "     axi_mem_addr_diff <= axi_mem_addr_diff_s[(AXI_MEM_ADDRESS_WIDTH-1):0];\n"]], "Add": []}}