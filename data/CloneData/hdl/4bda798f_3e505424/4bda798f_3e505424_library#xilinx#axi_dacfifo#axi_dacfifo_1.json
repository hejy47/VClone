{"Source Block": ["hdl/library/xilinx/axi_dacfifo/axi_dacfifo.v@309:344@HdlStmIf", "    .dac_xfer_out (dac_xfer_out),\n    .dac_dunf (dac_dunf));\n\n  // bypass logic\n\n  generate if (BYPASS_EN == 1) begin\n\n    util_axis_resize #(\n      .MASTER_DATA_WIDTH (AXI_DATA_WIDTH),\n      .SLAVE_DATA_WIDTH (DMA_DATA_WIDTH)\n    ) i_util_axis_resize (\n      .clk (axi_clk),\n      .resetn (axi_resetn),\n      .s_valid (dma_valid),\n      .s_ready (dma_ready_bp_s),\n      .s_data (dma_data),\n      .m_valid (dma_valid_bp_s),\n      .m_ready (axi_rd_ready_s),\n      .m_data (dma_data_bp_s)\n    );\n\n    assign  dac_rd_valid_s = (dac_fifo_bypass) ? dma_valid_bp_s : axi_rd_valid_s;\n    assign  dac_rd_data_s = (dac_fifo_bypass) ? dma_data_bp_s : axi_rd_data_s;\n    assign  dma_ready = (dac_fifo_bypass) ? dma_ready_bp_s : dma_ready_s;\n\n  end else begin\n\n    assign  dac_rd_valid_s = axi_rd_valid_s;\n    assign  dac_rd_data_s = axi_rd_data_s;\n    assign  dma_ready = dma_ready_s;\n\n  end\n  endgenerate\n\nendmodule\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[314, "  generate if (BYPASS_EN == 1) begin\n"], [316, "    util_axis_resize #(\n"], [317, "      .MASTER_DATA_WIDTH (AXI_DATA_WIDTH),\n"], [318, "      .SLAVE_DATA_WIDTH (DMA_DATA_WIDTH)\n"], [319, "    ) i_util_axis_resize (\n"], [320, "      .clk (axi_clk),\n"], [321, "      .resetn (axi_resetn),\n"], [322, "      .s_valid (dma_valid),\n"], [323, "      .s_ready (dma_ready_bp_s),\n"], [324, "      .s_data (dma_data),\n"], [325, "      .m_valid (dma_valid_bp_s),\n"], [326, "      .m_ready (axi_rd_ready_s),\n"], [327, "      .m_data (dma_data_bp_s)\n"], [328, "    );\n"], [330, "    assign  dac_rd_valid_s = (dac_fifo_bypass) ? dma_valid_bp_s : axi_rd_valid_s;\n"], [331, "    assign  dac_rd_data_s = (dac_fifo_bypass) ? dma_data_bp_s : axi_rd_data_s;\n"], [332, "    assign  dma_ready = (dac_fifo_bypass) ? dma_ready_bp_s : dma_ready_s;\n"], [334, "  end else begin\n"], [336, "    assign  dac_rd_valid_s = axi_rd_valid_s;\n"], [337, "    assign  dac_rd_data_s = axi_rd_data_s;\n"], [338, "    assign  dma_ready = dma_ready_s;\n"], [340, "  end\n"]], "Add": []}}