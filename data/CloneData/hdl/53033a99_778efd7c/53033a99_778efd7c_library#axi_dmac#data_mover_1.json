{"Source Block": ["hdl/library/axi_dmac/data_mover.v@92:102@HdlStmAssign", "assign last = eot ? last_eot : last_non_eot;\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = s_axi_ready && s_axi_valid && last_eot && eot;\nassign req_ready = last_load || ~active;\n"], "Clone Blocks": [["hdl/library/axi_dmac/data_mover.v@87:97", "\nassign xfer_req = active;\n\nassign response_id = id;\n\nassign last = eot ? last_eot : last_non_eot;\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n"], ["hdl/library/axi_dmac/data_mover.v@91:101", "\nassign last = eot ? last_eot : last_non_eot;\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\nassign last_load = s_axi_ready && s_axi_valid && last_eot && eot;\n"], ["hdl/library/axi_dmac/data_mover.v@90:100", "assign response_id = id;\n\nassign last = eot ? last_eot : last_non_eot;\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n// req_ready on the same cycle on which the last load happens.\n"], ["hdl/library/axi_dmac/data_mover.v@89:99", "\nassign response_id = id;\n\nassign last = eot ? last_eot : last_non_eot;\n\nassign s_axi_ready = m_axi_ready & pending_burst & active;\nassign m_axi_valid = s_axi_valid & pending_burst & active;\nassign m_axi_data = s_axi_data;\nassign m_axi_last = last;\n\n// If we want to support zero delay between transfers we have to assert\n"]], "Diff Content": {"Delete": [[97, "assign m_axi_last = last;\n"]], "Add": [[97, "assign m_axi_last = LAST ? (last_eot & eot) : last;\n"]]}}