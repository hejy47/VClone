Source Block: hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@58:68@HdlIdDef

  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

  reg              trigger_active;
  reg              trigger_active_mux;
  reg              trigger_active_d1;

Diff Content:
- 63   reg     [ 17:0]   rise_edge = 'd0;

Clone Blocks:
Clone Blocks 1:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@55:65

  output  reg           trigger_out,
  output  reg           trigger_out_adc);

  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;


Clone Blocks 2:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@61:71
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

  reg              trigger_active;
  reg              trigger_active_mux;
  reg              trigger_active_d1;

  always @(posedge clk) begin
    if (data_valid == 1'b1) begin

Clone Blocks 3:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@57:67
  output  reg           trigger_out_adc);

  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

  reg              trigger_active;
  reg              trigger_active_mux;

Clone Blocks 4:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@54:64
  input       [ 6:0]    trigger_logic,

  output  reg           trigger_out,
  output  reg           trigger_out_adc);

  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

Clone Blocks 5:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@56:66
  output  reg           trigger_out,
  output  reg           trigger_out_adc);

  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

  reg              trigger_active;

Clone Blocks 6:
hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@59:69
  reg     [ 17:0]   data_m1 = 'd0;
  reg     [ 17:0]   low_level = 'd0;
  reg     [ 17:0]   high_level = 'd0;
  reg     [ 17:0]   edge_detect = 'd0;
  reg     [ 17:0]   rise_edge = 'd0;
  reg     [ 17:0]   fall_edge = 'd0;

  reg              trigger_active;
  reg              trigger_active_mux;
  reg              trigger_active_d1;


