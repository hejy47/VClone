{"Source Block": ["hdl/library/axi_logic_analyzer/axi_logic_analyzer_trigger.v@78:104@HdlStmProcess", "\n  // trigger logic:\n  // 0 OR\n  // 1 AND\n\n  always @(posedge clk) begin\n    if (data_valid == 1'b1) begin\n      case (trigger_logic[0])\n        0: trigger_active <= |((edge_detect & edge_detect_enable) |\n                               (rise_edge & rise_edge_enable) |\n                               (fall_edge & fall_edge_enable) |\n                               (low_level & low_level_enable) |\n                               (high_level & high_level_enable));\n        1: trigger_active <= &((edge_detect | ~edge_detect_enable) &\n                               (rise_edge | ~rise_edge_enable) &\n                               (fall_edge | ~fall_edge_enable) &\n                               (low_level | ~low_level_enable) &\n                               (high_level | ~high_level_enable));\n        default: trigger_active = 1'b1;\n      endcase\n    end\n  end\n\n  always @(*) begin\n    case (trigger_logic[6:4])\n      3'd0: trigger_active_mux = trigger_active;\n      3'd1: trigger_active_mux = trigger_in;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[83, "  always @(posedge clk) begin\n"], [86, "        0: trigger_active <= |((edge_detect & edge_detect_enable) |\n"], [87, "                               (rise_edge & rise_edge_enable) |\n"], [88, "                               (fall_edge & fall_edge_enable) |\n"], [89, "                               (low_level & low_level_enable) |\n"], [90, "                               (high_level & high_level_enable));\n"], [91, "        1: trigger_active <= &((edge_detect | ~edge_detect_enable) &\n"], [92, "                               (rise_edge | ~rise_edge_enable) &\n"], [93, "                               (fall_edge | ~fall_edge_enable) &\n"], [94, "                               (low_level | ~low_level_enable) &\n"], [95, "                               (high_level | ~high_level_enable));\n"]], "Add": [[83, "  always @(*) begin\n"], [95, "        0: trigger_active = |(({ext_t_edge_detect_hold, edge_detect_m} & edge_detect_enable) |\n"], [95, "                              ({ext_t_rise_edge_hold,   rise_edge_m}   & rise_edge_enable) |\n"], [95, "                              ({ext_t_fall_edge_hold,   fall_edge_m}   & fall_edge_enable) |\n"], [95, "                              ({ext_t_low_level_hold,   low_level_m}   & low_level_enable) |\n"], [95, "                              ({ext_t_high_level_hold , high_level_m}  & high_level_enable));\n"], [95, "        1: trigger_active = &(({ext_t_edge_detect_hold, edge_detect_m} | ~edge_detect_enable) &\n"], [95, "                              ({ext_t_rise_edge_hold,   rise_edge_m}   | ~rise_edge_enable) &\n"], [95, "                              ({ext_t_fall_edge_hold,   fall_edge_m}   | ~fall_edge_enable) &\n"], [95, "                              ({ext_t_low_level_hold,   low_level_m}   | ~low_level_enable) &\n"], [95, "                              ({ext_t_high_level_hold , high_level_m}  | ~high_level_enable));\n"]]}}