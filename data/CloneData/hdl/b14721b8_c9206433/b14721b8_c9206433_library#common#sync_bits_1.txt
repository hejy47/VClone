Source Block: hdl/library/common/sync_bits.v@55:65@HdlIdDef
parameter NUM_BITS = 1;
// Whether input and output clocks are asynchronous, if 0 the synchronizer will
// be bypassed and the output signal equals the input signal.
parameter CLK_ASYNC = 1;

reg [NUM_BITS-1:0] out_m1 = 'h0;
reg [NUM_BITS-1:0] out_m2 = 'h0;

always @(posedge out_clk)
begin
	if (out_resetn == 1'b0) begin

Diff Content:
- 60 reg [NUM_BITS-1:0] out_m1 = 'h0;

Clone Blocks:
Clone Blocks 1:
hdl/library/common/sync_bits.v@56:66
// Whether input and output clocks are asynchronous, if 0 the synchronizer will
// be bypassed and the output signal equals the input signal.
parameter CLK_ASYNC = 1;

reg [NUM_BITS-1:0] out_m1 = 'h0;
reg [NUM_BITS-1:0] out_m2 = 'h0;

always @(posedge out_clk)
begin
	if (out_resetn == 1'b0) begin
		out_m1 <= 'b0;

