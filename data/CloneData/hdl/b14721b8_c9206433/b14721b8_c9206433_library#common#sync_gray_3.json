{"Source Block": ["hdl/library/common/sync_gray.v@57:67@HdlIdDef", "// synchronizer will be bypassed and out_count will be in_count.\nparameter CLK_ASYNC = 1;\n\nreg [DATA_WIDTH-1:0] in_count_gray = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m1 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m2 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_m = 'h0;\n\nfunction [DATA_WIDTH-1:0] g2b;\n\tinput [DATA_WIDTH-1:0] g;\n\treg   [DATA_WIDTH-1:0] b;\n"], "Clone Blocks": [["hdl/library/common/sync_gray.v@58:68", "parameter CLK_ASYNC = 1;\n\nreg [DATA_WIDTH-1:0] in_count_gray = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m1 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m2 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_m = 'h0;\n\nfunction [DATA_WIDTH-1:0] g2b;\n\tinput [DATA_WIDTH-1:0] g;\n\treg   [DATA_WIDTH-1:0] b;\n\tinteger i;\n"], ["hdl/library/common/sync_gray.v@56:66", "// Whether the input and output clock are asynchronous, if set to 0 the\n// synchronizer will be bypassed and out_count will be in_count.\nparameter CLK_ASYNC = 1;\n\nreg [DATA_WIDTH-1:0] in_count_gray = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m1 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m2 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_m = 'h0;\n\nfunction [DATA_WIDTH-1:0] g2b;\n\tinput [DATA_WIDTH-1:0] g;\n"], ["hdl/library/common/sync_gray.v@55:65", "parameter DATA_WIDTH = 1;\n// Whether the input and output clock are asynchronous, if set to 0 the\n// synchronizer will be bypassed and out_count will be in_count.\nparameter CLK_ASYNC = 1;\n\nreg [DATA_WIDTH-1:0] in_count_gray = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m1 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_gray_m2 = 'h0;\nreg [DATA_WIDTH-1:0] out_count_m = 'h0;\n\nfunction [DATA_WIDTH-1:0] g2b;\n"]], "Diff Content": {"Delete": [[62, "reg [DATA_WIDTH-1:0] out_count_gray_m2 = 'h0;\n"]], "Add": [[62, "reg [DATA_WIDTH-1:0] cdc_sync_stage0 = 'h0;\n"], [62, "reg [DATA_WIDTH-1:0] cdc_sync_stage1 = 'h0;\n"], [62, "reg [DATA_WIDTH-1:0] cdc_sync_stage2 = 'h0;\n"]]}}