{"Source Block": ["hdl/library/common/ad_dds.v@75:132@HdlStmIf", "  end\n\n  genvar i;\n  generate\n\n    if (DISABLE == 1) begin\n      assign dac_dds_data_s = {(DDS_DW*CLK_RATIO-1){1'b0}};\n    end else begin\n\n      // enable dds\n\n      reg  [PHASE_DW-1:0]  dac_dds_phase_0[1:CLK_RATIO];\n      reg  [PHASE_DW-1:0]  dac_dds_phase_1[1:CLK_RATIO];\n      reg  [PHASE_DW-1:0]  dac_dds_incr_0 = 'd0;\n      reg  [PHASE_DW-1:0]  dac_dds_incr_1 = 'd0;\n\n      always @(posedge clk) begin\n        dac_dds_incr_0 <= tone_1_freq_word * CLK_RATIO;\n        dac_dds_incr_1 <= tone_2_freq_word * CLK_RATIO;\n      end\n\n      //  phase accumulator\n      for (i=1; i <= CLK_RATIO; i=i+1) begin: dds_phase\n        always @(posedge clk) begin\n          if (dac_data_sync == 1'b1) begin\n            if (i == 1) begin\n              dac_dds_phase_0[1] <= tone_1_init_offset;\n              dac_dds_phase_1[1] <= tone_2_init_offset;\n            end else if (CLK_RATIO > 1)begin\n              dac_dds_phase_0[i] <= dac_dds_phase_0[i-1] + tone_1_freq_word;\n              dac_dds_phase_1[i] <= dac_dds_phase_1[i-1] + tone_2_freq_word;\n            end\n          end else if (dac_valid == 1'b1) begin\n            dac_dds_phase_0[i] <= dac_dds_phase_0[i] + dac_dds_incr_0;\n            dac_dds_phase_1[i] <= dac_dds_phase_1[i] + dac_dds_incr_1;\n          end\n        end\n\n        // phase to amplitude convertor\n         ad_dds_2 #(\n           .DDS_DW (DDS_DW),\n           .PHASE_DW (PHASE_DW),\n           .DDS_TYPE (DDS_TYPE),\n           .CORDIC_DW (CORDIC_DW),\n           .CORDIC_PHASE_DW (CORDIC_PHASE_DW))\n         i_dds_2 (\n          .clk (clk),\n          .dds_format (dac_dds_format),\n          .dds_phase_0 (dac_dds_phase_0[i]),\n          .dds_scale_0 (tone_1_scale),\n          .dds_phase_1 (dac_dds_phase_1[i]),\n          .dds_scale_1 (tone_2_scale),\n          .dds_data (dac_dds_data_s[(DDS_DW*i)-1:DDS_DW*(i-1)]));\n      end\n    end\n  endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[99, "          if (dac_data_sync == 1'b1) begin\n"], [100, "            if (i == 1) begin\n"], [101, "              dac_dds_phase_0[1] <= tone_1_init_offset;\n"], [102, "              dac_dds_phase_1[1] <= tone_2_init_offset;\n"], [103, "            end else if (CLK_RATIO > 1)begin\n"], [104, "              dac_dds_phase_0[i] <= dac_dds_phase_0[i-1] + tone_1_freq_word;\n"], [105, "              dac_dds_phase_1[i] <= dac_dds_phase_1[i-1] + tone_2_freq_word;\n"], [107, "          end else if (dac_valid == 1'b1) begin\n"], [108, "            dac_dds_phase_0[i] <= dac_dds_phase_0[i] + dac_dds_incr_0;\n"], [109, "            dac_dds_phase_1[i] <= dac_dds_phase_1[i] + dac_dds_incr_1;\n"]], "Add": [[89, "      reg                  sync_min_pulse_m[1:CLK_RATIO];\n"], [89, "      always @(posedge clk) begin\n"], [89, "        dac_data_sync_m <= dac_data_sync;\n"], [89, "        sync_min_pulse_m[1] <= dac_data_sync_m & !dac_data_sync |\n"], [89, "                               sync_min_pulse_m[1] & !sync_min_pulse_m[CLK_RATIO];\n"], [89, "      end\n"], [89, "      for (i=1; i <= CLK_RATIO; i=i+1) begin: sync_delay\n"], [89, "        always @(posedge clk) begin\n"], [89, "          sync_min_pulse_m[i+1] <= sync_min_pulse_m[i];\n"], [89, "        end\n"], [89, "      end\n"], [105, "          if (dac_valid == 1'b1) begin\n"], [105, "            if (dac_data_sync == 1'b1) begin\n"], [105, "              dac_dds_phase_0[i] <= 'd0;\n"], [105, "              dac_dds_phase_1[i] <= 'd0;\n"], [105, "            end else if (sync_min_pulse_m[1] == 1'b1) begin\n"], [105, "              if (i == 1) begin\n"], [105, "                dac_dds_phase_0[1] <= tone_1_init_offset;\n"], [105, "                dac_dds_phase_1[1] <= tone_2_init_offset;\n"], [105, "              end else if (CLK_RATIO > 1)begin\n"], [105, "                dac_dds_phase_0[i] <= dac_dds_phase_0[i-1] + tone_1_freq_word;\n"], [105, "                dac_dds_phase_1[i] <= dac_dds_phase_1[i-1] + tone_2_freq_word;\n"], [105, "              end\n"], [105, "            end else begin\n"], [105, "              dac_dds_phase_0[i] <= dac_dds_phase_0[i] + dac_dds_incr_0;\n"], [105, "              dac_dds_phase_1[i] <= dac_dds_phase_1[i] + dac_dds_incr_1;\n"]]}}