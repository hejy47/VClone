{"Source Block": ["hdl/library/axi_fan_control/axi_fan_control.v@286:479@HdlStmProcess", "  .load_config (pulse_gen_load_config),\n  .pulse (pulse_gen_out)\n);\n\n//state machine\nalways @(posedge up_clk)\n  if (up_resetn == 1'b0) begin\n    tacho_alarm <= 'h0;\n    drp_den_reg <= 'h0;\n    drp_dwe_reg <= 'h0;\n    drp_di <= 'h0;\n    tacho_avg_cnt <= 'h0;\n    tacho_avg_sum <= 'h0;\n    tacho_meas_ack <= 'h0;\n    pulse_gen_load_config <= 'h0;\n    sysmone_temp <= 'h0;\n    pwm_width_req <= 'h0;\n    pwm_width <= 'h0;\n    up_tacho_avg_sum <= 'h0;\n    temp_increase_alarm <= 'h0;\n    tacho_meas_int <= 1'b0;\n    state <= INIT;\n  end else begin\n\n    case (state)\n\n      INIT : begin\n        drp_daddr <= 8'h40;\n        // performing read\n        drp_den_reg <= 2'h2;\n        if (drp_eoc == 1'b1) begin\n          state <= DRP_WAIT_EOC;\n        end\n      end\n\n      DRP_WAIT_EOC : begin\n        if (drp_eoc == 1'b1) begin\n          //Clearing AVG bits for Configreg0\n          drp_di <= drp_do & 16'h03FF;\n          drp_daddr <= 8'h40;\n          drp_den_reg <= 2'h2;\n          // performing write\n          drp_dwe_reg <= 2'h2;\n          state <= DRP_WAIT_DRDY;\n        end else begin\n          drp_den_reg <= {1'b0, drp_den_reg[1]};\n          drp_dwe_reg <= {1'b0, drp_dwe_reg[1]};\n        end\n      end\n\n      DRP_WAIT_DRDY : begin\n        if (drp_drdy == 1'b1) begin\n          state <= DRP_READ_TEMP;\n        end else begin\n          drp_den_reg <= {1'b0, drp_den_reg[1]};\n          drp_dwe_reg <= {1'b0, drp_dwe_reg[1]};\n        end\n      end\n\n      DRP_READ_TEMP : begin\n        tacho_alarm <= 1'b0;\n        tacho_meas_int <= 1'b0;\n        pulse_gen_load_config <= 1'b0;\n        drp_daddr <= 8'h00;\n        // performing read\n        drp_den_reg <= 2'h2;\n        if (drp_eos == 1'b1) begin\n          state <= DRP_READ_TEMP_WAIT_DRDY;\n        end\n      end\n\n      DRP_READ_TEMP_WAIT_DRDY : begin\n        if (drp_drdy == 1'b1) begin\n          sysmone_temp <= drp_do;\n          state <= GET_TACHO;\n        end else begin\n          drp_den_reg <= {1'b0, drp_den_reg[1]};\n          drp_dwe_reg <= {1'b0, drp_dwe_reg[1]};\n        end\n      end\n\n      GET_TACHO : begin\n        //adding up tacho measurements in order to obtain a mean value from 32 samples\n        if ((tacho_avg_cnt == AVERAGE_DIV) || (counter_overflow) || (!pwm_change_done)) begin\n          //once a set measurements has been obtained, reset the values\n          tacho_avg_sum <= 1'b0;\n          tacho_avg_cnt <= 1'b0;\n          tacho_meas_ack <= 1'b0;\n        end else if ((tacho_meas_new) && (pwm_change_done)) begin\n          //tacho_meas_new and tacho_meas_ack ensure the value is read at the right time and only once\n          tacho_avg_sum <= tacho_avg_sum + tacho_meas;\n          tacho_avg_cnt <= tacho_avg_cnt + 1'b1;\n          //acknowledge tha the current values has been added\n          tacho_meas_ack <= 1'b1;\n        end else begin\n          tacho_meas_ack <= 1'b0;\n        end\n        state <= EVAL_TEMP;\n      end\n\n      EVAL_TEMP : begin\n         //pwm section\n        //the pwm only has to be changed when passing through these temperature intervals\n        if (sysmone_temp < THRESH_PWM_000) begin\n          //PWM DUTY should be 0%\n          pwm_width_req <= 1'b0;\n        end else if ((sysmone_temp > THRESH_PWM_025_L) && (sysmone_temp < THRESH_PWM_025_H)) begin\n          //PWM DUTY should be 25%\n          pwm_width_req <= PWM_ONTIME_25;\n        end else if ((sysmone_temp > THRESH_PWM_050_L) && (sysmone_temp < THRESH_PWM_050_H)) begin\n          //PWM DUTY should be 50%\n          pwm_width_req <= PWM_ONTIME_50;\n        end else if ((sysmone_temp > THRESH_PWM_075_L) && (sysmone_temp < THRESH_PWM_075_H)) begin\n          //PWM DUTY should be 75%\n          pwm_width_req <= PWM_ONTIME_75;\n        end else if (sysmone_temp > THRESH_PWM_100) begin\n          //PWM DUTY should be 100%\n          pwm_width_req <= PWM_PERIOD;\n          //default to 100% duty cycle after reset if not within temperature intervals described above\n        end else if ((sysmone_temp != 'h0) && (pwm_width == 'h0)) begin\n          pwm_width_req <= PWM_PERIOD;\n        end else begin\n          //if no changes are needed make sure to mantain current pwm\n          pwm_width_req <= pwm_width;\n        end\n        state <= SET_PWM;\n      end\n\n      SET_PWM : begin\n        if ((up_pwm_width != pwm_width) && (up_pwm_width >= pwm_width_req) && (up_pwm_width <= PWM_PERIOD) && (pwm_change_done)) begin\n          pwm_width <= up_pwm_width;\n          pulse_gen_load_config <= 1'b1;\n          //clear alarm when pwm duty changes\n        end else if ((pwm_width != pwm_width_req) && (pwm_width_req > up_pwm_width) && (pwm_change_done)) begin\n          pwm_width <= pwm_width_req;\n          pulse_gen_load_config <= 1'b1;\n          temp_increase_alarm <= 1'b1;\n          //clear alarm when pwm duty changes\n        end\n        state <= EVAL_TACHO;\n      end\n\n      EVAL_TACHO : begin\n        temp_increase_alarm <= 1'b0;\n        //tacho section\n        //check if the fan is turning then see if it is turning correctly\n        if(counter_overflow & pwm_change_done) begin\n          //if overflow is 1 then the fan is not turning so do something\n          tacho_alarm <= 1'b1;\n        end else if (tacho_avg_cnt == AVERAGE_DIV) begin\n          //check rpm according to the current pwm duty cycle\n          //tacho_alarm is only asserted for certain known pwm duty cycles and\n          //for timeout\n          up_tacho_avg_sum <= tacho_avg_sum [31:7];\n          tacho_meas_int <= 1'b1;\n          if ((pwm_width == PWM_ONTIME_25) && (up_tacho_en == 0)) begin\n            if ((tacho_avg_sum [31:7] > TACHO_T25 + TACHO_T25_TOL) || (tacho_avg_sum [31:7] < TACHO_T25 - TACHO_T25_TOL)) begin\n              //the fan is turning but not as expected\n              tacho_alarm <= 1'b1;\n            end\n          end else if ((pwm_width == PWM_ONTIME_50) && (up_tacho_en == 0)) begin\n            if ((tacho_avg_sum [31:7] > TACHO_T50 + TACHO_T50_TOL) || (tacho_avg_sum [31:7] < TACHO_T50 - TACHO_T50_TOL)) begin\n              //the fan is turning but not as expected\n              tacho_alarm <= 1'b1;\n            end\n          end else if ((pwm_width == PWM_ONTIME_75) && (up_tacho_en == 0)) begin\n            if ((tacho_avg_sum [31:7] > TACHO_T75 + TACHO_T75_TOL) || (tacho_avg_sum [31:7] < TACHO_T75 - TACHO_T75_TOL)) begin\n              //the fan is turning but not as expected\n              tacho_alarm <= 1'b1;\n            end\n          end else if ((pwm_width == PWM_PERIOD) && (up_tacho_en == 0)) begin\n            if ((tacho_avg_sum [31:7] > TACHO_T100 + TACHO_T100_TOL) || (tacho_avg_sum [31:7] < TACHO_T100 - TACHO_T100_TOL)) begin\n              //the fan is turning but not as expected\n              tacho_alarm <= 1'b1;\n            end\n          end else if ((pwm_width == up_pwm_width) && up_tacho_en) begin\n            if ((tacho_avg_sum [31:7] > up_tacho_val + up_tacho_tol) || (tacho_avg_sum [31:7] < up_tacho_val - up_tacho_tol)) begin\n              //the fan is turning but not as expected\n              tacho_alarm <= 1'b1;\n            end\n          end\n        end\n        state <= DRP_READ_TEMP;\n      end\n\n      default :\n        state <= DRP_READ_TEMP;\n    endcase\n  end\n\n//axi registers write\nalways @(posedge up_clk) begin\n  if (s_axi_aresetn == 1'b0) begin\n    up_wack <= 'd0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[313, "        drp_daddr <= 8'h40;\n"], [315, "        drp_den_reg <= 2'h2;\n"], [316, "        if (drp_eoc == 1'b1) begin\n"], [317, "          state <= DRP_WAIT_EOC;\n"], [345, "      DRP_READ_TEMP : begin\n"], [346, "        tacho_alarm <= 1'b0;\n"], [349, "        drp_daddr <= 8'h00;\n"], [351, "        drp_den_reg <= 2'h2;\n"], [352, "        if (drp_eos == 1'b1) begin\n"], [358, "        if (drp_drdy == 1'b1) begin\n"], [359, "          sysmone_temp <= drp_do;\n"], [360, "          state <= GET_TACHO;\n"], [362, "          drp_den_reg <= {1'b0, drp_den_reg[1]};\n"], [363, "          drp_dwe_reg <= {1'b0, drp_dwe_reg[1]};\n"], [389, "        if (sysmone_temp < THRESH_PWM_000) begin\n"], [392, "        end else if ((sysmone_temp > THRESH_PWM_025_L) && (sysmone_temp < THRESH_PWM_025_H)) begin\n"], [395, "        end else if ((sysmone_temp > THRESH_PWM_050_L) && (sysmone_temp < THRESH_PWM_050_H)) begin\n"], [398, "        end else if ((sysmone_temp > THRESH_PWM_075_L) && (sysmone_temp < THRESH_PWM_075_H)) begin\n"], [401, "        end else if (sysmone_temp > THRESH_PWM_100) begin\n"], [439, "          up_tacho_avg_sum <= tacho_avg_sum [31:7];\n"], [442, "            if ((tacho_avg_sum [31:7] > TACHO_T25 + TACHO_T25_TOL) || (tacho_avg_sum [31:7] < TACHO_T25 - TACHO_T25_TOL)) begin\n"], [447, "            if ((tacho_avg_sum [31:7] > TACHO_T50 + TACHO_T50_TOL) || (tacho_avg_sum [31:7] < TACHO_T50 - TACHO_T50_TOL)) begin\n"], [452, "            if ((tacho_avg_sum [31:7] > TACHO_T75 + TACHO_T75_TOL) || (tacho_avg_sum [31:7] < TACHO_T75 - TACHO_T75_TOL)) begin\n"], [457, "            if ((tacho_avg_sum [31:7] > TACHO_T100 + TACHO_T100_TOL) || (tacho_avg_sum [31:7] < TACHO_T100 - TACHO_T100_TOL)) begin\n"], [462, "            if ((tacho_avg_sum [31:7] > up_tacho_val + up_tacho_tol) || (tacho_avg_sum [31:7] < up_tacho_val - up_tacho_tol)) begin\n"], [468, "        state <= DRP_READ_TEMP;\n"], [472, "        state <= DRP_READ_TEMP;\n"]], "Add": [[317, "        if (INTERNAL_SYSMONE == 1) begin\n"], [317, "          drp_daddr <= 8'h40;\n"], [317, "          drp_den_reg <= 2'h2;\n"], [317, "          if (drp_eoc == 1'b1) begin\n"], [317, "            state <= DRP_WAIT_EOC;\n"], [317, "          end\n"], [317, "        end else begin\n"], [317, "          state <= DRP_READ_TEMP;\n"], [346, "      DRP_WAIT_FSM_EN : begin\n"], [347, "        tacho_alarm <= 1'b0;\n"], [352, "        if (presc_reg[15] == 1'b1) begin\n"], [352, "          state <= DRP_READ_TEMP;\n"], [352, "        end\n"], [352, "      end\n"], [352, "      DRP_READ_TEMP : begin\n"], [352, "        if (INTERNAL_SYSMONE == 1) begin\n"], [352, "          drp_daddr <= 8'h00;\n"], [352, "          drp_den_reg <= 2'h2;\n"], [352, "          if (drp_eos == 1'b1) begin\n"], [352, "            state <= DRP_READ_TEMP_WAIT_DRDY;\n"], [352, "          end\n"], [352, "        end else begin\n"], [360, "        if (INTERNAL_SYSMONE == 1) begin\n"], [360, "          if (drp_drdy == 1'b1) begin\n"], [360, "            sysmone_temp <= drp_do;\n"], [360, "            state <= GET_TACHO;\n"], [360, "          end else begin\n"], [360, "            drp_den_reg <= {1'b0, drp_den_reg[1]};\n"], [360, "            drp_dwe_reg <= {1'b0, drp_dwe_reg[1]};\n"], [360, "          end\n"], [363, "          sysmone_temp <= temp_in;\n"], [363, "          state <= GET_TACHO;\n"], [389, "        if (sysmone_temp < up_temp_00_h) begin\n"], [392, "        end else if ((sysmone_temp > up_temp_25_l) && (sysmone_temp < up_temp_25_h)) begin\n"], [395, "        end else if ((sysmone_temp > up_temp_50_l) && (sysmone_temp < up_temp_50_h)) begin\n"], [398, "        end else if ((sysmone_temp > up_temp_75_l) && (sysmone_temp < up_temp_75_h)) begin\n"], [401, "        end else if (sysmone_temp > up_temp_100_l) begin\n"], [439, "          up_tacho_avg_sum <= tacho_avg_sum [AVG_POW + 24 : AVG_POW];\n"], [442, "            if ((tacho_avg_sum [AVG_POW + 24 : AVG_POW] > up_tacho_25 + up_tacho_25_tol) || (tacho_avg_sum [AVG_POW + 24 : AVG_POW] < up_tacho_25 - up_tacho_25_tol)) begin\n"], [447, "            if ((tacho_avg_sum [AVG_POW + 24 : AVG_POW] > up_tacho_50 + up_tacho_50_tol) || (tacho_avg_sum [AVG_POW + 24 : AVG_POW] < up_tacho_50 - up_tacho_50_tol)) begin\n"], [452, "            if ((tacho_avg_sum [AVG_POW + 24 : AVG_POW] > up_tacho_75 + up_tacho_75_tol) || (tacho_avg_sum [AVG_POW + 24 : AVG_POW] < up_tacho_75 - up_tacho_75_tol)) begin\n"], [457, "            if ((tacho_avg_sum [AVG_POW + 24 : AVG_POW] > up_tacho_100 + up_tacho_100_tol) || (tacho_avg_sum [AVG_POW + 24 : AVG_POW] < up_tacho_100 - up_tacho_100_tol)) begin\n"], [462, "            if ((tacho_avg_sum [AVG_POW + 24 : AVG_POW] > up_tacho_val + up_tacho_tol) || (tacho_avg_sum [AVG_POW + 24 : AVG_POW] < up_tacho_val - up_tacho_tol)) begin\n"], [468, "        state <= DRP_WAIT_FSM_EN;\n"], [472, "        state <= DRP_WAIT_FSM_EN;\n"]]}}