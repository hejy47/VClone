Source Block: hdl/library/util_var_fifo/util_var_fifo.v@79:89@HdlStmAssign

  wire                    reset;
  wire  [DATA_WIDTH-1:0]  data_out_s;
  wire                    data_out_valid_s;

  assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;

  assign data_out = fifo_active ? data_out_s : data_in_d2;
  assign data_out_valid_s = data_active & data_in_valid;
  assign data_out_valid = fifo_active ? data_out_valid_s : data_in_valid;


Diff Content:
- 84   assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;
+ 84   assign reset = ((rst == 1'b1) || (depth != depth_d1) || (interpolation_on != interpolation_on_d1) || (interpolation_by_2 != interpolation_by_2_d1)) ? 1 : 0;

Clone Blocks:
Clone Blocks 1:
hdl/library/util_var_fifo/util_var_fifo.v@81:91
  wire  [DATA_WIDTH-1:0]  data_out_s;
  wire                    data_out_valid_s;

  assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;

  assign data_out = fifo_active ? data_out_s : data_in_d2;
  assign data_out_valid_s = data_active & data_in_valid;
  assign data_out_valid = fifo_active ? data_out_valid_s : data_in_valid;

  assign wea_w = data_in_valid & fifo_active;
  assign en_w = fifo_active;

Clone Blocks 2:
hdl/library/util_var_fifo/util_var_fifo.v@76:86
  reg                   fifo_active = 'd0;

  // internal signals

  wire                    reset;
  wire  [DATA_WIDTH-1:0]  data_out_s;
  wire                    data_out_valid_s;

  assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;

  assign data_out = fifo_active ? data_out_s : data_in_d2;

Clone Blocks 3:
hdl/library/util_var_fifo/util_var_fifo.v@77:87

  // internal signals

  wire                    reset;
  wire  [DATA_WIDTH-1:0]  data_out_s;
  wire                    data_out_valid_s;

  assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;

  assign data_out = fifo_active ? data_out_s : data_in_d2;
  assign data_out_valid_s = data_active & data_in_valid;

Clone Blocks 4:
hdl/library/util_var_fifo/util_var_fifo.v@82:92
  wire                    data_out_valid_s;

  assign reset = ((rst == 1'b1) || (depth != depth_d1)) ? 1 : 0;

  assign data_out = fifo_active ? data_out_s : data_in_d2;
  assign data_out_valid_s = data_active & data_in_valid;
  assign data_out_valid = fifo_active ? data_out_valid_s : data_in_valid;

  assign wea_w = data_in_valid & fifo_active;
  assign en_w = fifo_active;
  assign addr_w = addra;

