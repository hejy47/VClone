{"Source Block": ["hdl/library/util_var_fifo/util_var_fifo.v@91:101@HdlStmAssign", "  assign en_w = fifo_active;\n  assign addr_w = addra;\n  assign din_w = data_in;\n  assign en_r = fifo_active;\n  assign addr_r = addrb;\n  assign data_out_s = dout_r;\n\n  always @(posedge clk) begin\n    depth_d1 <= depth;\n    if (depth == 32'h0) begin\n      fifo_active <= 0;\n"], "Clone Blocks": [["hdl/library/util_var_fifo/util_var_fifo.v@90:100", "  assign wea_w = data_in_valid & fifo_active;\n  assign en_w = fifo_active;\n  assign addr_w = addra;\n  assign din_w = data_in;\n  assign en_r = fifo_active;\n  assign addr_r = addrb;\n  assign data_out_s = dout_r;\n\n  always @(posedge clk) begin\n    depth_d1 <= depth;\n    if (depth == 32'h0) begin\n"], ["hdl/library/util_var_fifo/util_var_fifo.v@88:98", "  assign data_out_valid = fifo_active ? data_out_valid_s : data_in_valid;\n\n  assign wea_w = data_in_valid & fifo_active;\n  assign en_w = fifo_active;\n  assign addr_w = addra;\n  assign din_w = data_in;\n  assign en_r = fifo_active;\n  assign addr_r = addrb;\n  assign data_out_s = dout_r;\n\n  always @(posedge clk) begin\n"], ["hdl/library/util_var_fifo/util_var_fifo.v@89:99", "\n  assign wea_w = data_in_valid & fifo_active;\n  assign en_w = fifo_active;\n  assign addr_w = addra;\n  assign din_w = data_in;\n  assign en_r = fifo_active;\n  assign addr_r = addrb;\n  assign data_out_s = dout_r;\n\n  always @(posedge clk) begin\n    depth_d1 <= depth;\n"]], "Diff Content": {"Delete": [[96, "  assign data_out_s = dout_r;\n"]], "Add": [[96, "  assign data_out_s = interpolation_on ? (interpolation_by_2 ? data_out_d2 : data_out_d3) : dout_r;\n"], [96, "  always @(posedge clk) begin\n"], [96, "    data_in_valid_d1 <= data_in_valid;\n"], [96, "    data_in_valid_d2 <= data_in_valid_d1;\n"], [96, "    interpolation_on_d1 = interpolation_on;\n"], [96, "    interpolation_by_2_d1 = interpolation_by_2;\n"], [96, "    if  (data_in_valid == 1'b1) begin\n"], [96, "      if (data_in_valid_d1 == 1'b1) begin\n"], [96, "        interpolation_on <= 1'b0;\n"], [96, "      end else begin\n"], [96, "        interpolation_on <= 1'b1;\n"], [96, "        if (data_in_valid_d2 == 1'b1) begin\n"], [96, "          interpolation_by_2 <= 1'b1;\n"], [96, "        end else begin\n"], [96, "          interpolation_by_2 <= 1'b0;\n"], [96, "        end\n"], [96, "      end\n"], [96, "    end\n"], [96, "    if(data_out_valid == 1'b1) begin\n"], [96, "      data_out_d1 <= dout_r;\n"], [96, "      data_out_d2 <= data_out_d1;\n"], [96, "      data_out_d3 <= data_out_d2;\n"], [96, "    end\n"], [96, "  end\n"]]}}