{"Source Block": ["miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@364:428@HdlStmProcess", "\t// These registers are cleared when reset (active low) is applied.\n\t// Slave register write enable is asserted when valid address and data are available\n\t// and the slave is ready to accept the write address and write data.\n\tassign slv_reg_wren = axi_wready && S_AXI_WVALID && axi_awready && S_AXI_AWVALID;\n\n\talways @( posedge S_AXI_ACLK )\n    begin\n      if ( S_AXI_ARESETN == 1'b0 )\n      begin\n        waveID    <= 32'd0;\n        baseVGPR  <= 32'd0;\n        baseSGPR  <= 32'd0;\n        baseLDS   <= 32'd0;\n        waveCount <= 32'd0;\n\n        resultsReadyTag <= 32'd0;\n        \n        slv_reg_wren_buffer <= 1'b0;\n      end\n      else begin\n        slv_reg_wren_buffer <= slv_reg_wren;\n        if(cu2dispatch_wf_done_in) begin\n          resultsReadyTag <= resultsReadyTag_in;\n        end\n        if (slv_reg_wren)\n          begin\n            case ( axi_awaddr[ADDR_LSB+OPT_MEM_ADDR_BITS:ADDR_LSB] )\n              // 7'h00: Start command initiate program\n              7'h01: waveID       <= S_AXI_WDATA;\n              7'h02: baseVGPR     <= S_AXI_WDATA;\n              7'h03: baseSGPR     <= S_AXI_WDATA;\n              7'h04: baseLDS      <= S_AXI_WDATA;\n              7'h05: waveCount    <= S_AXI_WDATA;\n              7'h06: pcStart      <= S_AXI_WDATA;\n              7'h07: instrAddrReg <= S_AXI_WDATA;\n              // 7'h08: Instruction value\n              // 7'h09: Unused\n              // 7'h0A: GPR command register\n              7'h0B: quadBaseAddress <= S_AXI_WDATA[9:0];\n              7'h0C: quadData0 <= S_AXI_WDATA;\n              7'h0D: quadData1 <= S_AXI_WDATA;\n              7'h0E: quadData2 <= S_AXI_WDATA;\n              7'h0F: quadData3 <= S_AXI_WDATA;\n              \n              7'h30: mb2fpgamem_data_in_reg <= S_AXI_WDATA;\n              7'h31: mb2fpgamem_data_we_reg <= S_AXI_WDATA[0];\n              7'h32: mb2fpgamem_ack_reg <= S_AXI_WDATA[0];\n              7'h33: mb2fpgamem_done_reg <= S_AXI_WDATA[0];\n              default:\n              begin\n                waveID    <= waveID;\n                baseVGPR  <= baseVGPR;\n                baseSGPR  <= baseSGPR;\n                baseLDS   <= baseLDS;\n                waveCount <= waveCount;\n              end\n            endcase\n          end\n      end\n    end\n\n\t// Implement write response logic generation\n\t// The write response and response valid signals are asserted by the slave\n\t// when axi_wready, S_AXI_WVALID, axi_wready and S_AXI_WVALID are asserted.\n\t// This marks the acceptance of address and indicates the status of\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[384, "        slv_reg_wren_buffer <= slv_reg_wren;\n"], [385, "        if(cu2dispatch_wf_done_in) begin\n"], [386, "          resultsReadyTag <= resultsReadyTag_in;\n"], [387, "        end\n"]], "Add": [[387, "      \tif( mb_reset == 1'b0)\n"], [387, "            begin\n"], [387, "              waveID    <= 32'd0;\n"], [387, "              baseVGPR  <= 32'd0;\n"], [387, "              baseSGPR  <= 32'd0;\n"], [387, "              baseLDS   <= 32'd0;\n"], [387, "              waveCount <= 32'd0;\n"], [387, "              resultsReadyTag <= 32'd0;\n"], [387, "              slv_reg_wren_buffer <= 1'b0;\n"], [387, "            end\n"], [387, "        else\n"], [387, "          begin\n"], [387, "              slv_reg_wren_buffer <= slv_reg_wren;\n"], [387, "              if(cu2dispatch_wf_done_in) begin\n"], [387, "                resultsReadyTag <= resultsReadyTag_in;\n"], [387, "              end\n"], [387, "          end\n"], [398, "              7'h09: mb_reset <= ~S_AXI_WDATA[0];\n"], [411, "              7'h34: singleVectorBaseAddress <= S_AXI_WDATA[9:0];\n"]]}}