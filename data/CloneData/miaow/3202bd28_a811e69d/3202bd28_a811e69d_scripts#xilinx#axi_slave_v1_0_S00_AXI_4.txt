Source Block: miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@204:214@HdlStmAssign
assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;

assign execute_out = execute;
assign executeStart_out = executeStart;

assign instrBuffWrEn_out = instrBuffWrEn;

Diff Content:
+ 209 assign singleVectorBaseAddress_out = singleVectorBaseAddress;
+ 209 assign singleVectorWrData_out = {
+ 209             singleVectorWrData63, singleVectorWrData62, singleVectorWrData61, singleVectorWrData60, singleVectorWrData59, singleVectorWrData58,
+ 209             singleVectorWrData57, singleVectorWrData56, singleVectorWrData55, singleVectorWrData54, singleVectorWrData53, singleVectorWrData52,
+ 209             singleVectorWrData51, singleVectorWrData50, singleVectorWrData49, singleVectorWrData48, singleVectorWrData47, singleVectorWrData46,
+ 209             singleVectorWrData45, singleVectorWrData44, singleVectorWrData43, singleVectorWrData42, singleVectorWrData41, singleVectorWrData40,
+ 209             singleVectorWrData39, singleVectorWrData38, singleVectorWrData37, singleVectorWrData36, singleVectorWrData35, singleVectorWrData34,
+ 209             singleVectorWrData33, singleVectorWrData32, singleVectorWrData31, singleVectorWrData30, singleVectorWrData29, singleVectorWrData28,
+ 209             singleVectorWrData27, singleVectorWrData26, singleVectorWrData25, singleVectorWrData24, singleVectorWrData23, singleVectorWrData22,
+ 209             singleVectorWrData21, singleVectorWrData20, singleVectorWrData19, singleVectorWrData18, singleVectorWrData17, singleVectorWrData16,
+ 209             singleVectorWrData15, singleVectorWrData14, singleVectorWrData13, singleVectorWrData12, singleVectorWrData11, singleVectorWrData10,
+ 209             singleVectorWrData9,  singleVectorWrData8,  singleVectorWrData7,  singleVectorWrData6,  singleVectorWrData5,  singleVectorWrData4,
+ 209             singleVectorWrData3,  singleVectorWrData2,  singleVectorWrData1,  singleVectorWrData0
+ 209            }; 
+ 209 assign singleVectorWrDataMask_out = singleVectorWrDataMask;
+ 209 assign singleVectorWrEn_out = singleVectorWrEn_reg;

Clone Blocks:
Clone Blocks 1:
miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@203:213

assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;

assign execute_out = execute;
assign executeStart_out = executeStart;


Clone Blocks 2:
miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@199:209
assign baseLDS_out = baseLDS;
assign waveCount_out = waveCount;
assign pcStart_out = pcStart;
assign instrAddrReg_out = instrAddrReg;

assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;

Clone Blocks 3:
miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@201:211
assign pcStart_out = pcStart;
assign instrAddrReg_out = instrAddrReg;

assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;

assign execute_out = execute;

Clone Blocks 4:
miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@200:210
assign waveCount_out = waveCount;
assign pcStart_out = pcStart;
assign instrAddrReg_out = instrAddrReg;

assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;


Clone Blocks 5:
miaow/scripts/xilinx/axi_slave_v1_0_S00_AXI.v@202:212
assign instrAddrReg_out = instrAddrReg;

assign quadBaseAddress_out = quadBaseAddress;
assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
assign quadData0_out = quadData0;
assign quadData1_out = quadData1;
assign quadData2_out = quadData2;
assign quadData3_out = quadData3;

assign execute_out = execute;
assign executeStart_out = executeStart;

