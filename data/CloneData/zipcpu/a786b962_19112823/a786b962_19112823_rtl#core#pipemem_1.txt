Source Block: zipcpu/rtl/core/pipemem.v@99:109@HdlIdDef

	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;


Diff Content:
- 104 	reg	[(4+5-1):0]	fifo_oreg [0:15];
+ 104 	reg	[(3+5-1):0]	fifo_oreg [0:15];
+ 104 	reg			fifo_gie;

Clone Blocks:
Clone Blocks 1:
zipcpu/rtl/core/pipemem.v@97:107
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;


Clone Blocks 2:
zipcpu/rtl/core/pipemem.v@98:108


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

Clone Blocks 3:
zipcpu/rtl/core/pipemem.v@98:108


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

Clone Blocks 4:
zipcpu/rtl/core/pipemem.v@96:106
	output	reg	f_pc;
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

Clone Blocks 5:
zipcpu/rtl/core/pipemem.v@97:107
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;


Clone Blocks 6:
zipcpu/rtl/core/pipemem.v@100:110
	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

	always	@(*)

Clone Blocks 7:
zipcpu/rtl/core/pipemem.v@103:113
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

	always	@(*)
	if (OPT_ALIGNMENT_ERR)
	begin
		casez({ i_op[2:1], i_addr[1:0] })

Clone Blocks 8:
zipcpu/rtl/core/pipemem.v@96:106
	output	reg	f_pc;
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

Clone Blocks 9:
zipcpu/rtl/core/pipemem.v@100:110
	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

	always	@(*)

Clone Blocks 10:
zipcpu/rtl/core/pipemem.v@95:105
	output	wire	[(F_LGDEPTH-1):0]	f_nreqs, f_nacks, f_outstanding;
	output	reg	f_pc;
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;

Clone Blocks 11:
zipcpu/rtl/core/pipemem.v@101:111
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

	always	@(*)
	if (OPT_ALIGNMENT_ERR)

Clone Blocks 12:
zipcpu/rtl/core/pipemem.v@101:111
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

	reg	misaligned;

	always	@(*)
	if (OPT_ALIGNMENT_ERR)

Clone Blocks 13:
zipcpu/rtl/core/pipemem.v@96:106
	output	reg	f_pc;
`endif


	reg			cyc;
	reg			r_wb_cyc_gbl, r_wb_cyc_lcl, fifo_full;
	reg	[(FLN-1):0]		rdaddr, wraddr;
	wire	[(FLN-1):0]		nxt_rdaddr, fifo_fill;
	reg	[(4+5-1):0]	fifo_oreg [0:15];
	initial	rdaddr = 0;
	initial	wraddr = 0;

