{"Source Block": ["zipcpu/rtl/aux/fwb_master.v@326:347@HdlStmProcess", "\t\t\tassume(f_nacks <= f_nreqs);\n\t\t\tassert(f_outstanding < (1<<F_LGDEPTH)-1);\n\t\tend else\n\t\t\tassume(f_outstanding < (1<<F_LGDEPTH)-1);\n\n\talways @(posedge i_clk)\n\t\tif ((i_wb_cyc)&&(f_outstanding == 0))\n\t\tbegin\n\t\t\t// If nothing is outstanding, then there should be\n\t\t\t// no acknowledgements ... however, an acknowledgement\n\t\t\t// *can* come back on the same clock as the stb is\n\t\t\t// going out.\n\t\t\tassume((!i_wb_ack)||((i_wb_stb)&&(!i_wb_stall)));\n\t\t\t// The same is true of errors.  They may not be\n\t\t\t// created before the request gets through\n\t\t\tassume((!i_wb_err)||((i_wb_stb)&&(!i_wb_stall)));\n\t\tend\n\n\tgenerate if (F_OPT_SOURCE)\n\tbegin : SRC\n\t\t// Any opening bus request starts with both CYC and STB high\n\t\t// This is true for the master only, and more specifically\n"], "Clone Blocks": [["zipcpu/rtl/aux/fwb_slave.v@316:337", "\t\t\tassert(f_nacks <= f_nreqs);\n\t\t\tassert(f_outstanding < (1<<F_LGDEPTH)-1);\n\t\tend else\n\t\t\tassert(f_outstanding < (1<<F_LGDEPTH)-1);\n\n\talways @(posedge i_clk)\n\t\tif ((i_wb_cyc)&&(f_outstanding == 0))\n\t\tbegin\n\t\t\t// If nothing is outstanding, then there should be\n\t\t\t// no acknowledgements ... however, an acknowledgement\n\t\t\t// *can* come back on the same clock as the stb is\n\t\t\t// going out.\n\t\t\tassert((!i_wb_ack)||((i_wb_stb)&&(!i_wb_stall)));\n\t\t\t// The same is true of errors.  They may not be\n\t\t\t// created before the request gets through\n\t\t\tassert((!i_wb_err)||((i_wb_stb)&&(!i_wb_stall)));\n\t\tend\n\n\tgenerate if (!F_OPT_RMW_BUS_OPTION)\n\tbegin\n\t\t// If we aren't waiting for anything, and we aren't issuing\n\t\t// any requests, then then our transaction is over and we\n"]], "Diff Content": {"Delete": [[338, "\t\t\tassume((!i_wb_ack)||((i_wb_stb)&&(!i_wb_stall)));\n"], [341, "\t\t\tassume((!i_wb_err)||((i_wb_stb)&&(!i_wb_stall)));\n"]], "Add": [[341, "\t\t\tif (F_OPT_MINCLOCK_DELAY)\n"], [341, "\t\t\tbegin\n"], [341, "\t\t\t\tassume(!i_wb_ack);\n"], [341, "\t\t\t\tassume(!i_wb_err);\n"], [341, "\t\t\tend else begin\n"], [341, "\t\t\t\tassume((!i_wb_ack)||((i_wb_stb)&&(!i_wb_stall)));\n"], [341, "\t\t\t\tassume((!i_wb_err)||((i_wb_stb)&&(!i_wb_stall)));\n"], [341, "\t\t\tend\n"]]}}