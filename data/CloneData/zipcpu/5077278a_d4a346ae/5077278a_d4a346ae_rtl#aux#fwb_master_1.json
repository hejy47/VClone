{"Source Block": ["zipcpu/rtl/aux/fwb_master.v@135:147@HdlStmProcess", "\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassume(i_reset);\n\t//\n\t//\n\t// Assertions regarding the initial (and reset) state\n\t//\n\t//\n"], "Clone Blocks": [["zipcpu/rtl/aux/fwb_master.v@132:142", "\n\t//\n\t// A quick register to be used later to know if the $past() operator\n\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassume(i_reset);\n"], ["zipcpu/rtl/aux/fwb_slave.v@125:135", "\n\t//\n\t// A quick register to be used later to know if the $past() operator\n\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassert(i_reset);\n"], ["zipcpu/rtl/aux/fwb_master.v@133:144", "\t//\n\t// A quick register to be used later to know if the $past() operator\n\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassume(i_reset);\n\t//\n\t//\n"], ["zipcpu/rtl/aux/fwb_slave.v@128:140", "\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassert(i_reset);\n\t//\n\t//\n\t// Assertions regarding the initial (and reset) state\n\t//\n\t//\n"], ["zipcpu/rtl/aux/fwb_slave.v@126:137", "\t//\n\t// A quick register to be used later to know if the $past() operator\n\t// will yield valid result\n\treg\tf_past_valid;\n\tinitial\tf_past_valid = 1'b0;\n\talways @(posedge i_clk)\n\t\tf_past_valid <= 1'b1;\n\talways @(*)\n\t\tif (!f_past_valid)\n\t\t\tassert(i_reset);\n\t//\n\t//\n"]], "Diff Content": {"Delete": [[142, "\t\t\tassume(i_reset);\n"]], "Add": [[142, "\t\t\tassert(i_reset);\n"]]}}