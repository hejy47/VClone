{"Source Block": ["zipcpu/rtl/core/idecode.v@634:722@HdlStmIf", "\t//\t\tby one\n\t// Note that we're not using iword here ... there's a lot of logic\n\t// taking place, and it's only valid if the new word is not compressed.\n\t//\n\treg\tr_valid;\n\tgenerate if (OPT_OPIPE)\n\tbegin : GEN_OPIPE\n\t\treg\tr_pipe;\n\n\t\twire\t[13:0]\tpipe_addr_diff;\n\t\tassign\t\tpipe_addr_diff = w_I[13:0] - r_I[13:0];\n\n\t\t// Pipeline logic is too extreme for a single clock.\n\t\t// Let's break it into two clocks, using r_insn_is_pipeable\n\t\t// If this function is true, then the instruction associated\n\t\t// with the current output *may* have a pipeable instruction\n\t\t// following it.\n\t\t// \n\t\treg\tr_insn_is_pipeable;\n\t\tinitial\tr_insn_is_pipeable = 1'b0;\n\t\talways @(posedge i_clk)\n\t\tif (i_reset)\n\t\t\tr_insn_is_pipeable <= 1'b0;\n\t\telse if ((i_ce)&&(!pf_valid)&&(!o_phase))\n\t\t\t// Pipeline bubble, can't pipe through it\n\t\t\tr_insn_is_pipeable <= 1'b0;\n\t\telse if (i_ce)\n\t\tbegin\t// This is a valid instruction\n\t\t\tr_insn_is_pipeable <= (w_mem)&&(w_rB)\n\t\t\t\t// PC (and CC) registers can change\n\t\t\t\t// underneath us.  Therefore they cannot\n\t\t\t\t// be used as a base register for piped\n\t\t\t\t// memory ops\n\t\t\t\t&&(w_dcdB[3:1] != 3'h7)\n\t\t\t\t// Writes to PC or CC will destroy any\n\t\t\t\t// possibility of pipeing--since they\n\t\t\t\t// could create a jump\n\t\t\t\t&&(w_dcdR[3:1] != 3'h7)\n\t\t\t\t//\n\t\t\t\t// Loads landing in the current address\n\t\t\t\t// pointer register are not allowed,\n\t\t\t\t// as they could then be used to violate\n\t\t\t\t// our rule(s)\n\t\t\t\t&&((w_cis_op[0])||(w_dcdB != w_dcdA));\n\t\tend // else\n\t\t\t// The pipeline is stalled\n\t\t\n\n\t\tinitial\tr_pipe = 1'b0;\n\t\talways @(posedge i_clk)\n\t\tif (i_reset)\n\t\t\tr_pipe <= 1'b0;\n\t\telse if (i_ce)\n\t\t\tr_pipe <= ((pf_valid)||(o_phase))\n\t\t\t\t// The last operation must be capable of\n\t\t\t\t// being followed by a pipeable memory op\n\t\t\t\t&&(r_insn_is_pipeable)\n\t\t\t\t// Both must be memory operations\n\t\t\t\t&&(w_mem)\n\t\t\t\t// Both must be writes, or both stores\n\t\t\t\t&&(o_op[0] == w_cis_op[0])\n\t\t\t\t// Both must be register ops\n\t\t\t\t&&(w_rB)\n\t\t\t\t// Both must use the same register for B\n\t\t\t\t&&(w_dcdB[3:0] == o_dcdB[3:0])\n\t\t\t\t// CC or PC registers are not valid addresses\n\t\t\t\t//   Captured above\n\t\t\t\t// But ... the result can never be B\n\t\t\t\t//   Captured above\n\t\t\t\t//\n\t\t\t\t// Reads to CC or PC not allowed\n\t\t\t\t// &&((o_op[0])||(w_dcdR[3:1] != 3'h7))\n\t\t\t\t// Prior-reads to CC or PC not allowed\n\t\t\t\t//   Captured above\n\t\t\t\t// Same condition, or no condition before\n\t\t\t\t&&((w_cond[2:0]==o_cond[2:0])\n\t\t\t\t\t||(o_cond[2:0] == 3'h0))\n\t\t\t\t// Same or incrementing immediate\n\t\t\t\t&&(w_I[13]==r_I[13])\n\t\t\t\t&&(pipe_addr_diff <= 14'h4);\n\t\tassign o_pipe = r_pipe;\n\tend else begin\n\t\tassign o_pipe = 1'b0;\n\tend endgenerate\n\n\tinitial\tr_valid = 1'b0;\n\tgenerate if (OPT_PIPELINED)\n\tbegin : GEN_DCD_VALID\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[652, "\t\treg\tr_insn_is_pipeable;\n"], [657, "\t\telse if ((i_ce)&&(!pf_valid)&&(!o_phase))\n"]], "Add": [[657, "\t\telse if ((i_ce)&&((!pf_valid)||(i_illegal))&&(!o_phase))\n"], [659, "\t\telse if (o_ljmp)\n"], [659, "\t\t\tr_insn_is_pipeable <= 1'b0;\n"], [659, "\t\telse if ((i_ce)&&((!OPT_CIS)&&(i_instruction[`CISBIT])))\n"], [659, "\t\t\tr_insn_is_pipeable <= 1'b0;\n"], [716, "\t\talways @(*)\n"], [716, "\t\t\tr_insn_is_pipeable = 1'b0;\n"]]}}