{"Source Block": ["zipcpu/rtl/peripherals/ziptimer.v@164:172@HdlStmAssign", "\tendgenerate\n\n\t// Make verilator happy\n\t// verilator lint_off UNUSED\n\twire\t[32:0]\tunused;\n\tassign\tunused = { i_wb_cyc, i_wb_data };\n\t// verilator lint_on  UNUSED\n\nendmodule\n"], "Clone Blocks": [["zipcpu/rtl/peripherals/zipcounter.v@85:94", "\tassign\to_wb_stall = 1'b0;\n\n\n\t// Make verilator happy\n\t// verilator lint_off UNUSED\n\twire\tunused;\n\tassign\tunused = i_wb_cyc;\n\t// verilator lint_on  UNUSED\n\nendmodule\n"], ["zipcpu/rtl/peripherals/ziptimer.v@163:172", "\t\tassign\to_wb_data = { auto_reload, r_value };\n\tendgenerate\n\n\t// Make verilator happy\n\t// verilator lint_off UNUSED\n\twire\t[32:0]\tunused;\n\tassign\tunused = { i_wb_cyc, i_wb_data };\n\t// verilator lint_on  UNUSED\n\nendmodule\n"]], "Diff Content": {"Delete": [], "Add": [[169, "`ifdef\tFORMAL\n"], [169, "\talways @(*)\n"], [169, "\t\tif (r_value != 0)\n"], [169, "\t\t\tassert(r_running);\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset)))\n"], [169, "\tbegin\n"], [169, "\t\tif ((!$past(wb_write))&&($past(i_ce)))\n"], [169, "\t\t\tassert(o_int == ((r_running)&&(r_value == 0)));\n"], [169, "\t\telse\n"], [169, "\t\t\tassert(!o_int);\n"], [169, "\tend\n"], [169, "\treg\tf_past_valid;\n"], [169, "\tinitial\tf_past_valid = 1'b0;\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\t\tf_past_valid <= 1'b1;\n"], [169, "\tinitial\tassume(i_reset);\n"], [169, "\talways @(*)\n"], [169, "\t\tif (!f_past_valid)\n"], [169, "\t\t\tassume(i_reset);\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&($past(i_reset)))\n"], [169, "\tbegin\n"], [169, "\t\tassert(r_value     == 0);\n"], [169, "\t\tassert(auto_reload == 0);\n"], [169, "\t\tassert(r_running   == 0);\n"], [169, "\tend\n"], [169, "\talways @(*)\n"], [169, "\t\tif (auto_reload)\n"], [169, "\t\t\tassert(reload_value != 0);\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset))\n"], [169, "\t\t\t&&(!$past(wb_write))&&($past(r_value)==0)\n"], [169, "\t\t\t&&(!$past(auto_reload)))\n"], [169, "\t\tassert(r_value == 0);\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset))\n"], [169, "\t\t\t&&(!$past(wb_write))&&($past(r_value)==0)\n"], [169, "\t\t\t&&($past(auto_reload)))\n"], [169, "\tbegin\n"], [169, "\t\tif ($past(i_ce))\n"], [169, "\t\t\tassert(r_value == reload_value);\n"], [169, "\t\telse\n"], [169, "\t\t\tassert(r_value == $past(r_value));\n"], [169, "\tend\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset))\n"], [169, "\t\t\t&&(!$past(wb_write))&&($past(r_value)!=0))\n"], [169, "\tbegin\n"], [169, "\t\tif ($past(i_ce))\n"], [169, "\t\t\tassert(r_value == $past(r_value)-1'b1);\n"], [169, "\t\telse\n"], [169, "\t\t\tassert(r_value == $past(r_value));\n"], [169, "\tend\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\t\tassert(r_zero == (r_value == 0));\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset))&&($past(wb_write)))\n"], [169, "\t\tassert(r_value == $past(i_wb_data[(VW-1):0]));\n"], [169, "\talways @(posedge i_clk)\n"], [169, "\tif ((f_past_valid)&&(!$past(i_reset))&&($past(wb_write))&&(RELOADABLE)\n"], [169, "\t\t&&(|$past(i_wb_data[(VW-1):0])))\n"], [169, "\t\tassert(auto_reload == $past(i_wb_data[(BW-1)]));\n"], [169, "\talways @(*)\n"], [169, "\t\tif (auto_reload)\n"], [169, "\t\t\tassert(reload_value != 0);\n"], [169, "\talways @(*)\n"], [169, "\t\tif (!RELOADABLE)\n"], [169, "\t\t\tassert(auto_reload == 0);\n"], [169, "\talways @(*)\n"], [169, "\t\tif (auto_reload)\n"], [169, "\t\t\tassert(r_running);\n"], [169, "`endif\n"]]}}