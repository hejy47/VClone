Source Block: zipcpu/bench/formal/abs_div.v@117:127@HdlStmAssign
	(* anyseq *)	reg			any_err;
	(* anyseq *)	reg	[(BW-1):0]	any_quotient;
	(* anyseq *)	reg	[5:0]		wait_time;

	assign o_err      = any_err;
	assign o_quotient = any_quotient;

	reg	[5:0]	r_busy_counter;

	always @(*)
		assume(wait_time > 5'h1);

Diff Content:
- 122 	assign o_quotient = any_quotient;
+ 122 	always @(*)
+ 122 		o_err      = any_err;
+ 122 	always @(*)
+ 122 		o_quotient = any_quotient;

Clone Blocks:
Clone Blocks 1:
zipcpu/bench/formal/abs_div.v@114:124
	output	reg [(BW-1):0]	o_quotient;
	output	wire	[3:0]	o_flags;

	(* anyseq *)	reg			any_err;
	(* anyseq *)	reg	[(BW-1):0]	any_quotient;
	(* anyseq *)	reg	[5:0]		wait_time;

	assign o_err      = any_err;
	assign o_quotient = any_quotient;

	reg	[5:0]	r_busy_counter;

Clone Blocks 2:
zipcpu/bench/formal/abs_div.v@113:123
	output	reg		o_valid, o_err;
	output	reg [(BW-1):0]	o_quotient;
	output	wire	[3:0]	o_flags;

	(* anyseq *)	reg			any_err;
	(* anyseq *)	reg	[(BW-1):0]	any_quotient;
	(* anyseq *)	reg	[5:0]		wait_time;

	assign o_err      = any_err;
	assign o_quotient = any_quotient;


Clone Blocks 3:
zipcpu/bench/formal/abs_div.v@116:126

	(* anyseq *)	reg			any_err;
	(* anyseq *)	reg	[(BW-1):0]	any_quotient;
	(* anyseq *)	reg	[5:0]		wait_time;

	assign o_err      = any_err;
	assign o_quotient = any_quotient;

	reg	[5:0]	r_busy_counter;

	always @(*)

