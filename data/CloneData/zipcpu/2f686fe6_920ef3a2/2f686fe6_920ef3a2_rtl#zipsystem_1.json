{"Source Block": ["zipcpu/rtl/zipsystem.v@326:336@HdlStmAssign", "\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n\t\tcmd_reset <= ((dbg_cmd_write)&&(dbg_idata[6]));\n\t//\n"], "Clone Blocks": [["zipcpu/rtl/zipsystem.v@324:334", "\t// the CPU if not halted), then read/write the data from the data\n\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n"], ["zipcpu/rtl/zipsystem.v@323:333", "\t// two accesses: write the address to the control register (and halt\n\t// the CPU if not halted), then read/write the data from the data\n\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n"], ["zipcpu/rtl/zipsystem.v@325:335", "\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n\t\tcmd_reset <= ((dbg_cmd_write)&&(dbg_idata[6]));\n"], ["zipcpu/rtl/zipbones.v@142:152", "\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[4:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_stb)&&(dbg_we)&&(!dbg_addr);\n\t//\n\t// Always start us off with an initial reset\n\t//\n\tinitial\tcmd_reset = 1'b1;\n"], ["zipcpu/rtl/zipsystem.v@323:333", "\t// two accesses: write the address to the control register (and halt\n\t// the CPU if not halted), then read/write the data from the data\n\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n"], ["zipcpu/rtl/zipbones.v@143:153", "\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[4:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_stb)&&(dbg_we)&&(!dbg_addr);\n\t//\n\t// Always start us off with an initial reset\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n"], ["zipcpu/rtl/zipsystem.v@328:338", "\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n\t\tcmd_reset <= ((dbg_cmd_write)&&(dbg_idata[6]));\n\t//\n\tinitial\tcmd_halt  = START_HALTED;\n\talways @(posedge i_clk)\n"], ["zipcpu/rtl/zipsystem.v@323:333", "\t// two accesses: write the address to the control register (and halt\n\t// the CPU if not halted), then read/write the data from the data\n\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n"], ["zipcpu/rtl/zipsystem.v@323:333", "\t// two accesses: write the address to the control register (and halt\n\t// the CPU if not halted), then read/write the data from the data\n\t// register.\n\t//\n\twire\t\tcpu_break, dbg_cmd_write;\n\treg\t\tcmd_reset, cmd_halt, cmd_step, cmd_clear_pf_cache;\n\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n"], ["zipcpu/rtl/zipsystem.v@329:340", "\treg\t[5:0]\tcmd_addr;\n\twire\t[3:0]\tcpu_dbg_cc;\n\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n\t//\n\tinitial\tcmd_reset = 1'b1;\n\talways @(posedge i_clk)\n\t\tcmd_reset <= ((dbg_cmd_write)&&(dbg_idata[6]));\n\t//\n\tinitial\tcmd_halt  = START_HALTED;\n\talways @(posedge i_clk)\n\t\tif (i_rst)\n\t\t\tcmd_halt <= (START_HALTED == 1)? 1'b1 : 1'b0;\n"]], "Diff Content": {"Delete": [[331, "\tassign\tdbg_cmd_write = (dbg_cyc)&&(dbg_stb)&&(dbg_we)&&(~dbg_addr);\n"]], "Add": [[331, "\tassign\tdbg_cmd_write = (dbg_stb)&&(dbg_we)&&(!dbg_addr);\n"]]}}