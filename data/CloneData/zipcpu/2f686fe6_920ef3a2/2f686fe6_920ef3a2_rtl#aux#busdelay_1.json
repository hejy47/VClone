{"Source Block": ["zipcpu/rtl/aux/busdelay.v@88:196@HdlStmIf", "\tinput\twire\t\t\ti_dly_stall;\n\tinput\twire\t[(DW-1):0]\ti_dly_data;\n\tinput\twire\t\t\ti_dly_err;\n\n\tgenerate\n\tif (DELAY_STALL != 0)\n\tbegin\n\t\treg\tr_stb, r_we, r_rtn_stall, r_rtn_err;\n\t\treg\t[(AW-1):0]\tr_addr;\n\t\treg\t[(DW-1):0]\tr_data;\n\t\treg\t[(DW/8-1):0]\tr_sel;\n\n\t\tinitial\to_dly_cyc  = 1'b0;\n\t\tinitial\tr_rtn_stall= 1'b0;\n\t\tinitial\tr_stb      = 1'b0;\n\t\talways @(posedge i_clk)\n\t\tbegin\n\t\t\to_dly_cyc <= (i_wb_cyc);\n\t\n\t\t\tif (!i_dly_stall)\n\t\t\tbegin\n\t\t\t\tr_we   <= i_wb_we;\n\t\t\t\tr_addr <= i_wb_addr;\n\t\t\t\tr_data <= i_wb_data;\n\t\t\t\tr_sel  <= i_wb_sel;\n\n\t\t\t\tif (r_stb)\n\t\t\t\tbegin\n\t\t\t\t\to_dly_we   <= r_we;\n\t\t\t\t\to_dly_addr <= r_addr;\n\t\t\t\t\to_dly_data <= r_data;\n\t\t\t\t\to_dly_sel  <= r_sel;\n\t\t\t\t\to_dly_stb  <= 1'b1;\n\t\t\t\t\tr_rtn_stall <= 1'b0;\n\t\t\t\t\tr_stb <= 1'b0;\n\t\t\t\tend else begin\n\t\t\t\t\to_dly_we   <= i_wb_we;\n\t\t\t\t\to_dly_addr <= i_wb_addr;\n\t\t\t\t\to_dly_data <= i_wb_data;\n\t\t\t\t\to_dly_sel  <= i_wb_sel;\n\t\t\t\t\to_dly_stb  <= i_wb_stb;\n\t\t\t\t\tr_stb <= 1'b0;\n\t\t\t\t\tr_rtn_stall <= 1'b0;\n\t\t\t\tend\n\t\t\tend else if ((!r_stb)&&(!o_wb_stall))\n\t\t\tbegin\n\t\t\t\tr_we   <= i_wb_we;\n\t\t\t\tr_addr <= i_wb_addr;\n\t\t\t\tr_data <= i_wb_data;\n\t\t\t\tr_sel  <= i_wb_sel;\n\t\t\t\tr_stb  <= i_wb_stb;\n\n\t\t\t\tr_rtn_stall <= i_wb_stb;\n\t\t\tend\n\n\t\t\tif (!i_wb_cyc)\n\t\t\tbegin\n\t\t\t\to_dly_stb <= 1'b0;\n\t\t\t\tr_stb <= 1'b0;\n\t\t\t\tr_rtn_stall <= 1'b0;\n\t\t\tend\n\n\t\t\to_wb_ack  <= (i_dly_ack)&&(i_wb_cyc)&&(o_dly_cyc);\n\t\t\to_wb_data <= i_dly_data;\n\t\t\tr_rtn_err <= (i_dly_err)&&(i_wb_cyc)&&(o_dly_cyc);\n\t\tend\n\n\t\tassign\to_wb_stall = r_rtn_stall;\n\t\tassign\to_wb_err   = r_rtn_err;\n\n\tend else begin\n\n\t\tinitial\to_dly_cyc = 1'b0;\n\t\tinitial\to_dly_stb = 1'b0;\n\n\t\talways @(posedge i_clk)\n\t\t\to_dly_cyc <= i_wb_cyc;\n\t\t// Add the i_wb_cyc criteria here, so we can simplify the\n\t\t// o_wb_stall criteria below, which would otherwise *and*\n\t\t// these two.\n\t\talways @(posedge i_clk)\n\t\t\tif (!o_wb_stall)\n\t\t\t\to_dly_stb <= ((i_wb_cyc)&&(i_wb_stb));\n\t\talways @(posedge i_clk)\n\t\t\tif (!o_wb_stall)\n\t\t\t\to_dly_we  <= i_wb_we;\n\t\talways @(posedge i_clk)\n\t\t\tif (!o_wb_stall)\n\t\t\t\to_dly_addr<= i_wb_addr;\n\t\talways @(posedge i_clk)\n\t\t\tif (!o_wb_stall)\n\t\t\t\to_dly_data <= i_wb_data;\n\t\talways @(posedge i_clk)\n\t\t\tif (!o_wb_stall)\n\t\t\t\to_dly_sel <= i_wb_sel;\n\t\talways @(posedge i_clk)\n\t\t\to_wb_ack  <= (i_dly_ack)&&(o_dly_cyc)&&(i_wb_cyc);\n\t\talways @(posedge i_clk)\n\t\t\to_wb_data <= i_dly_data;\n\n\t\t// Our only non-delayed line, yet still really delayed.  Perhaps\n\t\t// there's a way to register this?\n\t\t// o_wb_stall <= (i_wb_cyc)&&(i_wb_stb) ... or some such?\n\t\t// assign o_wb_stall=((i_wb_cyc)&&(i_dly_stall)&&(o_dly_stb));//&&o_cyc\n\t\tassign\to_wb_stall = ((i_dly_stall)&&(o_dly_stb));//&&o_cyc\n\t\tassign\to_wb_err   = i_dly_err;\n\tend endgenerate\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[121, "\t\t\t\t\tr_rtn_stall <= 1'b0;\n"], [122, "\t\t\t\t\tr_stb <= 1'b0;\n"], [129, "\t\t\t\t\tr_stb <= 1'b0;\n"], [130, "\t\t\t\t\tr_rtn_stall <= 1'b0;\n"], [140, "\t\t\t\tr_rtn_stall <= i_wb_stb;\n"], [147, "\t\t\t\tr_rtn_stall <= 1'b0;\n"], [155, "\t\tassign\to_wb_stall = r_rtn_stall;\n"]], "Add": [[131, "\t\t\t\tr_stb <= 1'b0;\n"], [131, "\t\t\tend else if (!o_dly_stb)\n"], [131, "\t\t\tbegin\n"], [131, "\t\t\t\to_dly_we   <= i_wb_we;\n"], [131, "\t\t\t\to_dly_addr <= i_wb_addr;\n"], [131, "\t\t\t\to_dly_data <= i_wb_data;\n"], [131, "\t\t\t\to_dly_sel  <= i_wb_sel;\n"], [131, "\t\t\t\to_dly_stb  <= i_wb_stb;\n"], [155, "\t\tassign\to_wb_stall = r_stb;\n"]]}}