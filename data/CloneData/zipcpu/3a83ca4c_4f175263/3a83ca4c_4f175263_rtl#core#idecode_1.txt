Source Block: zipcpu/rtl/core/idecode.v@609:652@HdlStmIf
	//		by one
	// Note that we're not using iword here ... there's a lot of logic
	// taking place, and it's only valid if the new word is not compressed.
	//
	reg	r_valid;
	generate if (OPT_OPIPE)
	begin
		reg	r_pipe;

		initial	r_pipe = 1'b0;
		always @(posedge i_clk)
		if (i_reset)
			r_pipe <= 1'b0;
		else if (i_ce)
			r_pipe <= (r_valid)&&((pf_valid)||(o_phase))
				// Both must be memory operations
				&&(w_mem)&&(o_M)
				// Both must be writes, or both stores
				&&(o_op[0] == w_cis_op[0])
				// Both must be register ops
				&&(w_rB == o_rB)
				// Both must use the same register for B
				&&(w_dcdB[3:0] == o_dcdB[3:0])
				// But ... the result can never be B
				&&((o_op[0])
					||(w_dcdB[3:0] != o_dcdA[3:0]))
				// Needs to be to the mode, supervisor or user
				&&(i_gie == o_gie)
				// Same condition, or no condition before
				&&((w_cond[2:0]==o_cond[2:0])
					||(o_cond[2:0] == 3'h0))
				// Same or incrementing immediate
				&&(w_I[13]==r_I[13])
				&&((w_I[13:2]==r_I[13:2])
					||({1'b0, w_I[13:2]}==(r_I[13:2]+12'h1)));
		assign o_pipe = r_pipe;
	end else begin
		assign o_pipe = 1'b0;
	end endgenerate

	initial	r_valid = 1'b0;
	always @(posedge i_clk)
		if (i_reset)
			r_valid <= 1'b0;

Diff Content:
- 642 				&&((w_I[13:2]==r_I[13:2])
- 643 					||({1'b0, w_I[13:2]}==(r_I[13:2]+12'h1)));
+ 616 		wire	[13:0]	pipe_addr_diff;
+ 616 		assign		pipe_addr_diff = w_I[13:0] - r_I[13:0];
+ 631 				&&(w_dcdB[3:1] != 3'h7)
+ 636 				&&((o_op[0])||(w_dcdR[3:1] != 3'h7))
+ 636 				&&((o_op[0])||(o_dcdR[3:1] != 3'h7))
+ 643 				&&((w_I==r_I)
+ 643 					||(pipe_addr_diff <= 14'h4));

Clone Blocks:
