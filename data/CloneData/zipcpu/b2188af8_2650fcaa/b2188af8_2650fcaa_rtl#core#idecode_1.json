{"Source Block": ["zipcpu/rtl/core/idecode.v@416:426@HdlStmProcess", "\t\t\t// also cause an illegal instruction error\n\t\t\tif ((!OPT_LOCK)&&(w_lock))\n\t\t\t\to_illegal <= 1'b1;\n\t\tend\n\n\tinitial\to_gie = 0;\n\talways @(posedge i_clk)\n\tif (i_reset)\n\t\to_gie <= i_gie;\n\telse if (OPT_CIS)\n\tbegin\n"], "Clone Blocks": [["zipcpu/rtl/core/div.v@142:152", "\t// Primary among them is that o_busy needs to (possibly) be true\n\t// for an extra clock after r_busy clears.  This would be that extra\n\t// clock where we negate the result (assuming a signed divide, and that\n\t// the result is supposed to be negative.)  Otherwise, the two are\n\t// identical.\n\tinitial\to_busy = 1'b0;\n\talways @(posedge i_clk)\n\t\tif (i_reset)\n\t\t\to_busy <= 1'b0;\n\t\telse if (i_wr)\n\t\t\to_busy <= 1'b1;\n"]], "Diff Content": {"Delete": [[421, "\tinitial\to_gie = 0;\n"]], "Add": []}}