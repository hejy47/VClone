Source Block: zipcpu/rtl/peripherals/zipmmu.v@452:462@HdlStmAssign
	// While this increases the bus latency, it also gives us a moment to
	// work.
	//
	//
	wire	[(VAW-1):0]	r_vpage;
	assign	r_vpage = (r_addr[(DW-3):(DW-2-VAW)]);

	initial	s_pending = 1'b0;
	initial	r_pending = 1'b0;
	initial	r_valid   = 1'b0;
	always @(posedge i_clk)

Diff Content:
+ 457 	assign	r_ppage = (o_addr[(AW-1):LGPGSZW]);

Clone Blocks:
Clone Blocks 1:
zipcpu/rtl/peripherals/zipmmu.v@456:466
	wire	[(VAW-1):0]	r_vpage;
	assign	r_vpage = (r_addr[(DW-3):(DW-2-VAW)]);

	initial	s_pending = 1'b0;
	initial	r_pending = 1'b0;
	initial	r_valid   = 1'b0;
	always @(posedge i_clk)
	if (i_reset)
	begin
		r_pending <= 1'b0;
		r_valid   <= 1'b0;

Clone Blocks 2:
zipcpu/rtl/peripherals/zipmmu.v@451:461
	// First clock, and the r_ register, copies the bus data from the bus.
	// While this increases the bus latency, it also gives us a moment to
	// work.
	//
	//
	wire	[(VAW-1):0]	r_vpage;
	assign	r_vpage = (r_addr[(DW-3):(DW-2-VAW)]);

	initial	s_pending = 1'b0;
	initial	r_pending = 1'b0;
	initial	r_valid   = 1'b0;

Clone Blocks 3:
zipcpu/rtl/peripherals/zipmmu.v@454:464
	//
	//
	wire	[(VAW-1):0]	r_vpage;
	assign	r_vpage = (r_addr[(DW-3):(DW-2-VAW)]);

	initial	s_pending = 1'b0;
	initial	r_pending = 1'b0;
	initial	r_valid   = 1'b0;
	always @(posedge i_clk)
	if (i_reset)
	begin

Clone Blocks 4:
zipcpu/rtl/peripherals/zipmmu.v@455:465
	//
	wire	[(VAW-1):0]	r_vpage;
	assign	r_vpage = (r_addr[(DW-3):(DW-2-VAW)]);

	initial	s_pending = 1'b0;
	initial	r_pending = 1'b0;
	initial	r_valid   = 1'b0;
	always @(posedge i_clk)
	if (i_reset)
	begin
		r_pending <= 1'b0;

