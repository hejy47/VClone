Source Block: amiga2000-gfxcard/z2-minispartan/z2.v@316:326@HdlStmAssign
assign zDIR4     = dataout_z3; // a8-a15 <- input

reg z_ready = 'b1;
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
assign znDTACK  = dtack?1'b0:1'bZ;

assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit

Diff Content:
- 321 assign znCINH = 1; // Z2 = /OVR
+ 321 reg z_ovr = 0;
+ 321 assign zXRDY  = 1'bZ; //z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
+ 321 assign znCINH = !z_ovr; //1; // Z2 = /OVR

Clone Blocks:
Clone Blocks 1:
amiga2000-gfxcard/z2-minispartan/z2.v@313:323
assign zDIR1     = (dataout_enable | dataout_z3); // d2-d9
assign zDIR2     = (dataout_enable | dataout_z3); // d10-15, d0-d1
assign zDIR3     = dataout_z3; // a16-a23 <- input
assign zDIR4     = dataout_z3; // a8-a15 <- input

reg z_ready = 'b1;
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;

Clone Blocks 2:
amiga2000-gfxcard/z2-minispartan/z2.v@318:328
reg z_ready = 'b1;
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
assign znDTACK  = dtack?1'b0:1'bZ;

assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
assign zA  = (dataout_z3) ? {data_z3_low16, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;


Clone Blocks 3:
amiga2000-gfxcard/z2-minispartan/z2.v@314:324
assign zDIR2     = (dataout_enable | dataout_z3); // d10-15, d0-d1
assign zDIR3     = dataout_z3; // a16-a23 <- input
assign zDIR4     = dataout_z3; // a8-a15 <- input

reg z_ready = 'b1;
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
assign znDTACK  = dtack?1'b0:1'bZ;

Clone Blocks 4:
amiga2000-gfxcard/z2-minispartan/z2.v@315:325
assign zDIR3     = dataout_z3; // a16-a23 <- input
assign zDIR4     = dataout_z3; // a8-a15 <- input

reg z_ready = 'b1;
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
assign znDTACK  = dtack?1'b0:1'bZ;


Clone Blocks 5:
amiga2000-gfxcard/z2-minispartan/z2.v@319:329
reg z_ready_latch = 'b1;
assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
assign znCINH = 1; // Z2 = /OVR

assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
assign znDTACK  = dtack?1'b0:1'bZ;

assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
assign zA  = (dataout_z3) ? {data_z3_low16, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;

// autoconf status

