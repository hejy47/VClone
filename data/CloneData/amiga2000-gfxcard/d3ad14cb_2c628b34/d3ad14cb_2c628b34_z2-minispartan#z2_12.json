{"Source Block": ["amiga2000-gfxcard/z2-minispartan/z2.v@511:584@HdlStmProcess", "reg [3:0] rec_zaddr [0:255];\n`endif\n\nreg row_fetched = 0;\n\nalways @(posedge z_sample_clk) begin\n  znUDS_sync  <= {znUDS_sync[1:0],znUDS};\n  znLDS_sync  <= {znLDS_sync[1:0],znLDS};\n  znDS1_sync  <= {znDS1_sync[1:0],znDS1};\n  znDS0_sync  <= {znDS0_sync[1:0],znDS0};\n  znAS_sync   <= {znAS_sync[3:0],znAS};\n  zREAD_sync  <= {zREAD_sync[3:0],zREAD};\n  zDOE_sync   <= {zDOE_sync[0],zDOE};\n  zE7M_sync   <= {zE7M_sync[0],zE7M};\n  znRST_sync  <= {znRST_sync[0],znRST};\n  znCFGIN_sync  <= {znCFGIN_sync[1:0],znCFGIN};\n  znFCS_sync <= {znFCS_sync[1:0],znFCS};\n  \n  z2_addr_valid <= (znAS_sync == 5'b00000);\n  \n  data_in <= zD;\n  data_in_z3_low16 <= zA[22:7]; // FIXME why sample this twice?\n  zdata_in_sync <= data_in;\n  \n  zorro_read  <= (zREAD_sync[2:0]==3'b111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);\n  zorro_write <= (zREAD_sync[1:0]==2'b00)?1'b1:1'b0; //(!zREAD_sync[1] & !zREAD_sync[0]);\n  \n  if (znUDS_sync[1]==0 || znLDS_sync[1]==0 || znDS1_sync[1]==0 || znDS0_sync[1]==0) begin\n    z3_din_high_s2 <= zD;\n    z3_din_low_s2  <= zA[22:7];\n  end\n  \n  //if (znAS_sync[1]==1 && znAS_sync[0]==0) begin\n  zaddr <= {zA[22:0],1'b0};\n  //end\n  zaddr_sync  <= zaddr;\n  zaddr_sync2 <= zaddr_sync;\n  \n  z2_mapped_addr <= ((zaddr_sync-ram_low)>>1);\n  \n  z3addr2 <= {zD[15:8],zA[22:1],2'b00};\n    \n  // sample z3addr on falling edge of /FCS\n  if (znFCS_sync[1]==1 && znFCS_sync[0]==0) begin\n    z3addr <= z3addr2;\n  end\n  z3_mapped_addr <= ((z3addr)&'h01ffffff)>>1;\n  \n  datastrobe_synced <= ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) \n                        && ((znUDS_sync[2]==0) || (znLDS_sync[2]==0)))?1'b1:1'b0;\n  \n  // zaddr_sync==zaddr && \n  // zaddr_sync==zaddr_sync2 && \n  zaddr_in_ram <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=ram_low && zaddr_sync2<ram_high);\n  zaddr_in_reg <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=reg_low && zaddr_sync2<reg_high);\n  if (znAS_sync[1]==0 && zaddr_sync2>=autoconf_low && zaddr_sync2<autoconf_high)\n    zaddr_autoconfig <= 1'b1;\n  else\n    zaddr_autoconfig <= 1'b0;\n    \n  //z3addr_rom <= z3addr[15:0];\n  z_reset <= (znRST_sync==3'b000);\n  z_cfgin <= (znCFGIN_sync==3'b000);\n  z_cfgin_lo <= (znCFGIN_sync==3'b111);\n  \n  z3addr_in_ram <= (z3addr >= z3_ram_low) && (z3addr < z3_ram_high);\n  z3addr_in_reg <= (z3addr >= z3_reg_low) && (z3addr < z3_reg_high);\n  z3addr_autoconfig <= (z3addr[31:16]=='hff00);\nend\n\n// ram arbiter\nreg zorro_ram_read_request = 0;\nreg zorro_ram_read_done = 1;\nreg zorro_ram_write_request = 0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[521, "  znAS_sync   <= {znAS_sync[3:0],znAS};\n"], [522, "  zREAD_sync  <= {zREAD_sync[3:0],zREAD};\n"], [529, "  z2_addr_valid <= (znAS_sync == 5'b00000);\n"], [535, "  zorro_read  <= (zREAD_sync[2:0]==3'b111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);\n"], [536, "  zorro_write <= (zREAD_sync[1:0]==2'b00)?1'b1:1'b0; //(!zREAD_sync[1] & !zREAD_sync[0]);\n"], [538, "  if (znUDS_sync[1]==0 || znLDS_sync[1]==0 || znDS1_sync[1]==0 || znDS0_sync[1]==0) begin\n"], [549, "  z2_mapped_addr <= ((zaddr_sync-ram_low)>>1);\n"], [559, "  datastrobe_synced <= ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) \n"], [560, "                        && ((znUDS_sync[2]==0) || (znLDS_sync[2]==0)))?1'b1:1'b0;\n"], [564, "  zaddr_in_ram <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=ram_low && zaddr_sync2<ram_high);\n"], [565, "  zaddr_in_reg <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=reg_low && zaddr_sync2<reg_high);\n"], [566, "  if (znAS_sync[1]==0 && zaddr_sync2>=autoconf_low && zaddr_sync2<autoconf_high)\n"]], "Add": [[518, "  znAS_sync   <= {znAS_sync[1:0],znAS};\n"], [518, "  zREAD_sync  <= {zREAD_sync[1:0],zREAD};\n"], [529, "  z2_addr_valid <= (znAS_sync==0); //(znAS_sync[0] == 0);\n"], [536, "  zorro_read  <= (zREAD_sync == 3'b111);//(zREAD_sync[2:0]==3'b111)?1'b1:1'b0;\n"], [536, "  zorro_write <= (zREAD_sync[0] == 0);//(zREAD_sync[1:0]==2'b00)?1'b1:1'b0;\n"], [536, "  z_ready_latch <= z_ready; // timing fix\n"], [536, "  vga_clk_sel0_latch <= vga_clk_sel[0];\n"], [536, "  if (znUDS_sync==3'b000 || znLDS_sync==3'b000 || znDS1_sync==3'b000 || znDS0_sync==3'b000)\n"], [536, "    z3_din_latch <= 1;\n"], [536, "  else\n"], [536, "    z3_din_latch <= 0;\n"], [538, "  if (z3_din_latch) begin\n"], [549, "  z2_mapped_addr <= ((zaddr_sync2-ram_low)>>1);\n"], [560, "  datastrobe_synced <= (znUDS_sync==0 || znLDS_sync==0);\n"], [560, "  z2_uds <= (znUDS_sync==0);\n"], [560, "  z2_lds <= (znLDS_sync==0);\n"], [566, "  zaddr_in_ram <= (zaddr_sync==zaddr_sync2 && zaddr_sync>=ram_low && zaddr_sync<ram_high);\n"], [566, "  zaddr_in_reg <= (zaddr_sync==zaddr_sync2 && zaddr_sync>=reg_low && zaddr_sync<reg_high);\n"], [566, "  if (znAS_sync[1]==0 && zaddr_sync>=autoconf_low && zaddr_sync<autoconf_high)\n"]]}}