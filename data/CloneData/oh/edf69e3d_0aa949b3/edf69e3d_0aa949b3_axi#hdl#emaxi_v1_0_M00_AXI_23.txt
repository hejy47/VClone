Source Block: oh/emaxi/hdl/emaxi_v1_0_M00_AXI.v@479:489@HdlStmAssign
   //----------------------------

   assign    axi_araddr    = emrq_rd_data[`DSTADDR_RANGE];
   assign    axi_arsize    = {1'b0, emrq_rd_data[`DATAMODE_RANGE]};
   assign    axi_arlen     = 8'd0;
   assign    axi_arvalid   = ~emrq_empty & ~readinfo_full;
   assign    emrq_rd_en    = axi_arvalid & M_AXI_ARREADY;
   assign    readinfo_wren = emrq_rd_en;
   
   //--------------------------------
   // Read Data (and Response) Channel

Diff Content:
+ 484              else
+ 484                emrr_wr_data[`DATA_RANGE] <= M_AXI_RDATA[31:0];
+ 484            2'd3: begin // 64b DWORD
+ 484               emrr_wr_data[`DATA_RANGE]    <= M_AXI_RDATA[31:0];
+ 484               emrr_wr_data[`SRCADDR_RANGE] <= M_AXI_RDATA[63:32];
+ 484            end

Clone Blocks:
Clone Blocks 1:
oh/emaxi/hdl/emaxi_v1_0_M00_AXI.v@478:488
   // Read Address Channel
   //----------------------------

   assign    axi_araddr    = emrq_rd_data[`DSTADDR_RANGE];
   assign    axi_arsize    = {1'b0, emrq_rd_data[`DATAMODE_RANGE]};
   assign    axi_arlen     = 8'd0;
   assign    axi_arvalid   = ~emrq_empty & ~readinfo_full;
   assign    emrq_rd_en    = axi_arvalid & M_AXI_ARREADY;
   assign    readinfo_wren = emrq_rd_en;
   
   //--------------------------------

Clone Blocks 2:
oh/emaxi/hdl/emaxi_v1_0_M00_AXI.v@480:490

   assign    axi_araddr    = emrq_rd_data[`DSTADDR_RANGE];
   assign    axi_arsize    = {1'b0, emrq_rd_data[`DATAMODE_RANGE]};
   assign    axi_arlen     = 8'd0;
   assign    axi_arvalid   = ~emrq_empty & ~readinfo_full;
   assign    emrq_rd_en    = axi_arvalid & M_AXI_ARREADY;
   assign    readinfo_wren = emrq_rd_en;
   
   //--------------------------------
   // Read Data (and Response) Channel
   //--------------------------------

Clone Blocks 3:
oh/emaxi/hdl/emaxi_v1_0_M00_AXI.v@481:491
   assign    axi_araddr    = emrq_rd_data[`DSTADDR_RANGE];
   assign    axi_arsize    = {1'b0, emrq_rd_data[`DATAMODE_RANGE]};
   assign    axi_arlen     = 8'd0;
   assign    axi_arvalid   = ~emrq_empty & ~readinfo_full;
   assign    emrq_rd_en    = axi_arvalid & M_AXI_ARREADY;
   assign    readinfo_wren = emrq_rd_en;
   
   //--------------------------------
   // Read Data (and Response) Channel
   //--------------------------------


