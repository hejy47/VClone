{"Source Block": ["oh/emaxi/hdl/emaxi_v1_0_M00_AXI.v@390:437@HdlStmProcess", "        \n      endcase // case ( emwr_rd_data[`DATAMODE_RANGE] )\n   end // always @ (...\n\n   // Generate the write-data signals\n   always @( posedge M_AXI_ACLK ) begin\n\t  if( M_AXI_ARESETN == 1'b0 ) begin\n\n         axi_wvalid  <= 1'b0;\n         axi_wdata   <= 'd0;\n         axi_wstrb   <= 'd0;\n         axi_wlast   <= 1'b1; // TODO: no bursts for now\n\n         wvalid_b   <= 1'b0;\n         wdata_b    <= 'd0;\n         wstrb_b    <= 'd0;\n         \n      end else begin // if ( M_AXI_ARESETN == 1'b0 )\n\n         if( ~axi_wvalid | w_go ) begin\n            if( wvalid_b ) begin\n               axi_wvalid <= 1'b1;\n               axi_wdata  <= wdata_b;\n               axi_wstrb  <= wstrb_b;\n            end else begin\n               axi_wvalid <= emwr_rd_en;\n               axi_wdata  <= wdata_aligned;\n               axi_wstrb  <= wstrb_aligned;\n            end\n         end // if ( ~axi_wvalid | w_go )\n\n         if( emwr_rd_en & axi_wvalid & ~w_go )\n           wvalid_b <= 1'b1;\n         else if( w_go )\n           wvalid_b <= 1'b0;\n\n         if( emwr_rd_en ) begin\n            wdata_b <= wdata_aligned;\n            wstrb_b <= wstrb_aligned;\n         end\n\n      end // else: !if( M_AXI_ARESETN == 1'b0 )\n   end // always @ ( posedge M_AXI_ACLK )\n   \n   //----------------------------\n   // Read Handler\n   //   eLink read requests generate a transaction on the AR channel,\n   //   buffer the src info to generate an eLink write when the\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[401, "   reg       read_waiting;\n"], [403, "   assign    emrq_rd_en = axi_rready & M_AXI_RVALID;\n"], [405, "   always @( posedge M_AXI_ACLK ) begin\n"], [406, "\t  if ( ~M_AXI_ARESETN ) begin\n"], [408, "         axi_araddr   <= 'd0;\n"], [409, "         axi_arlen    <= 'd0;\n"], [410, "         axi_arsize   <= 'd0;\n"], [411, "         axi_arvalid  <= 1'b0;\n"], [412, "         read_waiting <= 1'b0;\n"], [414, "\t  end else begin\n"], [416, "         if( ~emrq_empty & ~read_waiting ) begin\n"], [418, "            axi_arvalid <= 1'b1;\n"], [419, "            axi_arsize  <= {1'b0, emrq_rd_data[`DATAMODE_RANGE]};\n"], [420, "            axi_araddr  <= emrq_rd_data[`DSTADDR_RANGE];\n"], [422, "         end else if( M_AXI_ARREADY ) begin\n"], [424, "            axi_arvalid <= 1'b0;\n"], [426, "         end\n"], [428, "         if( ~emrq_empty & ~read_waiting )\n"], [429, "           read_waiting <= 1'b1;\n"], [430, "         else if( axi_rready & M_AXI_RVALID )\n"], [431, "           read_waiting <= 1'b0;\n"]], "Add": [[395, "`define RI_DSTADDR_RANGE  40:38\n"], [395, "`define RI_DSTADDR_LSB    38\n"], [395, "`define RI_DATAMODE_RANGE 37:36\n"], [395, "`define RI_CTRLMODE_RANGE 35:32\n"], [395, "`define RI_SRCADDR_RANGE  31:0\n"], [395, "   wire       readinfo_wren;\n"], [395, "   wire       readinfo_rden;\n"], [395, "   wire       readinfo_full;\n"], [395, "   wire [40:0] readinfo_out;\n"], [395, "   wire [40:0] readinfo_in = \n"], [395, "               {\n"], [395, "                emrq_rd_data[`DSTADDR_LSB+2 -: 3],\n"], [395, "                emrq_rd_data[`DATAMODE_RANGE],\n"], [395, "                emrq_rd_data[`CTRLMODE_RANGE],\n"], [395, "                emrq_rd_data[`SRCADDR_RANGE]\n"], [395, "                };\n"], [395, "   syncfifo\n"], [395, "     #(\n"], [395, "       .AW                              (5),\n"], [395, "       .DW                              (41))\n"], [395, "   fifo_readinfo_i\n"], [395, "     (\n"], [395, "      .rdata                            (readinfo_out),\n"], [395, "      .empty                            (),\n"], [395, "      .full                             (readinfo_full),\n"], [395, "      .clk                              (M_AXI_ACLK),\n"], [395, "      .reset                            (~M_AXI_ARESETN),\n"], [395, "      .wdata                            (readinfo_in),\n"], [395, "      .wen                              (readinfo_wren),\n"], [395, "      .ren                              (readinfo_rden));\n"]]}}