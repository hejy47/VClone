{"Source Block": ["oh/elink/hdl/etx_protocol.v@132:144@HdlStmAssign", "\n   assign burst_addr[31:0]  = (last_dstaddr[31:0] + 32'h8);\n   \n   assign burst_addr_match  = (burst_addr[31:0] == etx_dstaddr[31:0]);\n\n   assign burst_type_match  = {last_ctrlmode[3:0],last_datamode[1:0],last_write}\n\t\t\t       ==\n\t\t   \t      {etx_ctrlmode[3:0],etx_datamode[1:0], etx_write};\n   \t\t\t      \n\n   //#############################\n   //# Wait signals (async)\n   //#############################\n"], "Clone Blocks": [["oh/elink/hdl/etx_protocol.v@128:138", "\t\t     .dstaddr_out\t(last_dstaddr[31:0]),\n\t\t     .data_out\t\t(),\n\t\t     .srcaddr_out\t(),\n\t\t     .packet_in\t\t(tx_packet[PW-1:0]));//input\n\n   assign burst_addr[31:0]  = (last_dstaddr[31:0] + 32'h8);\n   \n   assign burst_addr_match  = (burst_addr[31:0] == etx_dstaddr[31:0]);\n\n   assign burst_type_match  = {last_ctrlmode[3:0],last_datamode[1:0],last_write}\n\t\t\t       ==\n"], ["oh/elink/hdl/etx_protocol.v@130:140", "\t\t     .srcaddr_out\t(),\n\t\t     .packet_in\t\t(tx_packet[PW-1:0]));//input\n\n   assign burst_addr[31:0]  = (last_dstaddr[31:0] + 32'h8);\n   \n   assign burst_addr_match  = (burst_addr[31:0] == etx_dstaddr[31:0]);\n\n   assign burst_type_match  = {last_ctrlmode[3:0],last_datamode[1:0],last_write}\n\t\t\t       ==\n\t\t   \t      {etx_ctrlmode[3:0],etx_datamode[1:0], etx_write};\n   \t\t\t      \n"]], "Diff Content": {"Delete": [], "Add": [[139, "   assign burst_in         =   ~tx_wr_wait_sync           & //interrupt burst on wait     \n"], [139, "\t\t\t       etx_write                  & //write \n"], [139, "\t       \t               (etx_datamode[1:0]==2'b11) & //double only\n"], [139, "\t\t\t       burst_type_match           & //same types\n"], [139, "\t\t\t       burst_addr_match;            //inc by 8\n"]]}}