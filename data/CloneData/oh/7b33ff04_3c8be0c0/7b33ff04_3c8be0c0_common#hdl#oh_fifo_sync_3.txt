Source Block: oh/common/hdl/oh_fifo_sync.v@30:40@HdlStmAssign
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     

 
   

Diff Content:
- 35    assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   

Clone Blocks:
Clone Blocks 1:
oh/common/hdl/oh_fifo_sync.v@31:41
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     

 
   
   always @ (posedge clk or negedge nreset) 

Clone Blocks 2:
oh/common/hdl/oh_fifo_sync.v@25:35
   output reg [AW-1:0] rd_count     // valid entries in fifo
 );
   
   reg [AW-1:0]        wr_addr;
   reg [AW-1:0]        rd_addr;
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   

Clone Blocks 3:
oh/common/hdl/oh_fifo_sync.v@32:42

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     

 
   
   always @ (posedge clk or negedge nreset) 
     if(~nreset) 

Clone Blocks 4:
oh/common/hdl/oh_fifo_sync.v@28:38
   reg [AW-1:0]        wr_addr;
   reg [AW-1:0]        rd_addr;
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     


Clone Blocks 5:
oh/common/hdl/oh_fifo_sync.v@24:34
   output 	       empty, // fifo is empty  
   output reg [AW-1:0] rd_count     // valid entries in fifo
 );
   
   reg [AW-1:0]        wr_addr;
   reg [AW-1:0]        rd_addr;
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;

Clone Blocks 6:
oh/common/hdl/oh_fifo_sync.v@29:39
   reg [AW-1:0]        rd_addr;
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     

 

Clone Blocks 7:
oh/common/hdl/oh_fifo_sync.v@26:36
 );
   
   reg [AW-1:0]        wr_addr;
   reg [AW-1:0]        rd_addr;
   wire 	       fifo_read;
   wire 	       fifo_write;

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));

