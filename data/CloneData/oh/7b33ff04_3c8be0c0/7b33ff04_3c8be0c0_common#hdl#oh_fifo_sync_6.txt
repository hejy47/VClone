Source Block: oh/common/hdl/oh_fifo_sync.v@36:73@HdlStmProcess
   assign full        = (rd_count[AW-1:0] == (DEPTH-1));
   assign fifo_empty  = (rd_count[AW-1:0] == 0);     

 
   
   always @ (posedge clk or negedge nreset) 
     if(~nreset) 
       begin	   
          wr_addr[AW-1:0]   <= 'd0;
          rd_addr[AW-1:0]   <= 'b0;
          rd_count[AW-1:0]  <= 'b0;
       end
     else if(clear) 
       begin	   
          wr_addr[AW-1:0]   <= 'd0;
          rd_addr[AW-1:0]   <= 'b0;
          rd_count[AW-1:0]  <= 'b0;
       end
     else if(fifo_write & fifo_read) 
       begin
	  wr_addr[AW-1:0] <= wr_addr[AW-1:0] + 'd1;
	  rd_addr[AW-1:0] <= rd_addr[AW-1:0] + 'd1;	      
       end 
     else if(fifo_write) 
       begin
	  wr_addr[AW-1:0] <= wr_addr[AW-1:0]  + 'd1;
	  rd_count[AW-1:0]<= rd_count[AW-1:0] + 'd1;	
       end 
     else if(fifo_read) 
       begin	      
          rd_addr[AW-1:0] <= rd_addr[AW-1:0]  + 'd1;
          rd_count[AW-1:0]<= rd_count[AW-1:0] - 'd1;
       end

   //Empty register to account for RAM output register  
   generate
      if(REG)
	begin

Diff Content:
- 44           wr_addr[AW-1:0]   <= 'd0;
- 45           rd_addr[AW-1:0]   <= 'b0;
- 46           rd_count[AW-1:0]  <= 'b0;
- 50           wr_addr[AW-1:0]   <= 'd0;
- 51           rd_addr[AW-1:0]   <= 'b0;
- 52           rd_count[AW-1:0]  <= 'b0;
- 56 	  wr_addr[AW-1:0] <= wr_addr[AW-1:0] + 'd1;
- 57 	  rd_addr[AW-1:0] <= rd_addr[AW-1:0] + 'd1;	      
- 61 	  wr_addr[AW-1:0] <= wr_addr[AW-1:0]  + 'd1;
- 66           rd_addr[AW-1:0] <= rd_addr[AW-1:0]  + 'd1;
+ 46           wr_addr[AW:0]   <= 'd0;
+ 46           rd_addr[AW:0]   <= 'b0;
+ 46           rd_count[AW:0]  <= 'b0;
+ 52           wr_addr[AW:0]   <= 'd0;
+ 52           rd_addr[AW:0]   <= 'b0;
+ 52           rd_count[AW:0]  <= 'b0;
+ 57 	  wr_addr[AW:0] <= wr_addr[AW:0] + 'd1;
+ 57 	  rd_addr[AW:0] <= rd_addr[AW:0] + 'd1;	      
+ 61 	  wr_addr[AW:0]   <=  wr_addr[AW:0]   + 'd1;
+ 66           rd_addr[AW:0]   <= rd_addr[AW:0]  + 'd1;

Clone Blocks:
