Source Block: oh/common/hdl/oh_fifo_sync.v@39:49@HdlStmAssign
   reg [AW-1:0]  rd_addr;
   reg [AW-1:0]  rd_count;
   
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   
   always @ ( posedge clk or negedge nreset) 

Diff Content:
- 44    assign full        = (rd_count[AW-1:0] == DEPTH);
+ 44    assign full        = (rd_count[AW-1:0] == (DEPTH-1));

Clone Blocks:
Clone Blocks 1:
oh/common/hdl/oh_fifo_sync.v@41:51
   
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   
   always @ ( posedge clk or negedge nreset) 
     if(!nreset) 
       begin	   

Clone Blocks 2:
oh/common/hdl/oh_fifo_sync.v@37:47
      
   reg [AW-1:0]  wr_addr;
   reg [AW-1:0]  rd_addr;
   reg [AW-1:0]  rd_count;
   
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;

Clone Blocks 3:
oh/common/hdl/oh_fifo_sync.v@42:52
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   
   always @ ( posedge clk or negedge nreset) 
     if(!nreset) 
       begin	   
          wr_addr[AW-1:0]   <= 'd0;

Clone Blocks 4:
oh/common/hdl/oh_fifo_sync.v@34:44
   //#####################################################################
   //# BODY
   //#####################################################################
      
   reg [AW-1:0]  wr_addr;
   reg [AW-1:0]  rd_addr;
   reg [AW-1:0]  rd_count;
   
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

Clone Blocks 5:
oh/common/hdl/oh_fifo_sync.v@38:48
   reg [AW-1:0]  wr_addr;
   reg [AW-1:0]  rd_addr;
   reg [AW-1:0]  rd_count;
   
   assign empty       = (rd_count[AW-1:0] == 0);   
   assign prog_full   = (rd_count[AW-1:0] >= PROG_FULL);   
   assign full        = (rd_count[AW-1:0] == DEPTH);

   assign fifo_read   = rd_en & ~empty;
   assign fifo_write  = wr_en & ~full;
   

