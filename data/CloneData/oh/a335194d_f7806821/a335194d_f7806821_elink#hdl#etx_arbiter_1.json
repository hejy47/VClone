{"Source Block": ["oh/elink/hdl/etx_arbiter.v@144:154@HdlStmAssign", "   assign access_in = (txwr_grant & ~txwr_wait) |\n\t\t      (txrd_grant & ~txrd_wait) |\n\t\t      (txrr_grant & ~txrr_wait);\n\n   //Pipeline + stall\n   assign write_in = etx_mux[1];\n\n   //access\n    always @ (posedge clk)\n      if (!nreset)\n\tbegin\n"], "Clone Blocks": [["oh/elink/hdl/etx_arbiter.v@139:151", "\t\t      txrr_arb_wait;\n \n   //#####################################################################\n   //# Pipeline stage (arbiter+mux takes time..)\n   //#####################################################################\n   assign access_in = (txwr_grant & ~txwr_wait) |\n\t\t      (txrd_grant & ~txrd_wait) |\n\t\t      (txrr_grant & ~txrr_wait);\n\n   //Pipeline + stall\n   assign write_in = etx_mux[1];\n\n   //access\n"]], "Diff Content": {"Delete": [[149, "   assign write_in = etx_mux[1];\n"]], "Add": [[149, "   packet2emesh p2e (// Outputs\n"], [149, "\t\t     .write_out\t\t(write_in),\n"], [149, "\t\t     .datamode_out\t(),\n"], [149, "\t\t     .ctrlmode_out\t(),\n"], [149, "\t\t     .data_out\t\t(),\n"], [149, "\t\t     .dstaddr_out\t(),\n"], [149, "\t\t     .srcaddr_out\t(),\n"], [149, "\t\t     .packet_in\t\t(etx_mux[PW-1:0]));\n"]]}}