{"Source Block": ["oh/emesh/hdl/packet2emesh.v@40:72@HdlStmIf", "   output [AW-1:0]   dstaddr_in;\n   output [AW-1:0]   srcaddr_in;\n   output [AW-1:0]   data_in;\n      \n   generate\n      if(AW==32)\n\tbegin : packet32\n\t   assign write_in           = packet_in[0];   \n\t   assign datamode_in[1:0]   = packet_in[2:1];   \n\t   assign ctrlmode_in[4:0]   = {1'b0,packet_in[6:3]};   \n\t   assign dstaddr_in[31:0]   = packet_in[39:8]; \t \n\t   assign srcaddr_in[31:0]   = packet_in[103:72];  \n\t   assign data_in[31:0]      = packet_in[71:40]; \n\tend\n      else if(AW==64)\n\tbegin : packet64\n\t   assign write_in           = packet_in[0];\n\t   assign datamode_in[1:0]   = packet_in[2:1];  \n\t   assign ctrlmode_in[4:0]   = packet_in[7:3];\n\t   assign dstaddr_in[63:0]   = {packet_in[167:135],packet_in[39:8]}; \n\t   assign srcaddr_in[63:0]   = packet_in[135:72];\n\t   assign data_in[63:0]      = packet_in[103:40];\n\tend\n      else\n\tbegin : unknown\n\t   initial\n\t     $display (\"packet width=%ds not supported\",  PW);\n\tend\n   endgenerate\n   \nendmodule // packet2emesh\n\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [], "Add": [[64, "`ifdef TARGET_SIM\n"], [66, "`endif\n"]]}}