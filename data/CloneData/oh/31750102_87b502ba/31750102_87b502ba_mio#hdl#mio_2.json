{"Source Block": ["oh/mio/hdl/mio.v@14:24@HdlIdDef", "   //parameters\n   parameter  AW      = 32;          // address width\n   parameter  N       = 8;           // Mini IO width\n   parameter  TARGET    = \"GENERIC\"; // GENERIC,XILINX,ALTERA,GENERIC,ASIC\n   localparam PW      = 2*AW+40;     // emesh packet width\n   localparam MPW     = PW+8;        // mio packet width   \n\n   // reset, clk, config\n   input           clk;           // main core clock   \n   input \t   nreset;        // async active low reset\n      \n"], "Clone Blocks": [["oh/spi/hdl/spi_slave_regs.v@17:27", "\n   //parameters\n   parameter  UREGS  = 13;        // number of user regs (max 48)\n   parameter  CHIPID = 0;         // reset chipid value   \n   parameter  AW     = 32;        // address width\n   localparam PW     = (2*AW+40); // packet width\n   localparam SREGS  = UREGS+32;  // total regs\n           \n   // clk, rest, chipid\n   input \t   clk;           // core clock\n   input \t   nreset;        // asych active low \n"], ["oh/spi/hdl/spi_master.v@14:24", "\n   //parameters\n   parameter  DEPTH = 32;                // fifo depth   \n   parameter  REGS  = 16;                // total regs   \n   parameter  AW    = 32;                // addresss width\n   localparam PW    = (2*AW+40);         // packet width\n \n   //clk,reset, cfg\n   input \t\tclk;             // core clock\n   input \t        nreset;          // async active low reset\n   \n"], ["oh/spi/hdl/spi_slave_regs.v@18:28", "   //parameters\n   parameter  UREGS  = 13;        // number of user regs (max 48)\n   parameter  CHIPID = 0;         // reset chipid value   \n   parameter  AW     = 32;        // address width\n   localparam PW     = (2*AW+40); // packet width\n   localparam SREGS  = UREGS+32;  // total regs\n           \n   // clk, rest, chipid\n   input \t   clk;           // core clock\n   input \t   nreset;        // asych active low \n\n"], ["oh/spi/hdl/spi_master_regs.v@18:28", "\n   //parameters\n   parameter  CLKDIV = 1;             // default clkdiv     \n   parameter  PSIZE  = 0;             // default is 32 bits\n   parameter  AW     = 32;            // addresss width\n   localparam PW     = (2*AW+40);     // packet width\n \n   //clk,reset, cfg\n   input \t     clk;             // core clock\n   input \t     nreset;          // async active low reset\n\n"], ["oh/mio/hdl/mio.v@13:23", "\n   //parameters\n   parameter  AW      = 32;          // address width\n   parameter  N       = 8;           // Mini IO width\n   parameter  TARGET    = \"GENERIC\"; // GENERIC,XILINX,ALTERA,GENERIC,ASIC\n   localparam PW      = 2*AW+40;     // emesh packet width\n   localparam MPW     = PW+8;        // mio packet width   \n\n   // reset, clk, config\n   input           clk;           // main core clock   \n   input \t   nreset;        // async active low reset\n"], ["oh/emesh/hdl/ememory.v@13:23", "   parameter NAME  = \"emem\";\n   parameter WAIT  = 0;     //turns on random wait circuit\n   parameter MON   = 0;     //turns on monitor\n\n   //derived parameters\n   localparam DW      = AW;     //always the same\n   localparam PW      = 2*AW+40;//packet width   \n\n   //Basic Interface\n   input            clk;\n   input \t    nreset;  \n"]], "Diff Content": {"Delete": [[19, "   localparam MPW     = PW+8;        // mio packet width   \n"]], "Add": [[19, "   parameter  AW      = 32;         // address width\n"], [19, "   localparam PW      = 2*AW+40;    // emesh packet width\n"], [19, "   parameter  MPW     = 128;        // mio packet width (>PW)  \n"], [19, "   parameter  N       = 8;          // Mini IO width\n"], [19, "   parameter  DEF_CFG = 0;          // Default config   \n"], [19, "   parameter  DEF_CLK = 0;          // Default clock\n"], [19, "   parameter  TARGET  = \"GENERIC\";  // GENERIC,XILINX,ALTERA,GENERIC,ASIC\n"]]}}