{"Source Block": ["oh/elink/hdl/erx_io.v@256:266@HdlIdDef", "   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n\n   \n   wire        rxreset = reset | ~ecfg_rx_enable;\n   \n   always @ (posedge rx_lclk_div4 or posedge rxreset) \n"], "Clone Blocks": [["oh/elink/hdl/erx_io.v@259:269", "   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n\n   \n   wire        rxreset = reset | ~ecfg_rx_enable;\n   \n   always @ (posedge rx_lclk_div4 or posedge rxreset) \n     begin\n\tif(rxreset)\n          rxenb_sync[1:0] <= 'd0;\n"], ["oh/elink/hdl/erx_io.v@255:265", "   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n\n   \n   wire        rxreset = reset | ~ecfg_rx_enable;\n   \n"]], "Diff Content": {"Delete": [[261, "   reg [7:0]   rx_frame_reg;\n"]], "Add": []}}