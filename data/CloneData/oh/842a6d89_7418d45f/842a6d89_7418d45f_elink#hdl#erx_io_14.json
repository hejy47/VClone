{"Source Block": ["oh/elink/hdl/erx_io.v@252:262@HdlIdDef", "   // Sync control signals into our RX clock domain\n   reg [1:0]   rxenb_sync;\n   wire        rxenb = rxenb_sync[0];\n   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n\n"], "Clone Blocks": [["oh/elink/hdl/erx_io.v@255:265", "   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n\n   \n   wire        rxreset = reset | ~ecfg_rx_enable;\n   \n"], ["oh/elink/hdl/erx_io.v@248:258", "      .SHIFTIN1(1'b0),\n      .SHIFTIN2(1'b0)\n      );\n\n   // Sync control signals into our RX clock domain\n   reg [1:0]   rxenb_sync;\n   wire        rxenb = rxenb_sync[0];\n   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n"], ["oh/elink/hdl/erx_io.v@251:261", "\n   // Sync control signals into our RX clock domain\n   reg [1:0]   rxenb_sync;\n   wire        rxenb = rxenb_sync[0];\n   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n   reg [7:0]   rx_frame_reg;\n"], ["oh/elink/hdl/erx_io.v@250:260", "      );\n\n   // Sync control signals into our RX clock domain\n   reg [1:0]   rxenb_sync;\n   wire        rxenb = rxenb_sync[0];\n   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n   reg [63:0]  rx_data_reg;\n"], ["oh/elink/hdl/erx_io.v@249:259", "      .SHIFTIN2(1'b0)\n      );\n\n   // Sync control signals into our RX clock domain\n   reg [1:0]   rxenb_sync;\n   wire        rxenb = rxenb_sync[0];\n   assign      serdes_reset = ~rxenb;\n   reg [1:0]   rxgpio_sync;\n   wire        rxgpio = rxgpio_sync[0];\n   \n   // Register outputs once for good measure, then mux in loopback data if enabled\n"]], "Diff Content": {"Delete": [[257, "   wire        rxgpio = rxgpio_sync[0];\n"]], "Add": []}}