{"Source Block": ["oh/etx/hdl/etx_arbiter.v@106:145@HdlStmProcess", "   // FIFO read enables, when we're idle or done with the current datum\n   assign     emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   assign     emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   assign     emwr_rd_en = wr_ready & (~ready | emtx_ack);\n   \n   always @ (posedge clk) begin\n      if( reset ) begin\n\n         ready     <= 1'b0;\n         fifo_data <= 'd0;\n\n      end else begin\n\n         if( emrr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrr_rd_data;\n\n         end else if( emrq_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrq_rd_data;\n\n         end else if( emwr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emwr_rd_data;\n\n         end else if( emtx_ack ) begin\n\n            ready <= 1'b0;\n\n         end\n      end // else: !if( reset )\n   end // always @ (posedge clock)\n      \n   //#############################\n   //# Break-out the emesh signals\n   //#############################\n   \n"], "Clone Blocks": [["oh/earb/hdl/earb.v@106:145", "   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   wire           emwr_rd_en = wr_ready & (~ready | emtx_ack);\n   \n   always @ (posedge clock) begin\n      if( reset ) begin\n\n         ready     <= 1'b0;\n         fifo_data <= 'd0;\n\n      end else begin\n\n         if( emrr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrr_rd_data;\n\n         end else if( emrq_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrq_rd_data;\n\n         end else if( emwr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emwr_rd_data;\n\n         end else if( emtx_ack ) begin\n\n            ready <= 1'b0;\n\n         end\n      end // else: !if( reset )\n   end // always @ (posedge clock)\n      \n   //#############################\n   //# Break-out the emesh signals\n   //#############################\n   \n"], ["oh/e_transmit/hdl/e_tx_arbiter.v@97:136", "   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   wire           emwr_rd_en = wr_ready & (~ready | emtx_ack);\n   \n   always @ (posedge clk) begin\n      if( reset ) begin\n\n         ready     <= 1'b0;\n         fifo_data <= 'd0;\n\n      end else begin\n\n         if( emrr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrr_rd_data;\n\n         end else if( emrq_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emrq_rd_data;\n\n         end else if( emwr_rd_en ) begin\n\n            ready <= 1'b1;\n            fifo_data <= emwr_rd_data;\n\n         end else if( emtx_ack ) begin\n\n            ready <= 1'b0;\n\n         end\n      end // else: !if( reset )\n   end // always @ (posedge clock)\n      \n   //#############################\n   //# Break-out the emesh signals\n   //#############################\n   \n"]], "Diff Content": {"Delete": [[134, "         end else if( emtx_ack ) begin\n"]], "Add": [[134, "         end else if( e_tx_ack ) begin\n"]]}}