{"Source Block": ["oh/spi/hdl/spi_slave_regs.v@18:28@HdlIdDef", "   //parameters\n   parameter  UREGS  = 13;        // number of user regs\n   parameter  CHIPID = 0;         // reset chipid value   \n   parameter  AW     = 32;        // address width\n   localparam PW     = (2*AW+40); // packet width\n   localparam SREGS  = UREGS+16;  // total regs\n           \n   // clk, rest, chipid\n   input \t   clk;           // core clock\n   input \t   nreset;        // asych active low \n\n"], "Clone Blocks": [["oh/spi/hdl/spi_master.v@14:24", "\n   //parameters\n   parameter  DEPTH = 32;                // fifo depth   \n   parameter  REGS  = 16;                // total regs   \n   parameter  AW    = 32;                // addresss width\n   localparam PW    = (2*AW+40);         // packet width\n \n   //clk,reset, cfg\n   input \t\tclk;             // core clock\n   input \t        nreset;          // async active low reset\n   \n"], ["oh/emesh/hdl/ememory.v@13:23", "   parameter NAME  = \"emem\";\n   parameter WAIT  = 0;     //turns on random wait circuit\n   parameter MON   = 0;     //turns on monitor\n\n   //derived parameters\n   localparam DW      = AW;     //always the same\n   localparam PW      = 2*AW+40;//packet width   \n\n   //Basic Interface\n   input            clk;\n   input \t    nreset;  \n"], ["oh/spi/hdl/spi_slave_regs.v@17:27", "\n   //parameters\n   parameter  UREGS  = 13;        // number of user regs\n   parameter  CHIPID = 0;         // reset chipid value   \n   parameter  AW     = 32;        // address width\n   localparam PW     = (2*AW+40); // packet width\n   localparam SREGS  = UREGS+16;  // total regs\n           \n   // clk, rest, chipid\n   input \t   clk;           // core clock\n   input \t   nreset;        // asych active low \n"], ["oh/spi/hdl/spi_slave.v@13:23", "   );\n\n   //parameters\n   parameter  UREGS = 13;                // total spi slave regs   \n   parameter  AW    = 32;                // addresss width\n   localparam PW    = (2*AW+40);         // packet width\n \n   //clk,reset, cfg\n   input \t\tclk;             // core clock\n   input \t        nreset;          // async active low reset\n   output [511:0] \tspi_regs;        // all registers for control\n"]], "Diff Content": {"Delete": [[23, "   localparam SREGS  = UREGS+16;  // total regs\n"]], "Add": [[23, "   localparam SREGS  = UREGS+32;  // total regs\n"]]}}