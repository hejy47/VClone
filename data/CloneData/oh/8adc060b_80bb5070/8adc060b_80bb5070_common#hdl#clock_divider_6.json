{"Source Block": ["oh/common/hdl/clock_divider.v@52:69@HdlStmProcess", "   \n   //Divide by two special case\n   assign div2_sel = divcfg[3:0]==4'b0001;\n   assign div1_sel = divcfg[3:0]==4'b0000;\n    \n   always @ (posedge clkin or posedge reset)\n     if(reset)\n       counter[7:0] <= 8'b000001;\n     else      \n       if(posedge_match)\n\t counter[7:0] <= 8'b000001;// Self resetting\n       else\n\t counter[7:0] <= (counter[7:0] + 8'b000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n"], "Clone Blocks": [["oh/common/hdl/clock_divider.v@64:75", "\t counter[7:0] <= (counter[7:0] + 8'b000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n     if(reset)\n       clkout_reg <= 1'b0;   \n     else if(posedge_match)\n"], ["oh/common/hdl/clock_divider.v@61:71", "       if(posedge_match)\n\t counter[7:0] <= 8'b000001;// Self resetting\n       else\n\t counter[7:0] <= (counter[7:0] + 8'b000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n"], ["oh/common/hdl/clock_divider.v@62:72", "\t counter[7:0] <= 8'b000001;// Self resetting\n       else\n\t counter[7:0] <= (counter[7:0] + 8'b000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n"], ["oh/common/hdl/clock_divider.v@63:73", "       else\n\t counter[7:0] <= (counter[7:0] + 8'b000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n     if(reset)\n"]], "Diff Content": {"Delete": [[61, "       if(posedge_match)\n"]], "Add": [[61, "       if(posedge_match | divcfg_change)\n"]]}}