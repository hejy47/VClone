Source Block: oh/common/hdl/oh_memory.v@40:89@HdlStmIf
    input [7:0]     memconfig, // generic memory config      
    input [7:0]     memrepair // repair vector
    );
   
   generate
      if(TYPE=="soft") begin: soft
	 oh_ram #(.DW(DW),
		  .DEPTH(DEPTH),
		  .REG(REG),
		  .DUALPORT(DUALPORT))
	 oh_ram(/*AUTOINST*/
		// Outputs
		.rd_dout		(rd_dout[DW-1:0]),
		// Inputs
		.rd_clk			(rd_clk),
		.rd_en			(rd_en),
		.rd_addr		(rd_addr[AW-1:0]),
		.wr_clk			(wr_clk),
		.wr_en			(wr_en),
		.wr_addr		(wr_addr[AW-1:0]),
		.wr_wem			(wr_wem[DW-1:0]),
		.wr_din			(wr_din[DW-1:0]));
      end // block: soft
      else begin: hard
	 //#########################################
	 // Hard coded RAM Macros
	 //#########################################
	 asic_ram #(.DW(DW),
		    .DEPTH(DEPTH),
		    .REG(REG),
		    .DUALPORT(DUALPORT),
		    .CONFIG(CONFIG),
		    .SHAPE(SHAPE))
	 asic_ram(// Outputs
		  .rd_dout   (rd_dout[DW-1:0]),
		  // Inputs
		  .rd_clk    (rd_clk),
		  .rd_en     (rd_en),
		  .rd_addr   (rd_addr[AW-1:0]),
		  .wr_clk    (wr_clk),
		  .wr_en     (wr_en),
		  .wr_addr   (wr_addr[AW-1:0]),
		  .wr_wem    (wr_wem[DW-1:0]),
		  .wr_din    (wr_din[DW-1:0]));
      end // block: hard
   endgenerate
   
endmodule // oh_memory_dp



Diff Content:
- 45       if(TYPE=="soft") begin: soft
- 63       else begin: hard
+ 45       if(TYPE=="soft") begin: ram_soft
+ 63       else begin: ram_hard

Clone Blocks:
