{"Source Block": ["oh/elink/hdl/erx_protocol.v@47:58@HdlStmAssign", "     if(rx_access)\n       dstaddr_reg[31:0]     <= dstaddr_mux[31:0];\n\n   assign dstaddr_next[31:0] = dstaddr_reg[31:0] + 4'b1000;\n   \n   assign dstaddr_mux[31:0] =  rx_burst ? dstaddr_next[31:0] :\n\t\t\t                  rx_packet[39:8];\n      \n   //Pipeline stage\n   always @ (posedge clk)\n     begin\n\terx_access          <= rx_access;      \n"], "Clone Blocks": [["oh/elink/hdl/erx_protocol.v@41:53", "   wire [31:0] \t   dstaddr_mux;\n   reg \t\t   erx_access;\n   reg [PW-1:0]    erx_packet;\n   \n   //Address generator for bursting\n   always @ (posedge clk)\n     if(rx_access)\n       dstaddr_reg[31:0]     <= dstaddr_mux[31:0];\n\n   assign dstaddr_next[31:0] = dstaddr_reg[31:0] + 4'b1000;\n   \n   assign dstaddr_mux[31:0] =  rx_burst ? dstaddr_next[31:0] :\n\t\t\t                  rx_packet[39:8];\n"], ["oh/elink/hdl/erx_protocol.v@45:55", "   //Address generator for bursting\n   always @ (posedge clk)\n     if(rx_access)\n       dstaddr_reg[31:0]     <= dstaddr_mux[31:0];\n\n   assign dstaddr_next[31:0] = dstaddr_reg[31:0] + 4'b1000;\n   \n   assign dstaddr_mux[31:0] =  rx_burst ? dstaddr_next[31:0] :\n\t\t\t                  rx_packet[39:8];\n      \n   //Pipeline stage\n"]], "Diff Content": {"Delete": [[53, "\t\t\t                  rx_packet[39:8];\n"]], "Add": [[53, "\t\t\t                  rx_addr[31:0];\n"], [53, "   assign read_response = (rx_addr[31:20] == myid[11:0]) & \n"], [53, "\t\t\t  (rx_addr[19:16] == `EGROUP_RR);\n"]]}}