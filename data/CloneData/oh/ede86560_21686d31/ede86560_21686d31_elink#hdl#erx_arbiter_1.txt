Source Block: oh/elink/hdl/erx_arbiter.v@55:65@HdlIdDef
   output [PW-1:0] rxrr_packet;   
   input           rxrr_wait;

   //wires
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;
   wire 	   emmu_read;

Diff Content:
- 60    wire [1:0]      emmu_datamode;

Clone Blocks:
Clone Blocks 1:
oh/elink/hdl/ecfg_if.v@52:62
   output [PW-1:0]   packet_out;
   input 	     wait_in;       //incoming wait 
   
   //wires
   wire [31:0] 	 dstaddr;
   wire [31:0] 	 data;   
   wire [31:0]   srcaddr;
   wire [1:0] 	 datamode;
   wire [3:0] 	 ctrlmode;
   wire [63:0] 	 mi_dout_mux;
   wire 	 mi_rd;

Clone Blocks 2:
oh/elink/hdl/erx_arbiter.v@56:66
   input           rxrr_wait;

   //wires
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;
   wire 	   emmu_read;


Clone Blocks 3:
oh/edma/dv/dv_emmu.v@105:115
   wire [3:0]		emmu_ctrlmode_out;	// From emmu of emmu.v
   wire [DW-1:0]	emmu_data_out;		// From emmu of emmu.v
   wire [1:0]		emmu_datamode_out;	// From emmu of emmu.v
   wire [63:0]		emmu_dstaddr_out;	// From emmu of emmu.v
   wire [AW-1:0]	emmu_srcaddr_out;	// From emmu of emmu.v
   wire			emmu_write_out;		// From emmu of emmu.v
   wire [31:0]		mi_dout;		// From emmu of emmu.v
   // End of automatics
   /*AUTOWIRE*/
   
   //DUT

Clone Blocks 4:
oh/elink/hdl/erx_arbiter.v@59:69
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;
   wire 	   emmu_read;

   wire            erx_write;
   wire [1:0]      erx_datamode;
   wire [3:0]      erx_ctrlmode;

Clone Blocks 5:
oh/emmu/dv/dv_emmu.v@105:115
   wire [3:0]		emmu_ctrlmode_out;	// From emmu of emmu.v
   wire [DW-1:0]	emmu_data_out;		// From emmu of emmu.v
   wire [1:0]		emmu_datamode_out;	// From emmu of emmu.v
   wire [63:0]		emmu_dstaddr_out;	// From emmu of emmu.v
   wire [AW-1:0]	emmu_srcaddr_out;	// From emmu of emmu.v
   wire			emmu_write_out;		// From emmu of emmu.v
   wire [31:0]		mi_dout;		// From emmu of emmu.v
   // End of automatics
   /*AUTOWIRE*/
   
   //DUT

Clone Blocks 6:
oh/elink/hdl/erx_arbiter.v@54:64
   output 	   rxrr_access;
   output [PW-1:0] rxrr_packet;   
   input           rxrr_wait;

   //wires
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;

Clone Blocks 7:
oh/elink/hdl/erx_arbiter.v@58:68
   //wires
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;
   wire 	   emmu_read;

   wire            erx_write;
   wire [1:0]      erx_datamode;

Clone Blocks 8:
oh/elink/hdl/erx_arbiter.v@57:67

   //wires
   wire            emmu_write;
   wire [1:0]      emmu_datamode;
   wire [3:0]      emmu_ctrlmode;
   wire [31:0]     emmu_dstaddr;
   wire [31:0]     emmu_srcaddr;
   wire [31:0]     emmu_data;
   wire 	   emmu_read;

   wire            erx_write;

