{"Source Block": ["oh/elink/hdl/etx_protocol.v@151:163@HdlStmAssign", "\ttx_rd_wait_reg    <= tx_rd_wait;\n\ttx_wr_wait_reg    <= tx_wr_wait;\n\ttx_io_wait_reg    <= tx_io_wait;\n     end\n\n   assign tx_burst  = tx_burst_reg & \n//\t\t      tx_burst_in & \n\t\t       ~(tx_wr_wait | tx_rd_wait);\n     \n  \n\n   //#######################################\n   //# Wait propagation circuit backwards\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[156, "   assign tx_burst  = tx_burst_reg & \n"], [158, "\t\t       ~(tx_wr_wait | tx_rd_wait);\n"]], "Add": [[158, "   assign tx_burst        =  ~tx_wait         &\n"], [158, "\t\t   \t      current_match    &\n"], [158, "\t\t\t      next_match       &\n"], [158, "\t\t\t      burst_addr_match;\n"], [158, "   reg \t\t  tx_burst_reg;   \n"], [158, "   always @ (posedge clk)\n"], [158, "     tx_burst_reg <=tx_burst;\n"], [158, "   assign etx_valid = tx_enable & etx_access & ~tx_wait;\n"], [158, "`define TX_IDLE  3'b000\n"], [158, "`define TX_START 3'b001\n"], [158, "`define TX_ACK   3'b010\n"], [158, "`define TX_BURST 3'b011\n"], [158, "`define TX_WAIT  3'b100\n"], [158, "   always @ (posedge clk)\n"], [158, "     if(!nreset)\n"], [158, "       tx_state[2:0] <= `TX_IDLE;\n"], [158, "     else\n"], [158, "       case (tx_state[2:0])\n"], [158, "\t `TX_IDLE:  tx_state[2:0] <= etx_valid ? `TX_START : `TX_IDLE;\n"], [158, "\t `TX_START: tx_state[2:0] <= `TX_ACK;\n"], [158, "\t `TX_ACK:   tx_state[2:0] <= tx_burst  ? `TX_BURST :\n"], [158, "\t\t\t\t      etx_valid ? `TX_START :\n"], [158, "                                      `TX_IDLE;\n"], [158, " \t `TX_BURST: tx_state[2:0] <= tx_burst  ? `TX_BURST : `TX_IDLE;\t   \n"], [158, "       endcase // case (tx_state[2:0])\n"], [158, "   assign tx_ack_wait = (tx_state[1:0]==`TX_START);\n"], [158, "   assign tx_access   = (tx_state[1:0]==`TX_START);\n"], [158, "   wire [63:0] \t  tx_cycle1;\n"], [158, "   wire [63:0] \t  tx_cycle2;\n"], [158, "   assign tx_frame_slow[3:0] = (tx_state[1:0]==`TX_START) ? 4'b0111 :\n"], [158, "\t\t\t       (tx_state[1:0]!=`TX_IDLE)  ? 4'b1111 :\n"], [158, "\t\t\t                                    4'b0000;\n"], [158, "   assign tx_cycle1[63:0]    = {tx_dstaddr[11:0],tx_datamode[1:0],tx_write,tx_access, //47:32\n"], [158, "\t\t\t        tx_dstaddr[27:12],                                    //31:16\n"], [158, "\t\t\t        ~tx_write,5'b0,tx_burst_reg,1'b0,                     //8-15\n"], [158, "\t\t\t        tx_ctrlmode[3:0],tx_dstaddr[31:28],                   //0-7\n"], [158, "\t\t\t        16'b0 \t\t\t\t                      //garbage\n"], [158, "\t\t\t        };\n"], [158, "   assign tx_cycle2[63:0]   = {tx_srcaddr[15:0],                                      //48-63\n"], [158, "\t\t\t       tx_srcaddr[31:16],                                     //32-47\n"], [158, "\t\t\t       tx_data[15:0],                                         //16-31\n"], [158, "\t\t\t       tx_data[31:16]\t\t\t                      //0-15\n"], [158, "\t\t\t       };\n"], [158, "   assign tx_data_slow[63:0]  = (tx_state[2:0]==`TX_START) ? tx_cycle1[63:0] : \n"], [158, "\t\t\t\t                             tx_cycle2[63:0];\n"]]}}