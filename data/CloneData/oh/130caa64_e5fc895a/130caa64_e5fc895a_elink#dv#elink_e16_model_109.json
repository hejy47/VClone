{"Source Block": ["oh/elink/dv/elink_e16_model.v@1366:1379@HdlStmAssign", "   assign srcaddr_1500_en  = (rxi_assemble_cnt[2:0] == 3'b110);\n\n   //# Assemble counter\n   assign rxi_assemble_cnt_inc[2:0]  = rxi_assemble_cnt[2:0] + 3'b001;\n\n   assign rxi_assemble_cnt_next[2:0] = burst_tran           ? 3'b100 :\n\t\t\t\t       tran_assembled       ? 3'b000 :\n\t\t\t\t       read_jump            ? 3'b101 :\n\t\t\t\t                              rxi_assemble_cnt_inc[2:0];\n   always @ (posedge rxi_lclk or posedge reset)\n     if (reset)\n       rxi_assemble_cnt[2:0] <= 3'b000;\n     else if(fifo_data_val)\n       rxi_assemble_cnt[2:0] <= rxi_assemble_cnt_next[2:0];\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1361:1371", "   assign write_en         = (rxi_assemble_cnt[2:0] == 3'b010);\n   assign access_en        = (rxi_assemble_cnt[2:0] == 3'b010);\n   assign data_3116_en     = (rxi_assemble_cnt[2:0] == 3'b011);\n   assign data_1500_en     = (rxi_assemble_cnt[2:0] == 3'b100);\n   assign srcaddr_3116_en  = (rxi_assemble_cnt[2:0] == 3'b101);\n   assign srcaddr_1500_en  = (rxi_assemble_cnt[2:0] == 3'b110);\n\n   //# Assemble counter\n   assign rxi_assemble_cnt_inc[2:0]  = rxi_assemble_cnt[2:0] + 3'b001;\n\n   assign rxi_assemble_cnt_next[2:0] = burst_tran           ? 3'b100 :\n"], ["oh/elink/dv/elink_e16_model.v@1360:1370", "   assign datamode_en      = (rxi_assemble_cnt[2:0] == 3'b010);\n   assign write_en         = (rxi_assemble_cnt[2:0] == 3'b010);\n   assign access_en        = (rxi_assemble_cnt[2:0] == 3'b010);\n   assign data_3116_en     = (rxi_assemble_cnt[2:0] == 3'b011);\n   assign data_1500_en     = (rxi_assemble_cnt[2:0] == 3'b100);\n   assign srcaddr_3116_en  = (rxi_assemble_cnt[2:0] == 3'b101);\n   assign srcaddr_1500_en  = (rxi_assemble_cnt[2:0] == 3'b110);\n\n   //# Assemble counter\n   assign rxi_assemble_cnt_inc[2:0]  = rxi_assemble_cnt[2:0] + 3'b001;\n\n"], ["oh/elink/dv/elink_e16_model.v@1364:1374", "   assign data_1500_en     = (rxi_assemble_cnt[2:0] == 3'b100);\n   assign srcaddr_3116_en  = (rxi_assemble_cnt[2:0] == 3'b101);\n   assign srcaddr_1500_en  = (rxi_assemble_cnt[2:0] == 3'b110);\n\n   //# Assemble counter\n   assign rxi_assemble_cnt_inc[2:0]  = rxi_assemble_cnt[2:0] + 3'b001;\n\n   assign rxi_assemble_cnt_next[2:0] = burst_tran           ? 3'b100 :\n\t\t\t\t       tran_assembled       ? 3'b000 :\n\t\t\t\t       read_jump            ? 3'b101 :\n\t\t\t\t                              rxi_assemble_cnt_inc[2:0];\n"], ["oh/elink/dv/elink_e16_model.v@1370:1384", "\n   assign rxi_assemble_cnt_next[2:0] = burst_tran           ? 3'b100 :\n\t\t\t\t       tran_assembled       ? 3'b000 :\n\t\t\t\t       read_jump            ? 3'b101 :\n\t\t\t\t                              rxi_assemble_cnt_inc[2:0];\n   always @ (posedge rxi_lclk or posedge reset)\n     if (reset)\n       rxi_assemble_cnt[2:0] <= 3'b000;\n     else if(fifo_data_val)\n       rxi_assemble_cnt[2:0] <= rxi_assemble_cnt_next[2:0];\n\n   //# single write transaction completion\n//   assign single_write = access & write & ~(&(datamode[1:0]));\n   assign single_write = 1'b0; // no special treatment for single writes\n   assign single_write_complete = single_write & (rxi_assemble_cnt[2:0] == 3'b100);\n"]], "Diff Content": {"Delete": [[1371, "   assign rxi_assemble_cnt_next[2:0] = burst_tran           ? 3'b100 :\n"], [1372, "\t\t\t\t       tran_assembled       ? 3'b000 :\n"], [1373, "\t\t\t\t       read_jump            ? 3'b101 :\n"], [1374, "\t\t\t\t                              rxi_assemble_cnt_inc[2:0];\n"]], "Add": []}}