{"Source Block": ["oh/elink/dv/elink_e16_model.v@4262:4272@HdlIdDef", "   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n   wire sel_ref_byte4; // select byte4 from the reference information of the transaction \n   wire sel_ref_byte5; // select byte5 from the reference information of the transaction \n\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@4260:4270", "   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n   wire sel_ref_byte4; // select byte4 from the reference information of the transaction \n"], ["oh/elink/dv/elink_e16_model.v@4257:4267", "   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n"], ["oh/elink/dv/elink_e16_model.v@4264:4274", "   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n   wire sel_ref_byte4; // select byte4 from the reference information of the transaction \n   wire sel_ref_byte5; // select byte5 from the reference information of the transaction \n\n   //####################################################\n   //#               Interface to the arbiter\n"], ["oh/elink/dv/elink_e16_model.v@4258:4268", "   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n"], ["oh/elink/dv/elink_e16_model.v@4261:4271", "   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n   wire sel_ref_byte4; // select byte4 from the reference information of the transaction \n   wire sel_ref_byte5; // select byte5 from the reference information of the transaction \n"], ["oh/elink/dv/elink_e16_model.v@4259:4269", "   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n"], ["oh/elink/dv/elink_e16_model.v@4263:4273", "   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n   wire [1:0] \t  burst_backup_next_cnt; // Next burst backup counter value\n   wire \t  freeze_fifo;           // FIFO and main counter advance should stoped\n   wire sel_ref_byte0; // select byte0 from the reference information of the transaction \n   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n   wire sel_ref_byte2; // select byte2 from the reference information of the transaction \n   wire sel_ref_byte3; // select byte3 from the reference information of the transaction \n   wire sel_ref_byte4; // select byte4 from the reference information of the transaction \n   wire sel_ref_byte5; // select byte5 from the reference information of the transaction \n\n   //####################################################\n"]], "Diff Content": {"Delete": [[4267, "   wire sel_ref_byte1; // select byte1 from the reference information of the transaction \n"]], "Add": []}}