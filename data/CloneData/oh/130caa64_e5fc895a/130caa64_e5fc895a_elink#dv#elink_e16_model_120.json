{"Source Block": ["oh/elink/dv/elink_e16_model.v@1405:1415@HdlStmAssign", "     else\n       rxi_cx_access <= tran_assembled;\n\n   assign rxi_c0_access   = (c0_match |  multicast_match) & rxi_cx_access;\n   assign rxi_c1_access   = (c1_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c3_access   = (c3_match & ~multicast_match) & rxi_cx_access;\n\n   //# address preparation for comparison based on the links position (horiz or vert)\n//   assign comp_addr[5:0]  = vertical_k ? {dstaddr[31:29],dstaddr[25:23]} : \n//                                         {dstaddr[28:26],dstaddr[22:20]} ;   \n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1403:1413", "     if(reset)\n       rxi_cx_access <= 1'b0;\n     else\n       rxi_cx_access <= tran_assembled;\n\n   assign rxi_c0_access   = (c0_match |  multicast_match) & rxi_cx_access;\n   assign rxi_c1_access   = (c1_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c3_access   = (c3_match & ~multicast_match) & rxi_cx_access;\n\n   //# address preparation for comparison based on the links position (horiz or vert)\n"], ["oh/elink/dv/elink_e16_model.v@1406:1416", "       rxi_cx_access <= tran_assembled;\n\n   assign rxi_c0_access   = (c0_match |  multicast_match) & rxi_cx_access;\n   assign rxi_c1_access   = (c1_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c3_access   = (c3_match & ~multicast_match) & rxi_cx_access;\n\n   //# address preparation for comparison based on the links position (horiz or vert)\n//   assign comp_addr[5:0]  = vertical_k ? {dstaddr[31:29],dstaddr[25:23]} : \n//                                         {dstaddr[28:26],dstaddr[22:20]} ;   \n   assign comp_addr[5:0]  = vertical_k ? dstaddr[31:26] : dstaddr[25:20];   \n"], ["oh/elink/dv/elink_e16_model.v@1404:1414", "       rxi_cx_access <= 1'b0;\n     else\n       rxi_cx_access <= tran_assembled;\n\n   assign rxi_c0_access   = (c0_match |  multicast_match) & rxi_cx_access;\n   assign rxi_c1_access   = (c1_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c3_access   = (c3_match & ~multicast_match) & rxi_cx_access;\n\n   //# address preparation for comparison based on the links position (horiz or vert)\n//   assign comp_addr[5:0]  = vertical_k ? {dstaddr[31:29],dstaddr[25:23]} : \n"], ["oh/elink/dv/elink_e16_model.v@1397:1411", "\n   //###########################################\n   //# Secondary-FIFOs transaction distribution\n   //###########################################\n\n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       rxi_cx_access <= 1'b0;\n     else\n       rxi_cx_access <= tran_assembled;\n\n   assign rxi_c0_access   = (c0_match |  multicast_match) & rxi_cx_access;\n   assign rxi_c1_access   = (c1_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n   assign rxi_c3_access   = (c3_match & ~multicast_match) & rxi_cx_access;\n"]], "Diff Content": {"Delete": [[1410, "   assign rxi_c2_access   = (c2_match & ~multicast_match) & rxi_cx_access;   \n"]], "Add": []}}