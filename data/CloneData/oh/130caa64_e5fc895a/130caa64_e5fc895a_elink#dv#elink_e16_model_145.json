{"Source Block": ["oh/elink/dv/elink_e16_model.v@1508:1518@HdlIdDef", "   // #########\n   // # Wires\n   // #########\n\n   wire \t   my_tran;      // this transaction is dedicated to current rxi_buffer\n   wire \t   new_tran;     // first cycle of the new transaction\n   wire [2*LW:0]   fifo_data_in; // even and odd bytes combined into short words for fifo \n   wire [2*LW:0]   fifo_data_out;// output of the fifo\n   wire [FAD:0]\t   wr_binary_next; // next value of the write pointer\n   wire [FAD:0]    rd_binary_next; // next value of the read pointer\n   wire \t   fifo_write; // write into the fifo\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1510:1520", "   // #########\n\n   wire \t   my_tran;      // this transaction is dedicated to current rxi_buffer\n   wire \t   new_tran;     // first cycle of the new transaction\n   wire [2*LW:0]   fifo_data_in; // even and odd bytes combined into short words for fifo \n   wire [2*LW:0]   fifo_data_out;// output of the fifo\n   wire [FAD:0]\t   wr_binary_next; // next value of the write pointer\n   wire [FAD:0]    rd_binary_next; // next value of the read pointer\n   wire \t   fifo_write; // write into the fifo\n   wire [FAD-1:0]  wr_addr; // write address of the fifo\n   wire [FAD-1:0]  rd_addr; // read address of the fifo\n"], ["oh/elink/dv/elink_e16_model.v@1507:1517", "\n   // #########\n   // # Wires\n   // #########\n\n   wire \t   my_tran;      // this transaction is dedicated to current rxi_buffer\n   wire \t   new_tran;     // first cycle of the new transaction\n   wire [2*LW:0]   fifo_data_in; // even and odd bytes combined into short words for fifo \n   wire [2*LW:0]   fifo_data_out;// output of the fifo\n   wire [FAD:0]\t   wr_binary_next; // next value of the write pointer\n   wire [FAD:0]    rd_binary_next; // next value of the read pointer\n"], ["oh/elink/dv/elink_e16_model.v@1509:1519", "   // # Wires\n   // #########\n\n   wire \t   my_tran;      // this transaction is dedicated to current rxi_buffer\n   wire \t   new_tran;     // first cycle of the new transaction\n   wire [2*LW:0]   fifo_data_in; // even and odd bytes combined into short words for fifo \n   wire [2*LW:0]   fifo_data_out;// output of the fifo\n   wire [FAD:0]\t   wr_binary_next; // next value of the write pointer\n   wire [FAD:0]    rd_binary_next; // next value of the read pointer\n   wire \t   fifo_write; // write into the fifo\n   wire [FAD-1:0]  wr_addr; // write address of the fifo\n"], ["oh/elink/dv/elink_e16_model.v@1516:1526", "   wire [FAD:0]\t   wr_binary_next; // next value of the write pointer\n   wire [FAD:0]    rd_binary_next; // next value of the read pointer\n   wire \t   fifo_write; // write into the fifo\n   wire [FAD-1:0]  wr_addr; // write address of the fifo\n   wire [FAD-1:0]  rd_addr; // read address of the fifo\n   wire \t   fifo_empty; // indication of the empty fifo\n   wire \t   stop_fifo_read; //one of the secondary fifos is full (stop reading)\n   \n   // ####################################################\n   // #        Sample input transaction\n   // # The positive edge FFs work all the time\n"]], "Diff Content": {"Delete": [[1513, "   wire \t   new_tran;     // first cycle of the new transaction\n"]], "Add": []}}