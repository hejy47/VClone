Source Block: oh/elink/dv/elink_e16_model.v@1426:1437@HdlStmAssign
   assign c0_match =  carry_high; // chip addr is bigger
   assign c1_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b01});//EQ   
   assign c2_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b10});//EQ  
   assign c3_match = ~(c0_match | c1_match | c2_match);
   //# multicast tran detection
   assign multicast_match = write & 
			    (ctrlmode[1:0]==2'b11) & ~(datamode[1:0] == 2'b11);




endmodule // link_rxi_assembler

Diff Content:
- 1431    assign multicast_match = write & 
- 1432 			    (ctrlmode[1:0]==2'b11) & ~(datamode[1:0] == 2'b11);
+ 1432 module elink_e16 (/*AUTOARG*/
+ 1432    rxi_rd_wait, rxi_wr_wait, txo_data, txo_lclk, txo_frame,
+ 1432    c0_mesh_access_out, c0_mesh_write_out, c0_mesh_dstaddr_out,
+ 1432    c0_mesh_srcaddr_out, c0_mesh_data_out, c0_mesh_datamode_out,
+ 1432    c0_mesh_ctrlmode_out, c0_emesh_wait_out, c0_mesh_wait_out,
+ 1432    reset, c0_clk_in, c1_clk_in, c2_clk_in, c3_clk_in, rxi_data,
+ 1432    rxi_lclk, rxi_frame, txo_rd_wait, txo_wr_wait, c0_mesh_access_in,
+ 1432    c0_mesh_write_in, c0_mesh_dstaddr_in, c0_mesh_srcaddr_in,
+ 1432    c0_mesh_data_in, c0_mesh_datamode_in, c0_mesh_ctrlmode_in,
+ 1432    c0_mesh_wait_in
+ 1432    );
+ 1432    parameter DW   = `CFG_DW  ;//data width  
+ 1432    parameter AW   = `CFG_AW  ;//address width
+ 1432    parameter LW   = `CFG_LW  ;//lvds tranceiver pairs per side
+ 1432    input             reset; 
+ 1432    input 	     c0_clk_in;
+ 1432    input 	     c1_clk_in;
+ 1432    input 	     c2_clk_in;
+ 1432    input 	     c3_clk_in;
+ 1432    input   [LW-1:0]  rxi_data;      // Byte word
+ 1432    input             rxi_lclk;      // receive clock (adjusted)
+ 1432    input             rxi_frame;     // indicates new transmission
+ 1432    input             txo_rd_wait;   // wait indicator on read transactions   
+ 1432    input             txo_wr_wait;   // wait indicator on write transactions  
+ 1432    output 	     rxi_rd_wait;   // wait indicator on read transaction  
+ 1432    output 	     rxi_wr_wait;   // wait indicator on write transaction  
+ 1432    output  [LW-1:0]  txo_data;      // Byte word
+ 1432    output            txo_lclk;      // transmit clock
+ 1432    output            txo_frame;     // indicates new transmission 
+ 1432    input 	    c0_mesh_access_in;  // access control from the mesh
+ 1432    input 	    c0_mesh_write_in;   // write control from the mesh
+ 1432    input [AW-1:0]   c0_mesh_dstaddr_in; // destination address from the mesh
+ 1432    input [AW-1:0]   c0_mesh_srcaddr_in; // source address from the mesh
+ 1432    input [DW-1:0]   c0_mesh_data_in;    // data from the mesh
+ 1432    input [1:0] 	    c0_mesh_datamode_in;// data mode from the mesh 
+ 1432    input [3:0] 	    c0_mesh_ctrlmode_in;// ctrl mode from the mesh
+ 1432    input 	    c0_mesh_wait_in;   // wait

Clone Blocks:
Clone Blocks 1:
oh/elink/dv/elink_e16_model.v@1421:1431
//   assign chip_addr_n[3:0] =~chip_addr[3:0];
   //# high comparison
//   assign {carry_high,comp_high[5:0]} = comp_addr[5:0] + {chip_addr_n[2:0],3'b101};
   assign {carry_high,comp_high[5:0]} = {1'b0,comp_addr[5:0]} - {1'b0,chip_addr[5:0]};
   //# channels matching
   assign c0_match =  carry_high; // chip addr is bigger
   assign c1_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b01});//EQ   
   assign c2_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b10});//EQ  
   assign c3_match = ~(c0_match | c1_match | c2_match);
   //# multicast tran detection
   assign multicast_match = write & 

Clone Blocks 2:
oh/elink/dv/elink_e16_model.v@1423:1433
//   assign {carry_high,comp_high[5:0]} = comp_addr[5:0] + {chip_addr_n[2:0],3'b101};
   assign {carry_high,comp_high[5:0]} = {1'b0,comp_addr[5:0]} - {1'b0,chip_addr[5:0]};
   //# channels matching
   assign c0_match =  carry_high; // chip addr is bigger
   assign c1_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b01});//EQ   
   assign c2_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b10});//EQ  
   assign c3_match = ~(c0_match | c1_match | c2_match);
   //# multicast tran detection
   assign multicast_match = write & 
			    (ctrlmode[1:0]==2'b11) & ~(datamode[1:0] == 2'b11);


Clone Blocks 3:
oh/elink/dv/elink_e16_model.v@1422:1432
   //# high comparison
//   assign {carry_high,comp_high[5:0]} = comp_addr[5:0] + {chip_addr_n[2:0],3'b101};
   assign {carry_high,comp_high[5:0]} = {1'b0,comp_addr[5:0]} - {1'b0,chip_addr[5:0]};
   //# channels matching
   assign c0_match =  carry_high; // chip addr is bigger
   assign c1_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b01});//EQ   
   assign c2_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b10});//EQ  
   assign c3_match = ~(c0_match | c1_match | c2_match);
   //# multicast tran detection
   assign multicast_match = write & 
			    (ctrlmode[1:0]==2'b11) & ~(datamode[1:0] == 2'b11);

Clone Blocks 4:
oh/elink/dv/elink_e16_model.v@1424:1434
   assign {carry_high,comp_high[5:0]} = {1'b0,comp_addr[5:0]} - {1'b0,chip_addr[5:0]};
   //# channels matching
   assign c0_match =  carry_high; // chip addr is bigger
   assign c1_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b01});//EQ   
   assign c2_match =  (comp_addr[5:0] == {chip_addr[5:2],3'b10});//EQ  
   assign c3_match = ~(c0_match | c1_match | c2_match);
   //# multicast tran detection
   assign multicast_match = write & 
			    (ctrlmode[1:0]==2'b11) & ~(datamode[1:0] == 2'b11);



