{"Source Block": ["oh/elink/dv/elink_e16_model.v@3955:3967@HdlStmAssign", "\n   //# Gray Pointer Conversion (for more reliable synchronization)!\n   assign wr_gray_next[FAD:0] = {1'b0,wr_binary_next[FAD:1]} ^ wr_binary_next[FAD:0];\n\n   //# FIFO full indication\n   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &\n                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &\n                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);\n\t\t\t      \n   always @ (posedge cclk or posedge reset)\n     if(reset)\n       wr_fifo_full <= 1'b0;\n     else if(cclk_en)\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@2283:2293", "\n   assign rd_addr[FAD-1:0]       = rd_binary_pointer[FAD-1:0];\n   assign rd_binary_next[FAD:0]  = rd_binary_pointer[FAD:0] + {{(FAD){1'b0}},fifo_read};\n\n   //# Gray Pointer Conversion (for more reliable synchronization)!\n   assign rd_gray_next[FAD:0]  = {1'b0,rd_binary_next[FAD:1]} ^ rd_binary_next[FAD:0];\n\n   //# FIFO empty indication\n   assign fifo_empty_next = (rd_gray_next[FAD:0]==wr_gray_pointer[FAD:0]);\n\n   always @ (posedge cclk or posedge reset)\n"], ["oh/elink/dv/elink_e16_model.v@3941:3956", "   //# While for the actual address calculation we use [FAD-1:0] bits only,\n   //# the bit FAD of the counter is needed in order to distinguish\n   //# between the fifo entry currently being written and the one\n   //# written in the previous \"round\" (FAD is a carry-out bit and is\n   //# switched every \"round\")\n   always @(posedge cclk or posedge reset)\n     if(reset)\n       wr_binary_pointer[FAD:0]     <= {(FAD+1){1'b0}};\n     else if(cclk_en)\n       if(wr_write)\n\t wr_binary_pointer[FAD:0]     <= wr_binary_next[FAD:0];\t  \n   \n   assign wr_addr[FAD-1:0]       = wr_binary_pointer[FAD-1:0];\n   assign wr_binary_next[FAD:0]  = wr_binary_pointer[FAD:0] + {{(FAD){1'b0}},wr_write};\n\n   //# Gray Pointer Conversion (for more reliable synchronization)!\n"], ["oh/elink/dv/elink_e16_model.v@3952:3962", "   \n   assign wr_addr[FAD-1:0]       = wr_binary_pointer[FAD-1:0];\n   assign wr_binary_next[FAD:0]  = wr_binary_pointer[FAD:0] + {{(FAD){1'b0}},wr_write};\n\n   //# Gray Pointer Conversion (for more reliable synchronization)!\n   assign wr_gray_next[FAD:0] = {1'b0,wr_binary_next[FAD:1]} ^ wr_binary_next[FAD:0];\n\n   //# FIFO full indication\n   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &\n                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &\n                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);\n"], ["oh/elink/dv/elink_e16_model.v@2251:2264", "   //# Gray Pointer Conversion (for more reliable synchronization)!\n   assign wr_gray_next_rlc[FAD:0] = {1'b0,wr_binary_next_rlc[FAD:1]} ^ \n\t\t\t\t    wr_binary_next_rlc[FAD:0];\n\n   //# FIFO full indication\n   assign fifo_full_next_rlc = \n\t\t\t   (wr_gray_next_rlc[FAD-2:0] == rd_gray_pointer_rlc[FAD-2:0]) &\n                           (wr_gray_next_rlc[FAD]     ^  rd_gray_pointer_rlc[FAD])     &\n                           (wr_gray_next_rlc[FAD-1]   ^  rd_gray_pointer_rlc[FAD-1]);\n\t\t\t      \n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       fifo_full_rlc <= 1'b0;\n     else \n"], ["oh/elink/dv/elink_e16_model.v@3959:3973", "   //# FIFO full indication\n   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &\n                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &\n                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);\n\t\t\t      \n   always @ (posedge cclk or posedge reset)\n     if(reset)\n       wr_fifo_full <= 1'b0;\n     else if(cclk_en)\n       wr_fifo_full <=wr_fifo_full_next;\n\n   //#############################\n   //# FIFO Read State Machine\n   //#############################\n    \n"]], "Diff Content": {"Delete": [[3960, "   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &\n"], [3961, "                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &\n"], [3962, "                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);\n"]], "Add": []}}