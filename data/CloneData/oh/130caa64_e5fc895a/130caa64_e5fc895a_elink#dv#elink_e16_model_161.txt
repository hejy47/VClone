Source Block: oh/elink/dv/elink_e16_model.v@1564:1574@HdlStmAssign

   //# frame rising edge detection
   assign new_tran = my_tran & frame_reg & ~frame_reg_del;

   //# bytes packaging into short words + new transaction indication
   assign fifo_data_in[2*LW:0] = {new_tran,data_even_reg[LW-1:0],data_odd_reg[LW-1:0]};

   //###############################################################################
   //#          Wait indication to the transmitter
   //# When one of the secondary fifos becomes full we send wait indication 
   //# to the transmitter.

Diff Content:
- 1569    assign fifo_data_in[2*LW:0] = {new_tran,data_even_reg[LW-1:0],data_odd_reg[LW-1:0]};
+ 1569    output 	     rxi_rd_wait;      // wait indicator on read transaction  
+ 1569    output 	     rxi_wr_wait;      // wait indicator on write transaction  
+ 1569    output  [LW-1:0]  txo_data;      // Byte word
+ 1569    output            txo_lclk;      // transmit clock (adjusted to the frame/data)
+ 1569    output            txo_frame;     // indicates new transmission 
+ 1569    output            c0_emesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c0_emesh_tran_out;  // serialized transaction
+ 1569    output            c3_emesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c3_emesh_tran_out;  // serialized transaction
+ 1569    output            c0_rdmesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c0_rdmesh_tran_out;  // serialized transaction
+ 1569    output            c1_rdmesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c1_rdmesh_tran_out;  // serialized transaction
+ 1569    output            c2_rdmesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c2_rdmesh_tran_out;  // serialized transaction
+ 1569    output            c3_rdmesh_frame_out; // transaction frame
+ 1569    output [2*LW-1:0] c3_rdmesh_tran_out;  // serialized transaction
+ 1569    output 	     c0_mesh_access_out;  // access control to the mesh
+ 1569    output 	     c0_mesh_write_out;   // write control to the mesh
+ 1569    output [AW-1:0]   c0_mesh_dstaddr_out; // destination address to the mesh
+ 1569    output [AW-1:0]   c0_mesh_srcaddr_out; // source address to the mesh
+ 1569    output [DW-1:0]   c0_mesh_data_out;    // data to the mesh
+ 1569    output [1:0]      c0_mesh_datamode_out;// data mode to the mesh 
+ 1569    output [3:0]      c0_mesh_ctrlmode_out;// ctrl mode to the mesh
+ 1569    output 	     c3_mesh_access_out;  // access control to the mesh
+ 1569    output 	     c3_mesh_write_out;   // write control to the mesh
+ 1569    output [AW-1:0]   c3_mesh_dstaddr_out; // destination address to the mesh
+ 1569    output [AW-1:0]   c3_mesh_srcaddr_out; // source address to the mesh
+ 1569    output [DW-1:0]   c3_mesh_data_out;    // data to the mesh
+ 1569    output [1:0]      c3_mesh_datamode_out;// data mode to the mesh 
+ 1569    output [3:0]      c3_mesh_ctrlmode_out;// ctrl mode to the mesh
+ 1569    output 	     c0_emesh_wait_out; // wait to the emesh   
+ 1569    output 	     c1_emesh_wait_out; // wait to the emesh   
+ 1569    output 	     c2_emesh_wait_out; // wait to the emesh   
+ 1569    output 	     c3_emesh_wait_out; // wait to the emesh   
+ 1569    output 	     c0_rdmesh_wait_out; // wait to the rdmesh   
+ 1569    output 	     c1_rdmesh_wait_out; // wait to the rdmesh   
+ 1569    output 	     c2_rdmesh_wait_out; // wait to the rdmesh   
+ 1569    output 	     c3_rdmesh_wait_out; // wait to the rdmesh   
+ 1569    output 	     c0_mesh_wait_out;  // wait to the mesh 
+ 1569    output 	     c3_mesh_wait_out;  // wait to the mesh 
+ 1569    /*AUTOINPUT*/
+ 1569    /*AUTOWIRE*/
+ 1569    link_receiver  link_receiver(/*AUTOINST*/
+ 1569 				.rxi_wr_wait	(rxi_wr_wait),
+ 1569 				.rxi_rd_wait	(rxi_rd_wait),
+ 1569 				.c0_emesh_frame_out(c0_emesh_frame_out),
+ 1569 				.c0_emesh_tran_out(c0_emesh_tran_out[2*LW-1:0]),
+ 1569 				.c3_emesh_frame_out(c3_emesh_frame_out),
+ 1569 				.c3_emesh_tran_out(c3_emesh_tran_out[2*LW-1:0]),
+ 1569 				.c0_rdmesh_frame_out(c0_rdmesh_frame_out),
+ 1569 				.c0_rdmesh_tran_out(c0_rdmesh_tran_out[2*LW-1:0]),
+ 1569 				.c1_rdmesh_frame_out(c1_rdmesh_frame_out),
+ 1569 				.c1_rdmesh_tran_out(c1_rdmesh_tran_out[2*LW-1:0]),
+ 1569 				.c2_rdmesh_frame_out(c2_rdmesh_frame_out),
+ 1569 				.c2_rdmesh_tran_out(c2_rdmesh_tran_out[2*LW-1:0]),
+ 1569 				.c3_rdmesh_frame_out(c3_rdmesh_frame_out),
+ 1569 				.c3_rdmesh_tran_out(c3_rdmesh_tran_out[2*LW-1:0]),
+ 1569 				.c0_mesh_access_out(c0_mesh_access_out),
+ 1569 				.c0_mesh_write_out(c0_mesh_write_out),
+ 1569 				.c0_mesh_dstaddr_out(c0_mesh_dstaddr_out[AW-1:0]),
+ 1569 				.c0_mesh_srcaddr_out(c0_mesh_srcaddr_out[AW-1:0]),
+ 1569 				.c0_mesh_data_out(c0_mesh_data_out[DW-1:0]),
+ 1569 				.c0_mesh_datamode_out(c0_mesh_datamode_out[1:0]),
+ 1569 				.c0_mesh_ctrlmode_out(c0_mesh_ctrlmode_out[3:0]),
+ 1569 				.c3_mesh_access_out(c3_mesh_access_out),
+ 1569 				.c3_mesh_write_out(c3_mesh_write_out),
+ 1569 				.c3_mesh_dstaddr_out(c3_mesh_dstaddr_out[AW-1:0]),
+ 1569 				.c3_mesh_srcaddr_out(c3_mesh_srcaddr_out[AW-1:0]),
+ 1569 				.c3_mesh_data_out(c3_mesh_data_out[DW-1:0]),
+ 1569 				.c3_mesh_datamode_out(c3_mesh_datamode_out[1:0]),
+ 1569 				.c3_mesh_ctrlmode_out(c3_mesh_ctrlmode_out[3:0]),
+ 1569 				.reset		(reset),
+ 1569 				.ext_yid_k	(ext_yid_k[3:0]),
+ 1569 				.ext_xid_k	(ext_xid_k[3:0]),
+ 1569 				.vertical_k	(vertical_k),
+ 1569 				.who_am_i	(who_am_i[3:0]),
+ 1569 				.cfg_extcomp_dis(cfg_extcomp_dis),
+ 1569 				.rxi_data	(rxi_data[LW-1:0]),
+ 1569 				.rxi_lclk	(rxi_lclk),
+ 1569 				.rxi_frame	(rxi_frame),
+ 1569 				.c0_clk_in	(c0_clk_in),
+ 1569 				.c1_clk_in	(c1_clk_in),
+ 1569 				.c2_clk_in	(c2_clk_in),
+ 1569 				.c3_clk_in	(c3_clk_in),
+ 1569 				.c0_emesh_wait_in(c0_emesh_wait_in),
+ 1569 				.c3_emesh_wait_in(c3_emesh_wait_in),
+ 1569 				.c0_mesh_wait_in(c0_mesh_wait_in),
+ 1569 				.c3_mesh_wait_in(c3_mesh_wait_in),
+ 1569 				.c0_rdmesh_wait_in(c0_rdmesh_wait_in),
+ 1569 				.c1_rdmesh_wait_in(c1_rdmesh_wait_in),
+ 1569 				.c2_rdmesh_wait_in(c2_rdmesh_wait_in),
+ 1569 				.c3_rdmesh_wait_in(c3_rdmesh_wait_in));

Clone Blocks:
