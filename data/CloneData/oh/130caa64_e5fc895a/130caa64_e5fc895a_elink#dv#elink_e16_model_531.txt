Source Block: oh/elink/dv/elink_e16_model.v@4293:4303@HdlStmAssign
	  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;
	  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;
       end

   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;
   assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;

   //# Request and rotate disable
   //# On the first cycle of the acknowledge the launch count is not incremented
   //# yet, therefore we have to force request and rotate disable "artificially"
   always @ (posedge txo_lclk or posedge reset)

Diff Content:
- 4298    assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;
+ 4298    always @ (posedge cclk)
+ 4298      if (cclk_en)
+ 4298        if (wr_write)
+ 4298 	 fifo_mem[wr_addr[FAD-1:0]] <= {even_byte[LW-1:0],tran_in[2*LW-1:LW]};
+ 4298    assign fifo_out_tlc[2*LW-1:0] = fifo_mem[rd_addr_tlc[FAD-1:0]];

Clone Blocks:
Clone Blocks 1:
oh/elink/dv/elink_e16_model.v@4292:4302
       begin
	  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;
	  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;
       end

   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;
   assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;

   //# Request and rotate disable
   //# On the first cycle of the acknowledge the launch count is not incremented
   //# yet, therefore we have to force request and rotate disable "artificially"

