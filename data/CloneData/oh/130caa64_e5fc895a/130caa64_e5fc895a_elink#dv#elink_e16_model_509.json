{"Source Block": ["oh/elink/dv/elink_e16_model.v@4248:4258@HdlIdDef", "   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@4247:4257", "   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n"], ["oh/elink/dv/elink_e16_model.v@4251:4261", "   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n"], ["oh/elink/dv/elink_e16_model.v@4253:4263", "   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n   wire [1:0] \t  burst_backup_inc_cnt;  // Incremented burst backup counter\n"], ["oh/elink/dv/elink_e16_model.v@4246:4256", "   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n"], ["oh/elink/dv/elink_e16_model.v@4249:4259", "   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n"], ["oh/elink/dv/elink_e16_model.v@4245:4255", "   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n"], ["oh/elink/dv/elink_e16_model.v@4250:4260", "   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n"], ["oh/elink/dv/elink_e16_model.v@4252:4262", "   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n   wire [LW-1:0]  byte_even;\n   wire [LW-1:0]  byte_odd;\n   wire \t  make_gap;     // make gap in the transaction frame\n   wire \t  single_write; // single write transaction\n   wire \t  double_write; // double write transaction\n   wire \t  burst_req_denied; // request of burst transaction is not acknowledged\n   wire \t  burst_backup_inc; // burst transaction backup counter increment\n"]], "Diff Content": {"Delete": [[4253, "   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n"]], "Add": []}}