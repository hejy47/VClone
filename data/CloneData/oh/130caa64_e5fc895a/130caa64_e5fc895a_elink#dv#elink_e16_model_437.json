{"Source Block": ["oh/elink/dv/elink_e16_model.v@3904:3917@HdlStmProcess", "   always @ (posedge cclk)\n     if (cclk_en)\n       if(!wr_fifo_full)\n\t even_byte[LW-1:0] <= tran_in[LW-1:0];\n\n   always @ (posedge cclk)\n     if (cclk_en)\n       if (wr_write)\n\t fifo_mem[wr_addr[FAD-1:0]] <= {even_byte[LW-1:0],tran_in[2*LW-1:LW]};\n   \n   //# Read (for dispatch)\n   assign fifo_out_tlc[2*LW-1:0] = fifo_mem[rd_addr_tlc[FAD-1:0]];\n\n   //# Read (first short word of the next transaction to dispatch)\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@3910:3920", "     if (cclk_en)\n       if (wr_write)\n\t fifo_mem[wr_addr[FAD-1:0]] <= {even_byte[LW-1:0],tran_in[2*LW-1:LW]};\n   \n   //# Read (for dispatch)\n   assign fifo_out_tlc[2*LW-1:0] = fifo_mem[rd_addr_tlc[FAD-1:0]];\n\n   //# Read (first short word of the next transaction to dispatch)\n   assign traninfo0_tlc[2*LW-1:0] = fifo_mem[rd_addr_traninfo0_tlc[FAD-1:0]];\n\n   //# Read (second short word of the next transaction to dispatch)\n"], ["oh/elink/dv/elink_e16_model.v@3899:3912", "   //# entries only.\n   //# In this case byte0 of the first entry of the transaction\n   //# ({byte0,ctrlmode[3:0],dstaddr[31:28]}) will be a \"zevel\" but we don't care\n   //# since this byte is replaced later anyway.\n   \n   always @ (posedge cclk)\n     if (cclk_en)\n       if(!wr_fifo_full)\n\t even_byte[LW-1:0] <= tran_in[LW-1:0];\n\n   always @ (posedge cclk)\n     if (cclk_en)\n       if (wr_write)\n\t fifo_mem[wr_addr[FAD-1:0]] <= {even_byte[LW-1:0],tran_in[2*LW-1:LW]};\n"]], "Diff Content": {"Delete": [[3909, "   always @ (posedge cclk)\n"], [3910, "     if (cclk_en)\n"], [3911, "       if (wr_write)\n"], [3912, "\t fifo_mem[wr_addr[FAD-1:0]] <= {even_byte[LW-1:0],tran_in[2*LW-1:LW]};\n"]], "Add": [[3912, "   link_txo_interface link_txo_interface(\n"], [3912, "\t\t\t\t\t .txo_data\t\t(txo_data[LW-1:0]),\n"], [3912, "\t\t\t\t\t .txo_frame\t\t(txo_frame),\n"], [3912, "\t\t\t\t\t .txo_wr_wait_int\t(txo_wr_wait_int),\n"], [3912, "\t\t\t\t\t .txo_rd_wait_int\t(txo_rd_wait_int),\n"], [3912, "\t\t\t\t\t .txo_lclk\t\t(txo_lclk),\n"], [3912, "\t\t\t\t\t .reset\t\t\t(reset),\n"], [3912, "\t\t\t\t\t .txo_wr_data_even\t(txo_wr_data_even[LW-1:0]),\n"], [3912, "\t\t\t\t\t .txo_wr_data_odd\t(txo_wr_data_odd[LW-1:0]),\n"], [3912, "\t\t\t\t\t .txo_wr_frame\t\t(txo_wr_frame),\n"], [3912, "\t\t\t\t\t .txo_wr_launch_req_tlc\t(txo_wr_launch_req_tlc),\n"], [3912, "\t\t\t\t\t .txo_wr_rotate_dis\t(txo_wr_rotate_dis),\n"], [3912, "\t\t\t\t\t .txo_rd_data_even\t(8'd0),\n"], [3912, "\t\t\t\t\t .txo_rd_data_odd\t(8'd0),\n"], [3912, "\t\t\t\t\t .txo_rd_frame\t\t(1'd0),\n"], [3912, "\t\t\t\t\t .txo_rd_launch_req_tlc\t(1'd0),\n"], [3912, "\t\t\t\t\t .txo_rd_rotate_dis\t(1'd0)\n"], [3912, "\t\t\t\t\t ); \n"]]}}