{"Source Block": ["oh/elink/dv/elink_e16_model.v@1540:1551@HdlStmProcess", "\t  frame_reg     <= rxi_frame;\n\t  frame_reg_del <= frame_reg;\n       end\n\n   //# even bytes\n   always @ (posedge rxi_lclk)\n     data_even_reg[LW-1:0] <= rxi_data[LW-1:0];\n\n   //# odd bytes\n   always @ (negedge rxi_lclk)\n     data_odd_reg[LW-1:0] <= rxi_data[LW-1:0];\n\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1527:1547", "   // # while the negative edge FFs can be disabled\n   // # by the state of the detected frame (to save power)  \n   // ####################################################     \n\n   //# frame\n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       begin\n\t  frame_reg     <= 1'b0;\n\t  frame_reg_del <= 1'b0;\n       end\n     else\n       begin\n\t  frame_reg     <= rxi_frame;\n\t  frame_reg_del <= frame_reg;\n       end\n\n   //# even bytes\n   always @ (posedge rxi_lclk)\n     data_even_reg[LW-1:0] <= rxi_data[LW-1:0];\n\n"], ["oh/elink/dv/elink_e16_model.v@1544:1555", "   //# even bytes\n   always @ (posedge rxi_lclk)\n     data_even_reg[LW-1:0] <= rxi_data[LW-1:0];\n\n   //# odd bytes\n   always @ (negedge rxi_lclk)\n     data_odd_reg[LW-1:0] <= rxi_data[LW-1:0];\n\n   //##################################################\n   //# We should differentiate between read and write\n   //# transactions since link_rxi_buffer can accept\n   //# the transactions of one type only.\n"]], "Diff Content": {"Delete": [[1545, "   always @ (posedge rxi_lclk)\n"], [1546, "     data_even_reg[LW-1:0] <= rxi_data[LW-1:0];\n"]], "Add": [[1546, "   input   [LW-1:0]  rxi_data;        // Byte word\n"], [1546, "   input             rxi_lclk;        // receive clock (adjusted to the frame/data)\n"], [1546, "   input             rxi_frame;       // indicates new transmission\n"]]}}