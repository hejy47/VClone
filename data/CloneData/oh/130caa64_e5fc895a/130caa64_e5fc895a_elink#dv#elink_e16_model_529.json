{"Source Block": ["oh/elink/dv/elink_e16_model.v@4280:4300@HdlStmProcess", "   //# create an \"artificial gap\" in the frame signal.\n   //# If burst request was denied we should de-assert frame signal \n   \n   assign make_gap = tran_read & ~burst_tran;\n\n   always @ (posedge txo_lclk or posedge reset)\n     if(reset)\n       begin\n\t  txo_launch_ack_del1 <= 1'b0;\n\t  txo_launch_ack_del2 <= 1'b0;\n       end\n     else\n       begin\n\t  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;\n\t  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;\n       end\n\n   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;\n   assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;\n\n   //# Request and rotate disable\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[4285, "   always @ (posedge txo_lclk or posedge reset)\n"], [4287, "       begin\n"], [4288, "\t  txo_launch_ack_del1 <= 1'b0;\n"], [4289, "\t  txo_launch_ack_del2 <= 1'b0;\n"], [4290, "       end\n"], [4291, "     else\n"], [4292, "       begin\n"], [4293, "\t  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;\n"], [4294, "\t  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;\n"], [4295, "       end\n"]], "Add": [[4285, "   always @ (posedge cclk or posedge reset)\n"], [4295, "       frame_del <= 1'b0;\n"], [4295, "     else if(cclk_en)\n"], [4295, "       if(!wr_fifo_full)\n"], [4295, "\t frame_del <= frame_in;\n"], [4295, "   assign wr_write = (frame_in | frame_del) & ~wr_fifo_full;\n"], [4295, "   assign tran_written = ~frame_in & frame_del & ~wr_fifo_full;\n"], [4295, "   always @ (posedge cclk)\n"], [4295, "     if (cclk_en)\n"], [4295, "       if(!wr_fifo_full)\n"], [4295, "\t even_byte[LW-1:0] <= tran_in[LW-1:0];\n"]]}}