{"Source Block": ["oh/elink/dv/elink_e16_model.v@1612:1624@HdlStmProcess", "     if(reset)\n       start_tran  <= 1'b0;\n     else if(fifo_read)\n       start_tran  <= fifo_data_out[2*LW];\n \n   always @ (posedge rxi_lclk)\n     if(fifo_read)\n       fifo_data_reg[2*LW-1:0] <= fifo_data_out[2*LW-1:0];\n\n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       fifo_data_val <= 1'b0;\n     else\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1606:1620", "\n   //# Since the size of the FIFO is parametrized I prefer to sample the output\n   //# data to prevent timing issues for the big number of entries (big mux on read)\n   //# This shouldn't add any performance loss just latency increase\n\n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       start_tran  <= 1'b0;\n     else if(fifo_read)\n       start_tran  <= fifo_data_out[2*LW];\n \n   always @ (posedge rxi_lclk)\n     if(fifo_read)\n       fifo_data_reg[2*LW-1:0] <= fifo_data_out[2*LW-1:0];\n\n"], ["oh/elink/dv/elink_e16_model.v@1616:1630", " \n   always @ (posedge rxi_lclk)\n     if(fifo_read)\n       fifo_data_reg[2*LW-1:0] <= fifo_data_out[2*LW-1:0];\n\n   always @ (posedge rxi_lclk or posedge reset)\n     if(reset)\n       fifo_data_val <= 1'b0;\n     else\n       fifo_data_val <= fifo_read;\n\n   //#####################################################################\n   //#                  FIFO Write State Machine\n   //# !!!\n   //# This FIFO will write the data in every time the FRAME IS HIGH and\n"]], "Diff Content": {"Delete": [[1617, "   always @ (posedge rxi_lclk)\n"], [1618, "     if(fifo_read)\n"], [1619, "       fifo_data_reg[2*LW-1:0] <= fifo_data_out[2*LW-1:0];\n"]], "Add": [[1619, "   input             c0_clk_in; // clock of the core\n"], [1619, "   input             c1_clk_in; // clock of the core\n"], [1619, "   input             c2_clk_in; // clock of the core\n"], [1619, "   input             c3_clk_in; // clock of the core\n"]]}}