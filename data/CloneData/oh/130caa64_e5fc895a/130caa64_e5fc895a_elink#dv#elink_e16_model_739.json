{"Source Block": ["oh/elink/dv/elink_e16_model.v@5691:5711@HdlStmProcess", "       access_reg <= 1'b0;\n     else if(clk_en)\n       if(~wait_int)\n\t access_reg <= access_in;\n      \n   always @ (posedge clk)\n     if(clk_en)\n       if(~wait_int & access_in)\n\t begin\n\t    write_reg           <= write_in;\n\t    datamode_reg[1:0]   <= datamode_in[1:0];\n\t    ctrlmode_reg[3:0]   <= ctrlmode_in[3:0];\n\t    data_reg[DW-1:0]    <= data_in[DW-1:0];\n\t    dstaddr_reg[AW-1:0] <= dstaddr_in[AW-1:0];\n\t    srcaddr_reg[AW-1:0] <= srcaddr_in[AW-1:0];\n\t end\n\n   //##########################\n   //# mesh output busses  \n   //##########################\n\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@5714:5734", "       access_out <= 1'b0;\n     else if(clk_en)\n       if(!wait_in)\n\t access_out <= access;\n\n   always @ (posedge clk)\n     if (clk_en)\n       if(!wait_in & access)\n\t begin\n\t    srcaddr_out[AW-1:0] <= srcaddr[AW-1:0];\n\t    data_out[DW-1:0]    <= data[DW-1:0];\n\t    write_out           <= write;\n\t    datamode_out[1:0]   <= datamode[1:0]; \n\t    dstaddr_out[AW-1:0] <= dstaddr[AW-1:0];\n\t    ctrlmode_out[3:0]   <= ctrlmode[3:0];\n\t end\n \n   //#####################\n   //# Wait out control\n   //#####################\n   always @ (posedge clk or posedge reset)\n"]], "Diff Content": {"Delete": [[5696, "   always @ (posedge clk)\n"], [5697, "     if(clk_en)\n"], [5698, "       if(~wait_int & access_in)\n"], [5699, "\t begin\n"], [5700, "\t    write_reg           <= write_in;\n"], [5701, "\t    datamode_reg[1:0]   <= datamode_in[1:0];\n"], [5702, "\t    ctrlmode_reg[3:0]   <= ctrlmode_in[3:0];\n"], [5703, "\t    data_reg[DW-1:0]    <= data_in[DW-1:0];\n"], [5704, "\t    dstaddr_reg[AW-1:0] <= dstaddr_in[AW-1:0];\n"], [5705, "\t    srcaddr_reg[AW-1:0] <= srcaddr_in[AW-1:0];\n"], [5706, "\t end\n"]], "Add": [[5706, "   /*link_txo_arbiter AUTO_TEMPLATE(\n"], [5706, "                                  .txo_wait            (txo_rd_wait),\n"], [5706, "                                  .txo_wait_int        (txo_rd_wait_int),\n"], [5706, "                                  .txo_launch_req_tlc  (txo_rd_launch_req_tlc),\n"], [5706, "                                  .txo_rotate_dis_tlc  (txo_rd_rotate_dis),\n"], [5706, "                                   );\n"], [5706, "    */\n"], [5706, "   link_txo_arbiter link_txo_arbiter (/*AUTOINST*/\n"], [5706, "\t\t\t\t      .txo_launch_req_tlc(txo_rd_launch_req_tlc), // Templated\n"], [5706, "\t\t\t\t      .txo_rotate_dis_tlc(txo_rd_rotate_dis), // Templated\n"], [5706, "\t\t\t\t      .c0_txo_launch_ack_tlc(c0_txo_launch_ack_tlc),\n"], [5706, "\t\t\t\t      .c1_txo_launch_ack_tlc(c1_txo_launch_ack_tlc),\n"], [5706, "\t\t\t\t      .c2_txo_launch_ack_tlc(c2_txo_launch_ack_tlc),\n"], [5706, "\t\t\t\t      .c3_txo_launch_ack_tlc(c3_txo_launch_ack_tlc),\n"], [5706, "\t\t\t\t      .txo_lclk\t\t(txo_lclk),\n"], [5706, "\t\t\t\t      .reset\t\t(reset),\n"], [5706, "\t\t\t\t      .txo_wait\t\t(txo_rd_wait),\t // Templated\n"], [5706, "\t\t\t\t      .txo_wait_int\t(txo_rd_wait_int), // Templated\n"], [5706, "\t\t\t\t      .c0_txo_launch_req_tlc(c0_txo_launch_req_tlc),\n"], [5706, "\t\t\t\t      .c0_txo_rotate_dis(c0_txo_rotate_dis),\n"], [5706, "\t\t\t\t      .c1_txo_launch_req_tlc(c1_txo_launch_req_tlc),\n"], [5706, "\t\t\t\t      .c1_txo_rotate_dis(c1_txo_rotate_dis),\n"], [5706, "\t\t\t\t      .c2_txo_launch_req_tlc(c2_txo_launch_req_tlc),\n"], [5706, "\t\t\t\t      .c2_txo_rotate_dis(c2_txo_rotate_dis),\n"], [5706, "\t\t\t\t      .c3_txo_launch_req_tlc(c3_txo_launch_req_tlc),\n"], [5706, "\t\t\t\t      .c3_txo_rotate_dis(c3_txo_rotate_dis));\n"]]}}