Source Block: oh/elink/dv/elink_e16_model.v@3959:3973@HdlStmProcess
   //# FIFO full indication
   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &
                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &
                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);
			      
   always @ (posedge cclk or posedge reset)
     if(reset)
       wr_fifo_full <= 1'b0;
     else if(cclk_en)
       wr_fifo_full <=wr_fifo_full_next;

   //#############################
   //# FIFO Read State Machine
   //#############################
    

Diff Content:
- 3964    always @ (posedge cclk or posedge reset)
- 3965      if(reset)
- 3966        wr_fifo_full <= 1'b0;
- 3967      else if(cclk_en)
- 3968        wr_fifo_full <=wr_fifo_full_next;
+ 3968    reg [3:0]   grants_reg;

Clone Blocks:
Clone Blocks 1:
oh/elink/dv/elink_e16_model.v@3955:3967

   //# Gray Pointer Conversion (for more reliable synchronization)!
   assign wr_gray_next[FAD:0] = {1'b0,wr_binary_next[FAD:1]} ^ wr_binary_next[FAD:0];

   //# FIFO full indication
   assign wr_fifo_full_next = (wr_gray_next[FAD-2:0] == rd_gray_pointer[FAD-2:0]) &
                              (wr_gray_next[FAD]     ^  rd_gray_pointer[FAD])     &
                              (wr_gray_next[FAD-1]   ^  rd_gray_pointer[FAD-1]);
			      
   always @ (posedge cclk or posedge reset)
     if(reset)
       wr_fifo_full <= 1'b0;
     else if(cclk_en)

Clone Blocks 2:
oh/elink/dv/elink_e16_model.v@2286:2296

   //# Gray Pointer Conversion (for more reliable synchronization)!
   assign rd_gray_next[FAD:0]  = {1'b0,rd_binary_next[FAD:1]} ^ rd_binary_next[FAD:0];

   //# FIFO empty indication
   assign fifo_empty_next = (rd_gray_next[FAD:0]==wr_gray_pointer[FAD:0]);

   always @ (posedge cclk or posedge reset)
     if(reset)
       fifo_empty <= 1'b1;
     else if(cclk_en)

Clone Blocks 3:
oh/elink/dv/elink_e16_model.v@2256:2270
   assign fifo_full_next_rlc = 
			   (wr_gray_next_rlc[FAD-2:0] == rd_gray_pointer_rlc[FAD-2:0]) &
                           (wr_gray_next_rlc[FAD]     ^  rd_gray_pointer_rlc[FAD])     &
                           (wr_gray_next_rlc[FAD-1]   ^  rd_gray_pointer_rlc[FAD-1]);
			      
   always @ (posedge rxi_lclk or posedge reset)
     if(reset)
       fifo_full_rlc <= 1'b0;
     else 
       fifo_full_rlc <= fifo_full_next_rlc;

   //#############################
   //# FIFO Read State Machine
   //#############################
    

