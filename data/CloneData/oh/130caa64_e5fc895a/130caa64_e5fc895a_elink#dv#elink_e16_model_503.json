{"Source Block": ["oh/elink/dv/elink_e16_model.v@4242:4252@HdlIdDef", "   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@4240:4250", "   wire [7:0]\t  tran_byte0; // Byte0 of the transaction\n   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n"], ["oh/elink/dv/elink_e16_model.v@4238:4248", "   wire [7:0] \t  next_ctrl;// Control type of next transaction\n   wire \t  type_match; // Reference and next transactions are of the same type\n   wire [7:0]\t  tran_byte0; // Byte0 of the transaction\n   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n"], ["oh/elink/dv/elink_e16_model.v@4237:4247", "   wire [7:0] \t  ref_ctrl; // Control type of reference transaction\n   wire [7:0] \t  next_ctrl;// Control type of next transaction\n   wire \t  type_match; // Reference and next transactions are of the same type\n   wire [7:0]\t  tran_byte0; // Byte0 of the transaction\n   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n"], ["oh/elink/dv/elink_e16_model.v@4239:4249", "   wire \t  type_match; // Reference and next transactions are of the same type\n   wire [7:0]\t  tran_byte0; // Byte0 of the transaction\n   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n"], ["oh/elink/dv/elink_e16_model.v@4243:4253", "   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n"], ["oh/elink/dv/elink_e16_model.v@4244:4254", "   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n"], ["oh/elink/dv/elink_e16_model.v@4241:4251", "   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n"], ["oh/elink/dv/elink_e16_model.v@4245:4255", "   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n   wire \t  jump_3entries;  // Jump forward three entries\n   wire \t  jump_3entries_write; // jump over srcaddr part of the tran on write\n   wire \t  jump_3entries_read;  // jump over data part of the transaction on read\n   wire \t  jump_1entry; // single entry \"jump\"\n   wire [2:0] \t  jump_value;  // value of the jump for read pointer\n   wire \t  txo_op_ack;       // \"operation\" acknowledge\n   wire \t  txo_op_ack_first; // first \"operation\" acknowledge cycle\n   wire [LW-1:0]  byte_even_mux;\n   wire [LW-1:0]  byte_odd_mux;\n"], ["oh/elink/dv/elink_e16_model.v@4236:4246", "   wire \t  next_inc0_match; // Next address match (un-incremented)\n   wire [7:0] \t  ref_ctrl; // Control type of reference transaction\n   wire [7:0] \t  next_ctrl;// Control type of next transaction\n   wire \t  type_match; // Reference and next transactions are of the same type\n   wire [7:0]\t  tran_byte0; // Byte0 of the transaction\n   wire \t  burst_tran; // Burst transaction\n   wire [2:0] \t  txo_launch_cnt_inc; // Incremented value of the counter\n   wire [2:0]\t  txo_launch_cnt_next;// Next value of the counter\n   wire \t  txo_launch_cnt_max; // The counter reached its maximum value\n   wire \t  tran_read;  // Transaction is read (last cycle of the transmission)\n   wire \t  jump_4entries;  // Jump forward four entries\n"]], "Diff Content": {"Delete": [[4247, "   wire \t  jump_3entries;  // Jump forward three entries\n"]], "Add": []}}