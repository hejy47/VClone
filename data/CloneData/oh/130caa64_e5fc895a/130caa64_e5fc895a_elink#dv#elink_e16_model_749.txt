Source Block: oh/elink/dv/elink_e16_model.v@5895:5909@HdlStmProcess

   assign toggle = in ? ~out :
		         out;
   

   always @ (posedge clk or posedge reset)
     if(reset)
       out <= 1'b0;
     else
       out <= toggle;
   
endmodule // e16_pulse2toggle




Diff Content:
- 5900    always @ (posedge clk or posedge reset)
- 5901      if(reset)
- 5902        out <= 1'b0;
- 5903      else
- 5904        out <= toggle;

Clone Blocks:
Clone Blocks 1:
oh/common/hdl/pulse2toggle.v@21:32
   
   //if input goes high, toggle output
   //note1: input can only be high for one clock cycle
   //note2: be careful with clock gating

   assign toggle = in ? ~out :
		         out;
   

   always @ (posedge clk or posedge reset)
     if(reset)
       out <= 1'b0;

Clone Blocks 2:
oh/elink/dv/elink_e16_model.v@5891:5902
   
   //if input goes high, toggle output
   //note1: input can only be high for one clock cycle
   //note2: be careful with clock gating

   assign toggle = in ? ~out :
		         out;
   

   always @ (posedge clk or posedge reset)
     if(reset)
       out <= 1'b0;

Clone Blocks 3:
oh/common/hdl/pulse2toggle.v@25:39

   assign toggle = in ? ~out :
		         out;
   

   always @ (posedge clk or posedge reset)
     if(reset)
       out <= 1'b0;
     else
       out <= toggle;
   
endmodule // pulse2toggle

/*
 Copyright (C) 2015 Adapteva, Inc. 

