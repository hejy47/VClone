{"Source Block": ["oh/elink/dv/elink_e16_model.v@2288:2302@HdlStmProcess", "   assign rd_gray_next[FAD:0]  = {1'b0,rd_binary_next[FAD:1]} ^ rd_binary_next[FAD:0];\n\n   //# FIFO empty indication\n   assign fifo_empty_next = (rd_gray_next[FAD:0]==wr_gray_pointer[FAD:0]);\n\n   always @ (posedge cclk or posedge reset)\n     if(reset)\n       fifo_empty <= 1'b1;\n     else if(cclk_en)\n       fifo_empty <= fifo_empty_next;\n\n   //####################################################\n   //# Synchronization between rd/wr domains\n   //####################################################\n\n"], "Clone Blocks": [["oh/memory/hdl/fifo_empty_block.v@63:73", "   assign rd_gray_next[AW:0] = {1'b0,rd_binary_next[AW:1]} ^ \n\t\t\t       rd_binary_next[AW:0];\n\n\n   //# FIFO empty indication\n   assign rd_fifo_empty_next = (rd_gray_next[AW:0]==rd_wr_gray_pointer[AW:0]);\n\n   always @ (posedge rd_clk or posedge reset)\n     if(reset)\n       rd_fifo_empty <= 1'b1;\n     else \n"], ["oh/elink/dv/elink_e16_model.v@2286:2296", "\n   //# Gray Pointer Conversion (for more reliable synchronization)!\n   assign rd_gray_next[FAD:0]  = {1'b0,rd_binary_next[FAD:1]} ^ rd_binary_next[FAD:0];\n\n   //# FIFO empty indication\n   assign fifo_empty_next = (rd_gray_next[FAD:0]==wr_gray_pointer[FAD:0]);\n\n   always @ (posedge cclk or posedge reset)\n     if(reset)\n       fifo_empty <= 1'b1;\n     else if(cclk_en)\n"]], "Diff Content": {"Delete": [[2293, "   always @ (posedge cclk or posedge reset)\n"], [2294, "     if(reset)\n"], [2295, "       fifo_empty <= 1'b1;\n"], [2296, "     else if(cclk_en)\n"], [2297, "       fifo_empty <= fifo_empty_next;\n"]], "Add": [[2297, "   assign my_tran = ~(rd_tran ^ rxi_rd);\n"], [2297, "   always @ (posedge rxi_lclk)\n"], [2297, "     if(~frame_reg)            //will stop sampling when byte0 is received\n"], [2297, "       rd_tran <= rxi_data[7];\n"], [2297, "   assign new_tran = my_tran & frame_reg & ~frame_reg_del;\n"]]}}