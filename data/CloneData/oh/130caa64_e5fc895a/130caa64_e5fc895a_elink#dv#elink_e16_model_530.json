{"Source Block": ["oh/elink/dv/elink_e16_model.v@4292:4302@HdlStmAssign", "       begin\n\t  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;\n\t  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;\n       end\n\n   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;\n   assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;\n\n   //# Request and rotate disable\n   //# On the first cycle of the acknowledge the launch count is not incremented\n   //# yet, therefore we have to force request and rotate disable \"artificially\"\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@4293:4303", "\t  txo_launch_ack_del1 <= txo_launch_ack      & ~make_gap;\n\t  txo_launch_ack_del2 <= txo_launch_ack_del1 & ~burst_req_denied;\n       end\n\n   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;\n   assign txo_op_ack_first = txo_launch_ack_del1 & ~txo_launch_ack_del2;\n\n   //# Request and rotate disable\n   //# On the first cycle of the acknowledge the launch count is not incremented\n   //# yet, therefore we have to force request and rotate disable \"artificially\"\n   always @ (posedge txo_lclk or posedge reset)\n"]], "Diff Content": {"Delete": [[4297, "   assign txo_op_ack       = txo_launch_ack      &  txo_launch_ack_del1;\n"]], "Add": []}}