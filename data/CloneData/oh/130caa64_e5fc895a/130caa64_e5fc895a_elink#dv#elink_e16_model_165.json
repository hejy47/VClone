{"Source Block": ["oh/elink/dv/elink_e16_model.v@1600:1610@HdlStmAssign", "   always @ (posedge rxi_lclk)\n     if (fifo_write)\n       fifo_mem[wr_addr[FAD-1:0]] <= fifo_data_in[2*LW:0];\n\n   //# Read from fifo\n   assign fifo_data_out[2*LW:0] = fifo_mem[rd_addr[FAD-1:0]];\n\n   //# Since the size of the FIFO is parametrized I prefer to sample the output\n   //# data to prevent timing issues for the big number of entries (big mux on read)\n   //# This shouldn't add any performance loss just latency increase\n\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@1595:1607", "\n   //##################################\n   //#   Input FIFO of the receiver\n   //##################################\n\n   always @ (posedge rxi_lclk)\n     if (fifo_write)\n       fifo_mem[wr_addr[FAD-1:0]] <= fifo_data_in[2*LW:0];\n\n   //# Read from fifo\n   assign fifo_data_out[2*LW:0] = fifo_mem[rd_addr[FAD-1:0]];\n\n   //# Since the size of the FIFO is parametrized I prefer to sample the output\n"]], "Diff Content": {"Delete": [[1605, "   assign fifo_data_out[2*LW:0] = fifo_mem[rd_addr[FAD-1:0]];\n"]], "Add": [[1605, "   parameter LW   = `CFG_LW;//lvds tranceiver pairs per side\n"], [1605, "   parameter DW   = `CFG_DW;//data width  \n"], [1605, "   parameter AW   = `CFG_AW;//address width\n"], [1605, "   input             reset;     // reset input\n"], [1605, "   input [3:0] \t     ext_yid_k; // external y-id \n"], [1605, "   input [3:0] \t     ext_xid_k; // external x-id\n"], [1605, "   input             vertical_k;// specifies if block is vertical or horizontal\n"], [1605, "   input [3:0] \t     who_am_i;  // specifies what link is that (north,east,south,west)\n"], [1605, "   input \t     cfg_extcomp_dis;// Disable external coordinates comparison\n"], [1605, "   input [LW-1:0]    rxi_data;  // Byte word\n"], [1605, "   input             rxi_lclk;  // receive clock (adjusted to the frame/data)\n"], [1605, "   input             rxi_frame; // indicates new transmission\n"]]}}