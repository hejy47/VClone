{"Source Block": ["oh/elink/dv/elink_e16_model.v@4363:4373@HdlStmAssign", "//   assign single_write = ref_access  & ref_write  & ~(&(ref_datamode[1:0]));\n   assign single_write = 1'b0; // No special treatment for single write\n   assign double_write = next_access & next_write &  (&(next_datamode[1:0]));\n\n   //# compare address\n   assign ref_dstaddr_inc8[AW-1:0] = ref_dstaddr[AW-1:0]+{{(AW-4){1'b0}},4'b1000};\n\n   assign next_inc8_match = (ref_dstaddr_inc8[AW-1:0] == next_dstaddr[AW-1:0]);\n   assign next_inc0_match = (ref_dstaddr[AW-1:0]      == next_dstaddr[AW-1:0]);\n\n   assign ref_ctrl[7:0]  = {ref_ctrlmode[3:0], ref_datamode[1:0], ref_write, ref_access};\n"], "Clone Blocks": [["oh/elink/dv/elink_e16_model.v@4368:4378", "   assign ref_dstaddr_inc8[AW-1:0] = ref_dstaddr[AW-1:0]+{{(AW-4){1'b0}},4'b1000};\n\n   assign next_inc8_match = (ref_dstaddr_inc8[AW-1:0] == next_dstaddr[AW-1:0]);\n   assign next_inc0_match = (ref_dstaddr[AW-1:0]      == next_dstaddr[AW-1:0]);\n\n   assign ref_ctrl[7:0]  = {ref_ctrlmode[3:0], ref_datamode[1:0], ref_write, ref_access};\n   assign next_ctrl[7:0] = {next_ctrlmode[3:0],next_datamode[1:0],next_write,next_access};\n\n   assign type_match = (ref_ctrl[7:0] == next_ctrl[7:0]);\n\n   //# burst mode determination\n"], ["oh/elink/dv/elink_e16_model.v@4366:4376", "\n   //# compare address\n   assign ref_dstaddr_inc8[AW-1:0] = ref_dstaddr[AW-1:0]+{{(AW-4){1'b0}},4'b1000};\n\n   assign next_inc8_match = (ref_dstaddr_inc8[AW-1:0] == next_dstaddr[AW-1:0]);\n   assign next_inc0_match = (ref_dstaddr[AW-1:0]      == next_dstaddr[AW-1:0]);\n\n   assign ref_ctrl[7:0]  = {ref_ctrlmode[3:0], ref_datamode[1:0], ref_write, ref_access};\n   assign next_ctrl[7:0] = {next_ctrlmode[3:0],next_datamode[1:0],next_write,next_access};\n\n   assign type_match = (ref_ctrl[7:0] == next_ctrl[7:0]);\n"], ["oh/elink/dv/elink_e16_model.v@4365:4375", "   assign double_write = next_access & next_write &  (&(next_datamode[1:0]));\n\n   //# compare address\n   assign ref_dstaddr_inc8[AW-1:0] = ref_dstaddr[AW-1:0]+{{(AW-4){1'b0}},4'b1000};\n\n   assign next_inc8_match = (ref_dstaddr_inc8[AW-1:0] == next_dstaddr[AW-1:0]);\n   assign next_inc0_match = (ref_dstaddr[AW-1:0]      == next_dstaddr[AW-1:0]);\n\n   assign ref_ctrl[7:0]  = {ref_ctrlmode[3:0], ref_datamode[1:0], ref_write, ref_access};\n   assign next_ctrl[7:0] = {next_ctrlmode[3:0],next_datamode[1:0],next_write,next_access};\n\n"], ["oh/elink/dv/elink_e16_model.v@4369:4379", "\n   assign next_inc8_match = (ref_dstaddr_inc8[AW-1:0] == next_dstaddr[AW-1:0]);\n   assign next_inc0_match = (ref_dstaddr[AW-1:0]      == next_dstaddr[AW-1:0]);\n\n   assign ref_ctrl[7:0]  = {ref_ctrlmode[3:0], ref_datamode[1:0], ref_write, ref_access};\n   assign next_ctrl[7:0] = {next_ctrlmode[3:0],next_datamode[1:0],next_write,next_access};\n\n   assign type_match = (ref_ctrl[7:0] == next_ctrl[7:0]);\n\n   //# burst mode determination\n   assign burst_tran = ~cfg_burst_dis  & // bursting is enabled by user\n"]], "Diff Content": {"Delete": [[4368, "   assign ref_dstaddr_inc8[AW-1:0] = ref_dstaddr[AW-1:0]+{{(AW-4){1'b0}},4'b1000};\n"]], "Add": [[4368, "   assign wr_addr[FAD-1:0]       = wr_binary_pointer[FAD-1:0];\n"], [4368, "   assign wr_binary_next[FAD:0]  = wr_binary_pointer[FAD:0] + {{(FAD){1'b0}},wr_write};\n"]]}}