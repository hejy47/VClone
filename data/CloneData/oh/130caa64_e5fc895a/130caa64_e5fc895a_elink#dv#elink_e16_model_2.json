{"Source Block": ["oh/elink/dv/elink_e16_model.v@292:306@HdlStmProcess", "   //Counter For Generating Toggling Edges\n   //always @ (posedge clk_in or posedge reset)\n   //if(reset)\n   //counter[5:0] <= 6'b000001;// Reset value\n\n   always @ (posedge clk_in)\n     if(posedge_match)\n       counter[5:0] <= 6'b000001;// Self resetting\n     else\n       counter[5:0] <= (counter[5:0]+6'b000001);\n   \n   assign posedge_match    = (counter[5:0]==div_cfg_dec[5:0]);\n   assign negedge_match    = (counter[5:0]=={1'b0,div_cfg_dec[5:1]}); \n   assign posedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}));\n   assign negedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}+{1'b0,div_cfg_dec[5:1]})); \n"], "Clone Blocks": [["oh/common/hdl/clock_divider.v@70:80", "       else\n\t counter[7:0] <= (counter[7:0] + 8'b00000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n     if(reset)\n"], ["oh/common/hdl/clock_divider.v@69:79", "\t counter[7:0] <= 8'b000001;// Self resetting\n       else\n\t counter[7:0] <= (counter[7:0] + 8'b00000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n"], ["oh/common/hdl/clock_divider.v@68:78", "     else if(posedge_match | divcfg_change)\n\t counter[7:0] <= 8'b000001;// Self resetting\n       else\n\t counter[7:0] <= (counter[7:0] + 8'b00000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n"], ["oh/elink/dv/elink_e16_model.v@299:309", "       counter[5:0] <= 6'b000001;// Self resetting\n     else\n       counter[5:0] <= (counter[5:0]+6'b000001);\n   \n   assign posedge_match    = (counter[5:0]==div_cfg_dec[5:0]);\n   assign negedge_match    = (counter[5:0]=={1'b0,div_cfg_dec[5:1]}); \n   assign posedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}));\n   assign negedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}+{1'b0,div_cfg_dec[5:1]})); \n\t\t\t      \n   //Divided clock\n   //always @ (posedge clk_in or posedge reset)\n"], ["oh/elink/dv/elink_e16_model.v@300:310", "     else\n       counter[5:0] <= (counter[5:0]+6'b000001);\n   \n   assign posedge_match    = (counter[5:0]==div_cfg_dec[5:0]);\n   assign negedge_match    = (counter[5:0]=={1'b0,div_cfg_dec[5:1]}); \n   assign posedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}));\n   assign negedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}+{1'b0,div_cfg_dec[5:1]})); \n\t\t\t      \n   //Divided clock\n   //always @ (posedge clk_in or posedge reset)\n   //if(reset)\n"], ["oh/elink/dv/elink_e16_model.v@301:311", "       counter[5:0] <= (counter[5:0]+6'b000001);\n   \n   assign posedge_match    = (counter[5:0]==div_cfg_dec[5:0]);\n   assign negedge_match    = (counter[5:0]=={1'b0,div_cfg_dec[5:1]}); \n   assign posedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}));\n   assign negedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}+{1'b0,div_cfg_dec[5:1]})); \n\t\t\t      \n   //Divided clock\n   //always @ (posedge clk_in or posedge reset)\n   //if(reset)\n   //clk_out_reg <= 1'b0;   \n"], ["oh/common/hdl/clock_divider.v@71:82", "\t counter[7:0] <= (counter[7:0] + 8'b00000001);\n   \n   assign posedge_match    = (counter[7:0]==divcfg_dec[7:0]);\n   assign negedge_match    = (counter[7:0]=={1'b0,divcfg_dec[7:1]}); \n   assign posedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]}));\n   assign negedge90_match  = (counter[7:0]==({2'b00,divcfg_dec[7:2]} + \n\t\t\t\t\t     {1'b0,divcfg_dec[7:1]})); \n\t\t\t      \n   always @ (posedge clkin or posedge reset)\n     if(reset)\n       clkout_reg <= 1'b0;   \n     else if(posedge_match)\n"], ["oh/elink/dv/elink_e16_model.v@298:308", "     if(posedge_match)\n       counter[5:0] <= 6'b000001;// Self resetting\n     else\n       counter[5:0] <= (counter[5:0]+6'b000001);\n   \n   assign posedge_match    = (counter[5:0]==div_cfg_dec[5:0]);\n   assign negedge_match    = (counter[5:0]=={1'b0,div_cfg_dec[5:1]}); \n   assign posedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}));\n   assign negedge90_match  = (counter[5:0]==({2'b00,div_cfg_dec[5:2]}+{1'b0,div_cfg_dec[5:1]})); \n\t\t\t      \n   //Divided clock\n"]], "Diff Content": {"Delete": [[297, "   always @ (posedge clk_in)\n"], [298, "     if(posedge_match)\n"]], "Add": [[298, "   always @ (posedge clk_in or posedge reset)\n"], [298, "     if (reset)\n"], [298, "       counter[5:0] <= 6'b000001;   \n"], [298, "     else if(posedge_match)\n"]]}}