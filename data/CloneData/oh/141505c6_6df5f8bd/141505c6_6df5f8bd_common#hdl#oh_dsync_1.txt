Source Block: oh/common/hdl/oh_dsync.v@16:41@HdlStmIf
    input  din, // input data
    output dout    // synchronized data
    );

   generate
      if(TYPE=="soft")
	begin
	   reg [PS:0] sync_pipe;
	   always @ (posedge clk or negedge nreset)
	     if(!nreset)
	       sync_pipe[PS:0] <= 'b0;
	     else
	       sync_pipe[PS:0] <= {sync_pipe[PS-1:0],din};
	   // drive randomize delay from testbench
	   assign dout = (DELAY & sync_pipe[PS]) |  //extra cycle
			 (~DELAY & sync_pipe[PS-1]); //default
	end // block: reg
      else
	begin
	   asic_dsync asic_dsync (.clk(clk),
				  .nreset(nreset),
				  .din(din),
				  .dout(dout));
	end
   endgenerate
endmodule // oh_dsync

Diff Content:
- 21       if(TYPE=="soft")
- 23 	   reg [PS:0] sync_pipe;
- 26 	       sync_pipe[PS:0] <= 'b0;
- 28 	       sync_pipe[PS:0] <= {sync_pipe[PS-1:0],din};
- 30 	   assign dout = (DELAY & sync_pipe[PS]) |  //extra cycle
- 31 			 (~DELAY & sync_pipe[PS-1]); //default
- 35 	   asic_dsync asic_dsync (.clk(clk),
- 36 				  .nreset(nreset),
- 37 				  .din(din),
- 38 				  .dout(dout));
+ 21       if(SYN=="true")
+ 23 	   reg [SYNCPIPE:0] sync_pipe;
+ 26 	       sync_pipe[SYNCPIPE:0] <= 'b0;
+ 28 	       sync_pipe[SYNCPIPE:0] <= {sync_pipe[SYNCPIPE-1:0],din};
+ 31 	   assign dout = (DELAY & sync_pipe[SYNCPIPE]) |  //extra cycle
+ 31 			 (~DELAY & sync_pipe[SYNCPIPE-1]); //default
+ 38 	   asic_dsync  #(.TYPE(TYPE),
+ 38 			 .SYNCPIPE(SYNCPIPE))
+ 38 	   asic_dsync (.clk(clk),
+ 38 		       .nreset(nreset),
+ 38 		       .din(din),
+ 38 		       .dout(dout));

Clone Blocks:
