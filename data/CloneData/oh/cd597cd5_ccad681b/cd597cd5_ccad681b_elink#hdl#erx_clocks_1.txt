Source Block: oh/elink/hdl/erx_clocks.v@66:76@HdlIdDef
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;

   
   //wrap around counter that generates a 1 cycle heartbeat       
   //free running counter...
   always @ (posedge sys_clk)

Diff Content:
+ 71    reg [1:0]   reset_pipe_lclkb;    
+ 71    reg [1:0]   reset_pipe_lclk_div4b;   

Clone Blocks:
Clone Blocks 1:
oh/elink/hdl/erx_clocks.v@62:72
   //###########################
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;


Clone Blocks 2:
oh/elink/hdl/erx_clocks.v@63:73
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;

   

Clone Blocks 3:
oh/elink/hdl/eclocks.v@121:131
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   wire	       reset_in;
   reg 	       reset_sync;

   reg [2:0]   reset_state;

   //wrap around counter that generates a 1 cycle heartbeat       
   //free running counter...

Clone Blocks 4:
oh/elink/hdl/erx_clocks.v@65:75
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;

   
   //wrap around counter that generates a 1 cycle heartbeat       
   //free running counter...

Clone Blocks 5:
oh/elink/hdl/eclocks.v@118:128
   
   //###########################
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   wire	       reset_in;
   reg 	       reset_sync;

   reg [2:0]   reset_state;

Clone Blocks 6:
oh/elink/hdl/erx_clocks.v@61:71
   
   //###########################
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;

Clone Blocks 7:
oh/elink/hdl/eclocks.v@119:129
   //###########################
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   wire	       reset_in;
   reg 	       reset_sync;

   reg [2:0]   reset_state;


Clone Blocks 8:
oh/elink/hdl/erx_clocks.v@64:74
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   reg 	       pll_locked_reg;
   reg 	       pll_locked_sync;     
   reg [2:0]   reset_state;
   wire        pll_reset;

   
   //wrap around counter that generates a 1 cycle heartbeat       

Clone Blocks 9:
oh/elink/hdl/eclocks.v@120:130
   // RESET STATE MACHINE
   //###########################
  
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   wire	       reset_in;
   reg 	       reset_sync;

   reg [2:0]   reset_state;

   //wrap around counter that generates a 1 cycle heartbeat       

Clone Blocks 10:
oh/elink/hdl/eclocks.v@123:133
   reg [RCW:0] reset_counter = 'b0; //works b/c of free running counter!
   reg 	       heartbeat;   
   wire	       reset_in;
   reg 	       reset_sync;

   reg [2:0]   reset_state;

   //wrap around counter that generates a 1 cycle heartbeat       
   //free running counter...
   always @ (posedge sys_clk)
     begin

