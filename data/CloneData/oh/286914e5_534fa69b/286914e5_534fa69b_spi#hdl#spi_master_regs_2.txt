Source Block: oh/spi/hdl/spi_master_regs.v@192:204@HdlStmAssign
   oh_edge2pulse 
     e2pulse (.out (wait_pulse),
   	      .clk (clk),
	      .in  (access));
   
   assign wait_out = wait_in  | 
		     autotran |
		     wait_pulse;

   assign dstaddr_out[AW-1:0] = srcaddr_in[AW-1:0];
   assign data_out[31:0]      = read_data[31:0];
   assign srcaddr_out[31:0]   = 32'b0;   
   assign ctrlmode_out[4:0]   = ctrlmode_in[4:0];

Diff Content:
- 197    assign wait_out = wait_in  | 
- 198 		     autotran |
- 199 		     wait_pulse;
+ 199 /*wait_in   | 
+ 199 		     fifo_wait |
+ 199 		     autotran  |
+ 199 		     wait_pulse;
+ 199 */

Clone Blocks:
Clone Blocks 1:
oh/spi/hdl/spi_master_regs.v@199:209
		     wait_pulse;

   assign dstaddr_out[AW-1:0] = srcaddr_in[AW-1:0];
   assign data_out[31:0]      = read_data[31:0];
   assign srcaddr_out[31:0]   = 32'b0;   
   assign ctrlmode_out[4:0]   = ctrlmode_in[4:0];
   assign ctrlmode_out[4:0]   = datamode_in[4:0];

			      
   
   emesh2packet e2p (.write_out		(1'b1),

Clone Blocks 2:
oh/spi/hdl/spi_master_regs.v@198:208
		     autotran |
		     wait_pulse;

   assign dstaddr_out[AW-1:0] = srcaddr_in[AW-1:0];
   assign data_out[31:0]      = read_data[31:0];
   assign srcaddr_out[31:0]   = 32'b0;   
   assign ctrlmode_out[4:0]   = ctrlmode_in[4:0];
   assign ctrlmode_out[4:0]   = datamode_in[4:0];

			      
   

Clone Blocks 3:
oh/spi/hdl/spi_master_regs.v@197:207
   assign wait_out = wait_in  | 
		     autotran |
		     wait_pulse;

   assign dstaddr_out[AW-1:0] = srcaddr_in[AW-1:0];
   assign data_out[31:0]      = read_data[31:0];
   assign srcaddr_out[31:0]   = 32'b0;   
   assign ctrlmode_out[4:0]   = ctrlmode_in[4:0];
   assign ctrlmode_out[4:0]   = datamode_in[4:0];

			      

Clone Blocks 4:
oh/spi/hdl/spi_master_regs.v@196:206
   
   assign wait_out = wait_in  | 
		     autotran |
		     wait_pulse;

   assign dstaddr_out[AW-1:0] = srcaddr_in[AW-1:0];
   assign data_out[31:0]      = read_data[31:0];
   assign srcaddr_out[31:0]   = 32'b0;   
   assign ctrlmode_out[4:0]   = ctrlmode_in[4:0];
   assign ctrlmode_out[4:0]   = datamode_in[4:0];


