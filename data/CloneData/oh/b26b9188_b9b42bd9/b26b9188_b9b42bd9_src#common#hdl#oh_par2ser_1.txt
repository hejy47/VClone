Source Block: oh/src/common/hdl/oh_par2ser.v@50:66@HdlStmProcess
      
   //wait until valid data is finished
   assign wait_out  = wait_in | busy;
   
   // shift register
   always @ (posedge clk)
     if(start_transfer)
       shiftreg[PW-1:0] = din[PW-1:0];
     else if(shift & lsbfirst)		 
       shiftreg[PW-1:0] = {{(SW){fill}}, shiftreg[PW-1:SW]};
     else if(shift)
       shiftreg[PW-1:0] = {shiftreg[PW-SW-1:0],{(SW){fill}}};
   

   assign dout[SW-1:0] = lsbfirst ? shiftreg[SW-1:0] : 
			            shiftreg[PW-1:PW-SW];	


Diff Content:
- 55    always @ (posedge clk)
- 56      if(start_transfer)
+ 56    always @ (posedge clk or negedge nreset)
+ 56      if(!nreset)
+ 56        shiftreg[PW-1:0] = 'b0;   
+ 56      else if(start_transfer)

Clone Blocks:
