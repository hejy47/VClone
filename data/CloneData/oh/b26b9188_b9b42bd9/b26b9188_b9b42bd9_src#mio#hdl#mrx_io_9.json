{"Source Block": ["oh/src/mio/hdl/mrx_io.v@89:103@HdlStmProcess", "     if(~rx_frame)\n       byte0_sel <= 1'b1;\n     else if (~ddr_mode)\n       byte0_sel <= rx_frame ^ byte0_sel;\n   \n   always @ (posedge rx_clk)\n     if(byte0_sel)\n       sdr_data[NMIO-1:0]  <= rx_packet[NMIO-1:0];\n     else\n       sdr_data[2*NMIO-1:NMIO] <= rx_packet[NMIO-1:0];\n\n   //########################################\n   //# HANDL DDR/SDR\n   //########################################\n   \n"], "Clone Blocks": [["oh/src/mio/hdl/mrx_io.v@83:97", "   //########################################\n   //# DATA (SDR) \n   //########################################\n   //select 2nd byte (stall on this signal)\n\n   always @ (posedge rx_clk)\n     if(~rx_frame)\n       byte0_sel <= 1'b1;\n     else if (~ddr_mode)\n       byte0_sel <= rx_frame ^ byte0_sel;\n   \n   always @ (posedge rx_clk)\n     if(byte0_sel)\n       sdr_data[NMIO-1:0]  <= rx_packet[NMIO-1:0];\n     else\n"]], "Diff Content": {"Delete": [[94, "   always @ (posedge rx_clk)\n"], [95, "     if(byte0_sel)\n"], [96, "       sdr_data[NMIO-1:0]  <= rx_packet[NMIO-1:0];\n"], [98, "       sdr_data[2*NMIO-1:NMIO] <= rx_packet[NMIO-1:0];\n"]], "Add": [[96, "   always @ (posedge rx_clk or negedge io_nreset)\n"], [96, "     if(!io_nreset)\n"], [96, "       rx_access_reg[1:0] <= 1'b0;\n"], [98, "       rx_access_reg[1:0] <= {rx_access_reg[0],rx_access};\n"], [98, "   assign io_frame = ddr_mode ? rx_access_reg[1] :\n"], [98, "                                rx_access_reg[0];\n"], [98, "   assign data_select[7:0] = reload ? valid_input[7:0] :\n"], [98, "\t\t\t              valid_next[7:0] & ~io_valid[7:0];\n"]]}}