{"Source Block": ["oh/src/common/hdl/oh_clockdiv.v@86:96@HdlStmAssign", "     else if(clkfall0)\n       clkout0_reg <= 1'b0;\n  \n   // clock mux\n   assign clk0_sel[1] =  (clkdiv[7:0]==8'd0);   // not implemented\n   assign clk0_sel[0] = ~(clkdiv[7:0]==8'd0);\n\n   oh_clockmux #(.N(2))\n   oh_clockmux0 (.clkout(clkout0),\n\t\t .clk(clk),\n\t\t .en(clk0_sel[1:0]),\n"], "Clone Blocks": [["oh/src/common/hdl/oh_clockdiv.v@85:95", "       clkout0_reg <= 1'b1;\n     else if(clkfall0)\n       clkout0_reg <= 1'b0;\n  \n   // clock mux\n   assign clk0_sel[1] =  (clkdiv[7:0]==8'd0);   // not implemented\n   assign clk0_sel[0] = ~(clkdiv[7:0]==8'd0);\n\n   oh_clockmux #(.N(2))\n   oh_clockmux0 (.clkout(clkout0),\n\t\t .clk(clk),\n"]], "Diff Content": {"Delete": [], "Add": [[91, "   oh_lat0 #(.DW(2)) \n"], [91, "   latch_clk0 (.out (clk0_sel_sh[1:0]),\n"], [91, "\t       .clk (clk),\n"], [91, "\t       .in  (clk0_sel[1:0]));\n"]]}}