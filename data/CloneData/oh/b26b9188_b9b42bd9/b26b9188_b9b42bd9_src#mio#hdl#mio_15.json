{"Source Block": ["oh/src/mio/hdl/mio.v@86:96@HdlIdDef", "   wire\t\t\ttx_empty;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_en;\t\t\t// From mio_regs of mio_regs.v\n   wire\t\t\ttx_full;\t\t// From mio_dp of mio_dp.v\n   wire [MPW-1:0]\ttx_packet_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_prog_full;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_wait_io2c;\t\t// From mio_dp of mio_dp.v\n   // End of automatics\n\n   //################################\n   //# CONFIGURATION REGISTERS\n   //################################\n"], "Clone Blocks": [["oh/src/mio/hdl/mio.v@85:95", "   wire\t\t\ttx_access_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_empty;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_en;\t\t\t// From mio_regs of mio_regs.v\n   wire\t\t\ttx_full;\t\t// From mio_dp of mio_dp.v\n   wire [MPW-1:0]\ttx_packet_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_prog_full;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_wait_io2c;\t\t// From mio_dp of mio_dp.v\n   // End of automatics\n\n   //################################\n   //# CONFIGURATION REGISTERS\n"], ["oh/src/mio/hdl/mio.v@84:94", "   wire\t\t\trx_wait_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_access_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_empty;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_en;\t\t\t// From mio_regs of mio_regs.v\n   wire\t\t\ttx_full;\t\t// From mio_dp of mio_dp.v\n   wire [MPW-1:0]\ttx_packet_c2io;\t\t// From mio_if of mio_if.v\n   wire\t\t\ttx_prog_full;\t\t// From mio_dp of mio_dp.v\n   wire\t\t\ttx_wait_io2c;\t\t// From mio_dp of mio_dp.v\n   // End of automatics\n\n   //################################\n"]], "Diff Content": {"Delete": [[91, "   wire\t\t\ttx_wait_io2c;\t\t// From mio_dp of mio_dp.v\n"]], "Add": [[91, "   wire\t\t\ttx_full;\t\t// From mtx of mtx.v\n"], [91, "   wire\t\t\ttx_prog_full;\t\t// From mtx of mtx.v\n"], [91, "   mtx #(.IOW(IOW),\n"], [91, "\t .AW(AW),\n"], [91, "\t .PW(PW),\n"], [91, "\t .TARGET(TARGET))\n"], [91, "   mtx (.io_clk\t\t\t\t(io_clk),\n"], [91, "\t/*AUTOINST*/\n"], [91, "\t.tx_empty\t\t\t(tx_empty),\n"], [91, "\t.tx_full\t\t\t(tx_full),\n"], [91, "\t.tx_prog_full\t\t\t(tx_prog_full),\n"], [91, "\t.wait_out\t\t\t(wait_out),\n"], [91, "\t.tx_access\t\t\t(tx_access),\n"], [91, "\t.tx_packet\t\t\t(tx_packet[IOW-1:0]),\n"], [91, "\t.clk\t\t\t\t(clk),\n"], [91, "\t.nreset\t\t\t\t(nreset),\n"], [91, "\t.tx_en\t\t\t\t(tx_en),\n"], [91, "\t.ddr_mode\t\t\t(ddr_mode),\n"], [91, "\t.lsbfirst\t\t\t(lsbfirst),\n"], [91, "\t.emode\t\t\t\t(emode),\n"], [91, "\t.iowidth\t\t\t(iowidth[1:0]),\n"], [91, "\t.access_in\t\t\t(access_in),\n"], [91, "\t.packet_in\t\t\t(packet_in[PW-1:0]),\n"], [91, "\t.tx_wait\t\t\t(tx_wait));\n"], [91, "   mrx #(.IOW(IOW),\n"], [91, "\t .AW(AW),\n"], [91, "\t .PW(PW),\n"], [91, "\t .TARGET(TARGET))\n"], [91, "   mrx (/*AUTOINST*/\n"], [91, "\t.rx_empty\t\t\t(rx_empty),\n"], [91, "\t.rx_full\t\t\t(rx_full),\n"], [91, "\t.rx_prog_full\t\t\t(rx_prog_full),\n"], [91, "\t.rx_wait\t\t\t(rx_wait),\n"], [91, "\t.access_out\t\t\t(access_out),\n"], [91, "\t.packet_out\t\t\t(packet_out[PW-1:0]),\n"], [91, "\t.clk\t\t\t\t(clk),\n"], [91, "\t.nreset\t\t\t\t(nreset),\n"], [91, "\t.ddr_mode\t\t\t(ddr_mode),\n"], [91, "\t.iowidth\t\t\t(iowidth[1:0]),\n"], [91, "\t.amode\t\t\t\t(amode),\n"], [91, "\t.ctrlmode\t\t\t(ctrlmode[4:0]),\n"], [91, "\t.datamode\t\t\t(datamode[1:0]),\n"], [91, "\t.dstaddr\t\t\t(dstaddr[AW-1:0]),\n"], [91, "\t.emode\t\t\t\t(emode),\n"], [91, "\t.rx_clk\t\t\t\t(rx_clk),\n"], [91, "\t.rx_access\t\t\t(rx_access),\n"], [91, "\t.rx_packet\t\t\t(rx_packet[IOW-1:0]),\n"], [91, "\t.wait_in\t\t\t(wait_in));\n"]]}}