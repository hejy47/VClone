{"Source Block": ["oh/common/hdl/oh_memory_ram.v@24:36@HdlStmProcess", "   \n   reg [DW-1:0]        ram    [DEPTH-1:0];  \n   integer \t       i;\n      \n   //registered read port\n   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n   \n   //write port with vector enable\n   always @(posedge wr_clk)    \n     for (i=0;i<DW;i=i+1)\n       if (wr_en & wr_wem[i]) \n"], "Clone Blocks": [["oh/common/hdl/oh_memory_ram.v@21:31", "    input [DW-1:0] \twr_wem, // write enable vector    \n    input [DW-1:0] \twr_din // data input\n    );\n   \n   reg [DW-1:0]        ram    [DEPTH-1:0];  \n   integer \t       i;\n      \n   //registered read port\n   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n"], ["oh/common/hdl/oh_memory_ram.v@29:42", "   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n   \n   //write port with vector enable\n   always @(posedge wr_clk)    \n     for (i=0;i<DW;i=i+1)\n       if (wr_en & wr_wem[i]) \n         ram[wr_addr[AW-1:0]][i] <= wr_din[i];\n  \nendmodule // oh_memory_ram\n\n\n\n"], ["oh/common/hdl/oh_memory_ram.v@20:30", "    input [AW-1:0] \twr_addr, // address\n    input [DW-1:0] \twr_wem, // write enable vector    \n    input [DW-1:0] \twr_din // data input\n    );\n   \n   reg [DW-1:0]        ram    [DEPTH-1:0];  \n   integer \t       i;\n      \n   //registered read port\n   always @ (posedge rd_clk)\n     if(rd_en)       \n"]], "Diff Content": {"Delete": [[29, "   always @ (posedge rd_clk)\n"], [30, "     if(rd_en)       \n"], [31, "       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n"]], "Add": []}}