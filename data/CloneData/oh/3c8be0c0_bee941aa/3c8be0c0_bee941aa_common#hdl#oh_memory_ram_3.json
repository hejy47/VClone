{"Source Block": ["oh/common/hdl/oh_memory_ram.v@29:42@HdlStmProcess", "   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n   \n   //write port with vector enable\n   always @(posedge wr_clk)    \n     for (i=0;i<DW;i=i+1)\n       if (wr_en & wr_wem[i]) \n         ram[wr_addr[AW-1:0]][i] <= wr_din[i];\n  \nendmodule // oh_memory_ram\n\n\n\n"], "Clone Blocks": [["oh/common/hdl/oh_memory_ram.v@24:36", "   \n   reg [DW-1:0]        ram    [DEPTH-1:0];  \n   integer \t       i;\n      \n   //registered read port\n   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n   \n   //write port with vector enable\n   always @(posedge wr_clk)    \n     for (i=0;i<DW;i=i+1)\n       if (wr_en & wr_wem[i]) \n"], ["oh/common/hdl/oh_memory_ram.v@21:31", "    input [DW-1:0] \twr_wem, // write enable vector    \n    input [DW-1:0] \twr_din // data input\n    );\n   \n   reg [DW-1:0]        ram    [DEPTH-1:0];  \n   integer \t       i;\n      \n   //registered read port\n   always @ (posedge rd_clk)\n     if(rd_en)       \n       rd_dout[DW-1:0] <= ram[rd_addr[AW-1:0]];\n"]], "Diff Content": {"Delete": [], "Add": [[37, "   assign rdata[DW-1:0] = ram[rd_addr[AW-1:0]];\n"], [37, "   generate\n"], [37, "      if(REG)\n"], [37, "\tbegin\n"], [37, "\t   reg [DW-1:0] rd_reg;\n"], [37, "\t   always @ (posedge rd_clk)\n"], [37, "\t     if(rd_en)       \n"], [37, "\t       rd_reg[DW-1:0] <= rdata[DW-1:0];\n"], [37, "\t   assign rd_dout[DW-1:0] = rd_reg[DW-1:0];\n"], [37, "\tend\n"], [37, "      else\n"], [37, "\tbegin\n"], [37, "\t   assign rd_dout[DW-1:0] = rdata[DW-1:0];\n"], [37, "\tend\n"], [37, "   endgenerate\n"]]}}