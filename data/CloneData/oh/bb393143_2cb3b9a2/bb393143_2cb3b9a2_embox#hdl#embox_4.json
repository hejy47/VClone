{"Source Block": ["oh/embox/hdl/embox.v@102:112@HdlStmAssign", "   assign  embox_write       = mi_access &  mi_write;\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n   assign embox_w0_read      = embox_w0_access     & embox_read;\n   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read\n   assign embox_status_read  = embox_status_access & embox_read;\n\t\t\t      \n   /*****************************/\n"], "Clone Blocks": [["oh/embox/hdl/embox.v@98:108", "\t\t\t\tembox_w1_access |\n\t\t\t\tembox_status_access;\n   \n   //write logic\n   assign  embox_write       = mi_access &  mi_write;\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n   assign embox_w0_read      = embox_w0_access     & embox_read;\n"], ["oh/embox/hdl/embox.v@92:104", "   //access decode\n   assign embox_w0_access     = (mi_addr[19:0]==`E_REG_MBOX0); //lower 32 bit word\n   assign embox_w1_access     = (mi_addr[19:0]==`E_REG_MBOX1); //upper 32 bit word\n   assign embox_status_access = (mi_addr[19:0]==`E_REG_MBSTATUS);//polling fifo status\n\n   assign embox_match         = embox_w0_access |\n\t\t\t\tembox_w1_access |\n\t\t\t\tembox_status_access;\n   \n   //write logic\n   assign  embox_write       = mi_access &  mi_write;\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n"], ["oh/embox/hdl/embox.v@104:114", "   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n   assign embox_w0_read      = embox_w0_access     & embox_read;\n   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read\n   assign embox_status_read  = embox_status_access & embox_read;\n\t\t\t      \n   /*****************************/\n   /*WRITE ACTION               */\n   /*****************************/\n"], ["oh/embox/hdl/embox.v@99:109", "\t\t\t\tembox_status_access;\n   \n   //write logic\n   assign  embox_write       = mi_access &  mi_write;\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n   assign embox_w0_read      = embox_w0_access     & embox_read;\n   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read\n"], ["oh/embox/hdl/embox.v@103:113", "   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n   assign embox_w0_read      = embox_w0_access     & embox_read;\n   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read\n   assign embox_status_read  = embox_status_access & embox_read;\n\t\t\t      \n   /*****************************/\n   /*WRITE ACTION               */\n"], ["oh/embox/hdl/embox.v@97:107", "   assign embox_match         = embox_w0_access |\n\t\t\t\tembox_w1_access |\n\t\t\t\tembox_status_access;\n   \n   //write logic\n   assign  embox_write       = mi_access &  mi_write;\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_access & ~mi_write;\n"]], "Diff Content": {"Delete": [[107, "   assign embox_read         = mi_access & ~mi_write;\n"]], "Add": []}}