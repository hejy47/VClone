Source Block: oh/embox/hdl/embox.v@102:112@HdlStmAssign
   assign  embox_write       = mi_access &  mi_write;
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;
   assign embox_w0_read      = embox_w0_access     & embox_read;
   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read
   assign embox_status_read  = embox_status_access & embox_read;
			      
   /*****************************/

Diff Content:
- 107    assign embox_read         = mi_access & ~mi_write;

Clone Blocks:
Clone Blocks 1:
oh/embox/hdl/embox.v@98:108
				embox_w1_access |
				embox_status_access;
   
   //write logic
   assign  embox_write       = mi_access &  mi_write;
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;
   assign embox_w0_read      = embox_w0_access     & embox_read;

Clone Blocks 2:
oh/embox/hdl/embox.v@92:104
   //access decode
   assign embox_w0_access     = (mi_addr[19:0]==`E_REG_MBOX0); //lower 32 bit word
   assign embox_w1_access     = (mi_addr[19:0]==`E_REG_MBOX1); //upper 32 bit word
   assign embox_status_access = (mi_addr[19:0]==`E_REG_MBSTATUS);//polling fifo status

   assign embox_match         = embox_w0_access |
				embox_w1_access |
				embox_status_access;
   
   //write logic
   assign  embox_write       = mi_access &  mi_write;
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

Clone Blocks 3:
oh/embox/hdl/embox.v@104:114
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;
   assign embox_w0_read      = embox_w0_access     & embox_read;
   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read
   assign embox_status_read  = embox_status_access & embox_read;
			      
   /*****************************/
   /*WRITE ACTION               */
   /*****************************/

Clone Blocks 4:
oh/embox/hdl/embox.v@99:109
				embox_status_access;
   
   //write logic
   assign  embox_write       = mi_access &  mi_write;
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;
   assign embox_w0_read      = embox_w0_access     & embox_read;
   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read

Clone Blocks 5:
oh/embox/hdl/embox.v@103:113
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;
   assign embox_w0_read      = embox_w0_access     & embox_read;
   assign embox_w1_read      = embox_w1_access     & embox_read;//causes FIFO read
   assign embox_status_read  = embox_status_access & embox_read;
			      
   /*****************************/
   /*WRITE ACTION               */

Clone Blocks 6:
oh/embox/hdl/embox.v@97:107
   assign embox_match         = embox_w0_access |
				embox_w1_access |
				embox_status_access;
   
   //write logic
   assign  embox_write       = mi_access &  mi_write;
   assign  embox_w0_write    = embox_w0_access & embox_write;
   assign  embox_w1_write    = embox_w1_access & embox_write; //causes FIFO write

   //read logic
   assign embox_read         = mi_access & ~mi_write;

