{"Source Block": ["oh/embox/hdl/embox.v@124:139@HdlStmProcess", "   assign embox_not_empty         = ~embox_empty;\n\n   assign embox_read_data[DW-1:0] = embox_status_read ? {{(DW-2){1'b0}},embox_full,embox_not_empty}  :\n\t\t\t\t    embox_w0_read     ? embox_fifo_data[DW-1:0]                             :\n\t                    \t  \t                embox_fifo_data[2*DW-1:DW];   \n   always @ (posedge clk)\n     if(embox_read)\n       begin\n\t  mi_data_out[DW-1:0] <= embox_read_data[DW-1:0];\n\t  mi_data_sel         <= embox_match;\n       end\n   \n   /*****************************/\n   /*FIFO                       */\n   /*****************************/\n   fifo #(.DW(2*DW), .AW(FAW)) mbox_fifo(\n"], "Clone Blocks": [["oh/embox/hdl/embox.v@119:129", "       embox_data_reg[DW-1:0] <=mi_data_in[DW-1:0];\n   \n   /*****************************/\n   /*READ BACK DATA             */\n   /*****************************/\n   assign embox_not_empty         = ~embox_empty;\n\n   assign embox_read_data[DW-1:0] = embox_status_read ? {{(DW-2){1'b0}},embox_full,embox_not_empty}  :\n\t\t\t\t    embox_w0_read     ? embox_fifo_data[DW-1:0]                             :\n\t                    \t  \t                embox_fifo_data[2*DW-1:DW];   \n   always @ (posedge clk)\n"], ["oh/embox/hdl/embox.v@121:133", "   /*****************************/\n   /*READ BACK DATA             */\n   /*****************************/\n   assign embox_not_empty         = ~embox_empty;\n\n   assign embox_read_data[DW-1:0] = embox_status_read ? {{(DW-2){1'b0}},embox_full,embox_not_empty}  :\n\t\t\t\t    embox_w0_read     ? embox_fifo_data[DW-1:0]                             :\n\t                    \t  \t                embox_fifo_data[2*DW-1:DW];   \n   always @ (posedge clk)\n     if(embox_read)\n       begin\n\t  mi_data_out[DW-1:0] <= embox_read_data[DW-1:0];\n\t  mi_data_sel         <= embox_match;\n"]], "Diff Content": {"Delete": [[131, "       begin\n"], [132, "\t  mi_data_out[DW-1:0] <= embox_read_data[DW-1:0];\n"], [133, "\t  mi_data_sel         <= embox_match;\n"], [134, "       end\n"]], "Add": [[134, "       case(mi_addr[RFAW-1:2])\t \n"], [134, "\t `E_REG_MBOX0:    mi_dout[DW-1:0] <= embox_fifo_data[DW-1:0];\t \n"], [134, "\t `E_REG_MBOX1:    mi_dout[DW-1:0] <= embox_fifo_data[2*DW-1:DW];\t \n"], [134, "\t `E_REG_MBSTATUS: mi_dout[DW-1:0] <= {{(DW-2){1'b0}},embox_full,embox_not_empty};\n"], [134, "\t default:         mi_dout[DW-1:0] <= 32'd0;\n"], [134, "       endcase // case (mi_addr[RFAW-1:2])\n"]]}}