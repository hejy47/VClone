{"Source Block": ["oh/etx/hdl/etx_arbiter.v@90:100@HdlIdDef", "   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   wire           emwr_rd_en = wr_ready & (~ready | emtx_ack);\n"], "Clone Blocks": [["oh/earb/hdl/earb.v@97:107", "\n   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n"], ["oh/earb/hdl/earb.v@99:109", "   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   wire           emwr_rd_en = wr_ready & (~ready | emtx_ack);\n"], ["oh/earb/hdl/earb.v@98:108", "   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n"], ["oh/e_transmit/hdl/e_tx_arbiter.v@90:100", "   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n   wire           emwr_rd_en = wr_ready & (~ready | emtx_ack);\n"], ["oh/e_transmit/hdl/e_tx_arbiter.v@89:99", "   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n"], ["oh/etx/hdl/etx_arbiter.v@89:99", "   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n   wire           emrq_rd_en = rq_ready & (~ready | emtx_ack);\n"], ["oh/e_transmit/hdl/e_tx_arbiter.v@88:98", "\n   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n"], ["oh/etx/hdl/etx_arbiter.v@88:98", "\n   reg            ready;\n   reg [102:0]    fifo_data;\n\n   // priority-based ready signals\n   wire           rr_ready = ~emrr_empty & ~emm_tx_wr_wait;\n   wire           rq_ready = ~emrq_empty & ~emm_tx_rd_wait & ~rr_ready;\n   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n\n   // FIFO read enables, when we're idle or done with the current datum\n   wire           emrr_rd_en = rr_ready & (~ready | emtx_ack);\n"]], "Diff Content": {"Delete": [[95, "   wire           wr_ready = ~emwr_empty & ~emm_tx_wr_wait & ~rr_ready & ~rq_ready;\n"]], "Add": [[95, "   assign     rr_ready = ~emrr_empty & ~e_tx_wr_wait;\n"], [95, "   assign     rq_ready = ~emrq_empty & ~e_tx_rd_wait & ~rr_ready;\n"], [95, "   assign     wr_ready = ~emwr_empty & ~e_tx_wr_wait & ~rr_ready & ~rq_ready;\n"]]}}