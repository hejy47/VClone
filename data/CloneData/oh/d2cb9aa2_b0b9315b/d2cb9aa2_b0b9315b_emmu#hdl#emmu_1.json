{"Source Block": ["oh/emmu/hdl/emmu.v@88:98@HdlIdDef", "   reg \t\t      emesh_write_out;\n   reg [1:0] \t      emesh_datamode_out;\n   reg [3:0] \t      emesh_ctrlmode_out;\n   reg [AW-1:0]       emesh_srcaddr_out;\n   reg [DW-1:0]\t      emesh_data_out; \n   reg [AW-1:0]       emesh_dstaddr_reg;\n   \n   /*****************************/\n   /*EMESH OUTPUT TRANSACTION   */\n   /*****************************/   \n\n"], "Clone Blocks": [["oh/emmu/dv/dv_emmu.v@117:127", "   wire [3:0]\t\temesh_ctrlmode_out;\t// From emmu of emmu.v\n   wire [DW-1:0]\temesh_data_out;\t\t// From emmu of emmu.v\n   wire [1:0]\t\temesh_datamode_out;\t// From emmu of emmu.v\n   wire [PAW-1:0]\temesh_dstaddr_out;\t// From emmu of emmu.v\n   wire [AW-1:0]\temesh_srcaddr_out;\t// From emmu of emmu.v\n   wire\t\t\temesh_write_out;\t// From emmu of emmu.v\n   wire [DW-1:0]\tmi_data_out;\t\t// From emmu of emmu.v\n   // End of automatics\n   /*AUTOWIRE*/\n   \n   //DUT\n"], ["oh/emmu/dv/dv_emmu.v@112:122", "  \n   \n   /*AUTOWIRE*/\n   // Beginning of automatic wires (for undeclared instantiated-module outputs)\n   wire\t\t\temesh_access_out;\t// From emmu of emmu.v\n   wire [3:0]\t\temesh_ctrlmode_out;\t// From emmu of emmu.v\n   wire [DW-1:0]\temesh_data_out;\t\t// From emmu of emmu.v\n   wire [1:0]\t\temesh_datamode_out;\t// From emmu of emmu.v\n   wire [PAW-1:0]\temesh_dstaddr_out;\t// From emmu of emmu.v\n   wire [AW-1:0]\temesh_srcaddr_out;\t// From emmu of emmu.v\n   wire\t\t\temesh_write_out;\t// From emmu of emmu.v\n"], ["oh/emmu/dv/dv_emmu.v@118:128", "   wire [DW-1:0]\temesh_data_out;\t\t// From emmu of emmu.v\n   wire [1:0]\t\temesh_datamode_out;\t// From emmu of emmu.v\n   wire [PAW-1:0]\temesh_dstaddr_out;\t// From emmu of emmu.v\n   wire [AW-1:0]\temesh_srcaddr_out;\t// From emmu of emmu.v\n   wire\t\t\temesh_write_out;\t// From emmu of emmu.v\n   wire [DW-1:0]\tmi_data_out;\t\t// From emmu of emmu.v\n   // End of automatics\n   /*AUTOWIRE*/\n   \n   //DUT\n   emmu emmu(\n"], ["oh/emmu/dv/dv_emmu.v@20:30", "   reg \t      mi_write;\n\n   //emesh interface\n   reg              emesh_access_in;\n   reg              emesh_write_in;\n   reg [1:0]        emesh_datamode_in;\n   reg [3:0]        emesh_ctrlmode_in;\n   reg [AW-1:0]     emesh_dstaddr_in;\n   reg [AW-1:0]     emesh_srcaddr_in;\n   reg [DW-1:0]     emesh_data_in;\n   \n"], ["oh/emmu/dv/dv_emmu.v@24:34", "   reg              emesh_write_in;\n   reg [1:0]        emesh_datamode_in;\n   reg [3:0]        emesh_ctrlmode_in;\n   reg [AW-1:0]     emesh_dstaddr_in;\n   reg [AW-1:0]     emesh_srcaddr_in;\n   reg [DW-1:0]     emesh_data_in;\n   \n   //Test junk\n   reg [1:0]  test_state;\n   reg \t      go;\n  \n"], ["oh/emmu/dv/dv_emmu.v@21:31", "\n   //emesh interface\n   reg              emesh_access_in;\n   reg              emesh_write_in;\n   reg [1:0]        emesh_datamode_in;\n   reg [3:0]        emesh_ctrlmode_in;\n   reg [AW-1:0]     emesh_dstaddr_in;\n   reg [AW-1:0]     emesh_srcaddr_in;\n   reg [DW-1:0]     emesh_data_in;\n   \n   //Test junk\n"]], "Diff Content": {"Delete": [[93, "   reg [AW-1:0]       emesh_dstaddr_reg;\n"]], "Add": [[93, "   reg \t\t      emmu_access_out;\n"], [93, "   reg \t\t      emmu_write_out;\n"], [93, "   reg [1:0] \t      emmu_datamode_out;\n"], [93, "   reg [3:0] \t      emmu_ctrlmode_out;\n"], [93, "   reg [AW-1:0]       emmu_srcaddr_out;\n"], [93, "   reg [DW-1:0]\t      emmu_data_out; \n"], [93, "   reg [AW-1:0]       emmu_dstaddr_reg;\n"], [93, "   wire [63:0] \t      emmu_lookup_data;\n"], [93, "   wire [63:0] \t      mi_wr_data;\n"], [93, "   wire [7:0] \t      mi_wr_en;\n"], [93, "   /*****************************/\n"], [93, "   /*MMU WRITE LOGIC            */\n"], [93, "   /*****************************/\n"], [93, "   assign mi_wr_data[63:0] = {mi_din[31:0], mi_din[31:0]};\n"], [93, "   assign mi_wr_en[7:0] = (mi_en & mi_we & mi_addr[0]) ? 8'b11110000 :\n"], [93, "\t                  (mi_en & mi_we & ~mi_addr[0])? 8'b00001111 :\n"], [93, "\t\t\t                                 8'b00000000 ;\n"], [93, "   memory_dp #(.DW(PAW),.AW(IDW+1)) \n"], [93, "   memory_dp (\n"], [93, "\t      .rd_data\t(emmu_lookup_data[63:0]),\n"], [93, "\t      .wr_clk\t(mi_clk),\n"], [93, "\t      .wr_en\t(mi_wr_en[7:0]),\n"], [93, "\t      .wr_addr\t(mi_addr[IDW:0]),        //note the extra bit\n"], [93, "\t      .wr_data\t(mi_wr_data[63:0]),\n"], [93, "\t      .rd_clk\t(clk),\n"], [93, "\t      .rd_en\t(emesh_access_in),\n"], [93, "\t      .rd_addr\t({emesh_dstaddr_in[AW-1:20],1'b0})\n"], [93, "\t      );\n"]]}}