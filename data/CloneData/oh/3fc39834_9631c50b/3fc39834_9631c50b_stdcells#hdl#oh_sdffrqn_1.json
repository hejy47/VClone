{"Source Block": ["oh/stdcells/hdl/oh_sdffrqn.v@11:22@HdlStmProcess", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnreset,\n    output reg [DW-1:0] qn\n    );\n   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       qn <= {{(DW)}{1'b1}};\n     else\n       qn <=  se ? ~si : ~d;\n   \nendmodule\n"], "Clone Blocks": [["oh/stdcells/hdl/oh_sdffsqn.v@13:24", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnset,\n    output reg [DW-1:0] qn\n    );\n   \n   always @ (posedge clk or negedge nset)\n     if(!nset)\n       qn <= 'b0;   \n     else\n       qn <= se ? ~si : ~d;\n   \nendmodule\n"], ["oh/stdcells/hdl/oh_sdffsq.v@13:24", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnset,\n    output reg [DW-1:0] q\n    );\n   \n   always @ (posedge clk or negedge nset)\n     if(!nset)\n       q <= {{(DW)}{1'b1}};\n     else\n       q <= se ? si : d;\n      \nendmodule\n"], ["oh/stdcells/hdl/oh_dffrq.v@12:23", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnreset,\n    output reg [DW-1:0] q\n    );\n   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       q <= 'b0;\n     else\n       q <= d;\n      \nendmodule\n"], ["oh/common/hdl/oh_edge2pulse.v@11:21", "    input \t    nreset, // async active low reset   \n    input [DW-1:0]  in, // edge input\n    output [DW-1:0] out     // one cycle pulse\n    );\n     \n   reg [DW-1:0]    in_reg;   \n\n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       in_reg[DW-1:0]  <= 'b0 ;\n     else\n"], ["oh/common/hdl/oh_reg1.v@12:22", "     input \t     en, // write enable\n     input [DW-1:0]  in, // input data\n     output [DW-1:0] out  // output data (stable/latched when clk=1)\n     );\n   \n   reg [DW-1:0]      out_reg;\t   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       out_reg[DW-1:0] <= 'b0;\n     else if(en)\t      \n       out_reg[DW-1:0] <= in[DW-1:0];\n"], ["oh/stdcells/hdl/oh_dffsq.v@11:22", "    input [DW-1:0]     clk,\n    input [DW-1:0]     nset,\n    output reg [DW-1:0] q\n    );\n   \n   always @ (posedge clk or negedge nset)\n     if(!nset)\n       q <= {{(DW)}{1'b1}};\n     else\n       q <= d;\n      \nendmodule\n"], ["oh/common/hdl/oh_fall2pulse.v@11:21", "      input \t      nreset, // async active low reset   \n      input [DW-1:0]  in, // edge input\n      output [DW-1:0] out     // one cycle pulse\n    );\n   \n   reg [DW-1:0]    in_reg;\n\n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       in_reg[DW-1:0]  <= 'b0 ;\n     else\n"], ["oh/stdcells/hdl/oh_sdffrq.v@14:25", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnreset,\n    output reg [DW-1:0] q\n    );\n   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       q <= 'b0;\n     else\n       q <= se ? si : d;\n      \nendmodule\n"], ["oh/stdcells/hdl/oh_dffrqn.v@11:22", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnreset,\n    output reg [DW-1:0] qn\n    );\n   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       qn <= {{(DW)}{1'b1}};\n     else\n       qn <= ~d;\n   \nendmodule\n"], ["oh/stdcells/hdl/oh_dffsqn.v@11:22", "    input [DW-1:0] \tclk,\n    input [DW-1:0] \tnset,\n    output reg [DW-1:0] qn\n    );\n   \n   always @ (posedge clk or negedge nset)\n     if(!nset)\n       qn <= 'b0;\n     else\n       qn <= ~d;\n   \nendmodule\n"], ["oh/common/hdl/oh_rise2pulse.v@11:21", "      input \t      nreset, // async active low reset   \n      input [DW-1:0]  in, // edge input\n      output [DW-1:0] out     // one cycle pulse\n      );\n  \n   reg [DW-1:0]    in_reg;\n   \n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       in_reg[DW-1:0]  <= 'b0 ;\n     else\n"]], "Diff Content": {"Delete": [[18, "       qn <= {{(DW)}{1'b1}};\n"]], "Add": [[18, "       qn <= {DW{1'b1}};\n"]]}}