{"Source Block": ["oh/src/mio/hdl/mtx_io.v@37:57@HdlStmProcess", "   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n  \n   always @ (posedge io_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 'b0;\n     else if(transfer_active & dmode8 )\n       io_valid_reg[7:0] <= {1'b0,io_valid_reg[7:1]};\n     else if(transfer_active & dmode16 )\n       io_valid_reg[7:0] <= {2'b0,io_valid_reg[7:2]};\n     else if(transfer_active & dmode32 )\n       io_valid_reg[7:0] <= {4'b0,io_valid_reg[7:4]};\n     else if(transfer_active & dmode32 )\n       io_valid_reg[7:0] <= 'b0;\n\n   assign transfer_active = |io_valid_reg[7:0];\n   \n   //pipeline access signal\n   always @ (posedge io_clk or negedge io_nreset)\n"], "Clone Blocks": [["oh/src/mio/hdl/mrx_io.v@43:65", "   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 8'b0;\n     else if(io_frame & dmode8)\n       io_valid_reg[7:0] <= {io_valid_reg[6:0],1'b1};\n     else if(io_frame & dmode16)\n       io_valid_reg[7:0] <= {io_valid_reg[5:0],2'b11};\n     else if(io_frame & dmode32)\n       io_valid_reg[7:0] <= {io_valid_reg[3:0],4'b1111};\n     else if(io_frame & dmode64)\n       io_valid_reg[7:0] <= 8'b11111111;\n     else\n       io_valid_reg[7:0] <= 8'b0;\n\n   //Access signal for FIFO\n   assign io_access = (&io_valid_reg[7:0])               | // full vector\n\t\t      (~io_frame | (|io_valid_reg[7:0]));  // partial vector \n          \n"]], "Diff Content": {"Delete": [[45, "     else if(transfer_active & dmode8 )\n"], [46, "       io_valid_reg[7:0] <= {1'b0,io_valid_reg[7:1]};\n"], [47, "     else if(transfer_active & dmode16 )\n"], [48, "       io_valid_reg[7:0] <= {2'b0,io_valid_reg[7:2]};\n"], [49, "     else if(transfer_active & dmode32 )\n"], [50, "       io_valid_reg[7:0] <= {4'b0,io_valid_reg[7:4]};\n"], [51, "     else if(transfer_active & dmode32 )\n"], [52, "       io_valid_reg[7:0] <= 'b0;\n"]], "Add": [[52, "     else if(reload)\n"], [52, "       io_valid_reg[7:0] <= io_valid[7:0];\n"], [52, "     else\n"], [52, "       io_valid_reg[7:0] <= io_valid_next[7:0];\n"]]}}