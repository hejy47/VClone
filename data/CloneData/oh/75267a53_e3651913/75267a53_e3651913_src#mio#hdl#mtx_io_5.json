{"Source Block": ["oh/src/mio/hdl/mtx_io.v@35:45@HdlStmAssign", "   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n  \n   always @ (posedge io_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 'b0;\n     else if(transfer_active & dmode8 )\n"], "Clone Blocks": [["oh/src/mio/hdl/mtx_io.v@33:43", "   //########################################\n   //# STATE MACHINE\n   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n  \n   always @ (posedge io_clk or negedge io_nreset)\n     if(!io_nreset)\n"], ["oh/src/mio/hdl/mtx_io.v@32:42", "   \n   //########################################\n   //# STATE MACHINE\n   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n  \n   always @ (posedge io_clk or negedge io_nreset)\n"], ["oh/src/mio/hdl/mtx_io.v@34:44", "   //# STATE MACHINE\n   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n  \n   always @ (posedge io_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 'b0;\n"], ["oh/src/mio/hdl/mrx_io.v@40:50", "   //########################################\n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 8'b0;\n"], ["oh/src/mio/hdl/mrx_io.v@39:49", "   //# STATE MACHINE\n   //########################################\n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n"]], "Diff Content": {"Delete": [], "Add": [[40, "   assign io_valid_next[7:0] = dmode8  ? {1'b0,io_valid_reg[7:1]} :\n"], [40, "\t\t\t       dmode16 ? {2'b0,io_valid_reg[7:2]} :\n"], [40, "\t\t\t       dmode32 ? {4'b0,io_valid_reg[7:4]} :\n"], [40, "\t\t\t                  8'b0;\n"], [40, "   assign reload = ~transfer_active | dmode64 | (io_valid_next[7:0]==8'b0);\n"]]}}