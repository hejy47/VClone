{"Source Block": ["oh/elink/hdl/emaxi.v@509:565@HdlStmProcess", "\t  txrr_access_fifo       <= fifo_rd_en;\n\t  m_axi_rdata_fifo[63:0] <= m_axi_rdata[63:0];      \n       end\n\n   //Alignment Mux (one cycle)\n   always @ (posedge m_axi_aclk )\n     if(!m_axi_aresetn)\n       begin\n\t  txrr_access  <= 1'b0;\t  \n       end\n     else\n       begin\n\t  txrr_access        <= txrr_access_fifo;\t  \n\t  txrr_datamode[1:0] <= txrr_datamode_fifo[1:0];\n\t  txrr_ctrlmode[3:0] <= txrr_ctrlmode_fifo[3:0];\n\t  txrr_dstaddr[31:0] <= txrr_dstaddr_fifo[31:0];\t  \n\t  //all data needs to be right aligned\n\t  //(this is due to the Epiphany right aligning all words)\n\t  case(txrr_datamode_fifo[1:0])//datamode\n            2'd0:  // byte read\n              case(txrr_srcaddr_fifo[2:0])\n\t\t3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n\t\t3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[15:8]};\n\t\t3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[23:16]};\n\t\t3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[31:24]};\n\t\t3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[39:32]};\n\t\t3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[47:40]};\n\t\t3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[55:48]};\n\t\t3'd7:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[63:56]};\n\t\tdefault:  txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n              endcase\t    \n            2'd1:  // 16b hword\n              case(txrr_srcaddr_fifo[2:1])\n\t\t2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n\t\t2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[31:16]};\n\t\t2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[47:32]};\n\t\t2'd3:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[63:48]};\n\t\tdefault: txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n              endcase\n            2'd2:  // 32b word\n              if(txrr_srcaddr_fifo[2])\n\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[63:32];\n              else\n\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[31:0];\n           // 64b word already defined by defaults above\n           2'd3: \n\t     begin // 64b dword\n\t\ttxrr_data[31:0]     <= m_axi_rdata_fifo[31:0];\n\t\ttxrr_srcaddr[31:0]  <= m_axi_rdata_fifo[63:32];\n             end\n         endcase         \n       end // else: !if( ~m_axi_aresetn )\n\n   \nendmodule // emaxi\n// Local Variables:\n// verilog-library-directories:(\".\" \"../../emesh/hdl\" \"../../memory/hdl\" \"../../common/hdl\"  )\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[514, "   always @ (posedge m_axi_aclk )\n"], [515, "     if(!m_axi_aresetn)\n"], [516, "       begin\n"], [517, "\t  txrr_access  <= 1'b0;\t  \n"], [518, "       end\n"], [519, "     else\n"], [520, "       begin\n"], [521, "\t  txrr_access        <= txrr_access_fifo;\t  \n"], [522, "\t  txrr_datamode[1:0] <= txrr_datamode_fifo[1:0];\n"], [523, "\t  txrr_ctrlmode[3:0] <= txrr_ctrlmode_fifo[3:0];\n"], [524, "\t  txrr_dstaddr[31:0] <= txrr_dstaddr_fifo[31:0];\t  \n"], [527, "\t  case(txrr_datamode_fifo[1:0])//datamode\n"], [528, "            2'd0:  // byte read\n"], [529, "              case(txrr_srcaddr_fifo[2:0])\n"], [530, "\t\t3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [531, "\t\t3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[15:8]};\n"], [532, "\t\t3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[23:16]};\n"], [533, "\t\t3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[31:24]};\n"], [534, "\t\t3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[39:32]};\n"], [535, "\t\t3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[47:40]};\n"], [536, "\t\t3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[55:48]};\n"], [537, "\t\t3'd7:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[63:56]};\n"], [538, "\t\tdefault:  txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [539, "              endcase\t    \n"], [540, "            2'd1:  // 16b hword\n"], [541, "              case(txrr_srcaddr_fifo[2:1])\n"], [542, "\t\t2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [543, "\t\t2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[31:16]};\n"], [544, "\t\t2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[47:32]};\n"], [545, "\t\t2'd3:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[63:48]};\n"], [546, "\t\tdefault: txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [547, "              endcase\n"], [548, "            2'd2:  // 32b word\n"], [549, "              if(txrr_srcaddr_fifo[2])\n"], [550, "\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[63:32];\n"], [551, "              else\n"], [552, "\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[31:0];\n"], [554, "           2'd3: \n"], [555, "\t     begin // 64b dword\n"], [556, "\t\ttxrr_data[31:0]     <= m_axi_rdata_fifo[31:0];\n"], [557, "\t\ttxrr_srcaddr[31:0]  <= m_axi_rdata_fifo[63:32];\n"], [558, "             end\n"], [559, "         endcase         \n"], [560, "       end // else: !if( ~m_axi_aresetn )\n"]], "Add": [[560, "   always @ (posedge m_axi_aclk)    \n"], [560, "     begin\t  \n"], [560, "\tm_axi_rdata_fifo[63:0] <= m_axi_rdata[63:0];      \t  \n"], [560, "\ttxrr_datamode[1:0] <= txrr_datamode_fifo[1:0];\n"], [560, "\ttxrr_ctrlmode[3:0] <= txrr_ctrlmode_fifo[3:0];\n"], [560, "\ttxrr_dstaddr[31:0] <= txrr_dstaddr_fifo[31:0];\t  \n"], [560, "\tcase(txrr_datamode_fifo[1:0])//datamode\n"], [560, "          2'd0:  // byte read\n"], [560, "            case(txrr_alignaddr_fifo[2:0])\n"], [560, "\t      3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [560, "\t      3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[15:8]};\n"], [560, "\t      3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[23:16]};\n"], [560, "\t      3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[31:24]};\n"], [560, "\t      3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[39:32]};\n"], [560, "\t      3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[47:40]};\n"], [560, "\t      3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[55:48]};\n"], [560, "\t      3'd7:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[63:56]};\n"], [560, "\t      default:  txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [560, "            endcase\t    \n"], [560, "          2'd1:  // 16b hword\n"], [560, "            case(txrr_alignaddr_fifo[2:1])\n"], [560, "\t      2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [560, "\t      2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[31:16]};\n"], [560, "\t      2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[47:32]};\n"], [560, "\t      2'd3:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[63:48]};\n"], [560, "\t      default: txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [560, "            endcase\n"], [560, "          2'd2:  // 32b word\n"], [560, "\t    begin\n"], [560, "               if(txrr_alignaddr_fifo[2])\n"], [560, "\t\t txrr_data[31:0] <= m_axi_rdata_fifo[63:32];\n"], [560, "               else\n"], [560, "\t\t txrr_data[31:0] <= m_axi_rdata_fifo[31:0];\n"], [560, "\t    end\n"], [560, "          2'd3: \n"], [560, "\t    begin // 64b dword\n"], [560, "\t       txrr_data[31:0]     <= m_axi_rdata_fifo[31:0];\n"], [560, "\t       txrr_srcaddr[31:0]  <= m_axi_rdata_fifo[63:32];\n"], [560, "            end\n"], [560, "        endcase         \n"], [560, "     end // always @ (posedge m_axi_aclk1 )\n"]]}}