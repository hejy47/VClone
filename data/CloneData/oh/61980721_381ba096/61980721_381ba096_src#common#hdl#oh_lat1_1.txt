Source Block: oh/src/common/hdl/oh_lat1.v@9:20@HdlStmProcess
   ( input 	     clk, // clk, latch when clk=1
     input [DW-1:0]  in,  // input data
     output reg [DW-1:0] out  // output data (stable/latched when clk=0)
     );

   always @ (clk or in)
     if (clk)
       out[DW-1:0] <= in[DW-1:0];

endmodule // oh_lat1



Diff Content:
- 14    always @ (clk or in)
- 15      if (clk)
- 16        out[DW-1:0] <= in[DW-1:0];
+ 16    generate
+ 16       if(ASIC)
+ 16 	begin : g0
+ 16 	   asic_lat1 i_lat [DW-1:0] (.clk(clk),
+ 16 				     .in(in[DW-1:0]),
+ 16 				     .out(out[DW-1:0]));
+ 16 	end
+ 16       else
+ 16 	begin : g0
+ 16 	   reg [DW-1:0] out_reg;	   
+ 16 	   always @ (clk or in)
+ 16 	     if (clk)
+ 16 	       out_reg[DW-1:0] <= in[DW-1:0];
+ 16 	   assign out[DW-1:0] = out_reg[DW-1:0];	   
+ 16 	end
+ 16    endgenerate

Clone Blocks:
Clone Blocks 1:
oh/src/common/hdl/oh_lat0.v@9:20
   ( input 	     clk, // clk, latch when clk=0
     input [DW-1:0] 	 in, // input data
     output reg [DW-1:0] out  // output data (stable/latched when clk=1)
     );
   
   always @ (clk or in)
     if (!clk)
       out[DW-1:0] <= in[DW-1:0];

endmodule // oh_lat0



