{"Source Block": ["oh/src/common/hdl/oh_lat1.v@9:20@HdlStmProcess", "   ( input \t     clk, // clk, latch when clk=1\n     input [DW-1:0]  in,  // input data\n     output reg [DW-1:0] out  // output data (stable/latched when clk=0)\n     );\n\n   always @ (clk or in)\n     if (clk)\n       out[DW-1:0] <= in[DW-1:0];\n\nendmodule // oh_lat1\n\n\n"], "Clone Blocks": [["oh/src/common/hdl/oh_lat0.v@9:20", "   ( input \t     clk, // clk, latch when clk=0\n     input [DW-1:0] \t in, // input data\n     output reg [DW-1:0] out  // output data (stable/latched when clk=1)\n     );\n   \n   always @ (clk or in)\n     if (!clk)\n       out[DW-1:0] <= in[DW-1:0];\n\nendmodule // oh_lat0\n\n\n"]], "Diff Content": {"Delete": [[14, "   always @ (clk or in)\n"], [15, "     if (clk)\n"], [16, "       out[DW-1:0] <= in[DW-1:0];\n"]], "Add": [[16, "   generate\n"], [16, "      if(ASIC)\n"], [16, "\tbegin : g0\n"], [16, "\t   asic_lat1 i_lat [DW-1:0] (.clk(clk),\n"], [16, "\t\t\t\t     .in(in[DW-1:0]),\n"], [16, "\t\t\t\t     .out(out[DW-1:0]));\n"], [16, "\tend\n"], [16, "      else\n"], [16, "\tbegin : g0\n"], [16, "\t   reg [DW-1:0] out_reg;\t   \n"], [16, "\t   always @ (clk or in)\n"], [16, "\t     if (clk)\n"], [16, "\t       out_reg[DW-1:0] <= in[DW-1:0];\n"], [16, "\t   assign out[DW-1:0] = out_reg[DW-1:0];\t   \n"], [16, "\tend\n"], [16, "   endgenerate\n"]]}}