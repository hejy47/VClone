{"Source Block": ["oh/spi/hdl/spi_master_io.v@127:137@HdlStmAssign", "     else if(baud_match)       \n       tx_shiftreg[PW-1:0] <= {tx_shiftreg[PW-2:0],miso};\n\n   assign mosi = tx_shiftreg[PW-1];\n\n   assign rx_data[7:0] = tx_shiftreg[7:0];\n   \n   \nendmodule // spi_slave_io\n\n// Local Variables:\n"], "Clone Blocks": [["oh/spi/hdl/spi_master_io.v@125:135", "     if (tx_access)\n       tx_shiftreg[PW-1:0] <= tx_data[PW-1:0];\n     else if(baud_match)       \n       tx_shiftreg[PW-1:0] <= {tx_shiftreg[PW-2:0],miso};\n\n   assign mosi = tx_shiftreg[PW-1];\n\n   assign rx_data[7:0] = tx_shiftreg[7:0];\n   \n   \nendmodule // spi_slave_io\n"]], "Diff Content": {"Delete": [[132, "   assign rx_data[7:0] = tx_shiftreg[7:0];\n"]], "Add": [[132, "   oh_par2ser  #(.PW(8),\n"], [132, "\t\t .SW(1))\n"], [132, "   par2ser (// Outputs\n"], [132, "\t    .dout\t(mosi),           // serial output\n"], [132, "\t    .access_out\t(),\n"], [132, "\t    .wait_out\t(),\n"], [132, "\t    .clk\t(clk),\n"], [132, "\t    .nreset\t(nreset),         // async active low reset\n"], [132, "\t    .din\t(fifo_dout[7:0]), // 8 bit data from fifo\n"], [132, "\t    .shift\t(shift),          // shift on neg edge\n"], [132, "\t    .datasize\t(3'b111),         // 8 bits\n"], [132, "\t    .load\t(load_byte),      // load data from fifo\n"], [132, "\t    .lsbfirst\t(lsbfirst),       // serializer direction\n"], [132, "\t    .fill\t(miso),           // fill with slave data\n"], [132, "\t    .wait_in\t(1'b0)            // no wait\n"], [132, "\t    );\n"]]}}