{"Source Block": ["oh/elink/hdl/esaxi.v@428:457@HdlStmProcess", "   // -- returned in order, we will only allow\n   // -- one at a time.\n   \n   assign txrd_write         = 1'b0;\n   \n   always @( posedge s_axi_aclk )\n     if (~s_axi_aresetn) \n       begin\n\t  txrd_access         <= 1'b0;      \n\t  txrd_datamode[1:0]  <= 2'd0;\n\t  txrd_dstaddr[31:0]  <= 32'd0;\n\t  txrd_srcaddr[31:0]  <= 32'd0;\t \n          ractive_reg         <= 1'b0;\n          rnext               <= 1'b0;          \n      end \n     else \n       begin\n          ractive_reg         <= read_active;\n          rnext               <= s_axi_rvalid & s_axi_rready & ~s_axi_rlast;        \n          txrd_access         <= ( ~ractive_reg & read_active ) | rnext;         \n\t  txrd_datamode[1:0]  <= axi_arsize[1:0];\n\t  txrd_dstaddr[31:0]  <= axi_araddr[31:0];\n\t  txrd_srcaddr[31:0]  <= {RETURN_ADDR, 16'd0};\n\t  //TODO: use arid+srcaddr for out of order ?\n       end\n   //###################################################\n   //#READ RESPONSE (DATA CHANNEL)\n   //###################################################  \n   //Read response AXI state machine\n   //Only one outstanding read\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[443, "     else \n"]], "Add": [[443, "     else\n"]]}}