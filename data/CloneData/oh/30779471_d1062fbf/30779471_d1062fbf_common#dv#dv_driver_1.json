{"Source Block": ["oh/common/dv/dv_driver.v@120:147@HdlStmFor", "   //###########################################\n   //MEMORY\n   //###########################################\n   genvar k;\n   generate\n      for(j=0;j<N;j=j+1) begin : mem\t \n\t ememory #(.NAME(NAME),\n\t\t   .IDW(IDW),\n\t\t   .AW(AW)\n\t\t   )\n\t ememory(// Outputs\n\t\t .wait_out\t\t(mem_wait_out[j]),\n\t\t .access_out\t\t(mem_access_out[j]),\n\t\t .packet_out\t\t(mem_packet_out[(j+1)*PW-1:j*PW]),\n\t\t // Inputs\n\t\t .clk\t\t\t(clk),\n\t\t .nreset\t\t(nreset),\n\t\t .coreid\t\t(coreid[IDW-1:0]),\n\t\t .access_in\t\t(dut_access[j]),\n\t\t .packet_in\t\t(dut_packet[(j+1)*PW-1:j*PW]),\n\t\t .wait_in\t\t(dut_wait[i])\n\t\t );\n      end\t \n\t \n   endgenerate\n   \n   //###########################################\n   //MUX BETWEEN STIMULUS AND MEMORY\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[140, "\t\t .wait_in\t\t(dut_wait[i])\n"]], "Add": [[140, "\t\t .wait_in\t\t(dut_wait[j])\n"]]}}