{"Source Block": ["oh/emmu/hdl/emmu.v@127:142@HdlStmProcess", "   /*****************************/   \n   //pipeline to compensate for table lookup pipeline \n   //assumes one cycle memory access!\n   //the pushback is needed stall async transmit path      \n\n   always @ (posedge  rd_clk)\n     if(~(emesh_wr_wait | emesh_rd_wait))\n       begin\n\t  emesh_access_out         <=  emesh_access_in;\n\t  emesh_packet_reg[PW-1:0] <=  emesh_packet_in[PW-1:0];\t  \n       end\n     \t \n   assign emesh_dstaddr_out[63:0] = (mmu_en & ~mmu_bp) ? {emmu_lookup_data[43:0], emesh_packet_reg[27:8]} :\n\t\t\t\t                         {32'b0,emesh_packet_reg[39:8]}; \n   //Concatenating output packet\n   assign emesh_packet_out[PW-1:0] = {emesh_packet_reg[PW-1:40],\n"], "Clone Blocks": [["oh/emmu/hdl/emmu.v@134:145", "       begin\n\t  emesh_access_out         <=  emesh_access_in;\n\t  emesh_packet_reg[PW-1:0] <=  emesh_packet_in[PW-1:0];\t  \n       end\n     \t \n   assign emesh_dstaddr_out[63:0] = (mmu_en & ~mmu_bp) ? {emmu_lookup_data[43:0], emesh_packet_reg[27:8]} :\n\t\t\t\t                         {32'b0,emesh_packet_reg[39:8]}; \n   //Concatenating output packet\n   assign emesh_packet_out[PW-1:0] = {emesh_packet_reg[PW-1:40],\n                                      emesh_dstaddr_out[31:0],\n                                      emesh_packet_reg[7:0]\n\t\t\t\t     };\n"]], "Diff Content": {"Delete": [[133, "     if(~(emesh_wr_wait | emesh_rd_wait))\n"]], "Add": [[133, "     if(~emesh_wait_in)\n"]]}}