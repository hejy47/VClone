Source Block: oh/axi/hdl/esaxi_logic.v@530:565@HdlStmProcess
   // Handle eLink response data

   // always read response data immediately
   assign emrr_rd_en = ~emrr_empty;

   always @( posedge S_AXI_ACLK ) begin
      if ( S_AXI_ARESETN == 1'b0 ) begin

         axi_rvalid <= 1'b0;
         axi_rdata  <= 'd0;
         axi_rresp  <= 2'd0;

      end else begin

         if( ~emrr_empty ) begin

            axi_rvalid <= 1'b1;
            axi_rresp  <= 2'd0;

            case( axi_arsize[1:0] )

              2'b00: axi_rdata <= {4{emrr_rd_data[7:0]}};
              2'b01: axi_rdata <= {2{emrr_rd_data[15:0]}};
              default: axi_rdata <= emrr_rd_data;

            endcase // case ( axi_araddr[1:0] }...

         end else if( S_AXI_RREADY ) begin // if ( ~emrr_empty )

            axi_rvalid <= 1'b0;

         end
      end // else: !if( S_AXI_ARESETN == 1'b0 )
   end // always @ ( posedge S_AXI_ACLK )
   
endmodule

Diff Content:
- 538          axi_rvalid <= 1'b0;
- 539          axi_rdata  <= 'd0;
- 540          axi_rresp  <= 2'd0;
- 551               2'b00: axi_rdata <= {4{emrr_rd_data[7:0]}};
- 552               2'b01: axi_rdata <= {2{emrr_rd_data[15:0]}};
- 553               default: axi_rdata <= emrr_rd_data;
+ 540          axi_rvalid       <= 1'b0;
+ 540          axi_rdata[31:0]  <= 32'd0;
+ 540          axi_rresp        <= 2'd0;
+ 553               2'b00: axi_rdata[31:0] <= {4{emrr_rd_data[7:0]}};
+ 553               2'b01: axi_rdata[31:0] <= {2{emrr_rd_data[15:0]}};
+ 553               default: axi_rdata[31:0] <= emrr_rd_data[31:0];

Clone Blocks:
