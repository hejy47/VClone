{"Source Block": ["oh/embox/hdl/embox.v@101:111@HdlStmAssign", "   assign  embox_write       = mi_en &  mi_we[0];\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write;      //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_en & ~mi_we[0];\n   assign embox_w1_read      = embox_w1_access & embox_read;       //causes FIFO read\t\t      \n\n   /*****************************/\n   /*WRITE ACTION               */\n   /*****************************/\n"], "Clone Blocks": [["oh/embox/hdl/embox.v@98:108", "   assign embox_w1_access     = (mi_addr[RFAW-1:2]==`EMBOX1); //upper 32 bit word\n\n   //fifo read/write logic\n   assign  embox_write       = mi_en &  mi_we[0];\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write;      //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_en & ~mi_we[0];\n   assign embox_w1_read      = embox_w1_access & embox_read;       //causes FIFO read\t\t      \n\n"], ["oh/embox/hdl/embox.v@102:112", "   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write;      //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_en & ~mi_we[0];\n   assign embox_w1_read      = embox_w1_access & embox_read;       //causes FIFO read\t\t      \n\n   /*****************************/\n   /*WRITE ACTION               */\n   /*****************************/\n   //hold lower data word until upper word arrives\n"], ["oh/embox/hdl/embox.v@96:106", "   //access decode\n   assign embox_w0_access     = (mi_addr[RFAW-1:2]==`EMBOX0); //lower 32 bit word\n   assign embox_w1_access     = (mi_addr[RFAW-1:2]==`EMBOX1); //upper 32 bit word\n\n   //fifo read/write logic\n   assign  embox_write       = mi_en &  mi_we[0];\n   assign  embox_w0_write    = embox_w0_access & embox_write;\n   assign  embox_w1_write    = embox_w1_access & embox_write;      //causes FIFO write\n\n   //read logic\n   assign embox_read         = mi_en & ~mi_we[0];\n"]], "Diff Content": {"Delete": [[106, "   assign embox_read         = mi_en & ~mi_we[0];\n"]], "Add": []}}