{"Source Block": ["oh/memory/hdl/fifo_async.v@83:106@HdlStmIf", "end // block: xilinx   \nendgenerate\n\n //Random wait generator\n   generate\n      if(WAIT)\n\tbegin\t   \n\t   reg [7:0] wait_counter;  \n\t   always @ (posedge wr_clk or posedge rst)\n\t     if(rst)\n\t       wait_counter[7:0] <= 'b0;   \n\t     else\n\t       wait_counter[7:0] <= wait_counter+1'b1;         \n\t   assign wait_random      = (|wait_counter[4:0]);//(|wait_counter[3:0]);//1'b0;\n\tend\n      else\n\tbegin\n\t   assign wait_random = 1'b0;\n\tend // else: !if(WAIT)\n   endgenerate\n   \n   \nendmodule // fifo_async\n// Local Variables:\n"], "Clone Blocks": [["oh/emesh/dv/ememory.v@179:202", "\n\n   //Random wait generator\n   //TODO: make this a module\n   generate\n      if(WAIT)\n\tbegin\t   \n\t   reg [7:0] wait_counter;  \n\t   always @ (posedge clk or negedge nreset)\n\t     if(!nreset)\n\t       wait_counter[7:0] <= 'b0;   \n\t     else\n\t       wait_counter[7:0] <= wait_counter+1'b1;         \n\t   assign wait_random      = (|wait_counter[4:0]);//(|wait_counter[3:0]);//1'b0;\n\tend\n      else\n\tbegin\n\t   assign wait_random = 1'b0;\n\tend // else: !if(WAIT)\n   endgenerate\n  \n   \nendmodule // emesh_memory\n// Local Variables:\n"]], "Diff Content": {"Delete": [[88, "      if(WAIT)\n"]], "Add": [[88, "      if(WAIT>0)\n"]]}}