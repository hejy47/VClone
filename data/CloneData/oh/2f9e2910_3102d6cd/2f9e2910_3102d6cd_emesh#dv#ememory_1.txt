Source Block: oh/emesh/dv/ememory.v@77:89@HdlStmAssign
   
   //Address-in (shifted by three bits, 64 bit wide memory)
   assign addr[MAW-1:0] = dstaddr_in[MAW+2:3];     

   //Shift up
   assign  din_aligned[DW-1:0] = (datamode_in[1:0]==2'b00) ? {(4){data_in[7:0]}}  :
				(datamode_in[1:0]==2'b01) ? {(2){data_in[15:0]}} :						
 			                                    data_in[31:0];
   
   //Data-in (hardoded width)
   assign din[63:0] =(datamode_in[1:0]==2'b11) ? {srcaddr_in[31:0],din_aligned[31:0]}:
		                                 {din_aligned[31:0],din_aligned[31:0]};
   //Write mask

Diff Content:
- 83 				(datamode_in[1:0]==2'b01) ? {(2){data_in[15:0]}} :						
- 84  			                                    data_in[31:0];
+ 84 			  	 (datamode_in[1:0]==2'b01) ? {(2){data_in[15:0]}} :	
+ 84  			                                     data_in[31:0];

Clone Blocks:
Clone Blocks 1:
oh/emesh/dv/ememory.v@82:93
   assign  din_aligned[DW-1:0] = (datamode_in[1:0]==2'b00) ? {(4){data_in[7:0]}}  :
				(datamode_in[1:0]==2'b01) ? {(2){data_in[15:0]}} :						
 			                                    data_in[31:0];
   
   //Data-in (hardoded width)
   assign din[63:0] =(datamode_in[1:0]==2'b11) ? {srcaddr_in[31:0],din_aligned[31:0]}:
		                                 {din_aligned[31:0],din_aligned[31:0]};
   //Write mask
   always@*
     casez({write_in, datamode_in[1:0],dstaddr_in[2:0]})
       //Byte
       6'b100000 : wen[7:0] = 8'b00000001;

