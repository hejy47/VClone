{"Source Block": ["oh/elink/hdl/etx_arbiter.v@107:162@HdlStmProcess", "   // FIFO read enables, when we're idle or done with the current datum\n   assign     emrr_rd_en = rr_ready & (~ready | etx_ack);\n   assign     emrq_rd_en = rq_ready & (~ready | etx_ack);\n   assign     emwr_rd_en = wr_ready & (~ready | etx_ack);\n   \n   always @ (posedge tx_lclk_par)\n      if( reset ) \n\tbegin\n           ready             <= 1'b0;\n\t   etx_write         <= 1'b0;\n\t   etx_datamode[1:0] <= 2'b0;\n\t   etx_ctrlmode[3:0] <= 4'b0;\n\t   etx_dstaddr[31:0] <= 32'b0;\n\t   etx_data[31:0]    <= 32'b0;\n\t   etx_srcaddr[31:0] <= 32'b0;\n\tend \n      else \n\tbegin\n\t   etx_write  <= emrr_rd_en ? emrr_fifo_write :\n\t\t\t emrq_rd_en ? emrq_fifo_write :\n\t\t\t              emwr_fifo_write;\n\n\t   etx_datamode[1:0] <= emrr_rd_en ? emrr_fifo_datamode[1:0] :\n\t\t\t\temrq_rd_en ? emrq_fifo_datamode[1:0] :\n\t\t\t        emwr_fifo_datamode[1:0];\n\t   \n\t   \n\t   etx_ctrlmode[3:0] <= emrr_rd_en ? emrr_fifo_ctrlmode[3:0] :\n\t\t\t\temrq_rd_en ? emrq_fifo_ctrlmode[3:0] :\n\t\t\t        emwr_fifo_ctrlmode[3:0];\n\n\n\t   etx_dstaddr[31:0] <= emrr_rd_en ? emrr_fifo_dstaddr[31:0] :\n\t\t\t\temrq_rd_en ? emrq_fifo_dstaddr[31:0] :\n\t\t\t        emwr_fifo_dstaddr[31:0];\n\n\n\t   etx_data[31:0] <= emrr_rd_en ? emrr_fifo_data[31:0] :\n\t\t\t     emrq_rd_en ? emrq_fifo_data[31:0] :\n\t\t\t     emwr_fifo_data[31:0];\n\t   \n\t   \n\t   etx_srcaddr[31:0] <= emrr_rd_en ? emrr_fifo_srcaddr[31:0] :\n\t\t\t\temrq_rd_en ? emrq_fifo_srcaddr[31:0] :\n\t\t\t\temwr_fifo_srcaddr[31:0];\n\t   \n\t   ready   <= (emrr_rd_en | emrq_rd_en | emwr_rd_en ) ? 1'b1 : //ready\n                      (etx_ack)                               ? 1'b0 : //done\n\t\t                                                 ready;//stay ubu\n                                          \n\tend // else: !if( reset )\n\n   assign etx_access = ready;\n   \n      \nendmodule // etx_arbiter\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[123, "      else \n"], [125, "\t   etx_write  <= emrr_rd_en ? emrr_fifo_write :\n"], [126, "\t\t\t emrq_rd_en ? emrq_fifo_write :\n"], [127, "\t\t\t              emwr_fifo_write;\n"], [153, "\t   ready   <= (emrr_rd_en | emrq_rd_en | emwr_rd_en ) ? 1'b1 : //ready\n"], [154, "                      (etx_ack)                               ? 1'b0 : //done\n"], [155, "\t\t                                                 ready;//stay ubu\n"], [157, "\tend // else: !if( reset )\n"]], "Add": [[123, "      else if (emrr_rd_en | emrq_rd_en | emwr_rd_en )\n"], [127, "\t   ready <= 1'b1;\t   \n"], [127, "\t   etx_write  <= emrr_rd_en ? 1'b1 :\n"], [127, "\t\t\t emrq_rd_en ? 1'b0 :\n"], [127, "\t\t\t              1'b1;\n"], [157, "\tend   \n"], [157, "      else if (etx_ack)\n"], [157, "\tbegin\n"], [157, "\t   ready <= 1'b0;\t   \n"], [157, "\tend   \n"]]}}