Source Block: oh/elink/hdl/esaxi.v@207:239@HdlStmProcess

   assign  last_wr_beat = s_axi_wready & s_axi_wvalid & s_axi_wlast;
   
   // axi_awready is asserted when there is no write transfer in progress

   always @( posedge s_axi_aclk ) 
      if(~s_axi_aresetn)  
	begin
           s_axi_awready <= 1'b0;
           write_active <= 1'b0;           
	end 
      else 
	begin
           // we're always ready for an address cycle if we're not doing something else
           //  note: might make this faster by going ready on last beat instead of after,
           //  but if we want the very best each channel should be fifo'd.
           if( ~axi_awready & ~write_active & ~b_wait )
             s_axi_awready <= 1'b1;
           else if( s_axi_awvalid )
             s_axi_awready <= 1'b0;
	   
           // the write cycle is "active" as soon as we capture an address, it
           // ends on the last beat.
           if( s_axi_awready & s_axi_awvalid )
             write_active <= 1'b1;
           else if( last_wr_beat )
             write_active <= 1'b0;         
	end // else: !if(~s_axi_aresetn)
   
   // capture address & other aw info, update address during cycle
   always @( posedge s_axi_aclk ) 
     if (~s_axi_aresetn)  
       begin

Diff Content:
- 212    always @( posedge s_axi_aclk ) 
- 216            write_active <= 1'b0;           
- 223            if( ~axi_awready & ~write_active & ~b_wait )
+ 212    always @(posedge s_axi_aclk ) 
+ 216            write_active  <= 1'b0;           
+ 223            if( ~s_axi_awready & ~write_active & ~b_wait )

Clone Blocks:
