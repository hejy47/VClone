{"Source Block": ["oh/common/hdl/oh_fifo_sync.v@27:37@HdlIdDef", " );\n   \n   reg [AW:0]          wr_addr;\n   reg [AW:0]          rd_addr;\n   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n"], "Clone Blocks": [["oh/common/hdl/oh_fifo_sync.v@32:42", "   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n   \n   always @ (posedge clk or negedge nreset) \n     if(~nreset) \n"], ["oh/common/hdl/oh_fifo_sync.v@26:36", "   output reg [AW-1:0] rd_count     // valid entries in fifo\n );\n   \n   reg [AW:0]          wr_addr;\n   reg [AW:0]          rd_addr;\n   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n"], ["oh/common/hdl/oh_fifo_sync.v@29:39", "   reg [AW:0]          wr_addr;\n   reg [AW:0]          rd_addr;\n   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n"], ["oh/common/hdl/oh_fifo_sync.v@33:43", "\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n   \n   always @ (posedge clk or negedge nreset) \n     if(~nreset) \n       begin\t   \n"], ["oh/common/hdl/oh_fifo_sync.v@30:40", "   reg [AW:0]          rd_addr;\n   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n   \n"], ["oh/common/hdl/oh_fifo_sync.v@34:44", "   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n   \n   always @ (posedge clk or negedge nreset) \n     if(~nreset) \n       begin\t   \n          wr_addr[AW:0]   <= 'd0;\n"], ["oh/common/hdl/oh_fifo_sync.v@25:35", "   output \t       empty, // fifo is empty  \n   output reg [AW-1:0] rd_count     // valid entries in fifo\n );\n   \n   reg [AW:0]          wr_addr;\n   reg [AW:0]          rd_addr;\n   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n"], ["oh/common/hdl/oh_fifo_sync.v@31:41", "   wire \t       fifo_read;\n   wire \t       fifo_write;\n\n   assign fifo_read   = rd_en & ~empty;\n   assign fifo_write  = wr_en & ~full;\n   assign prog_full   = (rd_count[AW-1:0] == PROG_FULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n   \n   always @ (posedge clk or negedge nreset) \n"]], "Diff Content": {"Delete": [], "Add": [[32, "   wire \t       ptr_match;\n"], [32, "   wire \t       fifo_empty;\n"]]}}