{"Source Block": ["oh/elink/hdl/emaxi.v@164:217@HdlStmProcess", "   assign aw_go       = m_axi_awvalid & m_axi_awready;\n   assign w_go        = m_axi_wvalid & m_axi_wready;\n   assign emwr_rd_en  = ( emwr_access & ~awvalid_b & ~wvalid_b);\n\n   // generate write-address signals\n   always @( posedge m_axi_aclk )     \n     if(~m_axi_aresetn) \n       begin\n          m_axi_awvalid      <= 1'b0;\n          m_axi_awaddr[31:0] <= 32'd0;\n          m_axi_awlen[7:0]   <= 8'd0;\n          m_axi_awsize[2:0]  <= 3'd0;\t  \n          awvalid_b          <= 1'b0;\n          awaddr_b[31:0]     <= 32'd0;\n          awlen_b[7:0]       <= 8'd0;\n          awsize_b[2:0]      <= 3'd0;\n       end \n     else \n       begin\n          if( ~m_axi_awvalid | aw_go ) \n\t    begin\n               if( awvalid_b ) \n\t\t begin\n\t\t    m_axi_awvalid       <= 1'b1;\n\t\t    m_axi_awaddr[31:0]  <= awaddr_b[31:0];\n\t\t    m_axi_awlen[7:0]    <= awlen_b[7:0];\n\t\t    m_axi_awsize[2:0]   <= awsize_b[2:0];\n\t\t end \n\t      else \n\t\tbegin\n\t\t   m_axi_awvalid       <= emwr_rd_en;\n\t\t   m_axi_awaddr[31:0]  <= emwr_dstaddr[31:0];\n\t\t   m_axi_awlen[7:0]    <= 8'b0;\n\t\t   m_axi_awsize[2:0]   <= { 1'b0, emwr_datamode[1:0]};\n\t\tend\n\t    end\n          if( emwr_rd_en & m_axi_awvalid & ~aw_go )\n            awvalid_b <= 1'b1;\n          else if( aw_go )\n            awvalid_b <= 1'b0;\n          \n\t //Pipeline stage\n         if( emwr_rd_en )\n\t   begin\n              awaddr_b[31:0]  <= emwr_dstaddr[31:0];\n              awlen_b[7:0]    <= 8'b0;\n              awsize_b[2:0]   <= { 1'b0, emwr_datamode[1:0] };\n         end        \n       end // else: !if(~m_axi_aresetn)\n\n\n     \n   //--------------------\n   //write alignment circuit\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[176, "          awvalid_b          <= 1'b0;\n"], [177, "          awaddr_b[31:0]     <= 32'd0;\n"], [178, "          awlen_b[7:0]       <= 8'd0;\n"], [179, "          awsize_b[2:0]      <= 3'd0;\n"], [194, "\t\t   m_axi_awvalid       <= emwr_rd_en;\n"], [195, "\t\t   m_axi_awaddr[31:0]  <= emwr_dstaddr[31:0];\n"], [197, "\t\t   m_axi_awsize[2:0]   <= { 1'b0, emwr_datamode[1:0]};\n"], [200, "          if( emwr_rd_en & m_axi_awvalid & ~aw_go )\n"], [206, "         if( emwr_rd_en )\n"], [208, "              awaddr_b[31:0]  <= emwr_dstaddr[31:0];\n"], [210, "              awsize_b[2:0]   <= { 1'b0, emwr_datamode[1:0] };\n"]], "Add": [[195, "\t\t   m_axi_awvalid       <= rxwr_access;\n"], [195, "\t\t   m_axi_awaddr[31:0]  <= rxwr_dstaddr[31:0];\n"], [197, "\t\t   m_axi_awsize[2:0]   <= { 1'b0, rxwr_datamode[1:0]};\n"], [200, "          if( rxwr_access & m_axi_awvalid & ~aw_go )\n"], [206, "         if( rxwr_access )\n"], [208, "              awaddr_b[31:0]  <= rxwr_dstaddr[31:0];\n"], [210, "              awsize_b[2:0]   <= { 1'b0, rxwr_datamode[1:0] };\n"]]}}