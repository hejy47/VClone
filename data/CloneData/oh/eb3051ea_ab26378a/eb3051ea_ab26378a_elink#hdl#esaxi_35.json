{"Source Block": ["oh/elink/hdl/esaxi.v@497:528@HdlStmProcess", "\n   ///Only letting through proper read requests\n   assign emrq_access=emrq_access_all & ~(emrq_dstaddr[31:20]==elinkid[11:0]);\n  \n   //Read response AXI state machine\n   always @( posedge s_axi_aclk ) \n      if (~s_axi_aresetn) \n\tbegin\n           s_axi_rvalid       <= 1'b0;\n           s_axi_rdata[31:0]  <= 32'd0;\n           s_axi_rresp        <= 2'd0;\t   \n\tend \n      else \n\tbegin\n         if( emrr_access | mi_rd_reg ) \n\t   begin\n              s_axi_rvalid <= 1'b1;\n              s_axi_rresp  <= 2'd0;\n            case( axi_arsize[1:0] )\n              2'b00:   s_axi_rdata[31:0] <= {4{emrr_mux_data[7:0]}};  //8-bit\n              2'b01:   s_axi_rdata[31:0] <= {2{emrr_mux_data[15:0]}}; //16-bit\n              default: s_axi_rdata[31:0] <= emrr_mux_data[31:0];      //32-bit\n            endcase // case ( axi_arsize[1:0] )\n           end \n\t else if( s_axi_rready ) \n           s_axi_rvalid <= 1'b0;\n\tend // else: !if( s_axi_aresetn == 1'b0 )\n  \n  \n\nendmodule // esaxi\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[511, "         if( emrr_access | mi_rd_reg ) \n"], [516, "              2'b00:   s_axi_rdata[31:0] <= {4{emrr_mux_data[7:0]}};  //8-bit\n"], [517, "              2'b01:   s_axi_rdata[31:0] <= {2{emrr_mux_data[15:0]}}; //16-bit\n"], [518, "              default: s_axi_rdata[31:0] <= emrr_mux_data[31:0];      //32-bit\n"]], "Add": [[511, "         if( rxrr_access ) \n"], [518, "              2'b00:   s_axi_rdata[31:0] <= {4{rxrr_data[7:0]}};  //8-bit\n"], [518, "              2'b01:   s_axi_rdata[31:0] <= {2{rxrr_data[15:0]}}; //16-bit\n"], [518, "              default: s_axi_rdata[31:0] <= rxrr_data[31:0];      //32-bit\n"]]}}