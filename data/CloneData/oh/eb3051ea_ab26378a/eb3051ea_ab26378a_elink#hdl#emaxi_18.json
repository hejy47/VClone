{"Source Block": ["oh/elink/hdl/emaxi.v@145:155@HdlStmAssign", "   wire \t\treadinfo_full;\n   wire [47:0] \t\treadinfo_out;\n   wire [47:0] \t\treadinfo_in;\n\n   //i/o connections. write address (aw)\n   assign m_axi_awburst[1:0]\t= 2'b01;\n   assign m_axi_awcache[3:0]\t= 4'b0010;//TODO??update value to 4'b0011 if coherent accesses to be used via the zynq acp port\n   assign m_axi_awprot[2:0]\t= 3'h0;\n   assign m_axi_awqos[3:0]\t= 4'h0;\n   assign m_axi_bready    \t= 1'b1;   //TODO? axi_bready, why constant\n   \n"], "Clone Blocks": [["oh/elink/hdl/emaxi.v@147:157", "   wire [47:0] \t\treadinfo_in;\n\n   //i/o connections. write address (aw)\n   assign m_axi_awburst[1:0]\t= 2'b01;\n   assign m_axi_awcache[3:0]\t= 4'b0010;//TODO??update value to 4'b0011 if coherent accesses to be used via the zynq acp port\n   assign m_axi_awprot[2:0]\t= 3'h0;\n   assign m_axi_awqos[3:0]\t= 4'h0;\n   assign m_axi_bready    \t= 1'b1;   //TODO? axi_bready, why constant\n   \n   assign m_axi_arburst[1:0]\t= 2'b01;\n   assign m_axi_arcache[3:0]\t= 4'b0010;\n"], ["oh/elink/hdl/emaxi.v@142:152", "   wire \t\tw_go;\n   wire \t\treadinfo_wren;\n   wire \t\treadinfo_rden;\n   wire \t\treadinfo_full;\n   wire [47:0] \t\treadinfo_out;\n   wire [47:0] \t\treadinfo_in;\n\n   //i/o connections. write address (aw)\n   assign m_axi_awburst[1:0]\t= 2'b01;\n   assign m_axi_awcache[3:0]\t= 4'b0010;//TODO??update value to 4'b0011 if coherent accesses to be used via the zynq acp port\n   assign m_axi_awprot[2:0]\t= 3'h0;\n"], ["oh/elink/hdl/emaxi.v@146:156", "   wire [47:0] \t\treadinfo_out;\n   wire [47:0] \t\treadinfo_in;\n\n   //i/o connections. write address (aw)\n   assign m_axi_awburst[1:0]\t= 2'b01;\n   assign m_axi_awcache[3:0]\t= 4'b0010;//TODO??update value to 4'b0011 if coherent accesses to be used via the zynq acp port\n   assign m_axi_awprot[2:0]\t= 3'h0;\n   assign m_axi_awqos[3:0]\t= 4'h0;\n   assign m_axi_bready    \t= 1'b1;   //TODO? axi_bready, why constant\n   \n   assign m_axi_arburst[1:0]\t= 2'b01;\n"]], "Diff Content": {"Delete": [[150, "   assign m_axi_awburst[1:0]\t= 2'b01;\n"]], "Add": [[150, "   wire \t       aw_go;\n"], [150, "   wire \t       w_go;\n"], [150, "   wire \t       readinfo_wren;\n"], [150, "   wire \t       readinfo_rden;\n"], [150, "   wire \t       readinfo_full;\n"], [150, "   wire [47:0] \t       readinfo_out;\n"], [150, "   wire [47:0] \t       readinfo_in;\n"], [150, "   wire [1:0] \t       rxwr_datamode;\n"], [150, "   wire [AW-1:0]       rxwr_dstaddr;\n"], [150, "   wire [DW-1:0]       rxwr_data;\n"], [150, "   wire [AW-1:0]       rxwr_srcaddr;\n"], [150, "   wire [1:0] \t       rxrd_datamode;\n"], [150, "   wire [3:0] \t       rxrd_ctrlmode;\n"], [150, "   wire [AW-1:0]       rxrd_dstaddr;\n"], [150, "   wire [AW-1:0]       rxrd_srcaddr;\n"], [150, "   wire [1:0] \t       txrr_datamode;\n"], [150, "   wire [3:0] \t       txrr_ctrlmode;\n"], [150, "   wire [31:0] \t       txrr_dstaddr;\n"], [150, "   packet2emesh p2e_rxwr (\n"], [150, "\t\t\t  .access_out\t\t(),\n"], [150, "\t\t\t  .write_out\t\t(),\n"], [150, "\t\t\t  .datamode_out\t\t(rxwr_datamode[1:0]),\n"], [150, "\t\t\t  .ctrlmode_out\t\t(),\n"], [150, "\t\t\t  .dstaddr_out\t\t(rxwr_dstaddr[AW-1:0]),\n"], [150, "\t\t\t  .data_out\t\t(rxwr_data[DW-1:0]),\n"], [150, "\t\t\t  .srcaddr_out\t\t(rxwr_srcaddr[AW-1:0]),\n"], [150, "\t\t\t  .packet_in\t\t(rxwr_packet[PW-1:0])\n"], [150, "\t\t\t  );\n"], [150, "   packet2emesh p2e_rxrd (\n"], [150, "\t\t\t  .access_out\t\t(),\n"], [150, "\t\t\t  .write_out\t\t(),\n"], [150, "\t\t\t  .datamode_out\t\t(rxrd_datamode[1:0]),\n"], [150, "\t\t\t  .ctrlmode_out\t\t(rxrd_ctrlmode[3:0]),\n"], [150, "\t\t\t  .dstaddr_out\t\t(rxrd_dstaddr[AW-1:0]),\n"], [150, "\t\t\t  .data_out\t\t(),\n"], [150, "\t\t\t  .srcaddr_out\t\t(rxrd_srcaddr[AW-1:0]),\n"], [150, "\t\t\t  .packet_in\t\t(rxrd_packet[PW-1:0])\n"], [150, "\t\t\t  );\n"], [150, "   emesh2packet e2p (\n"], [150, "\t\t     .packet_out\t(txrr_packet[PW-1:0]),\n"], [150, "\t\t     .access_in\t\t(txrr_access),\n"], [150, "\t\t     .write_in\t\t(txrr_write),\n"], [150, "\t\t     .datamode_in\t(txrr_datamode[1:0]),\n"], [150, "\t\t     .ctrlmode_in\t(txrr_ctrlmode[3:0]),\n"], [150, "\t\t     .dstaddr_in\t(txrr_dstaddr[AW-1:0]),\n"], [150, "\t\t     .data_in\t\t(txrr_data[DW-1:0]),\n"], [150, "\t\t     .srcaddr_in\t(txrr_srcaddr[AW-1:0])\n"], [150, "\t\t     );\n"], [150, "   assign m_axi_awburst[1:0]\t= 2'b01;  //TODO???\n"]]}}