{"Source Block": ["oh/src/mio/hdl/mrx_io.v@43:65@HdlStmProcess", "   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 8'b0;\n     else if(io_frame & dmode8)\n       io_valid_reg[7:0] <= {io_valid_reg[6:0],1'b1};\n     else if(io_frame & dmode16)\n       io_valid_reg[7:0] <= {io_valid_reg[5:0],2'b11};\n     else if(io_frame & dmode32)\n       io_valid_reg[7:0] <= {io_valid_reg[3:0],4'b1111};\n     else if(io_frame & dmode64)\n       io_valid_reg[7:0] <= 8'b11111111;\n     else\n       io_valid_reg[7:0] <= 8'b0;\n\n   //Access signal for FIFO\n   assign io_access = (&io_valid_reg[7:0])               | // full vector\n\t\t      (~io_frame | (|io_valid_reg[7:0]));  // partial vector \n          \n"], "Clone Blocks": [], "Diff Content": {"Delete": [[50, "       io_valid_reg[7:0] <= 8'b0;\n"], [51, "     else if(io_frame & dmode8)\n"], [52, "       io_valid_reg[7:0] <= {io_valid_reg[6:0],1'b1};\n"], [53, "     else if(io_frame & dmode16)\n"], [54, "       io_valid_reg[7:0] <= {io_valid_reg[5:0],2'b11};\n"], [55, "     else if(io_frame & dmode32)\n"], [56, "       io_valid_reg[7:0] <= {io_valid_reg[3:0],4'b1111};\n"], [57, "     else if(io_frame & dmode64)\n"], [58, "       io_valid_reg[7:0] <= 8'b11111111;\n"], [60, "       io_valid_reg[7:0] <= 8'b0;\n"]], "Add": [[58, "       io_valid[7:0] <= 8'b0;\n"], [58, "     else if(reload)\n"], [58, "       io_valid[7:0] <= valid_input[7:0];   \n"], [58, "     else if(io_frame)\n"], [58, "       io_valid[7:0] <= valid_next[7:0];\n"], [60, "       io_valid[7:0] <= 8'b0;\n"], [60, "   assign reload = (io_frame &  transfer_done) |  // continuing stream\n"], [60, "\t\t   (io_frame & ~transfer_active); // new frame\n"], [60, "   assign transfer_active = |io_valid[7:0];\n"], [60, "   assign transfer_done   = &io_valid[7:0];\n"]]}}