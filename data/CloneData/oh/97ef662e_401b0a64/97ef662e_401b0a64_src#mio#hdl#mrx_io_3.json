{"Source Block": ["oh/src/mio/hdl/mrx_io.v@40:50@HdlStmAssign", "   //########################################\n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n       io_valid_reg[7:0] <= 8'b0;\n"], "Clone Blocks": [["oh/src/mio/hdl/mrx_io.v@38:48", "   //########################################\n   //# STATE MACHINE\n   //########################################\n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n"], ["oh/src/mio/hdl/mtx_io.v@35:45", "   \n   //########################################\n   //# STATE MACHINE\n   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   assign io_valid_next[7:0] = dmode8  ? {1'b0,io_valid_reg[7:1]} :\n"], ["oh/src/mio/hdl/mtx_io.v@36:46", "   //########################################\n   //# STATE MACHINE\n   //########################################   \n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   assign io_valid_next[7:0] = dmode8  ? {1'b0,io_valid_reg[7:1]} :\n\t\t\t       dmode16 ? {2'b0,io_valid_reg[7:2]} :\n"], ["oh/src/mio/hdl/mrx_io.v@39:49", "   //# STATE MACHINE\n   //########################################\n\n   assign dmode8   = (iowidth[1:0]==2'b00);\n   assign dmode16  = (iowidth[1:0]==2'b01);\n   assign dmode32  = (iowidth[1:0]==2'b10);\n   assign dmode64  = (iowidth[1:0]==2'b11);\n\n   //Keep track of valid bytes in shift register\n   always @ (posedge rx_clk or negedge io_nreset)\n     if(!io_nreset)\n"]], "Diff Content": {"Delete": [], "Add": [[45, "   assign valid_input[7:0] = dmode8  ? 8'b00000001 :\n"], [45, "\t\t\t     dmode16 ? 8'b00000011 :\n"], [45, "\t\t\t     dmode32 ? 8'b00001111 :\n"], [45, "                                       8'b11111111;\n"], [45, "   assign valid_next[7:0] = dmode8  ? {io_valid[6:0],1'b1}     :\n"], [45, "\t\t\t    dmode16 ? {io_valid[5:0],2'b11}    :\n"], [45, "                            dmode32 ? {io_valid[3:0],4'b1111} :\n"], [45, "\t\t\t               8'b11111111;\n"]]}}