{"Source Block": ["oh/emmu/hdl/emmu.v@118:133@HdlStmProcess", "   /*****************************/   \n   //pipeline to compensate for table lookup pipeline \n   //assumes one cycle memory access!\n   //the pushback is needed stall async transmit path      \n\n   always @ (posedge  rd_clk)\n     if(~emesh_wait)\n     begin\n\temesh_access_out         <= emesh_access_in;\n\temesh_packet_reg[PW-1:0] <= emesh_packet_in[PW-1:0];\t  \n     end\n     \t \n   assign emesh_dstaddr_out[63:0] = (mmu_en & ~mmu_bp) ? {emmu_lookup_data[43:0], emesh_packet_reg[27:8]} :\n\t\t\t\t                         {32'b0,emesh_packet_reg[39:8]}; \n   //Concatenating output packet\n   assign emesh_packet_out[PW-1:0] = {emesh_packet_reg[PW-1:40],\n"], "Clone Blocks": [["oh/emmu/hdl/emmu.v@125:136", "     begin\n\temesh_access_out         <= emesh_access_in;\n\temesh_packet_reg[PW-1:0] <= emesh_packet_in[PW-1:0];\t  \n     end\n     \t \n   assign emesh_dstaddr_out[63:0] = (mmu_en & ~mmu_bp) ? {emmu_lookup_data[43:0], emesh_packet_reg[27:8]} :\n\t\t\t\t                         {32'b0,emesh_packet_reg[39:8]}; \n   //Concatenating output packet\n   assign emesh_packet_out[PW-1:0] = {emesh_packet_reg[PW-1:40],\n                                      emesh_dstaddr_out[31:0],\n                                      emesh_packet_reg[7:0]\n\t\t\t\t     };\n"], ["oh/emmu/hdl/emmu.v@128:141", "     end\n     \t \n   assign emesh_dstaddr_out[63:0] = (mmu_en & ~mmu_bp) ? {emmu_lookup_data[43:0], emesh_packet_reg[27:8]} :\n\t\t\t\t                         {32'b0,emesh_packet_reg[39:8]}; \n   //Concatenating output packet\n   assign emesh_packet_out[PW-1:0] = {emesh_packet_reg[PW-1:40],\n                                      emesh_dstaddr_out[31:0],\n                                      emesh_packet_reg[7:0]\n\t\t\t\t     };\n   \n\n   assign emesh_packet_hi_out[31:0] = emesh_dstaddr_out[63:32];\n      \nendmodule // emmu\n"]], "Diff Content": {"Delete": [[124, "     if(~emesh_wait)\n"], [125, "     begin\n"], [126, "\temesh_access_out         <= emesh_access_in;\n"], [127, "\temesh_packet_reg[PW-1:0] <= emesh_packet_in[PW-1:0];\t  \n"], [128, "     end\n"]], "Add": [[128, "     if(~(emesh_wr_wait & write_in) & ~(emesh_rd_wait & ~write_in))\n"], [128, "       begin\n"], [128, "\t  emesh_access_out         <=  emesh_access_in;\n"], [128, "\t  emesh_packet_reg[PW-1:0] <=  emesh_packet_in[PW-1:0];\t  \n"], [128, "       end\n"]]}}