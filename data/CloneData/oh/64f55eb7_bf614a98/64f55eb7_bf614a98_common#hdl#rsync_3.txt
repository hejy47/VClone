Source Block: oh/common/hdl/rsync.v@23:43@HdlStmFor
 
   genvar 	i;
   integer 	j;
   
   generate    
      for(i=0;i<DW;i=i+1)
	begin
	   always @ (posedge clk or negedge nrst_in[i])
	     if(!nrst_in[i])
	       sync_pipe[i]  <= 'b0;
	     else
	       begin
		  sync_pipe[i][0] =1'b1;		  
		  for(j=1;j<PS;j=j+1)
		    sync_pipe[i][j] = sync_pipe[i][j-1];		  
	       end
	   assign nrst_out[i] = sync_pipe[i][PS-1];
	end      
   endgenerate

endmodule // rsync

Diff Content:
- 28       for(i=0;i<DW;i=i+1)
- 29 	begin
- 30 	   always @ (posedge clk or negedge nrst_in[i])
- 31 	     if(!nrst_in[i])
- 32 	       sync_pipe[i]  <= 'b0;
- 33 	     else
- 35 		  sync_pipe[i][0] =1'b1;		  
- 36 		  for(j=1;j<PS;j=j+1)
- 37 		    sync_pipe[i][j] = sync_pipe[i][j-1];		  
- 39 	   assign nrst_out[i] = sync_pipe[i][PS-1];
- 40 	end      
+ 33    genvar 	j;   
+ 33    generate          
+ 33       for(i=0;i<PS;i=i+1)
+ 33 	if(i==0)
+ 33 	  begin
+ 33 	     for(j=0;j<DW;j=j+1)		 
+ 33 	       begin
+ 33 		  always @ (posedge clk or negedge nrst_in[j])		 
+ 33 		    if(!nrst_in[j])
+ 33 		      sync_pipe[0][j] <= 1'b0;
+ 33 		    else
+ 33 		      sync_pipe[0][j] <= 1'b1;	     
+ 33 	       end
+ 33 	  end
+ 33 	else
+ 33 	  begin
+ 33 	     for(j=0;j<DW;j=j+1)		 
+ 37 		  always @ (posedge clk or negedge nrst_in[j])		 
+ 37 		    if(!nrst_in[j])
+ 37 		      sync_pipe[i][j] <= 1'b0;
+ 37 		    else
+ 37 		      sync_pipe[i][j] <=  sync_pipe[i-1][j]; 
+ 40 	  end	  	 

Clone Blocks:
Clone Blocks 1:
oh/common/hdl/dsync.v@23:41
   
   genvar 	i;
   integer 	j;

   generate
      for(i=0;i<DW;i=i+1)
	begin
	   always @ (posedge clk)
	     begin
		sync_pipe[i][0] = din;		  
		for(j=1;j<PS;j=j+1)
		  sync_pipe[i][j] = sync_pipe[i][j-1];		  
	     end
	   assign dout[i] = sync_pipe[i][PS-1];
	end 
   endgenerate
   
endmodule // dsync


