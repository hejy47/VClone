{"Source Block": ["oh/elink/hdl/etx_protocol.v@70:115@HdlStmProcess", "\t\t     .srcaddr_out\t(etx_srcaddr[31:0]),\n\t\t     // Inputs\n\t\t     .packet_in\t\t(etx_packet[PW-1:0]));\n      \n   // TODO: Bursts\n   always @( posedge tx_lclk_div4 or posedge reset ) \n     begin\n\tif(reset) \n\t  begin\t     \n             etx_ack          <= 1'b0;\n             tx_frame_par[7:0] <= 8'd0;\n             tx_data_par[63:0] <= 64'd0;\t     \n\t  end \n\telse \n\t  begin\n             if( etx_access & ~etx_ack ) //first cycle\n\t       begin\n\t\t  etx_ack  <= 1'b1;\n\t\t  tx_frame_par[7:0] <= 8'h3F;\n\t\t  tx_data_par[63:0]  <= {8'd0,  // Not used\n\t\t\t\t\t 8'd0,\n\t\t\t\t\t ~etx_write, 7'd0, // B0-TODO: For bursts, add the inc bit\n\t\t\t\t\t etx_ctrlmode[3:0], etx_dstaddr[31:28], // B1\n\t\t\t\t\t etx_dstaddr[27:4],  // B2, B3, B4\n\t\t\t\t\t etx_dstaddr[3:0], etx_datamode[1:0], etx_write, etx_access // B5\n\t\t\t\t   };\n               end \n\t     else if( etx_ack ) //second cycle\n\t       begin\n\t\t  etx_ack  <= 1'b0;\n\t\t  tx_frame_par[7:0] <= 8'hFF;\n\t\t  tx_data_par[63:0]  <= { etx_data[31:0], etx_srcaddr[31:0]};   \n               end \n\t     else \n\t       begin\n\t\t  etx_ack    <= 1'b0;\n\t\t  tx_frame_par[7:0] <= 8'h00;\n\t\t  tx_data_par[63:0]  <= 64'd0;\n               end\n\t  end // else: !if(reset)\t\n     end // always @ ( posedge txlclk_p or posedge reset )\n   \n   //#############################\n   //# Wait signals\n   //#############################\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[79, "             etx_ack          <= 1'b0;\n"], [80, "             tx_frame_par[7:0] <= 8'd0;\n"], [81, "             tx_data_par[63:0] <= 64'd0;\t     \n"], [85, "             if( etx_access & ~etx_ack ) //first cycle\n"], [87, "\t\t  etx_ack  <= 1'b1;\n"], [88, "\t\t  tx_frame_par[7:0] <= 8'h3F;\n"], [89, "\t\t  tx_data_par[63:0]  <= {8'd0,  // Not used\n"], [90, "\t\t\t\t\t 8'd0,\n"], [97, "\t     else if( etx_ack ) //second cycle\n"], [99, "\t\t  etx_ack  <= 1'b0;\n"], [101, "\t\t  tx_data_par[63:0]  <= { etx_data[31:0], etx_srcaddr[31:0]};   \n"], [105, "\t\t  etx_ack    <= 1'b0;\n"], [106, "\t\t  tx_frame_par[7:0] <= 8'h00;\n"], [107, "\t\t  tx_data_par[63:0]  <= 64'd0;\n"]], "Add": [[81, "             etx_cycle          <= 1'b0;\n"], [81, "             tx_frame_par[7:0]  <= 8'd0;\n"], [81, "             tx_data_reg[127:0] <= 'd0;\t     \n"], [85, "             if( etx_access & ~etx_cycle ) //first cycle (0)\n"], [90, "\t\t  etx_cycle           <= 1'b1;\n"], [90, "\t\t  tx_frame_par[7:0]   <= 8'h3F;\n"], [90, "\t\t  tx_data_reg[127:0]  <= {etx_data[31:0], \n"], [90, "\t\t\t\t\t etx_srcaddr[31:0],\n"], [90, "\t\t\t\t\t 8'd0,  // Not used\n"], [90, "\t\t\t\t\t 8'd0,  //not used\n"], [97, "\t     else if( etx_cycle ) //second cycle (1)\n"], [99, "\t\t  etx_cycle  <= 1'b0;\n"], [107, "\t\t  etx_cycle           <= 1'b0;\n"], [107, "\t\t  tx_frame_par[7:0]   <= 8'h00;\n"], [107, "\t\t  tx_data_reg[127:0]  <= 64'd0;\n"], [110, "   assign tx_data_par[63:0] = etx_cycle ? tx_data_reg[127:64]:\n"], [110, "\t\t\t                  tx_data_reg[63:0];\n"]]}}