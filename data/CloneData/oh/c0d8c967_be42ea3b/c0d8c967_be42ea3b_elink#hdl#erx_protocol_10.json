{"Source Block": ["oh/elink/hdl/erx_protocol.v@275:329@HdlStmProcess", "        end\n      endcase\n   end // always @ ( posedge rx_lclk_div4 )\n   \n   // 3rd cycle\n   always @( posedge rx_lclk_div4 or posedge reset) \n     if (reset)\n       begin\n\t  access_2 <= 1'b0;\n\t  stream_2 <= 1'b0;\t  \n       end\n     else\n       begin\n      // default pass-throughs\n      if(~stream_2) \n\tbegin\n           ctrlmode_2    <= ctrlmode_1;\n           dstaddr_2     <= dstaddr_1;\n           datamode_2    <= datamode_1;\n           write_2       <= write_1;\n           access_2      <= access_1 & rxactive_1;\n\tend \n      else \n\tbegin\n           dstaddr_2     <= dstaddr_2 + 32'h00000008;\n\tend\n\n      data_2        <= data_1;\n      srcaddr_2     <= srcaddr_1;\n      stream_2      <= stream_1;\n\n      case( rxalign_1[2:0] )\n        // 7-5: Full packet is complete in 2nd cycle\n        3'd4:\n          srcaddr_2[7:0]  <= rx_data_in[63:56];\n        3'd3:\n          srcaddr_2[15:0] <= rx_data_in[63:48];\n        3'd2:\n          srcaddr_2[23:0] <= rx_data_in[63:40];\n        3'd1:\n          srcaddr_2[31:0] <= rx_data_in[63:32];\n        3'd0: \n\t  begin\n             data_2[7:0]     <= rx_data_in[63:56];\n             srcaddr_2[31:0] <= rx_data_in[55:24];\n          end\n\tdefault:;//TODO: include error message\n      endcase // case ( rxalign_1 )\n\n   end // always @ ( posedge rx_lclk_div4 )\n   \n\n   //Gating the rx with enable signal\n   synchronizer #(.DW(1)) sync (.out\t\t(ecfg_rx_enable_sync),\n\t\t\t\t.in\t\t(ecfg_rx_enable),\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[283, "\t  access_2 <= 1'b0;\n"], [284, "\t  stream_2 <= 1'b0;\t  \n"], [289, "      if(~stream_2) \n"], [291, "           ctrlmode_2    <= ctrlmode_1;\n"], [292, "           dstaddr_2     <= dstaddr_1;\n"], [293, "           datamode_2    <= datamode_1;\n"], [294, "           write_2       <= write_1;\n"], [295, "           access_2      <= access_1 & rxactive_1;\n"], [299, "           dstaddr_2     <= dstaddr_2 + 32'h00000008;\n"], [302, "      data_2        <= data_1;\n"], [303, "      srcaddr_2     <= srcaddr_1;\n"], [304, "      stream_2      <= stream_1;\n"], [309, "          srcaddr_2[7:0]  <= rx_data_in[63:56];\n"], [311, "          srcaddr_2[15:0] <= rx_data_in[63:48];\n"], [313, "          srcaddr_2[23:0] <= rx_data_in[63:40];\n"], [315, "          srcaddr_2[31:0] <= rx_data_in[63:32];\n"], [318, "             data_2[7:0]     <= rx_data_in[63:56];\n"], [319, "             srcaddr_2[31:0] <= rx_data_in[55:24];\n"]], "Add": [[284, "\t  access_reg <= 1'b0;\n"], [284, "\t  stream_reg <= 1'b0;\t  \n"], [289, "      if(~stream_reg) \n"], [295, "           ctrlmode_reg    <= ctrlmode_1;\n"], [295, "           dstaddr_reg     <= dstaddr_1;\n"], [295, "           datamode_reg    <= datamode_1;\n"], [295, "           write_reg       <= write_1;\n"], [295, "           access_reg      <= access_1 & rxactive_1;\n"], [299, "           dstaddr_reg     <= dstaddr_reg + 32'h00000008;\n"], [304, "      data_reg        <= data_1;\n"], [304, "      srcaddr_reg     <= srcaddr_1;\n"], [304, "      stream_reg      <= stream_1;\n"], [309, "          srcaddr_reg[7:0]  <= rx_data_in[63:56];\n"], [311, "          srcaddr_reg[15:0] <= rx_data_in[63:48];\n"], [313, "          srcaddr_reg[23:0] <= rx_data_in[63:40];\n"], [315, "          srcaddr_reg[31:0] <= rx_data_in[63:32];\n"], [319, "             data_reg[7:0]     <= rx_data_in[63:56];\n"], [319, "             srcaddr_reg[31:0] <= rx_data_in[55:24];\n"]]}}