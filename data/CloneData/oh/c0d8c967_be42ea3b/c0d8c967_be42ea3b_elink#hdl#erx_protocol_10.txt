Source Block: oh/elink/hdl/erx_protocol.v@275:329@HdlStmProcess
        end
      endcase
   end // always @ ( posedge rx_lclk_div4 )
   
   // 3rd cycle
   always @( posedge rx_lclk_div4 or posedge reset) 
     if (reset)
       begin
	  access_2 <= 1'b0;
	  stream_2 <= 1'b0;	  
       end
     else
       begin
      // default pass-throughs
      if(~stream_2) 
	begin
           ctrlmode_2    <= ctrlmode_1;
           dstaddr_2     <= dstaddr_1;
           datamode_2    <= datamode_1;
           write_2       <= write_1;
           access_2      <= access_1 & rxactive_1;
	end 
      else 
	begin
           dstaddr_2     <= dstaddr_2 + 32'h00000008;
	end

      data_2        <= data_1;
      srcaddr_2     <= srcaddr_1;
      stream_2      <= stream_1;

      case( rxalign_1[2:0] )
        // 7-5: Full packet is complete in 2nd cycle
        3'd4:
          srcaddr_2[7:0]  <= rx_data_in[63:56];
        3'd3:
          srcaddr_2[15:0] <= rx_data_in[63:48];
        3'd2:
          srcaddr_2[23:0] <= rx_data_in[63:40];
        3'd1:
          srcaddr_2[31:0] <= rx_data_in[63:32];
        3'd0: 
	  begin
             data_2[7:0]     <= rx_data_in[63:56];
             srcaddr_2[31:0] <= rx_data_in[55:24];
          end
	default:;//TODO: include error message
      endcase // case ( rxalign_1 )

   end // always @ ( posedge rx_lclk_div4 )
   

   //Gating the rx with enable signal
   synchronizer #(.DW(1)) sync (.out		(ecfg_rx_enable_sync),
				.in		(ecfg_rx_enable),

Diff Content:
- 283 	  access_2 <= 1'b0;
- 284 	  stream_2 <= 1'b0;	  
- 289       if(~stream_2) 
- 291            ctrlmode_2    <= ctrlmode_1;
- 292            dstaddr_2     <= dstaddr_1;
- 293            datamode_2    <= datamode_1;
- 294            write_2       <= write_1;
- 295            access_2      <= access_1 & rxactive_1;
- 299            dstaddr_2     <= dstaddr_2 + 32'h00000008;
- 302       data_2        <= data_1;
- 303       srcaddr_2     <= srcaddr_1;
- 304       stream_2      <= stream_1;
- 309           srcaddr_2[7:0]  <= rx_data_in[63:56];
- 311           srcaddr_2[15:0] <= rx_data_in[63:48];
- 313           srcaddr_2[23:0] <= rx_data_in[63:40];
- 315           srcaddr_2[31:0] <= rx_data_in[63:32];
- 318              data_2[7:0]     <= rx_data_in[63:56];
- 319              srcaddr_2[31:0] <= rx_data_in[55:24];
+ 284 	  access_reg <= 1'b0;
+ 284 	  stream_reg <= 1'b0;	  
+ 289       if(~stream_reg) 
+ 295            ctrlmode_reg    <= ctrlmode_1;
+ 295            dstaddr_reg     <= dstaddr_1;
+ 295            datamode_reg    <= datamode_1;
+ 295            write_reg       <= write_1;
+ 295            access_reg      <= access_1 & rxactive_1;
+ 299            dstaddr_reg     <= dstaddr_reg + 32'h00000008;
+ 304       data_reg        <= data_1;
+ 304       srcaddr_reg     <= srcaddr_1;
+ 304       stream_reg      <= stream_1;
+ 309           srcaddr_reg[7:0]  <= rx_data_in[63:56];
+ 311           srcaddr_reg[15:0] <= rx_data_in[63:48];
+ 313           srcaddr_reg[23:0] <= rx_data_in[63:40];
+ 315           srcaddr_reg[31:0] <= rx_data_in[63:32];
+ 319              data_reg[7:0]     <= rx_data_in[63:56];
+ 319              srcaddr_reg[31:0] <= rx_data_in[55:24];

Clone Blocks:
