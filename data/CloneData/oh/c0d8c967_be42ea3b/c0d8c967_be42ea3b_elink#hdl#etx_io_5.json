{"Source Block": ["oh/elink/hdl/etx_io.v@66:95@HdlStmProcess", "   //#############################  \n   assign         txenb = txenb_sync[0];   \n   assign         txgpio = txgpio_sync[0];\n\n   // Sync these control bits into our domain\n   always @ (posedge tx_lclk_div4) \n     begin\n\ttxenb_sync[1:0]  <= {ecfg_tx_enable, txenb_sync[1]};\n\ttxgpio_sync[1:0] <= {ecfg_tx_gpio_enable, txgpio_sync[1]};      \n\tif(txgpio) \n\t  begin\n             pframe <= {8{ecfg_dataout[8]}};           \n             for(n=0; n<8; n=n+1)\n               pdata[n*8+7 -: 8] <= ecfg_dataout[7:0];\t   \n\t  end else if(txenb) \n\t    begin\n               pframe[7:0]  <= tx_frame_par[7:0];\n               pdata[63:0]  <= tx_data_par[63:0];         \n\t    end \n\t  else \n\t    begin\t   \n               pframe[7:0] <= 8'd0;\n               pdata[63:0] <= 64'd0;\t   \n\t    end\n     end\n   \n\n   //FRAME SERDES\n   genvar        i;\n   generate for(i=0; i<8; i=i+1)\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[71, "   always @ (posedge tx_lclk_div4) \n"], [72, "     begin\n"], [73, "\ttxenb_sync[1:0]  <= {ecfg_tx_enable, txenb_sync[1]};\n"], [74, "\ttxgpio_sync[1:0] <= {ecfg_tx_gpio_enable, txgpio_sync[1]};      \n"], [75, "\tif(txgpio) \n"], [76, "\t  begin\n"], [77, "             pframe <= {8{ecfg_dataout[8]}};           \n"], [78, "             for(n=0; n<8; n=n+1)\n"], [79, "               pdata[n*8+7 -: 8] <= ecfg_dataout[7:0];\t   \n"], [80, "\t  end else if(txenb) \n"], [81, "\t    begin\n"], [82, "               pframe[7:0]  <= tx_frame_par[7:0];\n"], [83, "               pdata[63:0]  <= tx_data_par[63:0];         \n"], [84, "\t    end \n"], [85, "\t  else \n"], [86, "\t    begin\t   \n"], [87, "               pframe[7:0] <= 8'd0;\n"], [88, "               pdata[63:0] <= 64'd0;\t   \n"], [89, "\t    end\n"], [90, "     end\n"]], "Add": []}}