{"Source Block": ["oh/common/hdl/oh_fifo_async.v@42:89@HdlStmIf", "   wire \t   wait_random;\n   \n   assign prog_full = fifo_prog_full | wait_random;\n   \ngenerate\nif(TYPE==\"BASIC\") begin : basic   \n   oh_fifo_async_model \n     #(.DEPTH(DEPTH),\n       .DW(DW))\n   fifo_model (\n\t       // Outputs\n\t       .full\t\t\t(full),\n\t       .prog_full\t\t(prog_full),\n\t       .dout\t\t\t(dout[DW-1:0]),\n\t       .empty\t\t\t(empty),\n\t       .valid\t\t\t(valid),\n\t       // Inputs\n\t       .rst\t\t\t(rst),\n\t       .wr_clk\t\t\t(wr_clk),\n\t       .rd_clk\t\t\t(rd_clk),\n\t       .wr_en\t\t\t(wr_en),\n\t       .din\t\t\t(din[DW-1:0]),\n\t       .rd_en\t\t\t(rd_en));\nend\nelse if (TYPE==\"XILINX\") begin : xilinx\n   if((DW==104) & (DEPTH==32))\n     begin\t\n\tfifo_async_104x32 fifo (\n\t       // Outputs\n\t       .full\t\t\t(full),\n\t       .prog_full\t\t(prog_full),\n\t       .dout\t\t\t(dout[DW-1:0]),\n\t       .empty\t\t\t(empty),\n\t       .valid\t\t\t(valid),\n\t       // Inputs\n\t       .rst\t\t\t(rst),\n\t       .wr_clk\t\t\t(wr_clk),\n\t       .rd_clk\t\t\t(rd_clk),\n\t       .wr_en\t\t\t(wr_en),\n\t       .din\t\t\t(din[DW-1:0]),\n\t       .rd_en\t\t\t(rd_en));\n     end // if ((DW==104) & (DEPTH==32))\nend // block: xilinx   \nendgenerate\n\n //Random wait generator\n   generate\n      if(WAIT>0)\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[54, "\t       .prog_full\t\t(prog_full),\n"], [72, "\t       .prog_full\t\t(prog_full),\n"]], "Add": [[54, "\t       .prog_full\t\t(fifo_prog_full),\n"], [72, "\t       .prog_full\t\t(fifo_prog_full),\n"]]}}