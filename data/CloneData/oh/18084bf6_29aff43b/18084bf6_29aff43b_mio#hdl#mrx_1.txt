Source Block: oh/mio/hdl/mrx.v@12:22@HdlIdDef

   //parameters
   parameter PW         = 104;              // data width (core)
   parameter N          = 8;                // IO data width
   parameter FIFO_DEPTH = 32;               // fifo depth  
   localparam CW        = $clog2(2*PW/N);// transfer count width
   
   //reset, clk, cfg
   input           clk;         // main core clock   
   input 	   nreset;      // async active low reset
   input [7:0] 	   datasize;    // size of data transmitted (in bytes, 0=1 byte)

Diff Content:
- 17    localparam CW        = $clog2(2*PW/N);// transfer count width
+ 17    parameter PW         = 104;           // data width (core)
+ 17    parameter N          = 8;             // IO data width
+ 17    parameter FIFO_DEPTH = 32;            // fifo depth  
+ 17    parameter TARGET     = "GENERIC";     // GENERIC,XILINX,ALTERA,GENERIC,ASIC

Clone Blocks:
Clone Blocks 1:
oh/mio/hdl/mtx.v@12:22

   //parameters
   parameter PW         = 104;            // data width (core)
   parameter N          = 16;             // IO data width
   parameter FIFO_DEPTH = 32;             // fifo depth  
   localparam CW        = $clog2(2*PW/N); // transfer count width

   //reset, clk, cfg
   input              clk;       // main core clock   
   input              io_clk;    // clock for tx logic
   input              nreset;    // async active low reset

Clone Blocks 2:
oh/mio/hdl/mio_dp.v@13:23
   //#####################################################################

   //parameters
   parameter PW    = 104;           // data width (core)
   parameter N     = 8;             // Mini IO width
   localparam CW   = $clog2(2*PW/N);// transfer count width
   
   // reset, clk, config
   input           clk;          // main core clock   
   input 	   io_clk;       // clock for TX
   input 	   nreset;       // async active low reset

Clone Blocks 3:
oh/mio/dv/dut_mio.v@14:24
   //parameters
   parameter N     =  1;   
   parameter AW    = 32;               // address width
   parameter NMIO =  8;                // IO data width
   localparam PW   = 2*AW + 40;        // standard packet   
   localparam CW   = $clog2(2*PW/NMIO);// transfer count width
   
   //clock, reset
   input            clk1;
   input            clk2;
   input            nreset;

