{"Source Block": ["oh/common/hdl/oh_iddr.v@27:37@HdlIdDef", "   output [DW-1:0]  q2;     // iddr falling edge sampled data\n   \n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]     q1_sl;\n   reg [DW-1:0]     q2_sh;\n   reg [DW-1:0]     q2_sl;\n   \n   // sample on rising edge\n   always @ (posedge clk)\n     if(ce)\n       q1_sl[DW-1:0] <= #0.2  din[DW-1:0];\n"], "Clone Blocks": [["oh/common/hdl/oh_iddr.v@26:36", "   output [DW-1:0]  q1;     // iddr rising edge sampled data\n   output [DW-1:0]  q2;     // iddr falling edge sampled data\n   \n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]     q1_sl;\n   reg [DW-1:0]     q2_sh;\n   reg [DW-1:0]     q2_sl;\n   \n   // sample on rising edge\n   always @ (posedge clk)\n     if(ce)\n"], ["oh/common/hdl/oh_iddr.v@45:55", "   always @ (posedge clk)\n     if(ce)\n       q2_sl[DW-1:0] <= #0.2 q2_sh[DW-1:0];\n\n   // driving vectors\n   assign q1[DW-1:0] = q1_sl[DW-1:0];   \n   assign q2[DW-1:0] = q2_sl[DW-1:0];\n            \nendmodule // oh_iddr\n\n\n"], ["oh/common/hdl/oh_oddr.v@23:33", "   input [DW-1:0]  din1;  // data input1\n   input [DW-1:0]  din2;  // data input2\n   output [DW-1:0] out;   // ddr output\n\n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]    q1_sl;   \n   reg [DW-1:0]    q2_sl;\n   reg [DW-1:0]    q2_sh;\n      \n   //Generate different logic based on parameters\n   always @ (posedge clk)\n"], ["oh/common/hdl/oh_oddr.v@24:34", "   input [DW-1:0]  din2;  // data input2\n   output [DW-1:0] out;   // ddr output\n\n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]    q1_sl;   \n   reg [DW-1:0]    q2_sl;\n   reg [DW-1:0]    q2_sh;\n      \n   //Generate different logic based on parameters\n   always @ (posedge clk)\n     begin\n"], ["oh/common/hdl/oh_iddr.v@25:35", "   input [DW-1:0]   din;    // data input \n   output [DW-1:0]  q1;     // iddr rising edge sampled data\n   output [DW-1:0]  q2;     // iddr falling edge sampled data\n   \n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]     q1_sl;\n   reg [DW-1:0]     q2_sh;\n   reg [DW-1:0]     q2_sl;\n   \n   // sample on rising edge\n   always @ (posedge clk)\n"], ["oh/common/hdl/oh_iddr.v@30:42", "   reg [DW-1:0]     q1_sl;\n   reg [DW-1:0]     q2_sh;\n   reg [DW-1:0]     q2_sl;\n   \n   // sample on rising edge\n   always @ (posedge clk)\n     if(ce)\n       q1_sl[DW-1:0] <= #0.2  din[DW-1:0];\n   \n   // sampling on falling edge\n   always @ (negedge clk)\n     if(ce)\n       q2_sh[DW-1:0] <= #0.2  din[DW-1:0];\n"], ["oh/common/hdl/oh_oddr.v@25:35", "   output [DW-1:0] out;   // ddr output\n\n   //regs(\"sl\"=stable low, \"sh\"=stable high)\n   reg [DW-1:0]    q1_sl;   \n   reg [DW-1:0]    q2_sl;\n   reg [DW-1:0]    q2_sh;\n      \n   //Generate different logic based on parameters\n   always @ (posedge clk)\n     begin\n\tq1_sl[DW-1:0] <= #(0.1) din1[DW-1:0];\n"], ["oh/common/hdl/oh_iddr.v@46:55", "     if(ce)\n       q2_sl[DW-1:0] <= #0.2 q2_sh[DW-1:0];\n\n   // driving vectors\n   assign q1[DW-1:0] = q1_sl[DW-1:0];   \n   assign q2[DW-1:0] = q2_sl[DW-1:0];\n            \nendmodule // oh_iddr\n\n\n"]], "Diff Content": {"Delete": [[32, "   reg [DW-1:0]     q2_sl;\n"]], "Add": [[32, "   reg [DW-1:0]     q1;\n"], [32, "   reg [DW-1:0]     q2;\n"]]}}