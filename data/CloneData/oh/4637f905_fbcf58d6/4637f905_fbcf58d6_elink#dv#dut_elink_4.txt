Source Block: oh/elink/dv/dut_elink.v@346:360@HdlStmProcess
		 .packet_in		(emem_packet[PW-1:0]));	 // Templated


   //Write wait circuit
   reg [7:0] wait_counter;   
   always @ (posedge clk or negedge nreset)
     if(!nreset)
       wait_counter[7:0] <= 'b0;   
     else
       wait_counter[7:0] <= wait_counter+1'b1;
      
   assign elink1_rxwr_wait       = (|wait_counter[4:0]);//(|wait_counter[3:0]);//1'b0;
   
endmodule // dv_elink
// Local Variables:

Diff Content:
- 351    always @ (posedge clk or negedge nreset)
- 352      if(!nreset)
- 353        wait_counter[7:0] <= 'b0;   
- 354      else
- 355        wait_counter[7:0] <= wait_counter+1'b1;

Clone Blocks:
Clone Blocks 1:
oh/elink/dv/dut_axi_elink.v@561:575
		 .packet_in		(emem_packet[PW-1:0]));	 // Templated


   //Write wait circuit
   reg [7:0] wait_counter;   
   always @ (posedge clk or negedge nreset)
     if(!nreset)
       wait_counter[7:0] <= 'b0;   
     else
       wait_counter[7:0] <= wait_counter+1'b1;
      
   assign elink1_rxwr_wait       = (|wait_counter[4:0]);//(|wait_counter[3:0]);//1'b0;
   
        
endmodule // dv_elink

Clone Blocks 2:
oh/elink/dv/dut_elink.v@345:355
		 
		 .packet_in		(emem_packet[PW-1:0]));	 // Templated


   //Write wait circuit
   reg [7:0] wait_counter;   
   always @ (posedge clk or negedge nreset)
     if(!nreset)
       wait_counter[7:0] <= 'b0;   
     else
       wait_counter[7:0] <= wait_counter+1'b1;

Clone Blocks 3:
oh/emesh/dv/ememory.v@177:191


   //Access wait circuit
   reg [7:0] wait_counter;
  
   always @ (posedge clk or negedge nreset)
     if(!nreset)
       wait_counter[7:0] <= 'b0;   
     else
       wait_counter[7:0] <= wait_counter+1'b1;
      
   assign wait_random      = (|wait_counter[4:0]);//(|wait_counter[3:0]);//1'b0;

   assign wait_all = (wait_random | wait_in);
   

Clone Blocks 4:
oh/elink/dv/dut_axi_elink.v@560:570
		 .access_in		(emem_access),		 // Templated
		 .packet_in		(emem_packet[PW-1:0]));	 // Templated


   //Write wait circuit
   reg [7:0] wait_counter;   
   always @ (posedge clk or negedge nreset)
     if(!nreset)
       wait_counter[7:0] <= 'b0;   
     else
       wait_counter[7:0] <= wait_counter+1'b1;

