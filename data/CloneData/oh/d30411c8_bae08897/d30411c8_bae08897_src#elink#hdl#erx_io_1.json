{"Source Block": ["oh/src/elink/hdl/erx_io.v@309:345@HdlStmFor", "   //###################################\n\n   assign  rxi_delay_in[8:0] ={rxi_frame,rxi_data[7:0]};\n   \n   genvar        j;\n   generate for(j=0; j<9; j=j+1)\n     begin : gen_idelay\n\t(* IODELAY_GROUP = \"IDELAY_GROUP\" *) // Group name for IDELAYCTRL\n\t\n\tIDELAYE2 #(.CINVCTRL_SEL(\"FALSE\"),\n\t\t   .DELAY_SRC(\"IDATAIN\"), \n\t\t   .HIGH_PERFORMANCE_MODE(\"FALSE\"),\n\t\t   .IDELAY_TYPE(\"VAR_LOAD\"),\n\t\t   .IDELAY_VALUE(5'b0),\n\t\t   .PIPE_SEL(\"FALSE\"),\n\t\t   .REFCLK_FREQUENCY(200.0),\n\t\t   .SIGNAL_PATTERN(\"DATA\"))\n\n\tidelay_inst (.CNTVALUEOUT(),             // monitoring value       \n\t\t     .DATAOUT(rxi_delay_out[j]), // delayed data\n\t\t     .C(rx_lclk_div4),           // variable tap delay clock \n\t\t     .CE(1'b0),                  // inc/dec tap value\n\t\t     .CINVCTRL(1'b0),            // inverts clock polarity \n\t\t     .CNTVALUEIN(idelay_value[(j+1)*5-1:j*5]), //variable tap\n\t\t     .DATAIN(1'b0),              // data from FPGA\n\t\t     .IDATAIN(rxi_delay_in[j]),  // data from ibuf\n\t\t     .INC(1'b0),                 // increment tap\n\t\t     .LD(load_taps),             // load new  \n\t\t     .LDPIPEEN(1'b0),            // only for pipeline mode\n\t\t     .REGRST(1'b0)               // only for pipeline mode\n\t\t     );\n     end // block: gen_idelay\n   endgenerate\n   \n   //#############################\n   //# IDDR SAMPLERS\n   //#############################  \n"], "Clone Blocks": [], "Diff Content": {"Delete": [[318, "\tIDELAYE2 #(.CINVCTRL_SEL(\"FALSE\"),\n"], [319, "\t\t   .DELAY_SRC(\"IDATAIN\"), \n"], [320, "\t\t   .HIGH_PERFORMANCE_MODE(\"FALSE\"),\n"], [321, "\t\t   .IDELAY_TYPE(\"VAR_LOAD\"),\n"], [322, "\t\t   .IDELAY_VALUE(5'b0),\n"], [323, "\t\t   .PIPE_SEL(\"FALSE\"),\n"], [325, "\t\t   .SIGNAL_PATTERN(\"DATA\"))\n"], [329, "\t\t     .C(rx_lclk_div4),           // variable tap delay clock \n"], [331, "\t\t     .CINVCTRL(1'b0),            // inverts clock polarity \n"], [332, "\t\t     .CNTVALUEIN(idelay_value[(j+1)*5-1:j*5]), //variable tap\n"], [336, "\t\t     .LD(load_taps),             // load new  \n"], [337, "\t\t     .LDPIPEEN(1'b0),            // only for pipeline mode\n"], [338, "\t\t     .REGRST(1'b0)               // only for pipeline mode\n"], [339, "\t\t     );\n"]], "Add": [[315, "`define IDELAYCTRL_WONT_SYNTHESIZE\n"], [315, "`ifdef IDELAYCTRL_WONT_SYNTHESIZE\n"], [315, "\tIDELAYE3 #(.DELAY_SRC(\"IDATAIN\"),\n"], [315, "\t\t   .DELAY_TYPE(\"VAR_LOAD\"),\n"], [315, "\t\t   .DELAY_VALUE(9'b0),\n"], [315, "\t\t   .REFCLK_FREQUENCY(200.0),\n"], [315, "\t\t   .DELAY_FORMAT(\"COUNT\"), // Ultrascale w/ COUNT can remove IDELAYCTRL (but then not stable over temp / voltage variations)\n"], [315, "\t\t   .SIM_DEVICE(\"ULTRASCALE_PLUS_ES2\"))\n"], [315, "\tidelay_inst (.CNTVALUEOUT(),             // monitoring value       \n"], [315, "\t\t     .DATAOUT(rxi_delay_out[j]), // delayed data\n"], [315, "\t\t     .CLK(rx_lclk_div4),         // variable tap delay clock\n"], [315, "\t\t     .CE(1'b0),                  // inc/dec tap value\n"], [315, "\t\t     .CNTVALUEIN({4'b0, idelay_value[(j+1)*5-1:j*5]}), //variable tap (BROKEN!!! for Ultrascale, 9 bits / counter\n"], [315, "\t\t     .DATAIN(1'b0),              // data from FPGA\n"], [315, "\t\t     .IDATAIN(rxi_delay_in[j]),  // data from ibuf\n"], [315, "\t\t     .INC(1'b0),                 // increment tap\n"], [315, "\t\t     .LOAD(load_taps),           // load new\n"], [315, "\t\t     .EN_VTC(~load_taps),        // Enables IDELAYCTRL\n"], [315, "\t\t     .RST(1'b0)                  //\n"], [315, "\t\t   );\n"], [315, "`else\n"], [323, "\tIDELAYE3 #(.DELAY_SRC(\"IDATAIN\"),\n"], [323, "\t\t   .DELAY_TYPE(\"VAR_LOAD\"),\n"], [323, "\t\t   .DELAY_VALUE(9'b0),\n"], [325, "\t\t   .DELAY_FORMAT(\"TIME\"), // Ultrascale w/ COUNT can remove IDELAYCTRL (but then not stable over temp / voltage variations)\n"], [325, "\t\t   .SIM_DEVICE(\"ULTRASCALE_PLUS_ES2\"))\n"], [329, "\t\t     .CLK(rx_lclk_div4),         // variable tap delay clock\n"], [332, "\t\t     .CNTVALUEIN({4'b0, idelay_value[(j+1)*5-1:j*5]}), //variable tap (BROKEN!!! for Ultrascale, 9 bits / counter\n"], [339, "\t\t     .LOAD(load_taps),           // load new\n"], [339, "\t\t     .EN_VTC(~load_taps),        // Enables IDELAYCTRL\n"], [339, "\t\t     .RST(1'b0)                  //\n"], [339, "\t\t   );\n"], [339, "`endif\n"]]}}