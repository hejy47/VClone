{"Source Block": ["oh/stdlib/hdl/oh_fifo_sync.v@64:74@HdlStmAssign", "\n   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n\n   always @ (posedge clk or negedge nreset)\n     if(~nreset)\n       begin\n"], "Clone Blocks": [["oh/stdlib/hdl/oh_fifo_sync.v@62:72", "   // FIFO Control\n   //#########################################################\n\n   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n\n   always @ (posedge clk or negedge nreset)\n"], ["oh/stdlib/hdl/oh_fifo_sync.v@63:73", "   //#########################################################\n\n   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n\n   always @ (posedge clk or negedge nreset)\n     if(~nreset)\n"], ["oh/stdlib/hdl/oh_fifo_sync.v@61:71", "   //#########################################################\n   // FIFO Control\n   //#########################################################\n\n   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n\n"], ["oh/stdlib/hdl/oh_fifo_sync.v@65:75", "   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n\n   always @ (posedge clk or negedge nreset)\n     if(~nreset)\n       begin\n          wr_addr[AW:0]    <= 'd0;\n"], ["oh/stdlib/hdl/oh_fifo_sync.v@60:70", "\n   //#########################################################\n   // FIFO Control\n   //#########################################################\n\n   assign fifo_read   = rd_en & ~rd_empty;\n   assign fifo_write  = wr_en & ~wr_full;\n   assign almost_full = (wr_count[AW-1:0] == PROGFULL);\n   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);\n   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);\n"]], "Diff Content": {"Delete": [[69, "   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);\n"]], "Add": []}}