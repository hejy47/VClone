Source Block: oh/stdlib/hdl/oh_fifo_sync.v@63:73@HdlStmAssign
   //#########################################################

   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);

   always @ (posedge clk or negedge nreset)
     if(~nreset)

Diff Content:
- 68    assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);

Clone Blocks:
Clone Blocks 1:
oh/stdlib/hdl/oh_fifo_sync.v@64:74

   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);

   always @ (posedge clk or negedge nreset)
     if(~nreset)
       begin

Clone Blocks 2:
oh/stdlib/hdl/oh_fifo_sync.v@62:72
   // FIFO Control
   //#########################################################

   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);

   always @ (posedge clk or negedge nreset)

Clone Blocks 3:
oh/stdlib/hdl/oh_fifo_sync.v@61:71
   //#########################################################
   // FIFO Control
   //#########################################################

   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);


Clone Blocks 4:
oh/stdlib/hdl/oh_fifo_sync.v@65:75
   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);

   always @ (posedge clk or negedge nreset)
     if(~nreset)
       begin
          wr_addr[AW:0]    <= 'd0;

Clone Blocks 5:
oh/stdlib/hdl/oh_fifo_sync.v@60:70

   //#########################################################
   // FIFO Control
   //#########################################################

   assign fifo_read   = rd_en & ~rd_empty;
   assign fifo_write  = wr_en & ~wr_full;
   assign almost_full = (wr_count[AW-1:0] == PROGFULL);
   assign ptr_match   = (wr_addr[AW-1:0] == rd_addr[AW-1:0]);
   assign full        = ptr_match & (wr_addr[AW]==!rd_addr[AW]);
   assign fifo_empty  = ptr_match & (wr_addr[AW]==rd_addr[AW]);

