{"Source Block": ["oh/elink/hdl/emaxi.v@494:550@HdlStmProcess", "       if ( ~m_axi_aresetn )\n           m_axi_rdata_reg <= 'b0;\n       else\n           m_axi_rdata_reg <= m_axi_rdata;\n\n   always @( posedge m_axi_aclk )\n     if( ~m_axi_aresetn ) \n       begin      \n\t  txrr_data[31:0]     <= 32'b0;\n\t  txrr_srcaddr[31:0]  <= 32'b0;\n\t  txrr_access_reg     <= 1'b0;\n\t  txrr_access         <= 1'b0;         \n      end \n     else \n       begin\n          txrr_access_reg     <= fifo_rd_en;\t  \n\t  txrr_access         <= txrr_access_reg;//added pipeline stage for data ???/\n\t  // steer read data according to size & host address lsbs\n\t  //all data needs to be right aligned\n\t  //(this is due to the Epiphany right aligning all words)\n\t  case(readinfo_out[1:0])//datamode\n            2'd0:  // byte read\n              case(readinfo_out[8:6])\n\t\t3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[7:0]};\n\t\t3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[15:8]};\n\t\t3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[23:16]};\n\t\t3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[31:24]};\n\t\t3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[39:32]};\n\t\t3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[47:40]};\n\t\t3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[55:48]};\n\t\tdefault:  txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[63:56]};\n              endcase\t    \n            2'd1:  // 16b hword\n              case( readinfo_out[8:7] )\n\t\t2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[15:0]};\n\t\t2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[31:16]};\n\t\t2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[47:32]};\n\t\tdefault: txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[63:48]};\n              endcase\n            2'd2:  // 32b word\n              if( readinfo_out[8] )\n               txrr_data[31:0] <= m_axi_rdata_reg[63:32];\n             else\n               txrr_data[31:0] <= m_axi_rdata_reg[31:0];\n           // 64b word already defined by defaults above\n           2'd3: \n\t     begin // 64b dword\n\t\ttxrr_data[31:0]  <= m_axi_rdata_reg[31:0];\n\t\ttxrr_srcaddr[31:0]  <= m_axi_rdata_reg[63:32];\n             end\n         endcase         \n       end // else: !if( ~m_axi_aresetn )\n   \nendmodule // emaxi\n// Local Variables:\n// verilog-library-directories:(\".\" \"../../emesh/hdl\" \"../../memory/hdl\" \"../../common/hdl\"  )\n// End:\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[499, "   always @( posedge m_axi_aclk )\n"], [500, "     if( ~m_axi_aresetn ) \n"], [501, "       begin      \n"], [502, "\t  txrr_data[31:0]     <= 32'b0;\n"], [503, "\t  txrr_srcaddr[31:0]  <= 32'b0;\n"], [504, "\t  txrr_access_reg     <= 1'b0;\n"], [505, "\t  txrr_access         <= 1'b0;         \n"], [506, "      end \n"], [507, "     else \n"], [509, "          txrr_access_reg     <= fifo_rd_en;\t  \n"], [510, "\t  txrr_access         <= txrr_access_reg;//added pipeline stage for data ???/\n"], [514, "\t  case(readinfo_out[1:0])//datamode\n"], [516, "              case(readinfo_out[8:6])\n"], [517, "\t\t3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[7:0]};\n"], [518, "\t\t3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[15:8]};\n"], [519, "\t\t3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[23:16]};\n"], [520, "\t\t3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[31:24]};\n"], [521, "\t\t3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[39:32]};\n"], [522, "\t\t3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[47:40]};\n"], [523, "\t\t3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[55:48]};\n"], [524, "\t\tdefault:  txrr_data[31:0] <= {24'b0,m_axi_rdata_reg[63:56]};\n"], [527, "              case( readinfo_out[8:7] )\n"], [528, "\t\t2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[15:0]};\n"], [529, "\t\t2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[31:16]};\n"], [530, "\t\t2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[47:32]};\n"], [531, "\t\tdefault: txrr_data[31:0] <= {16'b0,m_axi_rdata_reg[63:48]};\n"], [534, "              if( readinfo_out[8] )\n"], [535, "               txrr_data[31:0] <= m_axi_rdata_reg[63:32];\n"], [536, "             else\n"], [537, "               txrr_data[31:0] <= m_axi_rdata_reg[31:0];\n"], [541, "\t\ttxrr_data[31:0]  <= m_axi_rdata_reg[31:0];\n"], [542, "\t\ttxrr_srcaddr[31:0]  <= m_axi_rdata_reg[63:32];\n"]], "Add": [[507, "   assign    m_axi_rready         = ~txrr_wait; //BUG!: 1'b1\n"], [507, "   wire [1:0] \t txrr_datamode_fifo;\n"], [507, "   wire [3:0] \t txrr_ctrlmode_fifo;\n"], [507, "   wire [31:0] \t txrr_dstaddr_fifo;\n"], [507, "   wire [2:0] \t txrr_srcaddr_fifo;\n"], [507, "   reg [1:0] \t txrr_datamode;\n"], [507, "   reg [3:0] \t txrr_ctrlmode;\n"], [507, "   reg [31:0] \t txrr_dstaddr;\n"], [507, "   assign  txrr_datamode_fifo[1:0] = readinfo_out[1:0];\n"], [507, "   assign  txrr_ctrlmode_fifo[3:0] = readinfo_out[5:2];\n"], [507, "   assign  txrr_srcaddr_fifo[2:0]  = readinfo_out[8:6];\n"], [507, "   assign  txrr_dstaddr_fifo[31:0] = readinfo_out[40:9];\n"], [507, "   reg [63:0] \t m_axi_rdata_fifo;\n"], [507, "   reg \t\t txrr_access_fifo;   \n"], [507, "   always @( posedge m_axi_aclk)\n"], [507, "     if(!m_axi_aresetn) \n"], [510, "\t  txrr_access_fifo      <= 1'b0;\t  \n"], [510, "       end\n"], [510, "     else\t \n"], [510, "       begin\n"], [510, "\t  txrr_access_fifo       <= fifo_rd_en;\n"], [510, "\t  m_axi_rdata_fifo[63:0] <= m_axi_rdata[63:0];      \n"], [510, "       end\n"], [510, "   always @ (posedge m_axi_aclk )\n"], [510, "     if(!m_axi_aresetn)\n"], [510, "       begin\n"], [510, "\t  txrr_access  <= 1'b0;\t  \n"], [510, "       end\n"], [510, "     else\n"], [510, "       begin\n"], [510, "\t  txrr_access        <= txrr_access_fifo;\t  \n"], [510, "\t  txrr_datamode[1:0] <= txrr_datamode_fifo[1:0];\n"], [510, "\t  txrr_ctrlmode[3:0] <= txrr_ctrlmode_fifo[3:0];\n"], [510, "\t  txrr_dstaddr[31:0] <= txrr_dstaddr_fifo[31:0];\t  \n"], [514, "\t  case(txrr_datamode_fifo[1:0])//datamode\n"], [524, "              case(txrr_srcaddr_fifo[2:0])\n"], [524, "\t\t3'd0:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [524, "\t\t3'd1:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[15:8]};\n"], [524, "\t\t3'd2:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[23:16]};\n"], [524, "\t\t3'd3:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[31:24]};\n"], [524, "\t\t3'd4:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[39:32]};\n"], [524, "\t\t3'd5:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[47:40]};\n"], [524, "\t\t3'd6:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[55:48]};\n"], [524, "\t\t3'd7:     txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[63:56]};\n"], [524, "\t\tdefault:  txrr_data[31:0] <= {24'b0,m_axi_rdata_fifo[7:0]};\n"], [531, "              case(txrr_srcaddr_fifo[2:1])\n"], [531, "\t\t2'd0:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [531, "\t\t2'd1:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[31:16]};\n"], [531, "\t\t2'd2:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[47:32]};\n"], [531, "\t\t2'd3:    txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[63:48]};\n"], [531, "\t\tdefault: txrr_data[31:0] <= {16'b0,m_axi_rdata_fifo[15:0]};\n"], [537, "              if(txrr_srcaddr_fifo[2])\n"], [537, "\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[63:32];\n"], [537, "              else\n"], [537, "\t\ttxrr_data[31:0] <= m_axi_rdata_fifo[31:0];\n"], [542, "\t\ttxrr_data[31:0]     <= m_axi_rdata_fifo[31:0];\n"], [542, "\t\ttxrr_srcaddr[31:0]  <= m_axi_rdata_fifo[63:32];\n"]]}}