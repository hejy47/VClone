{"Source Block": ["oh/emesh/dv/ememory.v@123:137@HdlStmProcess", "\t\t .din\t(din[63:0]),\n\t\t .dout\t(dout[63:0])\n\t\t );\n\n   //Outgoing transaction     \n   always @ (posedge  clk or negedge nreset)\n     if(!nreset)\n       access_out <=1'b0;   \n     else if(~wait_in)\n       access_out                    <= mem_rd;\n                 \n   //Other emesh signals \"dataload\"\n   always @ (posedge clk)\n     if(mem_rd & ~wait_in)   \n       begin\n"], "Clone Blocks": [["oh/elink/hdl/ecfg_if.v@140:150", "\t\t\t      mi_dout2[63:0] |\n\t\t\t      mi_dout3[63:0];\n     \n\n   //Access out packet  \n   assign access_forward = (mi_rx_en | mi_rd);\n\n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       access_out <= 1'b0;   \n     else if(~wait_in)\n"], ["oh/elink/dv/elink_e16_model.v@462:477", "\n   //##########################\n   //# mesh output busses  \n   //##########################\n\n   always @ (posedge clk or posedge reset)\n     if(reset)\n       access_out <= 1'b0;\n     else if(clk_en)\n       if(!wait_in)\n\t access_out <= access;\n\n   always @ (posedge clk)\n     if (clk_en)\n       if(!wait_in & access)\n\t begin\n"], ["oh/elink/hdl/ecfg_if.v@142:156", "     \n\n   //Access out packet  \n   assign access_forward = (mi_rx_en | mi_rd);\n\n   always @ (posedge clk or negedge nreset)\n     if(!nreset)\n       access_out <= 1'b0;   \n     else if(~wait_in)\n       access_out   <= access_forward;\n   \n   always @ (posedge clk)\n     if(~wait_in)\n       begin\n\t  readback_reg      <= mi_rd;\n"]], "Diff Content": {"Delete": [[131, "     else if(~wait_in)\n"], [132, "       access_out                    <= mem_rd;\n"]], "Add": []}}