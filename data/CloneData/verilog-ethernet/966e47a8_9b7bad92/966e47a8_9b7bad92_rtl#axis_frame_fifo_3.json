{"Source Block": ["verilog-ethernet/rtl/axis_frame_fifo.v@70:80@HdlIdDef", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n             (wr_ptr[ADDR_WIDTH-1:0] == rd_ptr[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_frame_fifo_64.v@71:81", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@68:78", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@75:85", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@70:80", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n             (wr_ptr[ADDR_WIDTH-1:0] == rd_ptr[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@78:88", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@73:83", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n             (wr_ptr[ADDR_WIDTH-1:0] == rd_ptr[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@77:87", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray[ADDR_WIDTH] != rd_ptr_gray_sync3[ADDR_WIDTH]) &&\n             (wr_ptr_gray[ADDR_WIDTH-1] != rd_ptr_gray_sync3[ADDR_WIDTH-1]) &&\n"], ["verilog-ethernet/rtl/axis_fifo.v@65:75", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_fifo.v@67:77", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n             (wr_ptr[ADDR_WIDTH-1:0] == rd_ptr[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@81:91", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@83:93", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray[ADDR_WIDTH] != rd_ptr_gray_sync3[ADDR_WIDTH]) &&\n             (wr_ptr_gray[ADDR_WIDTH-1] != rd_ptr_gray_sync3[ADDR_WIDTH-1]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@78:88", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@80:90", "\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray[ADDR_WIDTH] != rd_ptr_gray_sync3[ADDR_WIDTH]) &&\n             (wr_ptr_gray[ADDR_WIDTH-1] != rd_ptr_gray_sync3[ADDR_WIDTH-1]) &&\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@68:78", "//(* RAM_STYLE=\"BLOCK\" *)\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg output_read = 1'b0;\n\nreg output_axis_tvalid_reg = 1'b0;\n\nwire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&\n"]], "Diff Content": {"Delete": [[75, "wire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n"]], "Add": [[75, "wire [DATA_WIDTH+1-1:0] data_in = {input_axis_tlast, input_axis_tdata};\n"]]}}