{"Source Block": ["verilog-ethernet/rtl/arp_eth_rx_64.v@155:257@HdlStmProcess", "\nassign busy = busy_reg;\nassign error_header_early_termination = error_header_early_termination_reg;\nassign error_invalid_header = error_invalid_header_reg;\n\nalways @* begin\n    state_next = 2'bz;\n\n    input_eth_hdr_ready_next = 0;\n    input_eth_payload_tready_next = 0;\n\n    store_eth_hdr = 0;\n    store_arp_hdr_word_0 = 0;\n    store_arp_hdr_word_1 = 0;\n    store_arp_hdr_word_2 = 0;\n    store_arp_hdr_word_3 = 0;\n\n    frame_ptr_next = frame_ptr_reg;\n\n    output_frame_valid_next = output_frame_valid_reg & ~output_frame_ready;\n\n    error_header_early_termination_next = 0;\n    error_invalid_header_next = 0;\n\n    case (state_reg)\n        STATE_IDLE: begin\n            // idle state - wait for data\n            frame_ptr_next = 0;\n            input_eth_hdr_ready_next = ~output_frame_valid_reg;\n\n            if (input_eth_hdr_ready & input_eth_hdr_valid) begin\n                input_eth_hdr_ready_next = 0;\n                input_eth_payload_tready_next = 1;\n                store_eth_hdr = 1;\n                state_next = STATE_READ_HEADER;\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n        STATE_READ_HEADER: begin\n            // read header state\n            input_eth_payload_tready_next = 1;\n\n            if (input_eth_payload_tvalid) begin\n                // word transfer in - store it\n                frame_ptr_next = frame_ptr_reg+1;\n                state_next = STATE_READ_HEADER;\n                case (frame_ptr_reg)\n                    8'h00: store_arp_hdr_word_0 = 1;\n                    8'h01: store_arp_hdr_word_1 = 1;\n                    8'h02: store_arp_hdr_word_2 = 1;\n                    8'h03: begin\n                        store_arp_hdr_word_3 = 1;\n                        state_next = STATE_WAIT_LAST;\n                    end\n                endcase\n                if (input_eth_payload_tlast) begin\n                    if (frame_ptr_reg != 8'h03 | (input_eth_payload_tkeep & 8'h0F) != 8'h0F) begin\n                        error_header_early_termination_next = 1;\n                    end else if (output_arp_hlen != 6 || output_arp_plen != 4) begin\n                        error_invalid_header_next = 1;\n                    end else begin\n                        output_frame_valid_next = ~input_eth_payload_tuser;\n                    end\n                    input_eth_hdr_ready_next = ~output_frame_valid_reg;\n                    input_eth_payload_tready_next = 0;\n                    state_next = STATE_IDLE;\n                end\n            end else begin\n                state_next = STATE_READ_HEADER;\n            end\n        end\n        STATE_WAIT_LAST: begin\n            // wait for end of frame; read and discard\n            input_eth_payload_tready_next = 1;\n\n            if (input_eth_payload_tvalid) begin\n                if (input_eth_payload_tlast) begin\n                    if (output_arp_hlen != 6 || output_arp_plen != 4) begin\n                        // lengths not valid\n                        error_invalid_header_next = 1;\n                    end else begin\n                        // otherwise, transfer tuser\n                        output_frame_valid_next = ~input_eth_payload_tuser;\n                    end\n                    input_eth_hdr_ready_next = ~output_frame_valid_reg;\n                    input_eth_payload_tready_next = 0;\n                    state_next = STATE_IDLE;\n                end else begin\n                    state_next = STATE_WAIT_LAST;\n                end\n            end else begin\n                // wait for end of frame; read and discard\n                state_next = STATE_WAIT_LAST;\n            end\n        end\n    endcase\nend\n\nalways @(posedge clk or posedge rst) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[161, "    state_next = 2'bz;\n"]], "Add": [[161, "    state_next = STATE_IDLE;\n"]]}}