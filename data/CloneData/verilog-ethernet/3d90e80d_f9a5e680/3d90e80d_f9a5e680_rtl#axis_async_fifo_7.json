{"Source Block": ["verilog-ethernet/rtl/axis_async_fifo.v@288:328@HdlStmProcess", "            end\n        end\n    end\nend\n\nalways @(posedge s_clk) begin\n    if (s_rst_sync3_reg) begin\n        wr_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        wr_ptr_cur_reg <= {ADDR_WIDTH+1{1'b0}};\n        wr_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n\n        drop_frame_reg <= 1'b0;\n        overflow_reg <= 1'b0;\n        bad_frame_reg <= 1'b0;\n        good_frame_reg <= 1'b0;\n    end else begin\n        wr_ptr_reg <= wr_ptr_next;\n        wr_ptr_cur_reg <= wr_ptr_cur_next;\n        wr_ptr_gray_reg <= wr_ptr_gray_next;\n\n        drop_frame_reg <= drop_frame_next;\n        overflow_reg <= overflow_next;\n        bad_frame_reg <= bad_frame_next;\n        good_frame_reg <= good_frame_next;\n    end\n\n    if (FRAME_FIFO) begin\n        wr_addr_reg <= wr_ptr_cur_next;\n    end else begin\n        wr_addr_reg <= wr_ptr_next;\n    end\n\n    if (write) begin\n        mem[wr_addr_reg[ADDR_WIDTH-1:0]] <= s_axis;\n    end\nend\n\n// pointer synchronization\nalways @(posedge s_clk) begin\n    if (s_rst_sync3_reg) begin\n        rd_ptr_gray_sync1_reg <= {ADDR_WIDTH+1{1'b0}};\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_fifo.v@220:258", "            end\n        end\n    end\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        wr_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        wr_ptr_cur_reg <= {ADDR_WIDTH+1{1'b0}};\n\n        drop_frame_reg <= 1'b0;\n        overflow_reg <= 1'b0;\n        bad_frame_reg <= 1'b0;\n        good_frame_reg <= 1'b0;\n    end else begin\n        wr_ptr_reg <= wr_ptr_next;\n        wr_ptr_cur_reg <= wr_ptr_cur_next;\n\n        drop_frame_reg <= drop_frame_next;\n        overflow_reg <= overflow_next;\n        bad_frame_reg <= bad_frame_next;\n        good_frame_reg <= good_frame_next;\n    end\n\n    if (FRAME_FIFO) begin\n        wr_addr_reg <= wr_ptr_cur_next;\n    end else begin\n        wr_addr_reg <= wr_ptr_next;\n    end\n\n    if (write) begin\n        mem[wr_addr_reg[ADDR_WIDTH-1:0]] <= s_axis;\n    end\nend\n\n// Read logic\nalways @* begin\n    read = 1'b0;\n\n"]], "Diff Content": {"Delete": [], "Add": [[297, "        wr_ptr_cur_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n"], [306, "        wr_ptr_cur_gray_reg <= wr_ptr_cur_gray_next;\n"]]}}