{"Source Block": ["verilog-ethernet/rtl/axis_async_frame_fifo.v@89:99@HdlIdDef", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_tap.v@167:177", "        frame_reg <= frame_next;\n    end\nend\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@82:92", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@93:103", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@85:95", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@94:104", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@94:104", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@91:101", "\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@90:100", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@79:89", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@87:97", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@83:93", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@92:102", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@81:91", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_register_64.v@60:70", ");\n\n// datapath registers\nreg                  input_axis_tready_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@83:93", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@80:90", "\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@74:84", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@78:88", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@76:86", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_register.v@57:67", ");\n\n// datapath registers\nreg                  input_axis_tready_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@90:100", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@79:89", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@70:80", "\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"]], "Diff Content": {"Delete": [[94, "reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"]], "Add": []}}