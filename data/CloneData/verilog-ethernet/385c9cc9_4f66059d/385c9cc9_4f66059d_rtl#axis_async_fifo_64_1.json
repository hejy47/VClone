{"Source Block": ["verilog-ethernet/rtl/axis_async_fifo_64.v@79:89@HdlIdDef", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_fifo.v@61:71", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_tap_64.v@177:187", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@73:83", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@82:92", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_mux_64_4.v@227:237", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@93:103", "reg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@59:69", "    output wire                   output_axis_tlast,\n    output wire                   output_axis_tuser\n);\n\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@73:83", "\nreg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@72:82", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_rate_limit_64.v@128:138", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_register_64.v@62:72", "// datapath registers\nreg                  input_axis_tready_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@63:73", "reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@85:95", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\n"], ["verilog-ethernet/rtl/axis_tap_64.v@177:187", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@94:104", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@94:104", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@88:98", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@71:81", "reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@68:78", "reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo.v@87:97", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_fifo.v@58:68", ");\n\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_register_64.v@62:72", "// datapath registers\nreg                  input_axis_tready_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_fifo.v@61:71", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@83:93", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_frame_length_adjust.v@472:482", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@84:94", "reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@92:102", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@69:79", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@81:91", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@64:74", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\n"], ["verilog-ethernet/rtl/axis_frame_length_adjust.v@472:482", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@83:93", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\n"], ["verilog-ethernet/rtl/axis_rate_limit_64.v@128:138", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@65:75", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@69:79", "\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@74:84", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@78:88", "reg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@73:83", "\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@61:71", ");\n\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@59:69", "    output wire                   output_axis_tlast,\n    output wire                   output_axis_tuser\n);\n\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@76:86", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@65:75", "\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n"], ["verilog-ethernet/rtl/axis_mux_64_4.v@227:237", "end\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg                  output_axis_tlast_reg = 1'b0;\nreg                  output_axis_tuser_reg = 1'b0;\n\nreg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_fifo_64.v@66:76", "reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@90:100", "reg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@77:87", "reg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@66:76", "\nreg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n"], ["verilog-ethernet/rtl/axis_async_fifo_64.v@76:86", "\nreg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@95:105", "reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n"], ["verilog-ethernet/rtl/axis_fifo.v@60:70", "reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;\nreg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\nreg output_axis_tuser_reg = 1'b0;\n\n// full when first MSB different but rest same\n"], ["verilog-ethernet/rtl/axis_frame_fifo.v@69:79", "reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;\n\nreg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@87:97", "\nreg input_rst_sync1_reg = 1'b1;\nreg input_rst_sync2_reg = 1'b1;\nreg input_rst_sync3_reg = 1'b1;\nreg output_rst_sync1_reg = 1'b1;\nreg output_rst_sync2_reg = 1'b1;\nreg output_rst_sync3_reg = 1'b1;\n\nreg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\n"], ["verilog-ethernet/rtl/axis_frame_fifo_64.v@74:84", "reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];\n\nreg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};\nreg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;\nreg output_axis_tlast_reg = 1'b0;\n\n// full when first MSB different but rest same\nwire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&\n             (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));\n// empty when pointers match exactly\n"]], "Diff Content": {"Delete": [], "Add": [[84, "reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};\n"], [84, "wire [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_write_data;\n"]]}}