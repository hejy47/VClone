{"Source Block": ["verilog-ethernet/rtl/eth_arb_mux.v@150:198@HdlStmProcess", ");\n\nassign request = s_eth_hdr_valid & ~grant;\nassign acknowledge = grant & s_eth_payload_axis_tvalid & s_eth_payload_axis_tready & s_eth_payload_axis_tlast;\n\nalways @* begin\n    frame_next = frame_reg;\n\n    s_eth_hdr_ready_mask_next = s_eth_hdr_ready_mask_reg;\n\n    m_eth_hdr_valid_next = m_eth_hdr_valid_reg && !m_eth_hdr_ready;\n    m_eth_dest_mac_next = m_eth_dest_mac_reg;\n    m_eth_src_mac_next = m_eth_src_mac_reg;\n    m_eth_type_next = m_eth_type_reg;\n\n    if (s_eth_payload_axis_tvalid[grant_encoded] && s_eth_payload_axis_tready[grant_encoded]) begin\n        // end of frame detection\n        if (s_eth_payload_axis_tlast[grant_encoded]) begin\n            frame_next = 1'b0;\n            s_eth_hdr_ready_mask_next = 1'b0;\n        end\n    end\n\n    if (!frame_reg && grant_valid) begin\n        // start of frame\n        frame_next = 1'b1;\n\n        s_eth_hdr_ready_mask_next = 1'b1;\n\n        m_eth_hdr_valid_next = 1'b1;\n        m_eth_dest_mac_next = s_eth_dest_mac[grant_encoded*48 +: 48];\n        m_eth_src_mac_next = s_eth_src_mac[grant_encoded*48 +: 48];\n        m_eth_type_next = s_eth_type[grant_encoded*16 +: 16];\n    end\n\n    // pass through selected packet data\n    m_eth_payload_axis_tdata_int  = current_s_tdata;\n    m_eth_payload_axis_tkeep_int  = current_s_tkeep;\n    m_eth_payload_axis_tvalid_int = current_s_tvalid && m_eth_payload_axis_tready_int_reg && grant_valid;\n    m_eth_payload_axis_tlast_int  = current_s_tlast;\n    m_eth_payload_axis_tid_int    = current_s_tid;\n    m_eth_payload_axis_tdest_int  = current_s_tdest;\n    m_eth_payload_axis_tuser_int  = current_s_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        frame_reg <= 1'b0;\n        s_eth_hdr_ready_mask_reg <= 1'b0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[158, "    s_eth_hdr_ready_mask_next = s_eth_hdr_ready_mask_reg;\n"], [169, "            s_eth_hdr_ready_mask_next = 1'b0;\n"], [173, "    if (!frame_reg && grant_valid) begin\n"], [177, "        s_eth_hdr_ready_mask_next = 1'b1;\n"]], "Add": [[158, "    s_eth_hdr_ready_next = {S_COUNT{1'b0}};\n"], [173, "    if (!frame_reg && grant_valid && (m_eth_hdr_ready || !m_eth_hdr_valid)) begin\n"], [177, "        s_eth_hdr_ready_next = grant;\n"]]}}