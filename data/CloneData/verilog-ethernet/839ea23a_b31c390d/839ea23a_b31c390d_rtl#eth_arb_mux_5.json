{"Source Block": ["verilog-ethernet/rtl/eth_arb_mux.v@190:214@HdlStmProcess", "    m_eth_payload_axis_tid_int    = current_s_tid;\n    m_eth_payload_axis_tdest_int  = current_s_tdest;\n    m_eth_payload_axis_tuser_int  = current_s_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        frame_reg <= 1'b0;\n        s_eth_hdr_ready_mask_reg <= 1'b0;\n        m_eth_hdr_valid_reg <= 1'b0;\n    end else begin\n        frame_reg <= frame_next;\n        s_eth_hdr_ready_mask_reg <= s_eth_hdr_ready_mask_next;\n        m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;\n    end\n\n    m_eth_dest_mac_reg <= m_eth_dest_mac_next;\n    m_eth_src_mac_reg <= m_eth_src_mac_next;\n    m_eth_type_reg <= m_eth_type_next;\nend\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] m_eth_payload_axis_tdata_reg  = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] m_eth_payload_axis_tkeep_reg  = {KEEP_WIDTH{1'b0}};\nreg                  m_eth_payload_axis_tvalid_reg = 1'b0, m_eth_payload_axis_tvalid_next;\n"], "Clone Blocks": [["verilog-ethernet/rtl/eth_mux.v@175:203", "    m_eth_payload_axis_tid_int    = current_s_tid;\n    m_eth_payload_axis_tdest_int  = current_s_tdest;\n    m_eth_payload_axis_tuser_int  = current_s_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 1'b0;\n        s_eth_hdr_ready_reg <= 0;\n        s_eth_payload_axis_tready_reg <= 0;\n        m_eth_hdr_valid_reg <= 1'b0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        s_eth_hdr_ready_reg <= s_eth_hdr_ready_next;\n        s_eth_payload_axis_tready_reg <= s_eth_payload_axis_tready_next;\n        m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;\n    end\n\n    m_eth_dest_mac_reg <= m_eth_dest_mac_next;\n    m_eth_src_mac_reg <= m_eth_src_mac_next;\n    m_eth_type_reg <= m_eth_type_next;\nend\n\n// output datapath logic\nreg [DATA_WIDTH-1:0] m_eth_payload_axis_tdata_reg  = {DATA_WIDTH{1'b0}};\nreg [KEEP_WIDTH-1:0] m_eth_payload_axis_tkeep_reg  = {KEEP_WIDTH{1'b0}};\nreg                  m_eth_payload_axis_tvalid_reg = 1'b0, m_eth_payload_axis_tvalid_next;\n"]], "Diff Content": {"Delete": [[196, "    if (rst) begin\n"], [197, "        frame_reg <= 1'b0;\n"], [198, "        s_eth_hdr_ready_mask_reg <= 1'b0;\n"], [199, "        m_eth_hdr_valid_reg <= 1'b0;\n"], [200, "    end else begin\n"], [201, "        frame_reg <= frame_next;\n"], [202, "        s_eth_hdr_ready_mask_reg <= s_eth_hdr_ready_mask_next;\n"], [203, "        m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;\n"], [204, "    end\n"]], "Add": [[204, "    frame_reg <= frame_next;\n"], [204, "    s_eth_hdr_ready_reg <= s_eth_hdr_ready_next;\n"], [204, "    m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;\n"], [208, "    if (rst) begin\n"], [208, "        frame_reg <= 1'b0;\n"], [208, "        s_eth_hdr_ready_reg <= {S_COUNT{1'b0}};\n"], [208, "        m_eth_hdr_valid_reg <= 1'b0;\n"], [208, "    end\n"]]}}