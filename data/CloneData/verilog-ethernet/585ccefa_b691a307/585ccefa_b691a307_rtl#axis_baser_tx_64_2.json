{"Source Block": ["verilog-ethernet/rtl/axis_baser_tx_64.v@208:218@HdlIdDef", "\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n\nassign encoded_tx_data = encoded_tx_data_reg;\nassign encoded_tx_hdr = encoded_tx_hdr_reg;\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_baser_tx_64.v@204:214", "wire [31:0] crc_next7;\n\nreg [DATA_WIDTH-1:0] encoded_tx_data_reg = {{8{CTRL_IDLE}}, BLOCK_TYPE_CTRL};\nreg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@207:217", "reg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n\nassign encoded_tx_data = encoded_tx_data_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@208:218", "\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n\nassign encoded_tx_data = encoded_tx_data_reg;\nassign encoded_tx_hdr = encoded_tx_hdr_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@205:215", "\nreg [DATA_WIDTH-1:0] encoded_tx_data_reg = {{8{CTRL_IDLE}}, BLOCK_TYPE_CTRL};\nreg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@205:215", "\nreg [DATA_WIDTH-1:0] encoded_tx_data_reg = {{8{CTRL_IDLE}}, BLOCK_TYPE_CTRL};\nreg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@207:217", "reg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n\nassign encoded_tx_data = encoded_tx_data_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@210:220", "reg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\nassign s_axis_tready = s_axis_tready_reg;\n\nassign encoded_tx_data = encoded_tx_data_reg;\nassign encoded_tx_hdr = encoded_tx_hdr_reg;\n\nassign start_packet_0 = start_packet_0_reg;\n"], ["verilog-ethernet/rtl/axis_baser_tx_64.v@204:214", "wire [31:0] crc_next7;\n\nreg [DATA_WIDTH-1:0] encoded_tx_data_reg = {{8{CTRL_IDLE}}, BLOCK_TYPE_CTRL};\nreg [HDR_WIDTH-1:0] encoded_tx_hdr_reg = SYNC_CTRL;\n\nreg [DATA_WIDTH-1:0] output_data_reg = {DATA_WIDTH{1'b0}}, output_data_next;\nreg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;\n\nreg start_packet_0_reg = 1'b0, start_packet_0_next;\nreg start_packet_4_reg = 1'b0, start_packet_4_next;\n\n"]], "Diff Content": {"Delete": [], "Add": [[213, "reg error_underflow_reg = 1'b0, error_underflow_next;\n"]]}}