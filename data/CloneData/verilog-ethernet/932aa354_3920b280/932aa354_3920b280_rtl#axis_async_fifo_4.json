{"Source Block": ["verilog-ethernet/rtl/axis_async_fifo.v@158:168@HdlIdDef", "             (wr_ptr_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\nwire full_cur = ((wr_ptr_cur_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\n// empty when pointers match exactly\nwire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;\n// overflow within packet\nwire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&\n                (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));\n\n// control signals\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_async_fifo.v@160:171", "                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\n// empty when pointers match exactly\nwire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;\n// overflow within packet\nwire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&\n                (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));\n\n// control signals\nreg write;\nreg read;\nreg store_output;\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@151:163", "reg [WIDTH-1:0] m_axis_reg;\nreg m_axis_tvalid_reg = 1'b0, m_axis_tvalid_next;\n\n// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\nwire full_cur = ((wr_ptr_cur_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\n// empty when pointers match exactly\nwire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@154:166", "// full when first TWO MSBs do NOT match, but rest matches\n// (gray code equivalent of first MSB different but rest same)\nwire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n             (wr_ptr_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\nwire full_cur = ((wr_ptr_cur_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&\n                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));\n// empty when pointers match exactly\nwire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;\n// overflow within packet\nwire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&\n                (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));\n"]], "Diff Content": {"Delete": [[163, "wire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;\n"]], "Add": [[163, "wire empty = rd_ptr_gray_reg == (FRAME_FIFO ? wr_ptr_gray_sync1_reg : wr_ptr_gray_sync2_reg);\n"]]}}