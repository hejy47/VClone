{"Source Block": ["verilog-ethernet/rtl/axis_frame_len.v@98:115@HdlStmProcess", "            frame_len_next = frame_len_next + 1;\n        end\n    end\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        frame_len_reg <= 0;\n        frame_len_valid_reg <= 0;\n        frame_reg <= 1'b0;\n    end else begin\n        frame_len_reg <= frame_len_next;\n        frame_len_valid_reg <= frame_len_valid_next;\n        frame_reg <= frame_next;\n    end\nend\n\nendmodule\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_frame_len.v@65:75", "reg frame_reg = 1'b0, frame_next;\n\nassign frame_len = frame_len_reg;\nassign frame_len_valid = frame_len_valid_reg;\n\ninteger offset, i, bit_cnt;\n\nalways @* begin\n    frame_len_next = frame_len_reg;\n    frame_len_valid_next = 1'b0;\n    frame_next = frame_reg;\n"], ["verilog-ethernet/rtl/axis_frame_len.v@65:75", "reg frame_reg = 1'b0, frame_next;\n\nassign frame_len = frame_len_reg;\nassign frame_len_valid = frame_len_valid_reg;\n\ninteger offset, i, bit_cnt;\n\nalways @* begin\n    frame_len_next = frame_len_reg;\n    frame_len_valid_next = 1'b0;\n    frame_next = frame_reg;\n"], ["verilog-ethernet/rtl/axis_frame_len.v@63:73", "reg [LEN_WIDTH-1:0] frame_len_reg = 0, frame_len_next;\nreg frame_len_valid_reg = 1'b0, frame_len_valid_next;\nreg frame_reg = 1'b0, frame_next;\n\nassign frame_len = frame_len_reg;\nassign frame_len_valid = frame_len_valid_reg;\n\ninteger offset, i, bit_cnt;\n\nalways @* begin\n    frame_len_next = frame_len_reg;\n"], ["verilog-ethernet/rtl/axis_frame_len.v@62:72", "\nreg [LEN_WIDTH-1:0] frame_len_reg = 0, frame_len_next;\nreg frame_len_valid_reg = 1'b0, frame_len_valid_next;\nreg frame_reg = 1'b0, frame_next;\n\nassign frame_len = frame_len_reg;\nassign frame_len_valid = frame_len_valid_reg;\n\ninteger offset, i, bit_cnt;\n\nalways @* begin\n"], ["verilog-ethernet/rtl/axis_frame_len.v@65:75", "reg frame_reg = 1'b0, frame_next;\n\nassign frame_len = frame_len_reg;\nassign frame_len_valid = frame_len_valid_reg;\n\ninteger offset, i, bit_cnt;\n\nalways @* begin\n    frame_len_next = frame_len_reg;\n    frame_len_valid_next = 1'b0;\n    frame_next = frame_reg;\n"]], "Diff Content": {"Delete": [[107, "        frame_reg <= 1'b0;\n"], [108, "    end else begin\n"], [109, "        frame_len_reg <= frame_len_next;\n"], [110, "        frame_len_valid_reg <= frame_len_valid_next;\n"], [111, "        frame_reg <= frame_next;\n"]], "Add": [[103, "    frame_len_reg <= frame_len_next;\n"], [103, "    frame_len_valid_reg <= frame_len_valid_next;\n"]]}}