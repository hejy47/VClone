{"Source Block": ["verilog-ethernet/rtl/ptp_clock_cdc.v@720:814@HdlStmProcess", "            ptp_locked_next = 1'b0;\n        end\n    end\nend\n\nalways @(posedge output_clk) begin\n    period_ns_reg <= period_ns_next;\n    period_fns_reg <= period_fns_next;\n\n    ts_s_reg <= ts_s_next;\n    ts_ns_reg <= ts_ns_next;\n    ts_fns_reg <= ts_fns_next;\n    ts_ns_inc_reg <= ts_ns_inc_next;\n    ts_fns_inc_reg <= ts_fns_inc_next;\n    ts_ns_ovf_reg <= ts_ns_ovf_next;\n    ts_fns_ovf_reg <= ts_fns_ovf_next;\n\n    ts_step_reg <= ts_step_next;\n\n    sec_mismatch_reg <= sec_mismatch_next;\n    diff_valid_reg <= diff_valid_next;\n    diff_corr_valid_reg <= diff_corr_valid_next;\n\n    ts_s_msb_diff_reg <= ts_s_msb_diff_next;\n    ts_s_diff_reg <= ts_s_diff_next;\n    ts_ns_diff_reg <= ts_ns_diff_next;\n    ts_fns_diff_reg <= ts_fns_diff_next;\n\n    ts_ns_diff_corr_reg <= ts_ns_diff_corr_next;\n    ts_fns_diff_corr_reg <= ts_fns_diff_corr_next;\n\n    time_err_int_reg <= time_err_int_next;\n\n    ptp_lock_count_reg <= ptp_lock_count_next;\n    ptp_locked_reg <= ptp_locked_next;\n\n    // PPS output\n    if (TS_WIDTH == 96) begin\n        pps_reg <= !ts_ns_ovf_reg[30];\n    end else if (TS_WIDTH == 64) begin\n        pps_reg <= 1'b0; // not currently implemented for 64 bit timestamp format\n    end\n\n    // pipeline\n    if (PIPELINE_OUTPUT > 0) begin\n        ts_s_pipe_reg[0] <= ts_s_reg;\n        ts_ns_pipe_reg[0] <= ts_ns_reg;\n        ts_fns_pipe_reg[0] <= ts_fns_reg;\n        ts_step_pipe_reg[0] <= ts_step_reg;\n        pps_pipe_reg[0] <= pps_reg;\n\n        for (i = 0; i < PIPELINE_OUTPUT-1; i = i + 1) begin\n            ts_s_pipe_reg[i+1] <= ts_s_pipe_reg[i];\n            ts_ns_pipe_reg[i+1] <= ts_ns_pipe_reg[i];\n            ts_fns_pipe_reg[i+1] <= ts_fns_pipe_reg[i];\n            ts_step_pipe_reg[i+1] <= ts_step_pipe_reg[i];\n            pps_pipe_reg[i+1] <= pps_pipe_reg[i];\n        end\n    end\n\n    if (output_rst) begin\n        period_ns_reg <= 0;\n        period_fns_reg <= 0;\n        ts_s_reg <= 0;\n        ts_ns_reg <= 0;\n        ts_fns_reg <= 0;\n        ts_ns_inc_reg <= 0;\n        ts_fns_inc_reg <= 0;\n        ts_ns_ovf_reg <= {TS_NS_WIDTH+1{1'b1}};\n        ts_fns_ovf_reg <= {FNS_WIDTH{1'b1}};\n        ts_step_reg <= 0;\n        pps_reg <= 0;\n\n        sec_mismatch_reg <= 1'b0;\n        diff_valid_reg <= 1'b0;\n        diff_corr_valid_reg <= 1'b0;\n\n        time_err_int_reg <= 0;\n\n        ptp_lock_count_reg <= 0;\n        ptp_locked_reg <= 1'b0;\n\n        for (i = 0; i < PIPELINE_OUTPUT; i = i + 1) begin\n            ts_s_pipe_reg[i] = 0;\n            ts_ns_pipe_reg[i] = 0;\n            ts_fns_pipe_reg[i] = 0;\n            ts_step_pipe_reg[i] = 1'b0;\n            pps_pipe_reg[i] = 1'b0;\n        end\n    end\nend\n\nendmodule\n\n`resetall\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[803, "            ts_s_pipe_reg[i] = 0;\n"], [804, "            ts_ns_pipe_reg[i] = 0;\n"], [805, "            ts_fns_pipe_reg[i] = 0;\n"], [806, "            ts_step_pipe_reg[i] = 1'b0;\n"], [807, "            pps_pipe_reg[i] = 1'b0;\n"]], "Add": [[807, "            ts_s_pipe_reg[i] <= 0;\n"], [807, "            ts_ns_pipe_reg[i] <= 0;\n"], [807, "            ts_fns_pipe_reg[i] <= 0;\n"], [807, "            ts_step_pipe_reg[i] <= 1'b0;\n"], [807, "            pps_pipe_reg[i] <= 1'b0;\n"]]}}