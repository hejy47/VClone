{"Source Block": ["verilog-ethernet/rtl/axis_xgmii_rx_64.v@444:559@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n\n        m_axis_tvalid_reg <= 1'b0;\n\n        start_packet_reg <= 2'b00;\n        error_bad_frame_reg <= 1'b0;\n        error_bad_fcs_reg <= 1'b0;\n\n        crc_state <= 32'hFFFFFFFF;\n        crc_state3 <= 32'hFFFFFFFF;\n        crc_valid7_save <= 1'b0;\n\n        xgmii_rxc_d0 <= {CTRL_WIDTH{1'b0}};\n        xgmii_rxc_d1 <= {CTRL_WIDTH{1'b0}};\n\n        lanes_swapped <= 1'b0;\n    end else begin\n        state_reg <= state_next;\n\n        m_axis_tvalid_reg <= m_axis_tvalid_next;\n\n        start_packet_reg <= 2'b00;\n        error_bad_frame_reg <= error_bad_frame_next;\n        error_bad_fcs_reg <= error_bad_fcs_next;\n\n        if (xgmii_rxc[0] && xgmii_rxd[7:0] == XGMII_START) begin\n            lanes_swapped <= 1'b0;\n            start_packet_reg <= 2'b01;\n            xgmii_rxc_d0 <= xgmii_rxc;\n        end else if (xgmii_rxc[4] && xgmii_rxd[39:32] == XGMII_START) begin\n            lanes_swapped <= 1'b1;\n            start_packet_reg <= 2'b10;\n            xgmii_rxc_d0 <= {xgmii_rxc[3:0], swap_rxc};\n        end else if (lanes_swapped) begin\n            xgmii_rxc_d0 <= {xgmii_rxc[3:0], swap_rxc};\n        end else begin\n            xgmii_rxc_d0 <= xgmii_rxc;\n        end\n\n        xgmii_rxc_d1 <= xgmii_rxc_d0;\n\n        // datapath\n        if (reset_crc) begin\n            crc_state <= 32'hFFFFFFFF;\n            crc_state3 <= 32'hFFFFFFFF;\n            crc_valid7_save <= 1'b0;\n        end else if (update_crc) begin\n            crc_state <= crc_next7;\n            crc_state3 <= crc_next3;\n            crc_valid7_save <= crc_valid7;\n        end\n    end\n\n    if (PTP_TS_WIDTH == 96 && $signed({1'b0, ptp_ts_reg[45:16]}) - $signed(31'd1000000000) > 0) begin\n        // ns field rollover\n        ptp_ts_reg[45:16] <= $signed({1'b0, ptp_ts_reg[45:16]}) - $signed(31'd1000000000);\n        ptp_ts_reg[95:48] <= ptp_ts_reg[95:48] + 1;\n    end\n\n    if (xgmii_rxc[0] && xgmii_rxd[7:0] == XGMII_START) begin\n        if (PTP_TS_WIDTH == 96) begin\n            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS);\n            ptp_ts_reg[95:48] <= ptp_ts[95:48];\n        end else begin\n            ptp_ts_reg <= ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS);\n        end\n    end else if (xgmii_rxc[4] && xgmii_rxd[39:32] == XGMII_START) begin\n        if (PTP_TS_WIDTH == 96) begin\n            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;\n            ptp_ts_reg[95:48] <= ptp_ts[95:48];\n        end else begin\n            ptp_ts_reg <= ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;\n        end\n    end\n\n    m_axis_tdata_reg <= m_axis_tdata_next;\n    m_axis_tkeep_reg <= m_axis_tkeep_next;\n    m_axis_tlast_reg <= m_axis_tlast_next;\n    m_axis_tuser_reg <= m_axis_tuser_next;\n\n    last_cycle_tkeep_reg <= last_cycle_tkeep_next;\n\n    detect_term_save <= detect_term;\n\n    swap_rxd <= xgmii_rxd[63:32];\n    swap_rxc <= xgmii_rxc[7:4];\n\n    if (xgmii_rxc[0] && xgmii_rxd[7:0] == XGMII_START) begin\n        xgmii_rxd_d0 <= xgmii_rxd;\n        xgmii_rxd_crc <= xgmii_rxd;\n    end else if (xgmii_rxc[4] && xgmii_rxd[39:32] == XGMII_START) begin\n        xgmii_rxd_d0 <= {xgmii_rxd[31:0], swap_rxd};\n        xgmii_rxd_crc <= {xgmii_rxd[31:0], swap_rxd};\n    end else if (lanes_swapped) begin\n        xgmii_rxd_d0 <= {xgmii_rxd[31:0], swap_rxd};\n        xgmii_rxd_crc <= {xgmii_rxd[31:0], swap_rxd};\n    end else begin\n        xgmii_rxd_d0 <= xgmii_rxd;\n        xgmii_rxd_crc <= xgmii_rxd;\n    end\n\n    if (state_next == STATE_LAST) begin\n        xgmii_rxd_crc[31:0] <= xgmii_rxd_crc[63:32];\n    end\n\n    xgmii_rxd_d1 <= xgmii_rxd_d0;\nend\n\nendmodule\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[519, "            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;\n"], [522, "            ptp_ts_reg <= ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;\n"]], "Add": [[519, "            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);\n"], [522, "            ptp_ts_reg <= ptp_ts + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);\n"]]}}