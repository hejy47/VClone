{"Source Block": ["verilog-ethernet/rtl/axis_async_frame_fifo.v@304:335@HdlStmProcess", "        good_frame_sync4_reg <= good_frame_sync3_reg;\n    end\nend\n\n// Read logic\nalways @* begin\n    read = 1'b0;\n\n    rd_ptr_next = rd_ptr_reg;\n    rd_ptr_gray_next = rd_ptr_gray_reg;\n\n    mem_read_data_valid_next = mem_read_data_valid_reg;\n\n    if (output_axis_tready | ~output_axis_tvalid) begin\n        // output data not valid OR currently being transferred\n        if (~empty) begin\n            // not empty, perform read\n            read = 1'b1;\n            mem_read_data_valid_next = 1'b1;\n            rd_ptr_next = rd_ptr_reg + 1;\n            rd_ptr_gray_next = rd_ptr_next ^ (rd_ptr_next >> 1);\n        end else begin\n            // empty, invalidate\n            mem_read_data_valid_next = 1'b0;\n        end\n    end\nend\n\nalways @(posedge output_clk) begin\n    if (output_rst_sync3_reg) begin\n        rd_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        rd_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_async_fifo_64.v@191:222", "        wr_ptr_gray_sync2_reg <= wr_ptr_gray_sync1_reg;\n    end\nend\n\n// Read logic\nalways @* begin\n    read = 1'b0;\n\n    rd_ptr_next = rd_ptr_reg;\n    rd_ptr_gray_next = rd_ptr_gray_reg;\n\n    mem_read_data_valid_next = mem_read_data_valid_reg;\n\n    if (output_axis_tready | ~output_axis_tvalid) begin\n        // output data not valid OR currently being transferred\n        if (~empty) begin\n            // not empty, perform read\n            read = 1'b1;\n            mem_read_data_valid_next = 1'b1;\n            rd_ptr_next = rd_ptr_reg + 1;\n            rd_ptr_gray_next = rd_ptr_next ^ (rd_ptr_next >> 1);\n        end else begin\n            // empty, invalidate\n            mem_read_data_valid_next = 1'b0;\n        end\n    end\nend\n\nalways @(posedge output_clk) begin\n    if (output_rst_sync3_reg) begin\n        rd_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        rd_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_frame_fifo_64.v@307:338", "        good_frame_sync4_reg <= good_frame_sync3_reg;\n    end\nend\n\n// Read logic\nalways @* begin\n    read = 1'b0;\n\n    rd_ptr_next = rd_ptr_reg;\n    rd_ptr_gray_next = rd_ptr_gray_reg;\n\n    mem_read_data_valid_next = mem_read_data_valid_reg;\n\n    if (output_axis_tready | ~output_axis_tvalid) begin\n        // output data not valid OR currently being transferred\n        if (~empty) begin\n            // not empty, perform read\n            read = 1'b1;\n            mem_read_data_valid_next = 1'b1;\n            rd_ptr_next = rd_ptr_reg + 1;\n            rd_ptr_gray_next = rd_ptr_next ^ (rd_ptr_next >> 1);\n        end else begin\n            // empty, invalidate\n            mem_read_data_valid_next = 1'b0;\n        end\n    end\nend\n\nalways @(posedge output_clk) begin\n    if (output_rst_sync3_reg) begin\n        rd_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        rd_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n"], ["verilog-ethernet/rtl/axis_async_fifo.v@188:219", "        wr_ptr_gray_sync2_reg <= wr_ptr_gray_sync1_reg;\n    end\nend\n\n// Read logic\nalways @* begin\n    read = 1'b0;\n\n    rd_ptr_next = rd_ptr_reg;\n    rd_ptr_gray_next = rd_ptr_gray_reg;\n\n    mem_read_data_valid_next = mem_read_data_valid_reg;\n\n    if (output_axis_tready | ~output_axis_tvalid) begin\n        // output data not valid OR currently being transferred\n        if (~empty) begin\n            // not empty, perform read\n            read = 1'b1;\n            mem_read_data_valid_next = 1'b1;\n            rd_ptr_next = rd_ptr_reg + 1;\n            rd_ptr_gray_next = rd_ptr_next ^ (rd_ptr_next >> 1);\n        end else begin\n            // empty, invalidate\n            mem_read_data_valid_next = 1'b0;\n        end\n    end\nend\n\nalways @(posedge output_clk) begin\n    if (output_rst_sync3_reg) begin\n        rd_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        rd_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};\n"]], "Diff Content": {"Delete": [[317, "    if (output_axis_tready | ~output_axis_tvalid) begin\n"]], "Add": [[317, "    if (store_output | ~mem_read_data_valid_reg) begin\n"]]}}