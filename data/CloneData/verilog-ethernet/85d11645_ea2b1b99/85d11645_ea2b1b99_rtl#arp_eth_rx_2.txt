Source Block: verilog-ethernet/rtl/arp_eth_rx.v@153:163@HdlIdDef
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Diff Content:
- 158 reg frame_error_reg = 0, frame_error_next;
+ 158 reg error_header_early_termination_reg = 0, error_header_early_termination_next;

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/arp_eth_rx_64.v@132:142
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;

Clone Blocks 2:
verilog-ethernet/rtl/arp_eth_rx_64.v@127:137
reg [7:0]  output_arp_plen_reg = 0;
reg [15:0] output_arp_oper_reg = 0;
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;

Clone Blocks 3:
verilog-ethernet/rtl/arp_eth_rx.v@155:165
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;

Clone Blocks 4:
verilog-ethernet/rtl/arp_eth_rx.v@150:160
reg [7:0]  output_arp_plen_reg = 0;
reg [15:0] output_arp_oper_reg = 0;
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;

Clone Blocks 5:
verilog-ethernet/rtl/arp_eth_rx_64.v@130:140
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Clone Blocks 6:
verilog-ethernet/rtl/arp_eth_rx.v@153:163
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Clone Blocks 7:
verilog-ethernet/rtl/arp_eth_rx.v@152:162
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 8:
verilog-ethernet/rtl/arp_eth_rx_64.v@129:139
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 9:
verilog-ethernet/rtl/arp_eth_rx_64.v@130:140
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg frame_error_reg = 0, frame_error_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

