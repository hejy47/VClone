{"Source Block": ["verilog-ethernet/rtl/axis_async_fifo.v@249:335@HdlStmProcess", "        m_rst_sync3_reg <= m_rst_sync2_reg;\n    end\nend\n\n// Write logic\nalways @* begin\n    write = 1'b0;\n\n    drop_frame_next = 1'b0;\n    overflow_next = 1'b0;\n    bad_frame_next = 1'b0;\n    good_frame_next = 1'b0;\n\n    wr_ptr_next = wr_ptr_reg;\n    wr_ptr_cur_next = wr_ptr_cur_reg;\n    wr_ptr_gray_next = wr_ptr_gray_reg;\n    wr_ptr_sync_gray_next = wr_ptr_sync_gray_reg;\n    wr_ptr_cur_gray_next = wr_ptr_cur_gray_reg;\n\n    wr_ptr_update_valid_next = wr_ptr_update_valid_reg;\n    wr_ptr_update_next = wr_ptr_update_reg;\n\n    if (FRAME_FIFO && wr_ptr_update_valid_reg) begin\n        // have updated pointer to sync\n        if (wr_ptr_update_next == wr_ptr_update_ack_sync2_reg) begin\n            // no sync in progress; sync update\n            wr_ptr_update_valid_next = 1'b0;\n            wr_ptr_sync_gray_next = wr_ptr_gray_reg;\n            wr_ptr_update_next = !wr_ptr_update_ack_sync2_reg;\n        end\n    end\n\n    if (s_axis_tready && s_axis_tvalid) begin\n        // transfer in\n        if (!FRAME_FIFO) begin\n            // normal FIFO mode\n            write = 1'b1;\n            wr_ptr_next = wr_ptr_reg + 1;\n            wr_ptr_gray_next = wr_ptr_next ^ (wr_ptr_next >> 1);\n        end else if (full_cur || full_wr || drop_frame_reg) begin\n            // full, packet overflow, or currently dropping frame\n            // drop frame\n            drop_frame_next = 1'b1;\n            if (s_axis_tlast) begin\n                // end of frame, reset write pointer\n                wr_ptr_cur_next = wr_ptr_reg;\n                wr_ptr_cur_gray_next = wr_ptr_cur_next ^ (wr_ptr_cur_next >> 1);\n                drop_frame_next = 1'b0;\n                overflow_next = 1'b1;\n            end\n        end else begin\n            write = 1'b1;\n            wr_ptr_cur_next = wr_ptr_cur_reg + 1;\n            wr_ptr_cur_gray_next = wr_ptr_cur_next ^ (wr_ptr_cur_next >> 1);\n            if (s_axis_tlast) begin\n                // end of frame\n                if (DROP_BAD_FRAME && (USER_BAD_FRAME_MASK & s_axis_tuser == USER_BAD_FRAME_VALUE)) begin\n                    // bad packet, reset write pointer\n                    wr_ptr_cur_next = wr_ptr_reg;\n                    wr_ptr_cur_gray_next = wr_ptr_cur_next ^ (wr_ptr_cur_next >> 1);\n                    bad_frame_next = 1'b1;\n                end else begin\n                    // good packet, update write pointer\n                    wr_ptr_next = wr_ptr_cur_reg + 1;\n                    wr_ptr_gray_next = wr_ptr_next ^ (wr_ptr_next >> 1);\n\n                    if (wr_ptr_update_next == wr_ptr_update_ack_sync2_reg) begin\n                        // no sync in progress; sync update\n                        wr_ptr_update_valid_next = 1'b0;\n                        wr_ptr_sync_gray_next = wr_ptr_gray_next;\n                        wr_ptr_update_next = !wr_ptr_update_ack_sync2_reg;\n                    end else begin\n                        // sync in progress; flag it for later\n                        wr_ptr_update_valid_next = 1'b1;\n                    end\n\n                    good_frame_next = 1'b1;\n                end\n            end\n        end\n    end\nend\n\nalways @(posedge s_clk) begin\n    if (s_rst_sync3_reg) begin\n        wr_ptr_reg <= {ADDR_WIDTH+1{1'b0}};\n        wr_ptr_cur_reg <= {ADDR_WIDTH+1{1'b0}};\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[305, "                if (DROP_BAD_FRAME && (USER_BAD_FRAME_MASK & s_axis_tuser == USER_BAD_FRAME_VALUE)) begin\n"]], "Add": [[305, "                if (DROP_BAD_FRAME && USER_BAD_FRAME_MASK & ~(s_axis_tuser ^ USER_BAD_FRAME_VALUE)) begin\n"]]}}