{"Source Block": ["verilog-ethernet/rtl/axis_demux_64_4.v@203:213@HdlStmAssign", "assign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_rate_limit.v@133:143", "reg                  temp_axis_tuser_reg = 0;\n\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_frame_length_adjust.v@492:502", "\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tkeep = output_axis_tkeep_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_frame_length_adjust.v@495:505", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_demux_4.v@186:196", "assign output_2_axis_tuser = output_axis_tuser_reg;\n\nassign output_3_axis_tdata = output_axis_tdata_reg;\nassign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_mux_4.v@219:229", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_tap.v@183:193", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_mux_64_4.v@232:242", "\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tkeep = output_axis_tkeep_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_demux_64_4.v@200:210", "\nassign output_3_axis_tdata = output_axis_tdata_reg;\nassign output_3_axis_tkeep = output_axis_tkeep_reg;\nassign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_adapter.v@409:419", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_mux_4.v@216:226", "reg                  temp_axis_tuser_reg = 0;\n\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_mux_64_4.v@235:245", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_demux_64_4.v@199:209", "assign output_2_axis_tuser = output_axis_tuser_reg;\n\nassign output_3_axis_tdata = output_axis_tdata_reg;\nassign output_3_axis_tkeep = output_axis_tkeep_reg;\nassign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\n"], ["verilog-ethernet/rtl/axis_demux_4.v@189:199", "assign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_0_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_frame_join_4.v@332:342", "reg       temp_axis_tuser_reg = 0;\n\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_rate_limit_64.v@144:154", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_stat_counter.v@280:290", "reg        temp_axis_tuser_reg = 0;\n\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_tap.v@180:190", "reg                  temp_axis_tuser_reg = 0;\n\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_rate_limit_64.v@141:151", "\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tkeep = output_axis_tkeep_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_stat_counter.v@283:293", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_demux_64_4.v@198:208", "assign output_2_axis_tlast = output_axis_tlast_reg;\nassign output_2_axis_tuser = output_axis_tuser_reg;\n\nassign output_3_axis_tdata = output_axis_tdata_reg;\nassign output_3_axis_tkeep = output_axis_tkeep_reg;\nassign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n"], ["verilog-ethernet/rtl/axis_tap_64.v@194:204", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_rate_limit.v@136:146", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_frame_join_4.v@335:345", "assign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_axis_tdata_reg <= 0;\n        output_axis_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/axis_adapter.v@406:416", "\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tkeep = output_axis_tkeep_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/axis_demux_4.v@185:195", "assign output_2_axis_tlast = output_axis_tlast_reg;\nassign output_2_axis_tuser = output_axis_tuser_reg;\n\nassign output_3_axis_tdata = output_axis_tdata_reg;\nassign output_3_axis_tvalid = output_3_axis_tvalid_reg;\nassign output_3_axis_tlast = output_axis_tlast_reg;\nassign output_3_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\n"], ["verilog-ethernet/rtl/axis_tap_64.v@191:201", "\nassign output_axis_tdata = output_axis_tdata_reg;\nassign output_axis_tkeep = output_axis_tkeep_reg;\nassign output_axis_tvalid = output_axis_tvalid_reg;\nassign output_axis_tlast = output_axis_tlast_reg;\nassign output_axis_tuser = output_axis_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_axis_tready_int_early = output_axis_tready | (~temp_axis_tvalid_reg & ~output_axis_tvalid_reg) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n\nalways @(posedge clk) begin\n"]], "Diff Content": {"Delete": [[208, "assign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & ~current_output_tvalid) | (~temp_axis_tvalid_reg & ~output_axis_tvalid_int);\n"]], "Add": [[208, "assign output_axis_tready_int_early = current_output_tready | (~temp_axis_tvalid_reg & (~current_output_tvalid | ~output_axis_tvalid_int));\n"], [208, "always @* begin\n"], [208, "    output_0_axis_tvalid_next = output_0_axis_tvalid_reg;\n"], [208, "    output_1_axis_tvalid_next = output_1_axis_tvalid_reg;\n"], [208, "    output_2_axis_tvalid_next = output_2_axis_tvalid_reg;\n"], [208, "    output_3_axis_tvalid_next = output_3_axis_tvalid_reg;\n"], [208, "    temp_axis_tvalid_next = temp_axis_tvalid_reg;\n"], [208, "    store_axis_int_to_output = 1'b0;\n"], [208, "    store_axis_int_to_temp = 1'b0;\n"], [208, "    store_axis_temp_to_output = 1'b0;\n"], [208, "    if (output_axis_tready_int_reg) begin\n"], [208, "        if (current_output_tready | ~current_output_tvalid) begin\n"], [208, "            output_0_axis_tvalid_next = output_axis_tvalid_int & (select_reg == 2'd0);\n"], [208, "            output_1_axis_tvalid_next = output_axis_tvalid_int & (select_reg == 2'd1);\n"], [208, "            output_2_axis_tvalid_next = output_axis_tvalid_int & (select_reg == 2'd2);\n"], [208, "            output_3_axis_tvalid_next = output_axis_tvalid_int & (select_reg == 2'd3);\n"], [208, "            store_axis_int_to_output = 1'b1;\n"], [208, "        end else begin\n"], [208, "            temp_axis_tvalid_next = output_axis_tvalid_int;\n"], [208, "            store_axis_int_to_temp = 1'b1;\n"], [208, "        end\n"], [208, "    end else if (current_output_tready) begin\n"], [208, "        output_0_axis_tvalid_next = temp_axis_tvalid_reg & (select_reg == 2'd0);\n"], [208, "        output_1_axis_tvalid_next = temp_axis_tvalid_reg & (select_reg == 2'd1);\n"], [208, "        output_2_axis_tvalid_next = temp_axis_tvalid_reg & (select_reg == 2'd2);\n"], [208, "        output_3_axis_tvalid_next = temp_axis_tvalid_reg & (select_reg == 2'd3);\n"], [208, "        temp_axis_tvalid_next = 1'b0;\n"], [208, "        store_axis_temp_to_output = 1'b1;\n"], [208, "    end\n"], [208, "end\n"]]}}