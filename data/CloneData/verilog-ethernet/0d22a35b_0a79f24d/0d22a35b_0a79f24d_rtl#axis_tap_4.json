{"Source Block": ["verilog-ethernet/rtl/axis_tap.v@72:164@HdlStmProcess", "\nreg [1:0] state_reg = STATE_IDLE, state_next;\n\nreg frame_reg = 0, frame_next;\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    frame_next = frame_reg;\n\n    output_axis_tdata_int = 0;\n    output_axis_tvalid_int = 0;\n    output_axis_tlast_int = 0;\n    output_axis_tuser_int = 0;\n\n    if (tap_axis_tready & tap_axis_tvalid) begin\n        frame_next = ~tap_axis_tlast;\n    end\n\n    case (state_reg)\n        STATE_IDLE: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                // start of frame\n                if (output_axis_tready_int) begin\n                    output_axis_tdata_int = tap_axis_tdata;\n                    output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;\n                    output_axis_tlast_int = tap_axis_tlast;\n                    output_axis_tuser_int = tap_axis_tuser;\n                    if (tap_axis_tlast) begin\n                        state_next = STATE_IDLE;\n                    end else begin\n                        state_next = STATE_TRANSFER;\n                    end\n                end else begin\n                    state_next = STATE_WAIT;\n                end\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n        STATE_TRANSFER: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                // transfer data\n                if (output_axis_tready_int) begin\n                    output_axis_tdata_int = tap_axis_tdata;\n                    output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;\n                    output_axis_tlast_int = tap_axis_tlast;\n                    output_axis_tuser_int = tap_axis_tuser;\n                    if (tap_axis_tlast) begin\n                        state_next = STATE_IDLE;\n                    end else begin\n                        state_next = STATE_TRANSFER;\n                    end\n                end else begin\n                    state_next = STATE_TRUNCATE;\n                end\n            end else begin\n                state_next = STATE_TRANSFER;\n            end\n        end\n        STATE_TRUNCATE: begin\n            if (output_axis_tready_int) begin\n                output_axis_tdata_int = 0;\n                output_axis_tvalid_int = 1;\n                output_axis_tlast_int = 1;\n                output_axis_tuser_int = 1;\n                if (frame_next) begin\n                    state_next = STATE_WAIT;\n                end else begin\n                    state_next = STATE_IDLE;\n                end\n            end else begin\n                state_next = STATE_TRUNCATE;\n            end\n        end\n        STATE_WAIT: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                if (tap_axis_tlast) begin\n                    state_next = STATE_IDLE;\n                end else begin\n                    state_next = STATE_WAIT;\n                end\n            end else begin\n                state_next = STATE_WAIT;\n            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_reg <= 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_tap_64.v@76:172", "\nreg [1:0] state_reg = STATE_IDLE, state_next;\n\nreg frame_reg = 0, frame_next;\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    frame_next = frame_reg;\n\n    output_axis_tdata_int = 0;\n    output_axis_tkeep_int = 0;\n    output_axis_tvalid_int = 0;\n    output_axis_tlast_int = 0;\n    output_axis_tuser_int = 0;\n\n    if (tap_axis_tready & tap_axis_tvalid) begin\n        frame_next = ~tap_axis_tlast;\n    end\n\n    case (state_reg)\n        STATE_IDLE: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                // start of frame\n                if (output_axis_tready_int) begin\n                    output_axis_tdata_int = tap_axis_tdata;\n                    output_axis_tkeep_int = tap_axis_tkeep;\n                    output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;\n                    output_axis_tlast_int = tap_axis_tlast;\n                    output_axis_tuser_int = tap_axis_tuser;\n                    if (tap_axis_tlast) begin\n                        state_next = STATE_IDLE;\n                    end else begin\n                        state_next = STATE_TRANSFER;\n                    end\n                end else begin\n                    state_next = STATE_WAIT;\n                end\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n        STATE_TRANSFER: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                // transfer data\n                if (output_axis_tready_int) begin\n                    output_axis_tdata_int = tap_axis_tdata;\n                    output_axis_tkeep_int = tap_axis_tkeep;\n                    output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;\n                    output_axis_tlast_int = tap_axis_tlast;\n                    output_axis_tuser_int = tap_axis_tuser;\n                    if (tap_axis_tlast) begin\n                        state_next = STATE_IDLE;\n                    end else begin\n                        state_next = STATE_TRANSFER;\n                    end\n                end else begin\n                    state_next = STATE_TRUNCATE;\n                end\n            end else begin\n                state_next = STATE_TRANSFER;\n            end\n        end\n        STATE_TRUNCATE: begin\n            if (output_axis_tready_int) begin\n                output_axis_tdata_int = 0;\n                output_axis_tkeep_int = 1;\n                output_axis_tvalid_int = 1;\n                output_axis_tlast_int = 1;\n                output_axis_tuser_int = 1;\n                if (frame_next) begin\n                    state_next = STATE_WAIT;\n                end else begin\n                    state_next = STATE_IDLE;\n                end\n            end else begin\n                state_next = STATE_TRUNCATE;\n            end\n        end\n        STATE_WAIT: begin\n            if (tap_axis_tready & tap_axis_tvalid) begin\n                if (tap_axis_tlast) begin\n                    state_next = STATE_IDLE;\n                end else begin\n                    state_next = STATE_WAIT;\n                end\n            end else begin\n                state_next = STATE_WAIT;\n            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_reg <= 0;\n"]], "Diff Content": {"Delete": [[82, "    output_axis_tdata_int = 0;\n"], [83, "    output_axis_tvalid_int = 0;\n"], [84, "    output_axis_tlast_int = 0;\n"], [85, "    output_axis_tuser_int = 0;\n"], [95, "                if (output_axis_tready_int) begin\n"], [115, "                if (output_axis_tready_int) begin\n"], [133, "            if (output_axis_tready_int) begin\n"], [134, "                output_axis_tdata_int = 0;\n"], [135, "                output_axis_tvalid_int = 1;\n"], [136, "                output_axis_tlast_int = 1;\n"], [137, "                output_axis_tuser_int = 1;\n"]], "Add": [[85, "    output_axis_tdata_int = {DATA_WIDTH{1'b0}};\n"], [85, "    output_axis_tvalid_int = 1'b0;\n"], [85, "    output_axis_tlast_int = 1'b0;\n"], [85, "    output_axis_tuser_int = 1'b0;\n"], [95, "                if (output_axis_tready_int_reg) begin\n"], [115, "                if (output_axis_tready_int_reg) begin\n"], [137, "            if (output_axis_tready_int_reg) begin\n"], [137, "                output_axis_tdata_int = {DATA_WIDTH{1'b0}};\n"], [137, "                output_axis_tvalid_int = 1'b1;\n"], [137, "                output_axis_tlast_int = 1'b1;\n"], [137, "                output_axis_tuser_int = 1'b1;\n"]]}}