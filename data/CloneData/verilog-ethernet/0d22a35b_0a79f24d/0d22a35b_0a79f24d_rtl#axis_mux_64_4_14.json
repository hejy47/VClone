{"Source Block": ["verilog-ethernet/rtl/axis_mux_64_4.v@161:205@HdlStmProcess", "            current_input_tuser = input_3_axis_tuser;\n        end\n    endcase\nend\n\nalways @* begin\n    select_next = select_reg;\n    frame_next = frame_reg;\n\n    input_0_axis_tready_next = 0;\n    input_1_axis_tready_next = 0;\n    input_2_axis_tready_next = 0;\n    input_3_axis_tready_next = 0;\n\n    if (frame_reg) begin\n        if (current_input_tvalid & current_input_tready) begin\n            // end of frame detection\n            frame_next = ~current_input_tlast;\n        end\n    end else if (enable & selected_input_tvalid) begin\n        // start of frame, grab select value\n        frame_next = 1;\n        select_next = select;\n    end\n\n    // generate ready signal on selected port\n    case (select_next)\n        2'd0: input_0_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd1: input_1_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd2: input_2_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd3: input_3_axis_tready_next = output_axis_tready_int_early & frame_next;\n    endcase\n\n    // pass through selected packet data\n    output_axis_tdata_int = current_input_tdata;\n    output_axis_tkeep_int = current_input_tkeep;\n    output_axis_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_axis_tlast_int = current_input_tlast;\n    output_axis_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/axis_mux_4.v@149:192", "            current_input_tuser = input_3_axis_tuser;\n        end\n    endcase\nend\n\nalways @* begin\n    select_next = select_reg;\n    frame_next = frame_reg;\n\n    input_0_axis_tready_next = 0;\n    input_1_axis_tready_next = 0;\n    input_2_axis_tready_next = 0;\n    input_3_axis_tready_next = 0;\n\n    if (frame_reg) begin\n        if (current_input_tvalid & current_input_tready) begin\n            // end of frame detection\n            frame_next = ~current_input_tlast;\n        end\n    end else if (enable & selected_input_tvalid) begin\n        // start of frame, grab select value\n        frame_next = 1;\n        select_next = select;\n    end\n\n    // generate ready signal on selected port\n    case (select_next)\n        2'd0: input_0_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd1: input_1_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd2: input_2_axis_tready_next = output_axis_tready_int_early & frame_next;\n        2'd3: input_3_axis_tready_next = output_axis_tready_int_early & frame_next;\n    endcase\n\n    // pass through selected packet data\n    output_axis_tdata_int = current_input_tdata;\n    output_axis_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_axis_tlast_int = current_input_tlast;\n    output_axis_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n"]], "Diff Content": {"Delete": [[170, "    input_0_axis_tready_next = 0;\n"], [171, "    input_1_axis_tready_next = 0;\n"], [172, "    input_2_axis_tready_next = 0;\n"], [173, "    input_3_axis_tready_next = 0;\n"], [182, "        frame_next = 1;\n"]], "Add": [[173, "    input_0_axis_tready_next = 1'b0;\n"], [173, "    input_1_axis_tready_next = 1'b0;\n"], [173, "    input_2_axis_tready_next = 1'b0;\n"], [173, "    input_3_axis_tready_next = 1'b0;\n"], [182, "        frame_next = 1'b1;\n"]]}}