{"Source Block": ["verilog-ethernet/rtl/udp_ip_tx.v@350:432@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        udp_source_port_reg <= 0;\n        udp_dest_port_reg <= 0;\n        udp_length_reg <= 0;\n        udp_checksum_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_udp_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_udp_length + 20;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n            udp_source_port_reg <= input_udp_source_port;\n            udp_dest_port_reg <= input_udp_dest_port;\n            udp_length_reg <= input_udp_length;\n            udp_checksum_reg <= input_udp_checksum;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n        end\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/udp_ip_rx_64.v@405:497", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_ip_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_ip_length;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_udp_payload_tdata_int;\n            last_word_keep_reg <= output_udp_payload_tkeep_int;\n        end\n\n        if (store_hdr_word_0) begin\n            output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata[ 7: 0];\n            output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata[15: 8];\n            output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata[23:16];\n            output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata[31:24];\n            output_udp_length_reg[15: 8] <= input_ip_payload_tdata[39:32];\n            output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata[47:40];\n            output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata[55:48];\n            output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata[63:56];\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_udp_payload_tdata_reg = 0;\nreg [7:0]  output_udp_payload_tkeep_reg = 0;\nreg        output_udp_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_eth_tx_64.v@484:569", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        hdr_sum_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        ip_dscp_reg <= 0;\n        ip_ecn_reg <= 0;\n        ip_length_reg <= 0;\n        ip_identification_reg <= 0;\n        ip_flags_reg <= 0;\n        ip_fragment_offset_reg <= 0;\n        ip_ttl_reg <= 0;\n        ip_protocol_reg <= 0;\n        ip_source_ip_reg <= 0;\n        ip_dest_ip_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        hdr_sum_reg <= hdr_sum_next;\n\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_ip_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            ip_dscp_reg <= input_ip_dscp;\n            ip_ecn_reg <= input_ip_ecn;\n            ip_length_reg <= input_ip_length;\n            ip_identification_reg <= input_ip_identification;\n            ip_flags_reg <= input_ip_flags;\n            ip_fragment_offset_reg <= input_ip_fragment_offset;\n            ip_ttl_reg <= input_ip_ttl;\n            ip_protocol_reg <= input_ip_protocol;\n            ip_source_ip_reg <= input_ip_source_ip;\n            ip_dest_ip_reg <= input_ip_dest_ip;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_eth_payload_tdata_int;\n            last_word_keep_reg <= output_eth_payload_tkeep_int;\n        end\n\n        if (flush_save) begin\n            save_ip_payload_tdata_reg <= 0;\n            save_ip_payload_tkeep_reg <= 0;\n            save_ip_payload_tlast_reg <= 0;\n            save_ip_payload_tuser_reg <= 0;\n        end else if (transfer_in_save) begin\n            save_ip_payload_tdata_reg <= input_ip_payload_tdata;\n            save_ip_payload_tkeep_reg <= input_ip_payload_tkeep;\n            save_ip_payload_tlast_reg <= input_ip_payload_tlast;\n            save_ip_payload_tuser_reg <= input_ip_payload_tuser;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_eth_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_demux_4.v@380:442", "    output_ip_payload_tvalid_int = input_ip_payload_tvalid & input_ip_payload_tready;\n    output_ip_payload_tlast_int = input_ip_payload_tlast;\n    output_ip_payload_tuser_int = input_ip_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_0_ip_hdr_valid_reg <= 0;\n        output_1_ip_hdr_valid_reg <= 0;\n        output_2_ip_hdr_valid_reg <= 0;\n        output_3_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n        output_0_ip_hdr_valid_reg <= output_0_ip_hdr_valid_next;\n        output_1_ip_hdr_valid_reg <= output_1_ip_hdr_valid_next;\n        output_2_ip_hdr_valid_reg <= output_2_ip_hdr_valid_next;\n        output_3_ip_hdr_valid_reg <= output_3_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_0_ip_payload_tvalid_reg = 0;\nreg       output_1_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_demux_64_4.v@387:449", "    output_ip_payload_tvalid_int = input_ip_payload_tvalid & input_ip_payload_tready;\n    output_ip_payload_tlast_int = input_ip_payload_tlast;\n    output_ip_payload_tuser_int = input_ip_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_0_ip_hdr_valid_reg <= 0;\n        output_1_ip_hdr_valid_reg <= 0;\n        output_2_ip_hdr_valid_reg <= 0;\n        output_3_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n        output_0_ip_hdr_valid_reg <= output_0_ip_hdr_valid_next;\n        output_1_ip_hdr_valid_reg <= output_1_ip_hdr_valid_next;\n        output_2_ip_hdr_valid_reg <= output_2_ip_hdr_valid_next;\n        output_3_ip_hdr_valid_reg <= output_3_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_0_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/udp_ip_rx.v@382:471", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_ip_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_ip_length;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_udp_payload_tdata_int;\n        end\n\n        if (store_udp_source_port_0) output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_source_port_1) output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_dest_port_0) output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_dest_port_1) output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_length_0) output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_length_1) output_udp_length_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_checksum_0) output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_checksum_1) output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_udp_payload_tdata_reg = 0;\nreg       output_udp_payload_tvalid_reg = 0;\nreg       output_udp_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@405:489", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        udp_source_port_reg <= 0;\n        udp_dest_port_reg <= 0;\n        udp_length_reg <= 0;\n        udp_checksum_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_udp_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_udp_length + 20;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n            udp_source_port_reg <= input_udp_source_port;\n            udp_dest_port_reg <= input_udp_dest_port;\n            udp_length_reg <= input_udp_length;\n            udp_checksum_reg <= input_udp_checksum;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n            last_word_keep_reg <= output_ip_payload_tkeep_int;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"]], "Diff Content": {"Delete": [[358, "        frame_ptr_reg <= 0;\n"], [359, "        last_word_data_reg <= 0;\n"], [360, "        input_udp_hdr_ready_reg <= 0;\n"], [361, "        input_udp_payload_tready_reg <= 0;\n"], [362, "        udp_source_port_reg <= 0;\n"], [363, "        udp_dest_port_reg <= 0;\n"], [364, "        udp_length_reg <= 0;\n"], [365, "        udp_checksum_reg <= 0;\n"], [366, "        output_ip_hdr_valid_reg <= 0;\n"], [367, "        output_eth_dest_mac_reg <= 0;\n"], [368, "        output_eth_src_mac_reg <= 0;\n"], [369, "        output_eth_type_reg <= 0;\n"], [370, "        output_ip_version_reg <= 0;\n"], [371, "        output_ip_ihl_reg <= 0;\n"], [372, "        output_ip_dscp_reg <= 0;\n"], [373, "        output_ip_ecn_reg <= 0;\n"], [374, "        output_ip_length_reg <= 0;\n"], [375, "        output_ip_identification_reg <= 0;\n"], [376, "        output_ip_flags_reg <= 0;\n"], [377, "        output_ip_fragment_offset_reg <= 0;\n"], [378, "        output_ip_ttl_reg <= 0;\n"], [379, "        output_ip_protocol_reg <= 0;\n"], [380, "        output_ip_header_checksum_reg <= 0;\n"], [381, "        output_ip_source_ip_reg <= 0;\n"], [382, "        output_ip_dest_ip_reg <= 0;\n"], [383, "        busy_reg <= 0;\n"], [384, "        error_payload_early_termination_reg <= 0;\n"], [400, "        if (store_udp_hdr) begin\n"], [401, "            output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [402, "            output_eth_src_mac_reg <= input_eth_src_mac;\n"], [403, "            output_eth_type_reg <= input_eth_type;\n"], [404, "            output_ip_version_reg <= input_ip_version;\n"], [405, "            output_ip_ihl_reg <= input_ip_ihl;\n"], [406, "            output_ip_dscp_reg <= input_ip_dscp;\n"], [407, "            output_ip_ecn_reg <= input_ip_ecn;\n"], [408, "            output_ip_length_reg <= input_udp_length + 20;\n"], [409, "            output_ip_identification_reg <= input_ip_identification;\n"], [410, "            output_ip_flags_reg <= input_ip_flags;\n"], [411, "            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n"], [412, "            output_ip_ttl_reg <= input_ip_ttl;\n"], [413, "            output_ip_protocol_reg <= input_ip_protocol;\n"], [414, "            output_ip_header_checksum_reg <= input_ip_header_checksum;\n"], [415, "            output_ip_source_ip_reg <= input_ip_source_ip;\n"], [416, "            output_ip_dest_ip_reg <= input_ip_dest_ip;\n"], [417, "            udp_source_port_reg <= input_udp_source_port;\n"], [418, "            udp_dest_port_reg <= input_udp_dest_port;\n"], [419, "            udp_length_reg <= input_udp_length;\n"], [420, "            udp_checksum_reg <= input_udp_checksum;\n"], [421, "        end\n"], [423, "        if (store_last_word) begin\n"], [424, "            last_word_data_reg <= output_ip_payload_tdata_int;\n"], [425, "        end\n"]], "Add": [[384, "        frame_ptr_reg <= 16'd0;\n"], [384, "        input_udp_hdr_ready_reg <= 1'b0;\n"], [384, "        input_udp_payload_tready_reg <= 1'b0;\n"], [384, "        output_ip_hdr_valid_reg <= 1'b0;\n"], [384, "        busy_reg <= 1'b0;\n"], [384, "        error_payload_early_termination_reg <= 1'b0;\n"], [397, "    end\n"], [421, "    if (store_udp_hdr) begin\n"], [421, "        output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [421, "        output_eth_src_mac_reg <= input_eth_src_mac;\n"], [421, "        output_eth_type_reg <= input_eth_type;\n"], [421, "        output_ip_version_reg <= input_ip_version;\n"], [421, "        output_ip_ihl_reg <= input_ip_ihl;\n"], [421, "        output_ip_dscp_reg <= input_ip_dscp;\n"], [421, "        output_ip_ecn_reg <= input_ip_ecn;\n"], [421, "        output_ip_length_reg <= input_udp_length + 20;\n"], [421, "        output_ip_identification_reg <= input_ip_identification;\n"], [421, "        output_ip_flags_reg <= input_ip_flags;\n"], [421, "        output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n"], [421, "        output_ip_ttl_reg <= input_ip_ttl;\n"], [421, "        output_ip_protocol_reg <= input_ip_protocol;\n"], [421, "        output_ip_header_checksum_reg <= input_ip_header_checksum;\n"], [421, "        output_ip_source_ip_reg <= input_ip_source_ip;\n"], [421, "        output_ip_dest_ip_reg <= input_ip_dest_ip;\n"], [421, "        udp_source_port_reg <= input_udp_source_port;\n"], [421, "        udp_dest_port_reg <= input_udp_dest_port;\n"], [421, "        udp_length_reg <= input_udp_length;\n"], [421, "        udp_checksum_reg <= input_udp_checksum;\n"], [421, "    end\n"], [425, "    if (store_last_word) begin\n"], [425, "        last_word_data_reg <= output_ip_payload_tdata_int;\n"]]}}