{"Source Block": ["verilog-ethernet/rtl/eth_mac_10g_rx.v@226:350@HdlStmProcess", "        tkeep_mask = 8'b11111111;\n    end\n    endcase\nend\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    reset_crc = 0;\n    update_crc = 0;\n\n    last_cycle_tkeep_next = last_cycle_tkeep_reg;\n\n    output_axis_tdata_next = 0;\n    output_axis_tkeep_next = 0;\n    output_axis_tvalid_next = 0;\n    output_axis_tlast_next = 0;\n    output_axis_tuser_next = 0;\n\n    error_bad_frame_next = 0;\n    error_bad_fcs_next = 0;\n\n    case (state_reg)\n        STATE_IDLE: begin\n            // idle state - wait for packet\n            reset_crc = 1;\n\n            if (xgmii_rxc_d1[0] && xgmii_rxd_d1[7:0] == 8'hfb) begin\n                // start condition\n                if (detect_error_masked) begin\n                    // error in first data word\n                    output_axis_tdata_next = 0;\n                    output_axis_tkeep_next = 1;\n                    output_axis_tvalid_next = 1;\n                    output_axis_tlast_next = 1;\n                    output_axis_tuser_next = 1;\n                    error_bad_frame_next = 1;\n                    state_next = STATE_IDLE;\n                end else begin\n                    reset_crc = 0;\n                    update_crc = 1;\n                    state_next = STATE_PAYLOAD;\n                end\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n        STATE_PAYLOAD: begin\n            // read payload\n            update_crc = 1;\n\n            output_axis_tdata_next = xgmii_rxd_d1;\n            output_axis_tkeep_next = ~xgmii_rxc_d1;\n            output_axis_tvalid_next = 1;\n            output_axis_tlast_next = 0;\n            output_axis_tuser_next = 0;\n\n            if (control_masked) begin\n                // control or error characters in packet\n                output_axis_tlast_next = 1;\n                output_axis_tuser_next = 1;\n                error_bad_frame_next = 1;\n                reset_crc = 1;\n                state_next = STATE_IDLE;\n            end else if (detect_term) begin\n                if (detect_term[4:0]) begin\n                    // end this cycle\n                    reset_crc = 1;\n                    output_axis_tkeep_next = {tkeep_mask[3:0], 4'b1111};\n                    output_axis_tlast_next = 1;\n                    if ((detect_term[0] & crc_valid7_save) ||\n                        (detect_term[1] & crc_valid0) ||\n                        (detect_term[2] & crc_valid1) ||\n                        (detect_term[3] & crc_valid2) ||\n                        (detect_term[4] & crc_valid3)) begin\n                        // CRC valid\n                    end else begin\n                        output_axis_tuser_next = 1;\n                        error_bad_frame_next = 1;\n                        error_bad_fcs_next = 1;\n                    end\n                    state_next = STATE_IDLE;\n                end else begin\n                    // need extra cycle\n                    last_cycle_tkeep_next = {4'b0000, tkeep_mask[7:4]};\n                    state_next = STATE_LAST;\n                end\n            end else begin\n                state_next = STATE_PAYLOAD;\n            end\n        end\n        STATE_LAST: begin\n            // last cycle of packet\n            output_axis_tdata_next = xgmii_rxd_d1;\n            output_axis_tkeep_next = last_cycle_tkeep_reg;\n            output_axis_tvalid_next = 1;\n            output_axis_tlast_next = 1;\n            output_axis_tuser_next = 0;\n\n            reset_crc = 1;\n\n            if ((detect_term_save[5] & crc_valid0) ||\n                (detect_term_save[6] & crc_valid1) ||\n                (detect_term_save[7] & crc_valid2)) begin\n                // CRC valid\n            end else begin\n                output_axis_tuser_next = 1;\n                error_bad_frame_next = 1;\n                error_bad_fcs_next = 1;\n            end\n\n            if (xgmii_rxc_d1[0] && xgmii_rxd_d1[7:0] == 8'hfb) begin\n                // start condition\n                state_next = STATE_PAYLOAD;\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[234, "    reset_crc = 0;\n"], [235, "    update_crc = 0;\n"], [239, "    output_axis_tdata_next = 0;\n"], [240, "    output_axis_tkeep_next = 0;\n"], [241, "    output_axis_tvalid_next = 0;\n"], [242, "    output_axis_tlast_next = 0;\n"], [243, "    output_axis_tuser_next = 0;\n"], [245, "    error_bad_frame_next = 0;\n"], [246, "    error_bad_fcs_next = 0;\n"], [251, "            reset_crc = 1;\n"], [257, "                    output_axis_tdata_next = 0;\n"], [258, "                    output_axis_tkeep_next = 1;\n"], [259, "                    output_axis_tvalid_next = 1;\n"], [260, "                    output_axis_tlast_next = 1;\n"], [261, "                    output_axis_tuser_next = 1;\n"], [262, "                    error_bad_frame_next = 1;\n"], [265, "                    reset_crc = 0;\n"], [266, "                    update_crc = 1;\n"], [275, "            update_crc = 1;\n"], [279, "            output_axis_tvalid_next = 1;\n"], [280, "            output_axis_tlast_next = 0;\n"], [281, "            output_axis_tuser_next = 0;\n"], [285, "                output_axis_tlast_next = 1;\n"], [286, "                output_axis_tuser_next = 1;\n"], [287, "                error_bad_frame_next = 1;\n"], [288, "                reset_crc = 1;\n"], [293, "                    reset_crc = 1;\n"], [295, "                    output_axis_tlast_next = 1;\n"], [303, "                        output_axis_tuser_next = 1;\n"], [304, "                        error_bad_frame_next = 1;\n"], [305, "                        error_bad_fcs_next = 1;\n"], [321, "            output_axis_tvalid_next = 1;\n"], [322, "            output_axis_tlast_next = 1;\n"], [323, "            output_axis_tuser_next = 0;\n"], [325, "            reset_crc = 1;\n"], [332, "                output_axis_tuser_next = 1;\n"], [333, "                error_bad_frame_next = 1;\n"], [334, "                error_bad_fcs_next = 1;\n"]], "Add": [[235, "    reset_crc = 1'b0;\n"], [235, "    update_crc = 1'b0;\n"], [243, "    output_axis_tdata_next = 64'd0;\n"], [243, "    output_axis_tkeep_next = 8'd0;\n"], [243, "    output_axis_tvalid_next = 1'b0;\n"], [243, "    output_axis_tlast_next = 1'b0;\n"], [243, "    output_axis_tuser_next = 1'b0;\n"], [246, "    error_bad_frame_next = 1'b0;\n"], [246, "    error_bad_fcs_next = 1'b0;\n"], [251, "            reset_crc = 1'b1;\n"], [262, "                    output_axis_tdata_next = 64'd0;\n"], [262, "                    output_axis_tkeep_next = 8'h01;\n"], [262, "                    output_axis_tvalid_next = 1'b1;\n"], [262, "                    output_axis_tlast_next = 1'b1;\n"], [262, "                    output_axis_tuser_next = 1'b1;\n"], [262, "                    error_bad_frame_next = 1'b1;\n"], [266, "                    reset_crc = 1'b0;\n"], [266, "                    update_crc = 1'b1;\n"], [275, "            update_crc = 1'b1;\n"], [281, "            output_axis_tvalid_next = 1'b1;\n"], [281, "            output_axis_tlast_next = 1'b0;\n"], [281, "            output_axis_tuser_next = 1'b0;\n"], [288, "                output_axis_tlast_next = 1'b1;\n"], [288, "                output_axis_tuser_next = 1'b1;\n"], [288, "                error_bad_frame_next = 1'b1;\n"], [288, "                reset_crc = 1'b1;\n"], [293, "                    reset_crc = 1'b1;\n"], [295, "                    output_axis_tlast_next = 1'b1;\n"], [305, "                        output_axis_tuser_next = 1'b1;\n"], [305, "                        error_bad_frame_next = 1'b1;\n"], [305, "                        error_bad_fcs_next = 1'b1;\n"], [323, "            output_axis_tvalid_next = 1'b1;\n"], [323, "            output_axis_tlast_next = 1'b1;\n"], [323, "            output_axis_tuser_next = 1'b0;\n"], [325, "            reset_crc = 1'b1;\n"], [334, "                output_axis_tuser_next = 1'b1;\n"], [334, "                error_bad_frame_next = 1'b1;\n"], [334, "                error_bad_fcs_next = 1'b1;\n"]]}}