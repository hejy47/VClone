Source Block: verilog-ethernet/rtl/arp_eth_rx_64.v@249:327@HdlStmProcess
            end
        end
    endcase
end

always @(posedge clk) begin
    if (rst) begin
        state_reg <= STATE_IDLE;
        frame_ptr_reg <= 0;
        input_eth_payload_tready_reg <= 0;
        output_frame_valid_reg <= 0;
        output_eth_dest_mac_reg <= 0;
        output_eth_src_mac_reg <= 0;
        output_eth_type_reg <= 0;
        busy_reg <= 0;
        error_header_early_termination_reg <= 0;
        error_invalid_header_reg <= 0;
    end else begin
        state_reg <= state_next;

        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;
        input_eth_payload_tready_reg <= input_eth_payload_tready_next;

        frame_ptr_reg <= frame_ptr_next;

        output_frame_valid_reg <= output_frame_valid_next;

        error_header_early_termination_reg <= error_header_early_termination_next;
        error_invalid_header_reg <= error_invalid_header_next;

        busy_reg <= state_next != STATE_IDLE;

        // datapath
        if (store_eth_hdr) begin
            output_eth_dest_mac_reg <= input_eth_dest_mac;
            output_eth_src_mac_reg <= input_eth_src_mac;
            output_eth_type_reg <= input_eth_type;
        end

        if (store_arp_hdr_word_0) begin
            output_arp_htype_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
            output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
            output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata[23:16];
            output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata[31:24];
            output_arp_hlen_reg <= input_eth_payload_tdata[39:32];
            output_arp_plen_reg <= input_eth_payload_tdata[47:40];
            output_arp_oper_reg[15: 8] <= input_eth_payload_tdata[55:48];
            output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
        end
        if (store_arp_hdr_word_1) begin
            output_arp_sha_reg[47:40] <= input_eth_payload_tdata[ 7: 0];
            output_arp_sha_reg[39:32] <= input_eth_payload_tdata[15: 8];
            output_arp_sha_reg[31:24] <= input_eth_payload_tdata[23:16];
            output_arp_sha_reg[23:16] <= input_eth_payload_tdata[31:24];
            output_arp_sha_reg[15: 8] <= input_eth_payload_tdata[39:32];
            output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata[47:40];
            output_arp_spa_reg[31:24] <= input_eth_payload_tdata[55:48];
            output_arp_spa_reg[23:16] <= input_eth_payload_tdata[63:56];
        end
        if (store_arp_hdr_word_2) begin
            output_arp_spa_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
            output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
            output_arp_tha_reg[47:40] <= input_eth_payload_tdata[23:16];
            output_arp_tha_reg[39:32] <= input_eth_payload_tdata[31:24];
            output_arp_tha_reg[31:24] <= input_eth_payload_tdata[39:32];
            output_arp_tha_reg[23:16] <= input_eth_payload_tdata[47:40];
            output_arp_tha_reg[15: 8] <= input_eth_payload_tdata[55:48];
            output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
        end
        if (store_arp_hdr_word_3) begin
            output_arp_tpa_reg[31:24] <= input_eth_payload_tdata[ 7: 0];
            output_arp_tpa_reg[23:16] <= input_eth_payload_tdata[15: 8];
            output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata[23:16];
            output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata[31:24];
        end
    end
end

endmodule

Diff Content:
- 257         frame_ptr_reg <= 0;
- 258         input_eth_payload_tready_reg <= 0;
- 259         output_frame_valid_reg <= 0;
- 260         output_eth_dest_mac_reg <= 0;
- 261         output_eth_src_mac_reg <= 0;
- 262         output_eth_type_reg <= 0;
- 263         busy_reg <= 0;
- 264         error_header_early_termination_reg <= 0;
- 265         error_invalid_header_reg <= 0;
- 282         if (store_eth_hdr) begin
- 283             output_eth_dest_mac_reg <= input_eth_dest_mac;
- 284             output_eth_src_mac_reg <= input_eth_src_mac;
- 285             output_eth_type_reg <= input_eth_type;
- 286         end
- 288         if (store_arp_hdr_word_0) begin
- 289             output_arp_htype_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
- 290             output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
- 291             output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata[23:16];
- 292             output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata[31:24];
- 293             output_arp_hlen_reg <= input_eth_payload_tdata[39:32];
- 294             output_arp_plen_reg <= input_eth_payload_tdata[47:40];
- 295             output_arp_oper_reg[15: 8] <= input_eth_payload_tdata[55:48];
- 296             output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
- 297         end
- 298         if (store_arp_hdr_word_1) begin
- 299             output_arp_sha_reg[47:40] <= input_eth_payload_tdata[ 7: 0];
- 300             output_arp_sha_reg[39:32] <= input_eth_payload_tdata[15: 8];
- 301             output_arp_sha_reg[31:24] <= input_eth_payload_tdata[23:16];
- 302             output_arp_sha_reg[23:16] <= input_eth_payload_tdata[31:24];
- 303             output_arp_sha_reg[15: 8] <= input_eth_payload_tdata[39:32];
- 304             output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata[47:40];
- 305             output_arp_spa_reg[31:24] <= input_eth_payload_tdata[55:48];
- 306             output_arp_spa_reg[23:16] <= input_eth_payload_tdata[63:56];
- 307         end
- 308         if (store_arp_hdr_word_2) begin
- 309             output_arp_spa_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
- 310             output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
- 311             output_arp_tha_reg[47:40] <= input_eth_payload_tdata[23:16];
- 312             output_arp_tha_reg[39:32] <= input_eth_payload_tdata[31:24];
- 313             output_arp_tha_reg[31:24] <= input_eth_payload_tdata[39:32];
- 314             output_arp_tha_reg[23:16] <= input_eth_payload_tdata[47:40];
- 315             output_arp_tha_reg[15: 8] <= input_eth_payload_tdata[55:48];
- 316             output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
- 317         end
- 318         if (store_arp_hdr_word_3) begin
- 319             output_arp_tpa_reg[31:24] <= input_eth_payload_tdata[ 7: 0];
- 320             output_arp_tpa_reg[23:16] <= input_eth_payload_tdata[15: 8];
- 321             output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata[23:16];
- 322             output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata[31:24];
- 323         end
+ 265         frame_ptr_reg <= 8'd0;
+ 265         input_eth_payload_tready_reg <= 1'b0;
+ 265         output_frame_valid_reg <= 1'b0;
+ 265         busy_reg <= 1'b0;
+ 265         error_header_early_termination_reg <= 1'b0;
+ 265         error_invalid_header_reg <= 1'b0;
+ 279     end
+ 286     if (store_eth_hdr) begin
+ 286         output_eth_dest_mac_reg <= input_eth_dest_mac;
+ 286         output_eth_src_mac_reg <= input_eth_src_mac;
+ 286         output_eth_type_reg <= input_eth_type;
+ 286     end
+ 323     if (store_arp_hdr_word_0) begin
+ 323         output_arp_htype_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
+ 323         output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
+ 323         output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata[23:16];
+ 323         output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata[31:24];
+ 323         output_arp_hlen_reg <= input_eth_payload_tdata[39:32];
+ 323         output_arp_plen_reg <= input_eth_payload_tdata[47:40];
+ 323         output_arp_oper_reg[15: 8] <= input_eth_payload_tdata[55:48];
+ 323         output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
+ 323     end
+ 323     if (store_arp_hdr_word_1) begin
+ 323         output_arp_sha_reg[47:40] <= input_eth_payload_tdata[ 7: 0];
+ 323         output_arp_sha_reg[39:32] <= input_eth_payload_tdata[15: 8];
+ 323         output_arp_sha_reg[31:24] <= input_eth_payload_tdata[23:16];
+ 323         output_arp_sha_reg[23:16] <= input_eth_payload_tdata[31:24];
+ 323         output_arp_sha_reg[15: 8] <= input_eth_payload_tdata[39:32];
+ 323         output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata[47:40];
+ 323         output_arp_spa_reg[31:24] <= input_eth_payload_tdata[55:48];
+ 323         output_arp_spa_reg[23:16] <= input_eth_payload_tdata[63:56];
+ 323     end
+ 323     if (store_arp_hdr_word_2) begin
+ 323         output_arp_spa_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];
+ 323         output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];
+ 323         output_arp_tha_reg[47:40] <= input_eth_payload_tdata[23:16];
+ 323         output_arp_tha_reg[39:32] <= input_eth_payload_tdata[31:24];
+ 323         output_arp_tha_reg[31:24] <= input_eth_payload_tdata[39:32];
+ 323         output_arp_tha_reg[23:16] <= input_eth_payload_tdata[47:40];
+ 323         output_arp_tha_reg[15: 8] <= input_eth_payload_tdata[55:48];
+ 323         output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata[63:56];
+ 323     end
+ 323     if (store_arp_hdr_word_3) begin
+ 323         output_arp_tpa_reg[31:24] <= input_eth_payload_tdata[ 7: 0];
+ 323         output_arp_tpa_reg[23:16] <= input_eth_payload_tdata[15: 8];
+ 323         output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata[23:16];
+ 323         output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata[31:24];

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/arp_eth_rx.v@324:394
            end
        end
    endcase
end

always @(posedge clk) begin
    if (rst) begin
        state_reg <= STATE_IDLE;
        frame_ptr_reg <= 0;
        input_eth_payload_tready_reg <= 0;
        output_frame_valid_reg <= 0;
        output_eth_dest_mac_reg <= 0;
        output_eth_src_mac_reg <= 0;
        output_eth_type_reg <= 0;
        busy_reg <= 0;
        error_header_early_termination_reg <= 0;
        error_invalid_header_reg <= 0;
    end else begin
        state_reg <= state_next;

        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;
        input_eth_payload_tready_reg <= input_eth_payload_tready_next;

        frame_ptr_reg <= frame_ptr_next;

        output_frame_valid_reg <= output_frame_valid_next;

        error_header_early_termination_reg <= error_header_early_termination_next;
        error_invalid_header_reg <= error_invalid_header_next;

        busy_reg <= state_next != STATE_IDLE;

        // datapath
        if (store_eth_hdr) begin
            output_eth_dest_mac_reg <= input_eth_dest_mac;
            output_eth_src_mac_reg <= input_eth_src_mac;
            output_eth_type_reg <= input_eth_type;
        end

        if (store_arp_htype_0) output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_htype_1) output_arp_htype_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_ptype_0) output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_ptype_1) output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_hlen) output_arp_hlen_reg <= input_eth_payload_tdata;
        if (store_arp_plen) output_arp_plen_reg <= input_eth_payload_tdata;
        if (store_arp_oper_0) output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_oper_1) output_arp_oper_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_sha_0) output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_sha_1) output_arp_sha_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_sha_2) output_arp_sha_reg[23:16] <= input_eth_payload_tdata;
        if (store_arp_sha_3) output_arp_sha_reg[31:24] <= input_eth_payload_tdata;
        if (store_arp_sha_4) output_arp_sha_reg[39:32] <= input_eth_payload_tdata;
        if (store_arp_sha_5) output_arp_sha_reg[47:40] <= input_eth_payload_tdata;
        if (store_arp_spa_0) output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_spa_1) output_arp_spa_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_spa_2) output_arp_spa_reg[23:16] <= input_eth_payload_tdata;
        if (store_arp_spa_3) output_arp_spa_reg[31:24] <= input_eth_payload_tdata;
        if (store_arp_tha_0) output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_tha_1) output_arp_tha_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_tha_2) output_arp_tha_reg[23:16] <= input_eth_payload_tdata;
        if (store_arp_tha_3) output_arp_tha_reg[31:24] <= input_eth_payload_tdata;
        if (store_arp_tha_4) output_arp_tha_reg[39:32] <= input_eth_payload_tdata;
        if (store_arp_tha_5) output_arp_tha_reg[47:40] <= input_eth_payload_tdata;
        if (store_arp_tpa_0) output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata;
        if (store_arp_tpa_1) output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata;
        if (store_arp_tpa_2) output_arp_tpa_reg[23:16] <= input_eth_payload_tdata;
        if (store_arp_tpa_3) output_arp_tpa_reg[31:24] <= input_eth_payload_tdata;
    end
end

endmodule

