{"Source Block": ["verilog-ethernet/rtl/udp_ip_rx_64.v@405:497@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_ip_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_ip_length;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_udp_payload_tdata_int;\n            last_word_keep_reg <= output_udp_payload_tkeep_int;\n        end\n\n        if (store_hdr_word_0) begin\n            output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata[ 7: 0];\n            output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata[15: 8];\n            output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata[23:16];\n            output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata[31:24];\n            output_udp_length_reg[15: 8] <= input_ip_payload_tdata[39:32];\n            output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata[47:40];\n            output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata[55:48];\n            output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata[63:56];\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_udp_payload_tdata_reg = 0;\nreg [7:0]  output_udp_payload_tkeep_reg = 0;\nreg        output_udp_payload_tvalid_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/udp_ip_tx.v@350:432", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        udp_source_port_reg <= 0;\n        udp_dest_port_reg <= 0;\n        udp_length_reg <= 0;\n        udp_checksum_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_udp_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_udp_length + 20;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n            udp_source_port_reg <= input_udp_source_port;\n            udp_dest_port_reg <= input_udp_dest_port;\n            udp_length_reg <= input_udp_length;\n            udp_checksum_reg <= input_udp_checksum;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n        end\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@405:489", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        udp_source_port_reg <= 0;\n        udp_dest_port_reg <= 0;\n        udp_length_reg <= 0;\n        udp_checksum_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_udp_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_udp_length + 20;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n            udp_source_port_reg <= input_udp_source_port;\n            udp_dest_port_reg <= input_udp_dest_port;\n            udp_length_reg <= input_udp_length;\n            udp_checksum_reg <= input_udp_checksum;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n            last_word_keep_reg <= output_ip_payload_tkeep_int;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/udp_ip_rx.v@382:471", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_ip_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_ip_length;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_udp_payload_tdata_int;\n        end\n\n        if (store_udp_source_port_0) output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_source_port_1) output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_dest_port_0) output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_dest_port_1) output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_length_0) output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_length_1) output_udp_length_reg[15: 8] <= input_ip_payload_tdata;\n        if (store_udp_checksum_0) output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata;\n        if (store_udp_checksum_1) output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_udp_payload_tdata_reg = 0;\nreg       output_udp_payload_tvalid_reg = 0;\nreg       output_udp_payload_tlast_reg = 0;\n"]], "Diff Content": {"Delete": [[413, "        frame_ptr_reg <= 0;\n"], [414, "        last_word_data_reg <= 0;\n"], [415, "        input_ip_hdr_ready_reg <= 0;\n"], [416, "        input_ip_payload_tready_reg <= 0;\n"], [417, "        output_udp_hdr_valid_reg <= 0;\n"], [418, "        output_eth_dest_mac_reg <= 0;\n"], [419, "        output_eth_src_mac_reg <= 0;\n"], [420, "        output_eth_type_reg <= 0;\n"], [421, "        output_ip_version_reg <= 0;\n"], [422, "        output_ip_ihl_reg <= 0;\n"], [423, "        output_ip_dscp_reg <= 0;\n"], [424, "        output_ip_ecn_reg <= 0;\n"], [425, "        output_ip_length_reg <= 0;\n"], [426, "        output_ip_identification_reg <= 0;\n"], [427, "        output_ip_flags_reg <= 0;\n"], [428, "        output_ip_fragment_offset_reg <= 0;\n"], [429, "        output_ip_ttl_reg <= 0;\n"], [430, "        output_ip_protocol_reg <= 0;\n"], [431, "        output_ip_header_checksum_reg <= 0;\n"], [432, "        output_ip_source_ip_reg <= 0;\n"], [433, "        output_ip_dest_ip_reg <= 0;\n"], [434, "        output_udp_source_port_reg <= 0;\n"], [435, "        output_udp_dest_port_reg <= 0;\n"], [436, "        output_udp_length_reg <= 0;\n"], [437, "        output_udp_checksum_reg <= 0;\n"], [438, "        busy_reg <= 0;\n"], [439, "        error_header_early_termination_reg <= 0;\n"], [440, "        error_payload_early_termination_reg <= 0;\n"], [457, "        if (store_ip_hdr) begin\n"], [458, "            output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [459, "            output_eth_src_mac_reg <= input_eth_src_mac;\n"], [460, "            output_eth_type_reg <= input_eth_type;\n"], [461, "            output_ip_version_reg <= input_ip_version;\n"], [462, "            output_ip_ihl_reg <= input_ip_ihl;\n"], [463, "            output_ip_dscp_reg <= input_ip_dscp;\n"], [464, "            output_ip_ecn_reg <= input_ip_ecn;\n"], [465, "            output_ip_length_reg <= input_ip_length;\n"], [466, "            output_ip_identification_reg <= input_ip_identification;\n"], [467, "            output_ip_flags_reg <= input_ip_flags;\n"], [468, "            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n"], [469, "            output_ip_ttl_reg <= input_ip_ttl;\n"], [470, "            output_ip_protocol_reg <= input_ip_protocol;\n"], [471, "            output_ip_header_checksum_reg <= input_ip_header_checksum;\n"], [472, "            output_ip_source_ip_reg <= input_ip_source_ip;\n"], [473, "            output_ip_dest_ip_reg <= input_ip_dest_ip;\n"], [474, "        end\n"], [476, "        if (store_last_word) begin\n"], [477, "            last_word_data_reg <= output_udp_payload_tdata_int;\n"], [478, "            last_word_keep_reg <= output_udp_payload_tkeep_int;\n"], [479, "        end\n"], [481, "        if (store_hdr_word_0) begin\n"], [482, "            output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata[ 7: 0];\n"], [483, "            output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata[15: 8];\n"], [484, "            output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata[23:16];\n"], [485, "            output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata[31:24];\n"], [486, "            output_udp_length_reg[15: 8] <= input_ip_payload_tdata[39:32];\n"], [487, "            output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata[47:40];\n"], [488, "            output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata[55:48];\n"], [489, "            output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata[63:56];\n"], [490, "        end\n"]], "Add": [[440, "        frame_ptr_reg <= 16'd0;\n"], [440, "        input_ip_hdr_ready_reg <= 1'b0;\n"], [440, "        input_ip_payload_tready_reg <= 1'b0;\n"], [440, "        output_udp_hdr_valid_reg <= 1'b0;\n"], [440, "        busy_reg <= 1'b0;\n"], [440, "        error_header_early_termination_reg <= 1'b0;\n"], [440, "        error_payload_early_termination_reg <= 1'b0;\n"], [454, "    end\n"], [474, "    if (store_ip_hdr) begin\n"], [474, "        output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [474, "        output_eth_src_mac_reg <= input_eth_src_mac;\n"], [474, "        output_eth_type_reg <= input_eth_type;\n"], [474, "        output_ip_version_reg <= input_ip_version;\n"], [474, "        output_ip_ihl_reg <= input_ip_ihl;\n"], [474, "        output_ip_dscp_reg <= input_ip_dscp;\n"], [474, "        output_ip_ecn_reg <= input_ip_ecn;\n"], [474, "        output_ip_length_reg <= input_ip_length;\n"], [474, "        output_ip_identification_reg <= input_ip_identification;\n"], [474, "        output_ip_flags_reg <= input_ip_flags;\n"], [474, "        output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n"], [474, "        output_ip_ttl_reg <= input_ip_ttl;\n"], [474, "        output_ip_protocol_reg <= input_ip_protocol;\n"], [474, "        output_ip_header_checksum_reg <= input_ip_header_checksum;\n"], [474, "        output_ip_source_ip_reg <= input_ip_source_ip;\n"], [474, "        output_ip_dest_ip_reg <= input_ip_dest_ip;\n"], [474, "    end\n"], [479, "    if (store_last_word) begin\n"], [479, "        last_word_data_reg <= output_udp_payload_tdata_int;\n"], [479, "        last_word_keep_reg <= output_udp_payload_tkeep_int;\n"], [479, "    end\n"], [490, "    if (store_hdr_word_0) begin\n"], [490, "        output_udp_source_port_reg[15: 8] <= input_ip_payload_tdata[ 7: 0];\n"], [490, "        output_udp_source_port_reg[ 7: 0] <= input_ip_payload_tdata[15: 8];\n"], [490, "        output_udp_dest_port_reg[15: 8] <= input_ip_payload_tdata[23:16];\n"], [490, "        output_udp_dest_port_reg[ 7: 0] <= input_ip_payload_tdata[31:24];\n"], [490, "        output_udp_length_reg[15: 8] <= input_ip_payload_tdata[39:32];\n"], [490, "        output_udp_length_reg[ 7: 0] <= input_ip_payload_tdata[47:40];\n"], [490, "        output_udp_checksum_reg[15: 8] <= input_ip_payload_tdata[55:48];\n"], [490, "        output_udp_checksum_reg[ 7: 0] <= input_ip_payload_tdata[63:56];\n"]]}}