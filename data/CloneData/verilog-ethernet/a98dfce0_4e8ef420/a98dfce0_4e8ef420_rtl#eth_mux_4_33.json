{"Source Block": ["verilog-ethernet/rtl/eth_mux_4.v@271:313@HdlStmProcess", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_2_eth_hdr_ready_reg <= 0;\n        input_3_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        input_2_eth_payload_tready_reg <= 0;\n        input_3_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_2_eth_hdr_ready_reg <= input_2_eth_hdr_ready_next;\n        input_3_eth_hdr_ready_reg <= input_3_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        input_2_eth_payload_tready_reg <= input_2_eth_payload_tready_next;\n        input_3_eth_payload_tready_reg <= input_3_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_eth_payload_tdata_reg = 0;\nreg       output_eth_payload_tvalid_reg = 0;\nreg       output_eth_payload_tlast_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/eth_mux_2.v@207:241", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_eth_payload_tdata_reg = 0;\nreg       output_eth_payload_tvalid_reg = 0;\nreg       output_eth_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/eth_mux_64_4.v@283:325", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_2_eth_hdr_ready_reg <= 0;\n        input_3_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        input_2_eth_payload_tready_reg <= 0;\n        input_3_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_2_eth_hdr_ready_reg <= input_2_eth_hdr_ready_next;\n        input_3_eth_hdr_ready_reg <= input_3_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        input_2_eth_payload_tready_reg <= input_2_eth_payload_tready_next;\n        input_3_eth_payload_tready_reg <= input_3_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_eth_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/eth_mux_64_2.v@215:249", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_eth_payload_tvalid_reg = 0;\n"]], "Diff Content": {"Delete": [[278, "        select_reg <= 0;\n"], [279, "        frame_reg <= 0;\n"], [280, "        input_0_eth_hdr_ready_reg <= 0;\n"], [281, "        input_1_eth_hdr_ready_reg <= 0;\n"], [282, "        input_2_eth_hdr_ready_reg <= 0;\n"], [283, "        input_3_eth_hdr_ready_reg <= 0;\n"], [284, "        input_0_eth_payload_tready_reg <= 0;\n"], [285, "        input_1_eth_payload_tready_reg <= 0;\n"], [286, "        input_2_eth_payload_tready_reg <= 0;\n"], [287, "        input_3_eth_payload_tready_reg <= 0;\n"], [288, "        output_eth_hdr_valid_reg <= 0;\n"], [289, "        output_eth_dest_mac_reg <= 0;\n"], [290, "        output_eth_src_mac_reg <= 0;\n"], [291, "        output_eth_type_reg <= 0;\n"], [304, "        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [305, "        output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [306, "        output_eth_type_reg <= output_eth_type_next;\n"]], "Add": [[291, "        select_reg <= 2'd0;\n"], [291, "        frame_reg <= 1'b0;\n"], [291, "        input_0_eth_hdr_ready_reg <= 1'b0;\n"], [291, "        input_1_eth_hdr_ready_reg <= 1'b0;\n"], [291, "        input_2_eth_hdr_ready_reg <= 1'b0;\n"], [291, "        input_3_eth_hdr_ready_reg <= 1'b0;\n"], [291, "        input_0_eth_payload_tready_reg <= 1'b0;\n"], [291, "        input_1_eth_payload_tready_reg <= 1'b0;\n"], [291, "        input_2_eth_payload_tready_reg <= 1'b0;\n"], [291, "        input_3_eth_payload_tready_reg <= 1'b0;\n"], [291, "        output_eth_hdr_valid_reg <= 1'b0;\n"], [307, "    output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [307, "    output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [307, "    output_eth_type_reg <= output_eth_type_next;\n"]]}}