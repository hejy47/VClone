Source Block: verilog-ethernet/rtl/ip_complete.v@197:207@HdlIdDef
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin
        input_select_ip_reg <= 0;
        input_select_arp_reg <= 0;

Diff Content:
- 202 reg input_select_none_reg = 0;
+ 202 reg input_select_ip_reg = 1'b0;
+ 202 reg input_select_arp_reg = 1'b0;
+ 202 reg input_select_none_reg = 1'b0;

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/ip_complete_64.v@205:215
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin
        input_select_ip_reg <= 0;
        input_select_arp_reg <= 0;

Clone Blocks 2:
verilog-ethernet/rtl/ip_complete_64.v@201:211
/*
 * Input classifier (eth_type)
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;


Clone Blocks 3:
verilog-ethernet/rtl/ip_complete.v@196:206
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin
        input_select_ip_reg <= 0;

Clone Blocks 4:
verilog-ethernet/rtl/ip_complete_64.v@200:210

/*
 * Input classifier (eth_type)
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

Clone Blocks 5:
verilog-ethernet/rtl/ip_complete.v@195:205
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin

Clone Blocks 6:
verilog-ethernet/rtl/ip_complete.v@193:203
/*
 * Input classifier (eth_type)
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;


Clone Blocks 7:
verilog-ethernet/rtl/ip_complete.v@192:202

/*
 * Input classifier (eth_type)
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

Clone Blocks 8:
verilog-ethernet/rtl/ip_complete_64.v@203:213
 */
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin

Clone Blocks 9:
verilog-ethernet/rtl/ip_complete_64.v@204:214
wire input_select_ip = (input_eth_type == 16'h0800);
wire input_select_arp = (input_eth_type == 16'h0806);
wire input_select_none = ~(input_select_ip | input_select_arp);

reg input_select_ip_reg = 0;
reg input_select_arp_reg = 0;
reg input_select_none_reg = 0;

always @(posedge clk) begin
    if (rst) begin
        input_select_ip_reg <= 0;

