{"Source Block": ["verilog-ethernet/rtl/udp_demux_4.v@428:498@HdlStmProcess", "    output_udp_payload_tvalid_int = input_udp_payload_tvalid & input_udp_payload_tready;\n    output_udp_payload_tlast_int = input_udp_payload_tlast;\n    output_udp_payload_tuser_int = input_udp_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        output_0_udp_hdr_valid_reg <= 0;\n        output_1_udp_hdr_valid_reg <= 0;\n        output_2_udp_hdr_valid_reg <= 0;\n        output_3_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n        output_0_udp_hdr_valid_reg <= output_0_udp_hdr_valid_next;\n        output_1_udp_hdr_valid_reg <= output_1_udp_hdr_valid_next;\n        output_2_udp_hdr_valid_reg <= output_2_udp_hdr_valid_next;\n        output_3_udp_hdr_valid_reg <= output_3_udp_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n        output_udp_source_port_reg <= output_udp_source_port_next;\n        output_udp_dest_port_reg <= output_udp_dest_port_next;\n        output_udp_length_reg <= output_udp_length_next;\n        output_udp_checksum_reg <= output_udp_checksum_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_udp_payload_tdata_reg = 0;\nreg       output_0_udp_payload_tvalid_reg = 0;\nreg       output_1_udp_payload_tvalid_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/ip_mux_64_2.v@345:405", "    output_ip_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_ip_payload_tlast_int = current_input_tlast;\n    output_ip_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_ip_hdr_ready_reg <= 0;\n        input_1_ip_hdr_ready_reg <= 0;\n        input_0_ip_payload_tready_reg <= 0;\n        input_1_ip_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_ip_hdr_ready_reg <= input_0_ip_hdr_ready_next;\n        input_1_ip_hdr_ready_reg <= input_1_ip_hdr_ready_next;\n        input_0_ip_payload_tready_reg <= input_0_ip_payload_tready_next;\n        input_1_ip_payload_tready_reg <= input_1_ip_payload_tready_next;\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/udp_mux_4.v@509:585", "    output_udp_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_udp_payload_tlast_int = current_input_tlast;\n    output_udp_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_udp_hdr_ready_reg <= 0;\n        input_1_udp_hdr_ready_reg <= 0;\n        input_2_udp_hdr_ready_reg <= 0;\n        input_3_udp_hdr_ready_reg <= 0;\n        input_0_udp_payload_tready_reg <= 0;\n        input_1_udp_payload_tready_reg <= 0;\n        input_2_udp_payload_tready_reg <= 0;\n        input_3_udp_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_udp_hdr_ready_reg <= input_0_udp_hdr_ready_next;\n        input_1_udp_hdr_ready_reg <= input_1_udp_hdr_ready_next;\n        input_2_udp_hdr_ready_reg <= input_2_udp_hdr_ready_next;\n        input_3_udp_hdr_ready_reg <= input_3_udp_hdr_ready_next;\n        input_0_udp_payload_tready_reg <= input_0_udp_payload_tready_next;\n        input_1_udp_payload_tready_reg <= input_1_udp_payload_tready_next;\n        input_2_udp_payload_tready_reg <= input_2_udp_payload_tready_next;\n        input_3_udp_payload_tready_reg <= input_3_udp_payload_tready_next;\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n        output_udp_source_port_reg <= output_udp_source_port_next;\n        output_udp_dest_port_reg <= output_udp_dest_port_next;\n        output_udp_length_reg <= output_udp_length_next;\n        output_udp_checksum_reg <= output_udp_checksum_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_udp_payload_tdata_reg = 0;\nreg       output_udp_payload_tvalid_reg = 0;\nreg       output_udp_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/udp_mux_64_4.v@521:597", "    output_udp_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_udp_payload_tlast_int = current_input_tlast;\n    output_udp_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_udp_hdr_ready_reg <= 0;\n        input_1_udp_hdr_ready_reg <= 0;\n        input_2_udp_hdr_ready_reg <= 0;\n        input_3_udp_hdr_ready_reg <= 0;\n        input_0_udp_payload_tready_reg <= 0;\n        input_1_udp_payload_tready_reg <= 0;\n        input_2_udp_payload_tready_reg <= 0;\n        input_3_udp_payload_tready_reg <= 0;\n        output_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_udp_hdr_ready_reg <= input_0_udp_hdr_ready_next;\n        input_1_udp_hdr_ready_reg <= input_1_udp_hdr_ready_next;\n        input_2_udp_hdr_ready_reg <= input_2_udp_hdr_ready_next;\n        input_3_udp_hdr_ready_reg <= input_3_udp_hdr_ready_next;\n        input_0_udp_payload_tready_reg <= input_0_udp_payload_tready_next;\n        input_1_udp_payload_tready_reg <= input_1_udp_payload_tready_next;\n        input_2_udp_payload_tready_reg <= input_2_udp_payload_tready_next;\n        input_3_udp_payload_tready_reg <= input_3_udp_payload_tready_next;\n        output_udp_hdr_valid_reg <= output_udp_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n        output_udp_source_port_reg <= output_udp_source_port_next;\n        output_udp_dest_port_reg <= output_udp_dest_port_next;\n        output_udp_length_reg <= output_udp_length_next;\n        output_udp_checksum_reg <= output_udp_checksum_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_udp_payload_tdata_reg = 0;\nreg [7:0]  output_udp_payload_tkeep_reg = 0;\nreg        output_udp_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/udp_demux_64_4.v@435:505", "    output_udp_payload_tvalid_int = input_udp_payload_tvalid & input_udp_payload_tready;\n    output_udp_payload_tlast_int = input_udp_payload_tlast;\n    output_udp_payload_tuser_int = input_udp_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        output_0_udp_hdr_valid_reg <= 0;\n        output_1_udp_hdr_valid_reg <= 0;\n        output_2_udp_hdr_valid_reg <= 0;\n        output_3_udp_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        output_udp_source_port_reg <= 0;\n        output_udp_dest_port_reg <= 0;\n        output_udp_length_reg <= 0;\n        output_udp_checksum_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n        output_0_udp_hdr_valid_reg <= output_0_udp_hdr_valid_next;\n        output_1_udp_hdr_valid_reg <= output_1_udp_hdr_valid_next;\n        output_2_udp_hdr_valid_reg <= output_2_udp_hdr_valid_next;\n        output_3_udp_hdr_valid_reg <= output_3_udp_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n        output_udp_source_port_reg <= output_udp_source_port_next;\n        output_udp_dest_port_reg <= output_udp_dest_port_next;\n        output_udp_length_reg <= output_udp_length_next;\n        output_udp_checksum_reg <= output_udp_checksum_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_udp_payload_tdata_reg = 0;\nreg [7:0]  output_udp_payload_tkeep_reg = 0;\nreg        output_0_udp_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_mux_64_4.v@465:533", "    output_ip_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_ip_payload_tlast_int = current_input_tlast;\n    output_ip_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_ip_hdr_ready_reg <= 0;\n        input_1_ip_hdr_ready_reg <= 0;\n        input_2_ip_hdr_ready_reg <= 0;\n        input_3_ip_hdr_ready_reg <= 0;\n        input_0_ip_payload_tready_reg <= 0;\n        input_1_ip_payload_tready_reg <= 0;\n        input_2_ip_payload_tready_reg <= 0;\n        input_3_ip_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_ip_hdr_ready_reg <= input_0_ip_hdr_ready_next;\n        input_1_ip_hdr_ready_reg <= input_1_ip_hdr_ready_next;\n        input_2_ip_hdr_ready_reg <= input_2_ip_hdr_ready_next;\n        input_3_ip_hdr_ready_reg <= input_3_ip_hdr_ready_next;\n        input_0_ip_payload_tready_reg <= input_0_ip_payload_tready_next;\n        input_1_ip_payload_tready_reg <= input_1_ip_payload_tready_next;\n        input_2_ip_payload_tready_reg <= input_2_ip_payload_tready_next;\n        input_3_ip_payload_tready_reg <= input_3_ip_payload_tready_next;\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_demux_64_4.v@387:449", "    output_ip_payload_tvalid_int = input_ip_payload_tvalid & input_ip_payload_tready;\n    output_ip_payload_tlast_int = input_ip_payload_tlast;\n    output_ip_payload_tuser_int = input_ip_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_0_ip_hdr_valid_reg <= 0;\n        output_1_ip_hdr_valid_reg <= 0;\n        output_2_ip_hdr_valid_reg <= 0;\n        output_3_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n        output_0_ip_hdr_valid_reg <= output_0_ip_hdr_valid_next;\n        output_1_ip_hdr_valid_reg <= output_1_ip_hdr_valid_next;\n        output_2_ip_hdr_valid_reg <= output_2_ip_hdr_valid_next;\n        output_3_ip_hdr_valid_reg <= output_3_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_0_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_demux_4.v@380:442", "    output_ip_payload_tvalid_int = input_ip_payload_tvalid & input_ip_payload_tready;\n    output_ip_payload_tlast_int = input_ip_payload_tlast;\n    output_ip_payload_tuser_int = input_ip_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_ip_hdr_ready_reg <= 0;\n        input_ip_payload_tready_reg <= 0;\n        output_0_ip_hdr_valid_reg <= 0;\n        output_1_ip_hdr_valid_reg <= 0;\n        output_2_ip_hdr_valid_reg <= 0;\n        output_3_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;\n        input_ip_payload_tready_reg <= input_ip_payload_tready_next;\n        output_0_ip_hdr_valid_reg <= output_0_ip_hdr_valid_next;\n        output_1_ip_hdr_valid_reg <= output_1_ip_hdr_valid_next;\n        output_2_ip_hdr_valid_reg <= output_2_ip_hdr_valid_next;\n        output_3_ip_hdr_valid_reg <= output_3_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_0_ip_payload_tvalid_reg = 0;\nreg       output_1_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@405:489", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_udp_hdr_ready_reg <= 0;\n        input_udp_payload_tready_reg <= 0;\n        udp_source_port_reg <= 0;\n        udp_dest_port_reg <= 0;\n        udp_length_reg <= 0;\n        udp_checksum_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_udp_hdr_ready_reg <= input_udp_hdr_ready_next;\n        input_udp_payload_tready_reg <= input_udp_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n\n        // datapath\n        if (store_udp_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n            output_ip_version_reg <= input_ip_version;\n            output_ip_ihl_reg <= input_ip_ihl;\n            output_ip_dscp_reg <= input_ip_dscp;\n            output_ip_ecn_reg <= input_ip_ecn;\n            output_ip_length_reg <= input_udp_length + 20;\n            output_ip_identification_reg <= input_ip_identification;\n            output_ip_flags_reg <= input_ip_flags;\n            output_ip_fragment_offset_reg <= input_ip_fragment_offset;\n            output_ip_ttl_reg <= input_ip_ttl;\n            output_ip_protocol_reg <= input_ip_protocol;\n            output_ip_header_checksum_reg <= input_ip_header_checksum;\n            output_ip_source_ip_reg <= input_ip_source_ip;\n            output_ip_dest_ip_reg <= input_ip_dest_ip;\n            udp_source_port_reg <= input_udp_source_port;\n            udp_dest_port_reg <= input_udp_dest_port;\n            udp_length_reg <= input_udp_length;\n            udp_checksum_reg <= input_udp_checksum;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n            last_word_keep_reg <= output_ip_payload_tkeep_int;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/ip_mux_4.v@453:521", "    output_ip_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_ip_payload_tlast_int = current_input_tlast;\n    output_ip_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_ip_hdr_ready_reg <= 0;\n        input_1_ip_hdr_ready_reg <= 0;\n        input_2_ip_hdr_ready_reg <= 0;\n        input_3_ip_hdr_ready_reg <= 0;\n        input_0_ip_payload_tready_reg <= 0;\n        input_1_ip_payload_tready_reg <= 0;\n        input_2_ip_payload_tready_reg <= 0;\n        input_3_ip_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_ip_hdr_ready_reg <= input_0_ip_hdr_ready_next;\n        input_1_ip_hdr_ready_reg <= input_1_ip_hdr_ready_next;\n        input_2_ip_hdr_ready_reg <= input_2_ip_hdr_ready_next;\n        input_3_ip_hdr_ready_reg <= input_3_ip_hdr_ready_next;\n        input_0_ip_payload_tready_reg <= input_0_ip_payload_tready_next;\n        input_1_ip_payload_tready_reg <= input_1_ip_payload_tready_next;\n        input_2_ip_payload_tready_reg <= input_2_ip_payload_tready_next;\n        input_3_ip_payload_tready_reg <= input_3_ip_payload_tready_next;\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/ip_mux_2.v@337:397", "    output_ip_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_ip_payload_tlast_int = current_input_tlast;\n    output_ip_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_ip_hdr_ready_reg <= 0;\n        input_1_ip_hdr_ready_reg <= 0;\n        input_0_ip_payload_tready_reg <= 0;\n        input_1_ip_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_ip_hdr_ready_reg <= input_0_ip_hdr_ready_next;\n        input_1_ip_hdr_ready_reg <= input_1_ip_hdr_ready_next;\n        input_0_ip_payload_tready_reg <= input_0_ip_payload_tready_next;\n        input_1_ip_payload_tready_reg <= input_1_ip_payload_tready_next;\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n        output_ip_version_reg <= output_ip_version_next;\n        output_ip_ihl_reg <= output_ip_ihl_next;\n        output_ip_dscp_reg <= output_ip_dscp_next;\n        output_ip_ecn_reg <= output_ip_ecn_next;\n        output_ip_length_reg <= output_ip_length_next;\n        output_ip_identification_reg <= output_ip_identification_next;\n        output_ip_flags_reg <= output_ip_flags_next;\n        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n        output_ip_ttl_reg <= output_ip_ttl_next;\n        output_ip_protocol_reg <= output_ip_protocol_next;\n        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n        output_ip_source_ip_reg <= output_ip_source_ip_next;\n        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"]], "Diff Content": {"Delete": [[435, "        select_reg <= 0;\n"], [436, "        frame_reg <= 0;\n"], [437, "        input_udp_hdr_ready_reg <= 0;\n"], [438, "        input_udp_payload_tready_reg <= 0;\n"], [439, "        output_0_udp_hdr_valid_reg <= 0;\n"], [440, "        output_1_udp_hdr_valid_reg <= 0;\n"], [441, "        output_2_udp_hdr_valid_reg <= 0;\n"], [442, "        output_3_udp_hdr_valid_reg <= 0;\n"], [443, "        output_eth_dest_mac_reg <= 0;\n"], [444, "        output_eth_src_mac_reg <= 0;\n"], [445, "        output_eth_type_reg <= 0;\n"], [446, "        output_ip_version_reg <= 0;\n"], [447, "        output_ip_ihl_reg <= 0;\n"], [448, "        output_ip_dscp_reg <= 0;\n"], [449, "        output_ip_ecn_reg <= 0;\n"], [450, "        output_ip_length_reg <= 0;\n"], [451, "        output_ip_identification_reg <= 0;\n"], [452, "        output_ip_flags_reg <= 0;\n"], [453, "        output_ip_fragment_offset_reg <= 0;\n"], [454, "        output_ip_ttl_reg <= 0;\n"], [455, "        output_ip_protocol_reg <= 0;\n"], [456, "        output_ip_header_checksum_reg <= 0;\n"], [457, "        output_ip_source_ip_reg <= 0;\n"], [458, "        output_ip_dest_ip_reg <= 0;\n"], [459, "        output_udp_source_port_reg <= 0;\n"], [460, "        output_udp_dest_port_reg <= 0;\n"], [461, "        output_udp_length_reg <= 0;\n"], [462, "        output_udp_checksum_reg <= 0;\n"], [472, "        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [473, "        output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [474, "        output_eth_type_reg <= output_eth_type_next;\n"], [475, "        output_ip_version_reg <= output_ip_version_next;\n"], [476, "        output_ip_ihl_reg <= output_ip_ihl_next;\n"], [477, "        output_ip_dscp_reg <= output_ip_dscp_next;\n"], [478, "        output_ip_ecn_reg <= output_ip_ecn_next;\n"], [479, "        output_ip_length_reg <= output_ip_length_next;\n"], [480, "        output_ip_identification_reg <= output_ip_identification_next;\n"], [481, "        output_ip_flags_reg <= output_ip_flags_next;\n"], [482, "        output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n"], [483, "        output_ip_ttl_reg <= output_ip_ttl_next;\n"], [484, "        output_ip_protocol_reg <= output_ip_protocol_next;\n"], [485, "        output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n"], [486, "        output_ip_source_ip_reg <= output_ip_source_ip_next;\n"], [487, "        output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n"], [488, "        output_udp_source_port_reg <= output_udp_source_port_next;\n"], [489, "        output_udp_dest_port_reg <= output_udp_dest_port_next;\n"], [490, "        output_udp_length_reg <= output_udp_length_next;\n"], [491, "        output_udp_checksum_reg <= output_udp_checksum_next;\n"]], "Add": [[462, "        select_reg <= 2'd0;\n"], [462, "        frame_reg <= 1'b0;\n"], [462, "        input_udp_hdr_ready_reg <= 1'b0;\n"], [462, "        input_udp_payload_tready_reg <= 1'b0;\n"], [462, "        output_0_udp_hdr_valid_reg <= 1'b0;\n"], [462, "        output_1_udp_hdr_valid_reg <= 1'b0;\n"], [462, "        output_2_udp_hdr_valid_reg <= 1'b0;\n"], [462, "        output_3_udp_hdr_valid_reg <= 1'b0;\n"], [492, "    output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [492, "    output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [492, "    output_eth_type_reg <= output_eth_type_next;\n"], [492, "    output_ip_version_reg <= output_ip_version_next;\n"], [492, "    output_ip_ihl_reg <= output_ip_ihl_next;\n"], [492, "    output_ip_dscp_reg <= output_ip_dscp_next;\n"], [492, "    output_ip_ecn_reg <= output_ip_ecn_next;\n"], [492, "    output_ip_length_reg <= output_ip_length_next;\n"], [492, "    output_ip_identification_reg <= output_ip_identification_next;\n"], [492, "    output_ip_flags_reg <= output_ip_flags_next;\n"], [492, "    output_ip_fragment_offset_reg <= output_ip_fragment_offset_next;\n"], [492, "    output_ip_ttl_reg <= output_ip_ttl_next;\n"], [492, "    output_ip_protocol_reg <= output_ip_protocol_next;\n"], [492, "    output_ip_header_checksum_reg <= output_ip_header_checksum_next;\n"], [492, "    output_ip_source_ip_reg <= output_ip_source_ip_next;\n"], [492, "    output_ip_dest_ip_reg <= output_ip_dest_ip_next;\n"], [492, "    output_udp_source_port_reg <= output_udp_source_port_next;\n"], [492, "    output_udp_dest_port_reg <= output_udp_dest_port_next;\n"], [492, "    output_udp_length_reg <= output_udp_length_next;\n"], [492, "    output_udp_checksum_reg <= output_udp_checksum_next;\n"]]}}