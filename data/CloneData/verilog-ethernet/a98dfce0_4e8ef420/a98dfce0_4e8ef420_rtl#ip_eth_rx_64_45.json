{"Source Block": ["verilog-ethernet/rtl/ip_eth_rx_64.v@250:280@HdlStmProcess", "        4'd7: count2keep = 8'b01111111;\n        4'd8: count2keep = 8'b11111111;\n    endcase\nendfunction\n\nalways @* begin\n    shift_eth_payload_tdata[31:0] = save_eth_payload_tdata_reg[63:32];\n    shift_eth_payload_tkeep[3:0] = save_eth_payload_tkeep_reg[7:4];\n    shift_eth_payload_extra_cycle = save_eth_payload_tlast_reg & (save_eth_payload_tkeep_reg[7:4] != 0);\n\n    if (shift_eth_payload_extra_cycle) begin\n        shift_eth_payload_tdata[63:32] = 0;\n        shift_eth_payload_tkeep[7:4] = 0;\n        shift_eth_payload_tvalid = 1;\n        shift_eth_payload_tlast = save_eth_payload_tlast_reg;\n        shift_eth_payload_tuser = save_eth_payload_tuser_reg;\n        shift_eth_payload_input_tready = flush_save;\n    end else begin\n        shift_eth_payload_tdata[63:32] = input_eth_payload_tdata[31:0];\n        shift_eth_payload_tkeep[7:4] = input_eth_payload_tkeep[3:0];\n        shift_eth_payload_tvalid = input_eth_payload_tvalid;\n        shift_eth_payload_tlast = (input_eth_payload_tlast & (input_eth_payload_tkeep[7:4] == 0));\n        shift_eth_payload_tuser = (input_eth_payload_tuser & (input_eth_payload_tkeep[7:4] == 0));\n        shift_eth_payload_input_tready = ~(input_eth_payload_tlast & input_eth_payload_tvalid & transfer_in_save);\n    end\nend\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    flush_save = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/eth_axis_tx_64.v@130:160", "assign input_eth_hdr_ready = input_eth_hdr_ready_reg;\nassign input_eth_payload_tready = input_eth_payload_tready_reg;\n\nassign busy = busy_reg;\n\nalways @* begin\n    shift_eth_payload_tdata[47:0] = save_eth_payload_tdata_reg[63:16];\n    shift_eth_payload_tkeep[5:0] = save_eth_payload_tkeep_reg[7:2];\n    shift_eth_payload_extra_cycle = save_eth_payload_tlast_reg & (save_eth_payload_tkeep_reg[7:2] != 0);\n\n    if (shift_eth_payload_extra_cycle) begin\n        shift_eth_payload_tdata[63:48] = 0;\n        shift_eth_payload_tkeep[7:6] = 0;\n        shift_eth_payload_tvalid = 1;\n        shift_eth_payload_tlast = save_eth_payload_tlast_reg;\n        shift_eth_payload_tuser = save_eth_payload_tuser_reg;\n        shift_eth_payload_input_tready = flush_save;\n    end else begin\n        shift_eth_payload_tdata[63:48] = input_eth_payload_tdata[15:0];\n        shift_eth_payload_tkeep[7:6] = input_eth_payload_tkeep[1:0];\n        shift_eth_payload_tvalid = input_eth_payload_tvalid;\n        shift_eth_payload_tlast = (input_eth_payload_tlast & (input_eth_payload_tkeep[7:2] == 0));\n        shift_eth_payload_tuser = (input_eth_payload_tuser & (input_eth_payload_tkeep[7:2] == 0));\n        shift_eth_payload_input_tready = ~(input_eth_payload_tlast & input_eth_payload_tvalid & transfer_in_save);\n    end\nend\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    input_eth_hdr_ready_next = 0;\n"], ["verilog-ethernet/rtl/ip_eth_tx_64.v@220:250", "        4'd7: count2keep = 8'b01111111;\n        4'd8: count2keep = 8'b11111111;\n    endcase\nendfunction\n\nalways @* begin\n    shift_ip_payload_tdata[31:0] = save_ip_payload_tdata_reg[63:32];\n    shift_ip_payload_tkeep[3:0] = save_ip_payload_tkeep_reg[7:4];\n    shift_ip_payload_extra_cycle = save_ip_payload_tlast_reg & (save_ip_payload_tkeep_reg[7:4] != 0);\n\n    if (shift_ip_payload_extra_cycle) begin\n        shift_ip_payload_tdata[63:32] = 0;\n        shift_ip_payload_tkeep[7:4] = 0;\n        shift_ip_payload_tvalid = 1;\n        shift_ip_payload_tlast = save_ip_payload_tlast_reg;\n        shift_ip_payload_tuser = save_ip_payload_tuser_reg;\n        shift_ip_payload_input_tready = flush_save;\n    end else begin\n        shift_ip_payload_tdata[63:32] = input_ip_payload_tdata[31:0];\n        shift_ip_payload_tkeep[7:4] = input_ip_payload_tkeep[3:0];\n        shift_ip_payload_tvalid = input_ip_payload_tvalid;\n        shift_ip_payload_tlast = (input_ip_payload_tlast & (input_ip_payload_tkeep[7:4] == 0));\n        shift_ip_payload_tuser = (input_ip_payload_tuser & (input_ip_payload_tkeep[7:4] == 0));\n        shift_ip_payload_input_tready = ~(input_ip_payload_tlast & input_ip_payload_tvalid & transfer_in_save) & ~save_ip_payload_tlast_reg;\n    end\nend\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    input_ip_hdr_ready_next = 0;\n"]], "Diff Content": {"Delete": [[261, "        shift_eth_payload_tdata[63:32] = 0;\n"], [262, "        shift_eth_payload_tkeep[7:4] = 0;\n"], [263, "        shift_eth_payload_tvalid = 1;\n"]], "Add": [[263, "        shift_eth_payload_tdata[63:32] = 32'd0;\n"], [263, "        shift_eth_payload_tkeep[7:4] = 4'd0;\n"], [263, "        shift_eth_payload_tvalid = 1'b1;\n"]]}}