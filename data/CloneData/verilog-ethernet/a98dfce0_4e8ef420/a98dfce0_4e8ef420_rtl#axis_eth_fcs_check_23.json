{"Source Block": ["verilog-ethernet/rtl/axis_eth_fcs_check.v@202:258@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        \n        frame_ptr_reg <= 0;\n        \n        input_axis_tready_reg <= 0;\n\n        busy_reg <= 0;\n        error_bad_fcs_reg <= 0;\n\n        crc_state <= 32'hFFFFFFFF;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        input_axis_tready_reg <= input_axis_tready_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n        error_bad_fcs_reg <= error_bad_fcs_next;\n\n        // datapath\n        if (reset_crc) begin\n            crc_state <= 32'hFFFFFFFF;\n        end else if (update_crc) begin\n            crc_state <= crc_next;\n        end\n\n        if (shift_reset) begin\n            input_axis_tvalid_d0 <= 0;\n            input_axis_tvalid_d1 <= 0;\n            input_axis_tvalid_d2 <= 0;\n            input_axis_tvalid_d3 <= 0;\n        end else if (shift_in) begin\n            input_axis_tdata_d0 <= input_axis_tdata;\n            input_axis_tdata_d1 <= input_axis_tdata_d0;\n            input_axis_tdata_d2 <= input_axis_tdata_d1;\n            input_axis_tdata_d3 <= input_axis_tdata_d2;\n\n            input_axis_tvalid_d0 <= input_axis_tvalid;\n            input_axis_tvalid_d1 <= input_axis_tvalid_d0;\n            input_axis_tvalid_d2 <= input_axis_tvalid_d1;\n            input_axis_tvalid_d3 <= input_axis_tvalid_d2;\n        end\n    end\nend\n\n// output datapath logic\nreg [7:0]  output_axis_tdata_reg = 0;\nreg        output_axis_tvalid_reg = 0;\nreg        output_axis_tlast_reg = 0;\n"], "Clone Blocks": [], "Diff Content": {"Delete": [[211, "        frame_ptr_reg <= 0;\n"], [213, "        input_axis_tready_reg <= 0;\n"], [215, "        busy_reg <= 0;\n"], [216, "        error_bad_fcs_reg <= 0;\n"], [222, "        frame_ptr_reg <= frame_ptr_next;\n"], [237, "            input_axis_tvalid_d0 <= 0;\n"], [238, "            input_axis_tvalid_d1 <= 0;\n"], [239, "            input_axis_tvalid_d2 <= 0;\n"], [240, "            input_axis_tvalid_d3 <= 0;\n"], [242, "            input_axis_tdata_d0 <= input_axis_tdata;\n"], [243, "            input_axis_tdata_d1 <= input_axis_tdata_d0;\n"], [244, "            input_axis_tdata_d2 <= input_axis_tdata_d1;\n"], [245, "            input_axis_tdata_d3 <= input_axis_tdata_d2;\n"]], "Add": [[216, "        input_axis_tready_reg <= 1'b0;\n"], [216, "        busy_reg <= 1'b0;\n"], [216, "        error_bad_fcs_reg <= 1'b0;\n"], [216, "        input_axis_tvalid_d0 <= 1'b0;\n"], [216, "        input_axis_tvalid_d1 <= 1'b0;\n"], [216, "        input_axis_tvalid_d2 <= 1'b0;\n"], [216, "        input_axis_tvalid_d3 <= 1'b0;\n"], [240, "            input_axis_tvalid_d0 <= 1'b0;\n"], [240, "            input_axis_tvalid_d1 <= 1'b0;\n"], [240, "            input_axis_tvalid_d2 <= 1'b0;\n"], [240, "            input_axis_tvalid_d3 <= 1'b0;\n"], [252, "    if (shift_in) begin\n"], [252, "        input_axis_tdata_d0 <= input_axis_tdata;\n"], [252, "        input_axis_tdata_d1 <= input_axis_tdata_d0;\n"], [252, "        input_axis_tdata_d2 <= input_axis_tdata_d1;\n"], [252, "        input_axis_tdata_d3 <= input_axis_tdata_d2;\n"], [252, "    end\n"]]}}