{"Source Block": ["verilog-ethernet/rtl/eth_axis_rx_64.v@349:359@HdlStmAssign", "\nassign output_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_eth_payload_tvalid = output_eth_payload_tvalid_reg;\nassign output_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_eth_payload_tuser = output_eth_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_eth_payload_tdata_reg <= 0;\n        output_eth_payload_tkeep_reg <= 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/udp_ip_tx_64.v@501:511", "\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/eth_mux_64_2.v@255:265", "reg        temp_eth_payload_tvalid_reg = 0;\nreg        temp_eth_payload_tlast_reg = 0;\nreg        temp_eth_payload_tuser_reg = 0;\n\nassign output_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_eth_payload_tvalid = output_eth_payload_tvalid_reg;\nassign output_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_eth_payload_tuser = output_eth_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\n"], ["verilog-ethernet/rtl/eth_mux_64_4.v@331:341", "reg        temp_eth_payload_tvalid_reg = 0;\nreg        temp_eth_payload_tlast_reg = 0;\nreg        temp_eth_payload_tuser_reg = 0;\n\nassign output_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_eth_payload_tvalid = output_eth_payload_tvalid_reg;\nassign output_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_eth_payload_tuser = output_eth_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\n"], ["verilog-ethernet/rtl/arp_eth_tx_64.v@308:318", "\nassign output_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_eth_payload_tvalid = output_eth_payload_tvalid_reg;\nassign output_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_eth_payload_tuser = output_eth_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_eth_payload_tdata_reg <= 0;\n        output_eth_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_eth_tx_64.v@581:591", "\nassign output_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_eth_payload_tvalid = output_eth_payload_tvalid_reg;\nassign output_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_eth_payload_tuser = output_eth_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_eth_payload_tdata_reg <= 0;\n        output_eth_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_eth_rx_64.v@631:641", "\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tkeep_reg <= 0;\n"]], "Diff Content": {"Delete": [], "Add": [[354, "assign output_eth_payload_tready_int_early = output_eth_payload_tready | (~temp_eth_payload_tvalid_reg & (~output_eth_payload_tvalid_reg | ~output_eth_payload_tvalid_int));\n"], [354, "always @* begin\n"], [354, "    output_eth_payload_tvalid_next = output_eth_payload_tvalid_reg;\n"], [354, "    temp_eth_payload_tvalid_next = temp_eth_payload_tvalid_reg;\n"], [354, "    store_eth_payload_int_to_output = 1'b0;\n"], [354, "    store_eth_payload_int_to_temp = 1'b0;\n"], [354, "    store_eth_payload_temp_to_output = 1'b0;\n"], [354, "    if (output_eth_payload_tready_int_reg) begin\n"], [354, "        if (output_eth_payload_tready | ~output_eth_payload_tvalid_reg) begin\n"], [354, "            output_eth_payload_tvalid_next = output_eth_payload_tvalid_int;\n"], [354, "            store_eth_payload_int_to_output = 1'b1;\n"], [354, "        end else begin\n"], [354, "            temp_eth_payload_tvalid_next = output_eth_payload_tvalid_int;\n"], [354, "            store_eth_payload_int_to_temp = 1'b1;\n"], [354, "        end\n"], [354, "    end else if (output_eth_payload_tready) begin\n"], [354, "        output_eth_payload_tvalid_next = temp_eth_payload_tvalid_reg;\n"], [354, "        temp_eth_payload_tvalid_next = 1'b0;\n"], [354, "        store_eth_payload_temp_to_output = 1'b1;\n"], [354, "    end\n"], [354, "end\n"]]}}