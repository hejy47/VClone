{"Source Block": ["verilog-ethernet/rtl/ip_eth_rx_64.v@500:619@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        hdr_sum_reg <= 0;\n        check_hdr_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        save_eth_payload_tdata_reg <= 0;\n        save_eth_payload_tkeep_reg <= 0;\n        save_eth_payload_tlast_reg <= 0;\n        save_eth_payload_tuser_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n        error_invalid_checksum_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        hdr_sum_reg <= hdr_sum_next;\n        check_hdr_reg <= check_hdr_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n        error_invalid_checksum_reg <= error_invalid_checksum_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n            last_word_keep_reg <= output_ip_payload_tkeep_int;\n        end\n\n        if (store_hdr_word_0) begin\n            {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata[ 7: 0];\n            {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata[15: 8];\n            output_ip_length_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n            output_ip_identification_reg[15: 8] <= input_eth_payload_tdata[39:32];\n            output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata[47:40];\n            {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata[55:48];\n            output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata[63:56];\n        end\n\n        if (store_hdr_word_1) begin\n            output_ip_ttl_reg <= input_eth_payload_tdata[ 7: 0];\n            output_ip_protocol_reg <= input_eth_payload_tdata[15: 8];\n            output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n            output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata[39:32];\n            output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata[47:40];\n            output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata[55:48];\n            output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n        end\n\n        if (store_hdr_word_2) begin\n            output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata[ 7: 0];\n            output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata[15: 8];\n            output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n        end\n\n        if (flush_save) begin\n            save_eth_payload_tdata_reg <= 0;\n            save_eth_payload_tkeep_reg <= 0;\n            save_eth_payload_tlast_reg <= 0;\n            save_eth_payload_tuser_reg <= 0;\n        end else if (transfer_in_save) begin\n            save_eth_payload_tdata_reg <= input_eth_payload_tdata;\n            save_eth_payload_tkeep_reg <= input_eth_payload_tkeep;\n            save_eth_payload_tlast_reg <= input_eth_payload_tlast;\n            save_eth_payload_tuser_reg <= input_eth_payload_tuser;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/ip_eth_rx.v@423:514", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        hdr_sum_reg <= 0;\n        last_word_data_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n        error_invalid_checksum_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        hdr_sum_reg <= hdr_sum_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n        error_invalid_checksum_reg <= error_invalid_checksum_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n        end\n\n        if (store_ip_version_ihl) {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata;\n        if (store_ip_dscp_ecn) {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata;\n        if (store_ip_length_0) output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_length_1) output_ip_length_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_identification_0) output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_identification_1) output_ip_identification_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_flags_fragment_offset_0) output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata;\n        if (store_ip_flags_fragment_offset_1) {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata;\n        if (store_ip_ttl) output_ip_ttl_reg <= input_eth_payload_tdata;\n        if (store_ip_protocol) output_ip_protocol_reg <= input_eth_payload_tdata;\n        if (store_ip_header_checksum_0) output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_header_checksum_1) output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_0) output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_1) output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_2) output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_3) output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_0) output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_1) output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_2) output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_3) output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"]], "Diff Content": {"Delete": [[508, "        frame_ptr_reg <= 0;\n"], [509, "        hdr_sum_reg <= 0;\n"], [510, "        check_hdr_reg <= 0;\n"], [511, "        last_word_data_reg <= 0;\n"], [512, "        last_word_keep_reg <= 0;\n"], [513, "        input_eth_hdr_ready_reg <= 0;\n"], [514, "        input_eth_payload_tready_reg <= 0;\n"], [515, "        output_ip_hdr_valid_reg <= 0;\n"], [516, "        output_eth_dest_mac_reg <= 0;\n"], [517, "        output_eth_src_mac_reg <= 0;\n"], [518, "        output_eth_type_reg <= 0;\n"], [519, "        output_ip_version_reg <= 0;\n"], [520, "        output_ip_ihl_reg <= 0;\n"], [521, "        output_ip_dscp_reg <= 0;\n"], [522, "        output_ip_ecn_reg <= 0;\n"], [523, "        output_ip_length_reg <= 0;\n"], [524, "        output_ip_identification_reg <= 0;\n"], [525, "        output_ip_flags_reg <= 0;\n"], [526, "        output_ip_fragment_offset_reg <= 0;\n"], [527, "        output_ip_ttl_reg <= 0;\n"], [528, "        output_ip_protocol_reg <= 0;\n"], [529, "        output_ip_header_checksum_reg <= 0;\n"], [530, "        output_ip_source_ip_reg <= 0;\n"], [531, "        output_ip_dest_ip_reg <= 0;\n"], [532, "        save_eth_payload_tdata_reg <= 0;\n"], [533, "        save_eth_payload_tkeep_reg <= 0;\n"], [534, "        save_eth_payload_tlast_reg <= 0;\n"], [535, "        save_eth_payload_tuser_reg <= 0;\n"], [536, "        busy_reg <= 0;\n"], [537, "        error_header_early_termination_reg <= 0;\n"], [538, "        error_payload_early_termination_reg <= 0;\n"], [539, "        error_invalid_header_reg <= 0;\n"], [540, "        error_invalid_checksum_reg <= 0;\n"], [562, "        if (store_eth_hdr) begin\n"], [563, "            output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [564, "            output_eth_src_mac_reg <= input_eth_src_mac;\n"], [565, "            output_eth_type_reg <= input_eth_type;\n"], [568, "        if (store_last_word) begin\n"], [569, "            last_word_data_reg <= output_ip_payload_tdata_int;\n"], [570, "            last_word_keep_reg <= output_ip_payload_tkeep_int;\n"], [571, "        end\n"], [573, "        if (store_hdr_word_0) begin\n"], [574, "            {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata[ 7: 0];\n"], [575, "            {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata[15: 8];\n"], [576, "            output_ip_length_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [577, "            output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [578, "            output_ip_identification_reg[15: 8] <= input_eth_payload_tdata[39:32];\n"], [579, "            output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata[47:40];\n"], [580, "            {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata[55:48];\n"], [581, "            output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata[63:56];\n"], [582, "        end\n"], [584, "        if (store_hdr_word_1) begin\n"], [585, "            output_ip_ttl_reg <= input_eth_payload_tdata[ 7: 0];\n"], [586, "            output_ip_protocol_reg <= input_eth_payload_tdata[15: 8];\n"], [587, "            output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [588, "            output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [589, "            output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata[39:32];\n"], [590, "            output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata[47:40];\n"], [591, "            output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata[55:48];\n"], [592, "            output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n"], [593, "        end\n"], [595, "        if (store_hdr_word_2) begin\n"], [596, "            output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata[ 7: 0];\n"], [597, "            output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata[15: 8];\n"], [598, "            output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [599, "            output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [600, "        end\n"], [602, "        if (flush_save) begin\n"], [603, "            save_eth_payload_tdata_reg <= 0;\n"], [604, "            save_eth_payload_tkeep_reg <= 0;\n"], [605, "            save_eth_payload_tlast_reg <= 0;\n"], [606, "            save_eth_payload_tuser_reg <= 0;\n"], [607, "        end else if (transfer_in_save) begin\n"], [608, "            save_eth_payload_tdata_reg <= input_eth_payload_tdata;\n"], [609, "            save_eth_payload_tkeep_reg <= input_eth_payload_tkeep;\n"], [610, "            save_eth_payload_tlast_reg <= input_eth_payload_tlast;\n"], [611, "            save_eth_payload_tuser_reg <= input_eth_payload_tuser;\n"], [612, "        end\n"]], "Add": [[540, "        frame_ptr_reg <= 16'd0;\n"], [540, "        hdr_sum_reg <= 16'd0;\n"], [540, "        check_hdr_reg <= 1'b0;\n"], [540, "        input_eth_hdr_ready_reg <= 1'b0;\n"], [540, "        input_eth_payload_tready_reg <= 1'b0;\n"], [540, "        output_ip_hdr_valid_reg <= 1'b0;\n"], [540, "        save_eth_payload_tlast_reg <= 1'b0;\n"], [540, "        busy_reg <= 1'b0;\n"], [540, "        error_header_early_termination_reg <= 1'b0;\n"], [540, "        error_payload_early_termination_reg <= 1'b0;\n"], [540, "        error_invalid_header_reg <= 1'b0;\n"], [540, "        error_invalid_checksum_reg <= 1'b0;\n"], [565, "        if (flush_save) begin\n"], [565, "            save_eth_payload_tlast_reg <= 1'b0;\n"], [565, "        end else if (transfer_in_save) begin\n"], [565, "            save_eth_payload_tlast_reg <= input_eth_payload_tlast;\n"], [566, "    end\n"], [571, "    if (store_eth_hdr) begin\n"], [571, "        output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [571, "        output_eth_src_mac_reg <= input_eth_src_mac;\n"], [571, "        output_eth_type_reg <= input_eth_type;\n"], [571, "    end\n"], [582, "    if (store_last_word) begin\n"], [582, "        last_word_data_reg <= output_ip_payload_tdata_int;\n"], [582, "        last_word_keep_reg <= output_ip_payload_tkeep_int;\n"], [582, "    end\n"], [593, "    if (store_hdr_word_0) begin\n"], [593, "        {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata[ 7: 0];\n"], [593, "        {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata[15: 8];\n"], [593, "        output_ip_length_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [593, "        output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [593, "        output_ip_identification_reg[15: 8] <= input_eth_payload_tdata[39:32];\n"], [593, "        output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata[47:40];\n"], [593, "        {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata[55:48];\n"], [593, "        output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata[63:56];\n"], [593, "    end\n"], [600, "    if (store_hdr_word_1) begin\n"], [600, "        output_ip_ttl_reg <= input_eth_payload_tdata[ 7: 0];\n"], [600, "        output_ip_protocol_reg <= input_eth_payload_tdata[15: 8];\n"], [600, "        output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [600, "        output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [600, "        output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata[39:32];\n"], [600, "        output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata[47:40];\n"], [600, "        output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata[55:48];\n"], [600, "        output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n"], [600, "    end\n"], [612, "    if (store_hdr_word_2) begin\n"], [612, "        output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata[ 7: 0];\n"], [612, "        output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata[15: 8];\n"], [612, "        output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata[23:16];\n"], [612, "        output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n"], [612, "    end\n"], [612, "    if (transfer_in_save) begin\n"], [612, "        save_eth_payload_tdata_reg <= input_eth_payload_tdata;\n"], [612, "        save_eth_payload_tkeep_reg <= input_eth_payload_tkeep;\n"], [612, "        save_eth_payload_tuser_reg <= input_eth_payload_tuser;\n"]]}}