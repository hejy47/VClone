Source Block: verilog-ethernet/rtl/eth_mac_1g_fifo.v@103:113@HdlIdDef

// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];

Diff Content:
- 108 reg [1:0] rx_sync_reg_1 = 0;

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@104:114
wire        rx_fifo_axis_tlast;
wire        rx_fifo_axis_tuser;

// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

Clone Blocks 2:
verilog-ethernet/rtl/eth_mac_1g_fifo.v@104:114
// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

Clone Blocks 3:
verilog-ethernet/rtl/eth_mac_1g_fifo.v@106:116
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

always @(posedge rx_clk or posedge rx_rst) begin

Clone Blocks 4:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@112:122
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

always @(posedge rx_clk or posedge rx_rst) begin
    if (rx_rst) begin
        rx_sync_reg_1 <= 0;
    end else begin

Clone Blocks 5:
verilog-ethernet/rtl/eth_mac_1g_fifo.v@101:111
wire        rx_fifo_axis_tlast;
wire        rx_fifo_axis_tuser;

// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

Clone Blocks 6:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@107:117
// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

Clone Blocks 7:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@108:118
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];


Clone Blocks 8:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@106:116

// synchronize MAC status signals into logic clock domain
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];

Clone Blocks 9:
verilog-ethernet/rtl/eth_mac_1g_fifo.v@109:119
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

always @(posedge rx_clk or posedge rx_rst) begin
    if (rx_rst) begin
        rx_sync_reg_1 <= 0;
    end else begin

Clone Blocks 10:
verilog-ethernet/rtl/eth_mac_1g_fifo.v@105:115
wire rx_error_bad_frame_int;
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];


Clone Blocks 11:
verilog-ethernet/rtl/eth_mac_10g_fifo.v@109:119
wire rx_error_bad_fcs_int;

reg [1:0] rx_sync_reg_1 = 0;
reg [1:0] rx_sync_reg_2 = 0;
reg [1:0] rx_sync_reg_3 = 0;
reg [1:0] rx_sync_reg_4 = 0;

assign rx_error_bad_frame = rx_sync_reg_3[0] ^ rx_sync_reg_4[0];
assign rx_error_bad_fcs = rx_sync_reg_3[1] ^ rx_sync_reg_4[1];

always @(posedge rx_clk or posedge rx_rst) begin

