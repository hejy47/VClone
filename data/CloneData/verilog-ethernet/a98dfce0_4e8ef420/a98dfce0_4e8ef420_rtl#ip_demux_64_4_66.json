{"Source Block": ["verilog-ethernet/rtl/ip_demux_64_4.v@482:492@HdlStmAssign", "assign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tkeep_reg <= 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/ip_mux_4.v@530:540", "assign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_eth_rx.v@522:532", "// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_demux_4.v@469:479", "assign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_0_ip_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx.v@439:449", "\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n"], ["verilog-ethernet/rtl/ip_mux_2.v@406:416", "assign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_demux_64_4.v@479:489", "\nassign output_3_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_3_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_eth_rx_64.v@628:638", "\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_eth_rx.v@520:530", "reg       temp_ip_payload_tuser_reg = 0;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@500:510", "assign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_demux_64_4.v@478:488", "assign output_2_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nassign output_3_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_3_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@499:509", "// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n"], ["verilog-ethernet/rtl/ip_mux_64_2.v@417:427", "assign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_demux_4.v@465:475", "assign output_2_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_2_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nassign output_3_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\n"], ["verilog-ethernet/rtl/eth_demux_64_4.v@300:310", "assign output_3_eth_payload_tvalid = output_3_eth_payload_tvalid_reg;\nassign output_3_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_3_eth_payload_tuser = output_eth_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_eth_payload_tready_int_early = current_output_tready | (~temp_eth_payload_tvalid_reg & ~current_output_tvalid) | (~temp_eth_payload_tvalid_reg & ~output_eth_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_eth_payload_tdata_reg <= 0;\n        output_eth_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_mux_64_4.v@542:552", "\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/udp_ip_tx.v@440:450", "// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_eth_rx_64.v@630:640", "assign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n"], ["verilog-ethernet/rtl/eth_demux_4.v@287:297", "assign output_3_eth_payload_tvalid = output_3_eth_payload_tvalid_reg;\nassign output_3_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_3_eth_payload_tuser = output_eth_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_eth_payload_tready_int_early = current_output_tready | (~temp_eth_payload_tvalid_reg & ~current_output_tvalid) | (~temp_eth_payload_tvalid_reg & ~output_eth_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_eth_payload_tdata_reg <= 0;\n        output_0_eth_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_mux_64_2.v@414:424", "\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_demux_64_4.v@477:487", "assign output_2_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_2_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nassign output_3_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_3_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n"], ["verilog-ethernet/rtl/udp_demux_64_4.v@535:545", "\nassign output_3_udp_payload_tdata = output_udp_payload_tdata_reg;\nassign output_3_udp_payload_tkeep = output_udp_payload_tkeep_reg;\nassign output_3_udp_payload_tvalid = output_3_udp_payload_tvalid_reg;\nassign output_3_udp_payload_tlast = output_udp_payload_tlast_reg;\nassign output_3_udp_payload_tuser = output_udp_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_udp_payload_tready_int_early = current_output_tready | (~temp_udp_payload_tvalid_reg & ~current_output_tvalid) | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/udp_ip_tx.v@438:448", "reg       temp_ip_payload_tuser_reg = 0;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_eth_rx_64.v@629:639", "// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n"], ["verilog-ethernet/rtl/ip_mux_2.v@403:413", "reg       temp_ip_payload_tuser_reg = 0;\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_mux_4.v@527:537", "reg       temp_ip_payload_tuser_reg = 0;\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_demux_4.v@466:476", "assign output_2_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nassign output_3_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_3_ip_payload_tvalid = output_3_ip_payload_tvalid_reg;\nassign output_3_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_3_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/udp_demux_64_4.v@538:548", "assign output_3_udp_payload_tvalid = output_3_udp_payload_tvalid_reg;\nassign output_3_udp_payload_tlast = output_udp_payload_tlast_reg;\nassign output_3_udp_payload_tuser = output_udp_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_udp_payload_tready_int_early = current_output_tready | (~temp_udp_payload_tvalid_reg & ~current_output_tvalid) | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_udp_payload_tdata_reg <= 0;\n        output_udp_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/ip_eth_rx.v@523:533", "assign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx.v@441:451", "assign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/udp_mux_4.v@594:604", "assign output_udp_payload_tvalid = output_udp_payload_tvalid_reg;\nassign output_udp_payload_tlast = output_udp_payload_tlast_reg;\nassign output_udp_payload_tuser = output_udp_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_udp_payload_tready_int_early = output_udp_payload_tready | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_reg) | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_udp_payload_tdata_reg <= 0;\n        output_udp_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/eth_demux_64_4.v@297:307", "\nassign output_3_eth_payload_tdata = output_eth_payload_tdata_reg;\nassign output_3_eth_payload_tkeep = output_eth_payload_tkeep_reg;\nassign output_3_eth_payload_tvalid = output_3_eth_payload_tvalid_reg;\nassign output_3_eth_payload_tlast = output_eth_payload_tlast_reg;\nassign output_3_eth_payload_tuser = output_eth_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_eth_payload_tready_int_early = current_output_tready | (~temp_eth_payload_tvalid_reg & ~current_output_tvalid) | (~temp_eth_payload_tvalid_reg & ~output_eth_payload_tvalid_int);\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/udp_demux_4.v@525:535", "assign output_3_udp_payload_tvalid = output_3_udp_payload_tvalid_reg;\nassign output_3_udp_payload_tlast = output_udp_payload_tlast_reg;\nassign output_3_udp_payload_tuser = output_udp_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_udp_payload_tready_int_early = current_output_tready | (~temp_udp_payload_tvalid_reg & ~current_output_tvalid) | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_udp_payload_tdata_reg <= 0;\n        output_0_udp_payload_tvalid_reg <= 0;\n"], ["verilog-ethernet/rtl/udp_ip_tx_64.v@498:508", "\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tkeep = output_ip_payload_tkeep_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n"], ["verilog-ethernet/rtl/ip_eth_rx.v@521:531", "\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nassign output_ip_payload_tdata = output_ip_payload_tdata_reg;\nassign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\nalways @(posedge clk) begin\n    if (rst) begin\n"], ["verilog-ethernet/rtl/ip_mux_64_4.v@545:555", "assign output_ip_payload_tvalid = output_ip_payload_tvalid_reg;\nassign output_ip_payload_tlast = output_ip_payload_tlast_reg;\nassign output_ip_payload_tuser = output_ip_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_ip_payload_tready_int_early = output_ip_payload_tready | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_reg) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_ip_payload_tdata_reg <= 0;\n        output_ip_payload_tkeep_reg <= 0;\n"], ["verilog-ethernet/rtl/udp_mux_64_4.v@609:619", "assign output_udp_payload_tvalid = output_udp_payload_tvalid_reg;\nassign output_udp_payload_tlast = output_udp_payload_tlast_reg;\nassign output_udp_payload_tuser = output_udp_payload_tuser_reg;\n\n// enable ready input next cycle if output is ready or if there is space in both output registers or if there is space in the temp register that will not be filled next cycle\nassign output_udp_payload_tready_int_early = output_udp_payload_tready | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_reg) | (~temp_udp_payload_tvalid_reg & ~output_udp_payload_tvalid_int);\n\nalways @(posedge clk) begin\n    if (rst) begin\n        output_udp_payload_tdata_reg <= 0;\n        output_udp_payload_tkeep_reg <= 0;\n"]], "Diff Content": {"Delete": [[487, "assign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & ~current_output_tvalid) | (~temp_ip_payload_tvalid_reg & ~output_ip_payload_tvalid_int);\n"]], "Add": [[487, "assign output_ip_payload_tready_int_early = current_output_tready | (~temp_ip_payload_tvalid_reg & (~current_output_tvalid | ~output_ip_payload_tvalid_int));\n"], [487, "always @* begin\n"], [487, "    output_0_ip_payload_tvalid_next = output_0_ip_payload_tvalid_reg;\n"], [487, "    output_1_ip_payload_tvalid_next = output_1_ip_payload_tvalid_reg;\n"], [487, "    output_2_ip_payload_tvalid_next = output_2_ip_payload_tvalid_reg;\n"], [487, "    output_3_ip_payload_tvalid_next = output_3_ip_payload_tvalid_reg;\n"], [487, "    temp_ip_payload_tvalid_next = temp_ip_payload_tvalid_reg;\n"], [487, "    store_ip_payload_int_to_output = 1'b0;\n"], [487, "    store_ip_payload_int_to_temp = 1'b0;\n"], [487, "    store_ip_payload_temp_to_output = 1'b0;\n"], [487, "    if (output_ip_payload_tready_int_reg) begin\n"], [487, "        if (current_output_tready | ~current_output_tvalid) begin\n"], [487, "            output_0_ip_payload_tvalid_next = output_ip_payload_tvalid_int & (select_reg == 2'd0);\n"], [487, "            output_1_ip_payload_tvalid_next = output_ip_payload_tvalid_int & (select_reg == 2'd1);\n"], [487, "            output_2_ip_payload_tvalid_next = output_ip_payload_tvalid_int & (select_reg == 2'd2);\n"], [487, "            output_3_ip_payload_tvalid_next = output_ip_payload_tvalid_int & (select_reg == 2'd3);\n"], [487, "            store_ip_payload_int_to_output = 1'b1;\n"], [487, "        end else begin\n"], [487, "            temp_ip_payload_tvalid_next = output_ip_payload_tvalid_int;\n"], [487, "            store_ip_payload_int_to_temp = 1'b1;\n"], [487, "        end\n"], [487, "    end else if (current_output_tready) begin\n"], [487, "        output_0_ip_payload_tvalid_next = temp_ip_payload_tvalid_reg & (select_reg == 2'd0);\n"], [487, "        output_1_ip_payload_tvalid_next = temp_ip_payload_tvalid_reg & (select_reg == 2'd1);\n"], [487, "        output_2_ip_payload_tvalid_next = temp_ip_payload_tvalid_reg & (select_reg == 2'd2);\n"], [487, "        output_3_ip_payload_tvalid_next = temp_ip_payload_tvalid_reg & (select_reg == 2'd3);\n"], [487, "        temp_ip_payload_tvalid_next = 1'b0;\n"], [487, "        store_ip_payload_temp_to_output = 1'b1;\n"], [487, "    end\n"], [487, "end\n"]]}}