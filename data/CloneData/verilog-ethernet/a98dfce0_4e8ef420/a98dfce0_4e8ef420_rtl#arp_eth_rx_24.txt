Source Block: verilog-ethernet/rtl/arp_eth_rx.v@155:165@HdlIdDef
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Diff Content:
- 160 reg error_invalid_header_reg = 0, error_invalid_header_next;
+ 160 reg [7:0] frame_ptr_reg = 8'd0, frame_ptr_next;
+ 160 reg input_eth_hdr_ready_reg = 1'b0, input_eth_hdr_ready_next;
+ 160 reg input_eth_payload_tready_reg = 1'b0, input_eth_payload_tready_next;
+ 160 reg output_frame_valid_reg = 1'b0, output_frame_valid_next;
+ 160 reg [47:0] output_eth_dest_mac_reg = 48'd0;
+ 160 reg [47:0] output_eth_src_mac_reg = 48'd0;
+ 160 reg [15:0] output_eth_type_reg = 16'd0;
+ 160 reg [15:0] output_arp_htype_reg = 16'd0;
+ 160 reg [15:0] output_arp_ptype_reg = 16'd0;
+ 160 reg [7:0]  output_arp_hlen_reg = 8'd0;
+ 160 reg [7:0]  output_arp_plen_reg = 8'd0;
+ 160 reg [15:0] output_arp_oper_reg = 16'd0;
+ 160 reg [47:0] output_arp_sha_reg = 48'd0;
+ 160 reg [31:0] output_arp_spa_reg = 32'd0;
+ 160 reg [47:0] output_arp_tha_reg = 48'd0;
+ 160 reg [31:0] output_arp_tpa_reg = 32'd0;
+ 160 reg busy_reg = 1'b0;
+ 160 reg error_header_early_termination_reg = 1'b0, error_header_early_termination_next;
+ 160 reg error_invalid_header_reg = 1'b0, error_invalid_header_next;

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/arp_eth_rx.v@153:163
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

Clone Blocks 2:
verilog-ethernet/rtl/arp_eth_rx_64.v@134:144

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;

Clone Blocks 3:
verilog-ethernet/rtl/arp_eth_rx_64.v@130:140
reg [47:0] output_arp_sha_reg = 0;
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

Clone Blocks 4:
verilog-ethernet/rtl/arp_eth_rx_64.v@135:145
reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;
assign output_eth_type = output_eth_type_reg;

Clone Blocks 5:
verilog-ethernet/rtl/arp_eth_rx.v@154:164
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 6:
verilog-ethernet/rtl/arp_eth_rx.v@157:167

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;

Clone Blocks 7:
verilog-ethernet/rtl/arp_eth_rx.v@154:164
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 8:
verilog-ethernet/rtl/arp_eth_rx_64.v@131:141
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 9:
verilog-ethernet/rtl/arp_eth_rx_64.v@132:142
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Clone Blocks 10:
verilog-ethernet/rtl/arp_eth_rx.v@155:165
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

Clone Blocks 11:
verilog-ethernet/rtl/arp_eth_rx_64.v@131:141
reg [31:0] output_arp_spa_reg = 0;
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;


Clone Blocks 12:
verilog-ethernet/rtl/arp_eth_rx.v@158:168
reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;
assign output_eth_dest_mac = output_eth_dest_mac_reg;
assign output_eth_src_mac = output_eth_src_mac_reg;
assign output_eth_type = output_eth_type_reg;

Clone Blocks 13:
verilog-ethernet/rtl/arp_eth_rx_64.v@132:142
reg [47:0] output_arp_tha_reg = 0;
reg [31:0] output_arp_tpa_reg = 0;

reg busy_reg = 0;
reg error_header_early_termination_reg = 0, error_header_early_termination_next;
reg error_invalid_header_reg = 0, error_invalid_header_next;

assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
assign input_eth_payload_tready = input_eth_payload_tready_reg;

assign output_frame_valid = output_frame_valid_reg;

