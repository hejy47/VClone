Source Block: verilog-ethernet/rtl/axis_eth_fcs_insert.v@72:82@HdlIdDef

// datapath control signals
reg reset_crc;
reg update_crc;

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

reg input_axis_tready_reg = 0, input_axis_tready_next;


Diff Content:
- 77 reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+ 77 reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;

Clone Blocks:
Clone Blocks 1:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@72:82

// datapath control signals
reg reset_crc;
reg update_crc;

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

reg input_axis_tready_reg = 0, input_axis_tready_next;


Clone Blocks 2:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@76:86

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

reg input_axis_tready_reg = 0, input_axis_tready_next;

reg [31:0] crc_state = 32'hFFFFFFFF;
wire [31:0] crc_next;

// internal datapath

Clone Blocks 3:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@76:86

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

reg input_axis_tready_reg = 0, input_axis_tready_next;

reg [31:0] crc_state = 32'hFFFFFFFF;
wire [31:0] crc_next;

// internal datapath

Clone Blocks 4:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@69:79
    STATE_FCS = 2'd3;

reg [1:0] state_reg = STATE_IDLE, state_next;

// datapath control signals
reg reset_crc;
reg update_crc;

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

Clone Blocks 5:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@74:84
reg reset_crc;
reg update_crc;

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;

reg input_axis_tready_reg = 0, input_axis_tready_next;

reg [31:0] crc_state = 32'hFFFFFFFF;
wire [31:0] crc_next;

Clone Blocks 6:
verilog-ethernet/rtl/axis_eth_fcs_insert.v@70:80

reg [1:0] state_reg = STATE_IDLE, state_next;

// datapath control signals
reg reset_crc;
reg update_crc;

reg [7:0] frame_ptr_reg = 0, frame_ptr_next;

reg busy_reg = 0;


