{"Source Block": ["verilog-ethernet/rtl/eth_mux_2.v@207:241@HdlStmProcess", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_eth_payload_tdata_reg = 0;\nreg       output_eth_payload_tvalid_reg = 0;\nreg       output_eth_payload_tlast_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/eth_demux_4.v@224:260", "    output_eth_payload_tvalid_int = input_eth_payload_tvalid & input_eth_payload_tready;\n    output_eth_payload_tlast_int = input_eth_payload_tlast;\n    output_eth_payload_tuser_int = input_eth_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_0_eth_hdr_valid_reg <= 0;\n        output_1_eth_hdr_valid_reg <= 0;\n        output_2_eth_hdr_valid_reg <= 0;\n        output_3_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n        output_0_eth_hdr_valid_reg <= output_0_eth_hdr_valid_next;\n        output_1_eth_hdr_valid_reg <= output_1_eth_hdr_valid_next;\n        output_2_eth_hdr_valid_reg <= output_2_eth_hdr_valid_next;\n        output_3_eth_hdr_valid_reg <= output_3_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_eth_payload_tdata_reg = 0;\nreg       output_0_eth_payload_tvalid_reg = 0;\nreg       output_1_eth_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/eth_mux_4.v@271:313", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_2_eth_hdr_ready_reg <= 0;\n        input_3_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        input_2_eth_payload_tready_reg <= 0;\n        input_3_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_2_eth_hdr_ready_reg <= input_2_eth_hdr_ready_next;\n        input_3_eth_hdr_ready_reg <= input_3_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        input_2_eth_payload_tready_reg <= input_2_eth_payload_tready_next;\n        input_3_eth_payload_tready_reg <= input_3_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_eth_payload_tdata_reg = 0;\nreg       output_eth_payload_tvalid_reg = 0;\nreg       output_eth_payload_tlast_reg = 0;\n"], ["verilog-ethernet/rtl/eth_mux_64_4.v@283:325", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_2_eth_hdr_ready_reg <= 0;\n        input_3_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        input_2_eth_payload_tready_reg <= 0;\n        input_3_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_2_eth_hdr_ready_reg <= input_2_eth_hdr_ready_next;\n        input_3_eth_hdr_ready_reg <= input_3_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        input_2_eth_payload_tready_reg <= input_2_eth_payload_tready_next;\n        input_3_eth_payload_tready_reg <= input_3_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_eth_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/eth_demux_64_4.v@231:267", "    output_eth_payload_tvalid_int = input_eth_payload_tvalid & input_eth_payload_tready;\n    output_eth_payload_tlast_int = input_eth_payload_tlast;\n    output_eth_payload_tuser_int = input_eth_payload_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_0_eth_hdr_valid_reg <= 0;\n        output_1_eth_hdr_valid_reg <= 0;\n        output_2_eth_hdr_valid_reg <= 0;\n        output_3_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n        output_0_eth_hdr_valid_reg <= output_0_eth_hdr_valid_next;\n        output_1_eth_hdr_valid_reg <= output_1_eth_hdr_valid_next;\n        output_2_eth_hdr_valid_reg <= output_2_eth_hdr_valid_next;\n        output_3_eth_hdr_valid_reg <= output_3_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_0_eth_payload_tvalid_reg = 0;\n"], ["verilog-ethernet/rtl/eth_mux_64_2.v@215:249", "    output_eth_payload_tvalid_int = current_input_tvalid & current_input_tready & frame_reg;\n    output_eth_payload_tlast_int = current_input_tlast;\n    output_eth_payload_tuser_int = current_input_tuser;\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        select_reg <= 0;\n        frame_reg <= 0;\n        input_0_eth_hdr_ready_reg <= 0;\n        input_1_eth_hdr_ready_reg <= 0;\n        input_0_eth_payload_tready_reg <= 0;\n        input_1_eth_payload_tready_reg <= 0;\n        output_eth_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n    end else begin\n        select_reg <= select_next;\n        frame_reg <= frame_next;\n        input_0_eth_hdr_ready_reg <= input_0_eth_hdr_ready_next;\n        input_1_eth_hdr_ready_reg <= input_1_eth_hdr_ready_next;\n        input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;\n        input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;\n        output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;\n        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n        output_eth_src_mac_reg <= output_eth_src_mac_next;\n        output_eth_type_reg <= output_eth_type_next;\n    end\nend\n\n// output datapath logic\nreg [63:0] output_eth_payload_tdata_reg = 0;\nreg [7:0]  output_eth_payload_tkeep_reg = 0;\nreg        output_eth_payload_tvalid_reg = 0;\n"]], "Diff Content": {"Delete": [[214, "        select_reg <= 0;\n"], [215, "        frame_reg <= 0;\n"], [216, "        input_0_eth_hdr_ready_reg <= 0;\n"], [217, "        input_1_eth_hdr_ready_reg <= 0;\n"], [218, "        input_0_eth_payload_tready_reg <= 0;\n"], [219, "        input_1_eth_payload_tready_reg <= 0;\n"], [220, "        output_eth_hdr_valid_reg <= 0;\n"], [221, "        output_eth_dest_mac_reg <= 0;\n"], [222, "        output_eth_src_mac_reg <= 0;\n"], [223, "        output_eth_type_reg <= 0;\n"], [232, "        output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [233, "        output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [234, "        output_eth_type_reg <= output_eth_type_next;\n"]], "Add": [[223, "        select_reg <= 1'd0;\n"], [223, "        frame_reg <= 1'b0;\n"], [223, "        input_0_eth_hdr_ready_reg <= 1'b0;\n"], [223, "        input_1_eth_hdr_ready_reg <= 1'b0;\n"], [223, "        input_0_eth_payload_tready_reg <= 1'b0;\n"], [223, "        input_1_eth_payload_tready_reg <= 1'b0;\n"], [223, "        output_eth_hdr_valid_reg <= 1'b0;\n"], [235, "    output_eth_dest_mac_reg <= output_eth_dest_mac_next;\n"], [235, "    output_eth_src_mac_reg <= output_eth_src_mac_next;\n"], [235, "    output_eth_type_reg <= output_eth_type_next;\n"]]}}