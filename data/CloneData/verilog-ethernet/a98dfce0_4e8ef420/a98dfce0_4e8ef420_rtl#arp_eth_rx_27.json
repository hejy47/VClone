{"Source Block": ["verilog-ethernet/rtl/arp_eth_rx.v@324:394@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_frame_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        output_frame_valid_reg <= output_frame_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_arp_htype_0) output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_htype_1) output_arp_htype_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_ptype_0) output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_ptype_1) output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_hlen) output_arp_hlen_reg <= input_eth_payload_tdata;\n        if (store_arp_plen) output_arp_plen_reg <= input_eth_payload_tdata;\n        if (store_arp_oper_0) output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_oper_1) output_arp_oper_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_sha_0) output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_sha_1) output_arp_sha_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_sha_2) output_arp_sha_reg[23:16] <= input_eth_payload_tdata;\n        if (store_arp_sha_3) output_arp_sha_reg[31:24] <= input_eth_payload_tdata;\n        if (store_arp_sha_4) output_arp_sha_reg[39:32] <= input_eth_payload_tdata;\n        if (store_arp_sha_5) output_arp_sha_reg[47:40] <= input_eth_payload_tdata;\n        if (store_arp_spa_0) output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_spa_1) output_arp_spa_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_spa_2) output_arp_spa_reg[23:16] <= input_eth_payload_tdata;\n        if (store_arp_spa_3) output_arp_spa_reg[31:24] <= input_eth_payload_tdata;\n        if (store_arp_tha_0) output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_tha_1) output_arp_tha_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_tha_2) output_arp_tha_reg[23:16] <= input_eth_payload_tdata;\n        if (store_arp_tha_3) output_arp_tha_reg[31:24] <= input_eth_payload_tdata;\n        if (store_arp_tha_4) output_arp_tha_reg[39:32] <= input_eth_payload_tdata;\n        if (store_arp_tha_5) output_arp_tha_reg[47:40] <= input_eth_payload_tdata;\n        if (store_arp_tpa_0) output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_arp_tpa_1) output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_arp_tpa_2) output_arp_tpa_reg[23:16] <= input_eth_payload_tdata;\n        if (store_arp_tpa_3) output_arp_tpa_reg[31:24] <= input_eth_payload_tdata;\n    end\nend\n\nendmodule\n"], "Clone Blocks": [["verilog-ethernet/rtl/arp_eth_rx_64.v@249:327", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_frame_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        output_frame_valid_reg <= output_frame_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_arp_hdr_word_0) begin\n            output_arp_htype_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];\n            output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];\n            output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n            output_arp_hlen_reg <= input_eth_payload_tdata[39:32];\n            output_arp_plen_reg <= input_eth_payload_tdata[47:40];\n            output_arp_oper_reg[15: 8] <= input_eth_payload_tdata[55:48];\n            output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n        end\n        if (store_arp_hdr_word_1) begin\n            output_arp_sha_reg[47:40] <= input_eth_payload_tdata[ 7: 0];\n            output_arp_sha_reg[39:32] <= input_eth_payload_tdata[15: 8];\n            output_arp_sha_reg[31:24] <= input_eth_payload_tdata[23:16];\n            output_arp_sha_reg[23:16] <= input_eth_payload_tdata[31:24];\n            output_arp_sha_reg[15: 8] <= input_eth_payload_tdata[39:32];\n            output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata[47:40];\n            output_arp_spa_reg[31:24] <= input_eth_payload_tdata[55:48];\n            output_arp_spa_reg[23:16] <= input_eth_payload_tdata[63:56];\n        end\n        if (store_arp_hdr_word_2) begin\n            output_arp_spa_reg[15: 8] <= input_eth_payload_tdata[ 7: 0];\n            output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata[15: 8];\n            output_arp_tha_reg[47:40] <= input_eth_payload_tdata[23:16];\n            output_arp_tha_reg[39:32] <= input_eth_payload_tdata[31:24];\n            output_arp_tha_reg[31:24] <= input_eth_payload_tdata[39:32];\n            output_arp_tha_reg[23:16] <= input_eth_payload_tdata[47:40];\n            output_arp_tha_reg[15: 8] <= input_eth_payload_tdata[55:48];\n            output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n        end\n        if (store_arp_hdr_word_3) begin\n            output_arp_tpa_reg[31:24] <= input_eth_payload_tdata[ 7: 0];\n            output_arp_tpa_reg[23:16] <= input_eth_payload_tdata[15: 8];\n            output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n        end\n    end\nend\n\nendmodule\n"]], "Diff Content": {"Delete": [[332, "        frame_ptr_reg <= 0;\n"], [333, "        input_eth_payload_tready_reg <= 0;\n"], [334, "        output_frame_valid_reg <= 0;\n"], [335, "        output_eth_dest_mac_reg <= 0;\n"], [336, "        output_eth_src_mac_reg <= 0;\n"], [337, "        output_eth_type_reg <= 0;\n"], [338, "        busy_reg <= 0;\n"], [339, "        error_header_early_termination_reg <= 0;\n"], [340, "        error_invalid_header_reg <= 0;\n"], [357, "        if (store_eth_hdr) begin\n"], [358, "            output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [359, "            output_eth_src_mac_reg <= input_eth_src_mac;\n"], [360, "            output_eth_type_reg <= input_eth_type;\n"], [361, "        end\n"], [363, "        if (store_arp_htype_0) output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [364, "        if (store_arp_htype_1) output_arp_htype_reg[15: 8] <= input_eth_payload_tdata;\n"], [365, "        if (store_arp_ptype_0) output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [366, "        if (store_arp_ptype_1) output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata;\n"], [367, "        if (store_arp_hlen) output_arp_hlen_reg <= input_eth_payload_tdata;\n"], [368, "        if (store_arp_plen) output_arp_plen_reg <= input_eth_payload_tdata;\n"], [369, "        if (store_arp_oper_0) output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [370, "        if (store_arp_oper_1) output_arp_oper_reg[15: 8] <= input_eth_payload_tdata;\n"], [371, "        if (store_arp_sha_0) output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [372, "        if (store_arp_sha_1) output_arp_sha_reg[15: 8] <= input_eth_payload_tdata;\n"], [373, "        if (store_arp_sha_2) output_arp_sha_reg[23:16] <= input_eth_payload_tdata;\n"], [374, "        if (store_arp_sha_3) output_arp_sha_reg[31:24] <= input_eth_payload_tdata;\n"], [375, "        if (store_arp_sha_4) output_arp_sha_reg[39:32] <= input_eth_payload_tdata;\n"], [376, "        if (store_arp_sha_5) output_arp_sha_reg[47:40] <= input_eth_payload_tdata;\n"], [377, "        if (store_arp_spa_0) output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [378, "        if (store_arp_spa_1) output_arp_spa_reg[15: 8] <= input_eth_payload_tdata;\n"], [379, "        if (store_arp_spa_2) output_arp_spa_reg[23:16] <= input_eth_payload_tdata;\n"], [380, "        if (store_arp_spa_3) output_arp_spa_reg[31:24] <= input_eth_payload_tdata;\n"], [381, "        if (store_arp_tha_0) output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [382, "        if (store_arp_tha_1) output_arp_tha_reg[15: 8] <= input_eth_payload_tdata;\n"], [383, "        if (store_arp_tha_2) output_arp_tha_reg[23:16] <= input_eth_payload_tdata;\n"], [384, "        if (store_arp_tha_3) output_arp_tha_reg[31:24] <= input_eth_payload_tdata;\n"], [385, "        if (store_arp_tha_4) output_arp_tha_reg[39:32] <= input_eth_payload_tdata;\n"], [386, "        if (store_arp_tha_5) output_arp_tha_reg[47:40] <= input_eth_payload_tdata;\n"], [387, "        if (store_arp_tpa_0) output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [388, "        if (store_arp_tpa_1) output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata;\n"], [389, "        if (store_arp_tpa_2) output_arp_tpa_reg[23:16] <= input_eth_payload_tdata;\n"], [390, "        if (store_arp_tpa_3) output_arp_tpa_reg[31:24] <= input_eth_payload_tdata;\n"]], "Add": [[340, "        frame_ptr_reg <= 8'd0;\n"], [340, "        input_eth_payload_tready_reg <= 1'b0;\n"], [340, "        output_frame_valid_reg <= 1'b0;\n"], [340, "        busy_reg <= 1'b0;\n"], [340, "        error_header_early_termination_reg <= 1'b0;\n"], [340, "        error_invalid_header_reg <= 1'b0;\n"], [354, "    end\n"], [390, "    if (store_eth_hdr) begin\n"], [390, "        output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [390, "        output_eth_src_mac_reg <= input_eth_src_mac;\n"], [390, "        output_eth_type_reg <= input_eth_type;\n"], [391, "    if (store_arp_htype_0) output_arp_htype_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_htype_1) output_arp_htype_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_ptype_0) output_arp_ptype_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_ptype_1) output_arp_ptype_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_hlen) output_arp_hlen_reg <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_plen) output_arp_plen_reg <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_oper_0) output_arp_oper_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_oper_1) output_arp_oper_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_0) output_arp_sha_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_1) output_arp_sha_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_2) output_arp_sha_reg[23:16] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_3) output_arp_sha_reg[31:24] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_4) output_arp_sha_reg[39:32] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_sha_5) output_arp_sha_reg[47:40] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_spa_0) output_arp_spa_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_spa_1) output_arp_spa_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_spa_2) output_arp_spa_reg[23:16] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_spa_3) output_arp_spa_reg[31:24] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_0) output_arp_tha_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_1) output_arp_tha_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_2) output_arp_tha_reg[23:16] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_3) output_arp_tha_reg[31:24] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_4) output_arp_tha_reg[39:32] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tha_5) output_arp_tha_reg[47:40] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tpa_0) output_arp_tpa_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tpa_1) output_arp_tpa_reg[15: 8] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tpa_2) output_arp_tpa_reg[23:16] <= input_eth_payload_tdata;\n"], [391, "    if (store_arp_tpa_3) output_arp_tpa_reg[31:24] <= input_eth_payload_tdata;\n"]]}}