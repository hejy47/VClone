{"Source Block": ["verilog-ethernet/rtl/ip_eth_rx.v@423:514@HdlStmProcess", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        hdr_sum_reg <= 0;\n        last_word_data_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n        error_invalid_checksum_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        hdr_sum_reg <= hdr_sum_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n        error_invalid_checksum_reg <= error_invalid_checksum_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n        end\n\n        if (store_ip_version_ihl) {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata;\n        if (store_ip_dscp_ecn) {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata;\n        if (store_ip_length_0) output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_length_1) output_ip_length_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_identification_0) output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_identification_1) output_ip_identification_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_flags_fragment_offset_0) output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata;\n        if (store_ip_flags_fragment_offset_1) {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata;\n        if (store_ip_ttl) output_ip_ttl_reg <= input_eth_payload_tdata;\n        if (store_ip_protocol) output_ip_protocol_reg <= input_eth_payload_tdata;\n        if (store_ip_header_checksum_0) output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_header_checksum_1) output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_0) output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_1) output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_2) output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata;\n        if (store_ip_source_ip_3) output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_0) output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_1) output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_2) output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata;\n        if (store_ip_dest_ip_3) output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata;\n    end\nend\n\n// output datapath logic\nreg [7:0] output_ip_payload_tdata_reg = 0;\nreg       output_ip_payload_tvalid_reg = 0;\nreg       output_ip_payload_tlast_reg = 0;\n"], "Clone Blocks": [["verilog-ethernet/rtl/ip_eth_rx_64.v@500:619", "            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        frame_ptr_reg <= 0;\n        hdr_sum_reg <= 0;\n        check_hdr_reg <= 0;\n        last_word_data_reg <= 0;\n        last_word_keep_reg <= 0;\n        input_eth_hdr_ready_reg <= 0;\n        input_eth_payload_tready_reg <= 0;\n        output_ip_hdr_valid_reg <= 0;\n        output_eth_dest_mac_reg <= 0;\n        output_eth_src_mac_reg <= 0;\n        output_eth_type_reg <= 0;\n        output_ip_version_reg <= 0;\n        output_ip_ihl_reg <= 0;\n        output_ip_dscp_reg <= 0;\n        output_ip_ecn_reg <= 0;\n        output_ip_length_reg <= 0;\n        output_ip_identification_reg <= 0;\n        output_ip_flags_reg <= 0;\n        output_ip_fragment_offset_reg <= 0;\n        output_ip_ttl_reg <= 0;\n        output_ip_protocol_reg <= 0;\n        output_ip_header_checksum_reg <= 0;\n        output_ip_source_ip_reg <= 0;\n        output_ip_dest_ip_reg <= 0;\n        save_eth_payload_tdata_reg <= 0;\n        save_eth_payload_tkeep_reg <= 0;\n        save_eth_payload_tlast_reg <= 0;\n        save_eth_payload_tuser_reg <= 0;\n        busy_reg <= 0;\n        error_header_early_termination_reg <= 0;\n        error_payload_early_termination_reg <= 0;\n        error_invalid_header_reg <= 0;\n        error_invalid_checksum_reg <= 0;\n    end else begin\n        state_reg <= state_next;\n\n        frame_ptr_reg <= frame_ptr_next;\n\n        hdr_sum_reg <= hdr_sum_next;\n        check_hdr_reg <= check_hdr_next;\n\n        input_eth_hdr_ready_reg <= input_eth_hdr_ready_next;\n        input_eth_payload_tready_reg <= input_eth_payload_tready_next;\n\n        output_ip_hdr_valid_reg <= output_ip_hdr_valid_next;\n\n        error_header_early_termination_reg <= error_header_early_termination_next;\n        error_payload_early_termination_reg <= error_payload_early_termination_next;\n        error_invalid_header_reg <= error_invalid_header_next;\n        error_invalid_checksum_reg <= error_invalid_checksum_next;\n\n        busy_reg <= state_next != STATE_IDLE;\n\n        // datapath\n        if (store_eth_hdr) begin\n            output_eth_dest_mac_reg <= input_eth_dest_mac;\n            output_eth_src_mac_reg <= input_eth_src_mac;\n            output_eth_type_reg <= input_eth_type;\n        end\n\n        if (store_last_word) begin\n            last_word_data_reg <= output_ip_payload_tdata_int;\n            last_word_keep_reg <= output_ip_payload_tkeep_int;\n        end\n\n        if (store_hdr_word_0) begin\n            {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata[ 7: 0];\n            {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata[15: 8];\n            output_ip_length_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n            output_ip_identification_reg[15: 8] <= input_eth_payload_tdata[39:32];\n            output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata[47:40];\n            {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata[55:48];\n            output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata[63:56];\n        end\n\n        if (store_hdr_word_1) begin\n            output_ip_ttl_reg <= input_eth_payload_tdata[ 7: 0];\n            output_ip_protocol_reg <= input_eth_payload_tdata[15: 8];\n            output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n            output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata[39:32];\n            output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata[47:40];\n            output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata[55:48];\n            output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata[63:56];\n        end\n\n        if (store_hdr_word_2) begin\n            output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata[ 7: 0];\n            output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata[15: 8];\n            output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata[23:16];\n            output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata[31:24];\n        end\n\n        if (flush_save) begin\n            save_eth_payload_tdata_reg <= 0;\n            save_eth_payload_tkeep_reg <= 0;\n            save_eth_payload_tlast_reg <= 0;\n            save_eth_payload_tuser_reg <= 0;\n        end else if (transfer_in_save) begin\n            save_eth_payload_tdata_reg <= input_eth_payload_tdata;\n            save_eth_payload_tkeep_reg <= input_eth_payload_tkeep;\n            save_eth_payload_tlast_reg <= input_eth_payload_tlast;\n            save_eth_payload_tuser_reg <= input_eth_payload_tuser;\n        end\n    end\nend\n\n// output datapath logic\nreg [63:0] output_ip_payload_tdata_reg = 0;\nreg [7:0]  output_ip_payload_tkeep_reg = 0;\nreg        output_ip_payload_tvalid_reg = 0;\n"]], "Diff Content": {"Delete": [[431, "        frame_ptr_reg <= 0;\n"], [432, "        hdr_sum_reg <= 0;\n"], [433, "        last_word_data_reg <= 0;\n"], [434, "        input_eth_hdr_ready_reg <= 0;\n"], [435, "        input_eth_payload_tready_reg <= 0;\n"], [436, "        output_ip_hdr_valid_reg <= 0;\n"], [437, "        output_eth_dest_mac_reg <= 0;\n"], [438, "        output_eth_src_mac_reg <= 0;\n"], [439, "        output_eth_type_reg <= 0;\n"], [440, "        output_ip_version_reg <= 0;\n"], [441, "        output_ip_ihl_reg <= 0;\n"], [442, "        output_ip_dscp_reg <= 0;\n"], [443, "        output_ip_ecn_reg <= 0;\n"], [444, "        output_ip_length_reg <= 0;\n"], [445, "        output_ip_identification_reg <= 0;\n"], [446, "        output_ip_flags_reg <= 0;\n"], [447, "        output_ip_fragment_offset_reg <= 0;\n"], [448, "        output_ip_ttl_reg <= 0;\n"], [449, "        output_ip_protocol_reg <= 0;\n"], [450, "        output_ip_header_checksum_reg <= 0;\n"], [451, "        output_ip_source_ip_reg <= 0;\n"], [452, "        output_ip_dest_ip_reg <= 0;\n"], [453, "        busy_reg <= 0;\n"], [454, "        error_header_early_termination_reg <= 0;\n"], [455, "        error_payload_early_termination_reg <= 0;\n"], [456, "        error_invalid_header_reg <= 0;\n"], [457, "        error_invalid_checksum_reg <= 0;\n"], [478, "        if (store_eth_hdr) begin\n"], [479, "            output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [480, "            output_eth_src_mac_reg <= input_eth_src_mac;\n"], [481, "            output_eth_type_reg <= input_eth_type;\n"], [482, "        end\n"], [484, "        if (store_last_word) begin\n"], [485, "            last_word_data_reg <= output_ip_payload_tdata_int;\n"], [486, "        end\n"], [488, "        if (store_ip_version_ihl) {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata;\n"], [489, "        if (store_ip_dscp_ecn) {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata;\n"], [490, "        if (store_ip_length_0) output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [491, "        if (store_ip_length_1) output_ip_length_reg[15: 8] <= input_eth_payload_tdata;\n"], [492, "        if (store_ip_identification_0) output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [493, "        if (store_ip_identification_1) output_ip_identification_reg[15: 8] <= input_eth_payload_tdata;\n"], [494, "        if (store_ip_flags_fragment_offset_0) output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata;\n"], [495, "        if (store_ip_flags_fragment_offset_1) {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata;\n"], [496, "        if (store_ip_ttl) output_ip_ttl_reg <= input_eth_payload_tdata;\n"], [497, "        if (store_ip_protocol) output_ip_protocol_reg <= input_eth_payload_tdata;\n"], [498, "        if (store_ip_header_checksum_0) output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [499, "        if (store_ip_header_checksum_1) output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata;\n"], [500, "        if (store_ip_source_ip_0) output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [501, "        if (store_ip_source_ip_1) output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata;\n"], [502, "        if (store_ip_source_ip_2) output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata;\n"], [503, "        if (store_ip_source_ip_3) output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata;\n"], [504, "        if (store_ip_dest_ip_0) output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [505, "        if (store_ip_dest_ip_1) output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata;\n"], [506, "        if (store_ip_dest_ip_2) output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata;\n"], [507, "        if (store_ip_dest_ip_3) output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata;\n"]], "Add": [[457, "        frame_ptr_reg <= 16'd0;\n"], [457, "        hdr_sum_reg <= 16'd0;\n"], [457, "        input_eth_hdr_ready_reg <= 1'b0;\n"], [457, "        input_eth_payload_tready_reg <= 1'b0;\n"], [457, "        output_ip_hdr_valid_reg <= 1'b0;\n"], [457, "        busy_reg <= 1'b0;\n"], [457, "        error_header_early_termination_reg <= 1'b0;\n"], [457, "        error_payload_early_termination_reg <= 1'b0;\n"], [457, "        error_invalid_header_reg <= 1'b0;\n"], [457, "        error_invalid_checksum_reg <= 1'b0;\n"], [475, "    end\n"], [486, "    if (store_eth_hdr) begin\n"], [486, "        output_eth_dest_mac_reg <= input_eth_dest_mac;\n"], [486, "        output_eth_src_mac_reg <= input_eth_src_mac;\n"], [486, "        output_eth_type_reg <= input_eth_type;\n"], [486, "    end\n"], [507, "    if (store_last_word) begin\n"], [507, "        last_word_data_reg <= output_ip_payload_tdata_int;\n"], [508, "    if (store_ip_version_ihl) {output_ip_version_reg, output_ip_ihl_reg} <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_dscp_ecn) {output_ip_dscp_reg, output_ip_ecn_reg} <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_length_0) output_ip_length_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_length_1) output_ip_length_reg[15: 8] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_identification_0) output_ip_identification_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_identification_1) output_ip_identification_reg[15: 8] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_flags_fragment_offset_0) output_ip_fragment_offset_reg[ 7:0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_flags_fragment_offset_1) {output_ip_flags_reg, output_ip_fragment_offset_reg[12:8]} <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_ttl) output_ip_ttl_reg <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_protocol) output_ip_protocol_reg <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_header_checksum_0) output_ip_header_checksum_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_header_checksum_1) output_ip_header_checksum_reg[15: 8] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_source_ip_0) output_ip_source_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_source_ip_1) output_ip_source_ip_reg[15: 8] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_source_ip_2) output_ip_source_ip_reg[23:16] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_source_ip_3) output_ip_source_ip_reg[31:24] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_dest_ip_0) output_ip_dest_ip_reg[ 7: 0] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_dest_ip_1) output_ip_dest_ip_reg[15: 8] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_dest_ip_2) output_ip_dest_ip_reg[23:16] <= input_eth_payload_tdata;\n"], [508, "    if (store_ip_dest_ip_3) output_ip_dest_ip_reg[31:24] <= input_eth_payload_tdata;\n"]]}}