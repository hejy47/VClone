{"Source Block": ["verilog-ethernet/rtl/axis_eth_fcs_check.v@109:210@HdlStmProcess", "    .data_in(input_axis_tdata_d3),\n    .crc_state(crc_state),\n    .crc_next(crc_next)\n);\n\nalways @* begin\n    state_next = STATE_IDLE;\n\n    reset_crc = 0;\n    update_crc = 0;\n    shift_in = 0;\n    shift_reset = 0;\n\n    frame_ptr_next = frame_ptr_reg;\n\n    input_axis_tready_next = 0;\n\n    output_axis_tdata_int = 0;\n    output_axis_tvalid_int = 0;\n    output_axis_tlast_int = 0;\n    output_axis_tuser_int = 0;\n\n    error_bad_fcs_next = 0;\n\n    case (state_reg)\n        STATE_IDLE: begin\n            // idle state - wait for data\n            input_axis_tready_next = output_axis_tready_int_early;\n            frame_ptr_next = 0;\n            reset_crc = 1;\n\n            output_axis_tdata_int = input_axis_tdata_d3;\n            output_axis_tvalid_int = input_axis_tvalid_d3 & input_axis_tvalid;\n            output_axis_tlast_int = 0;\n            output_axis_tuser_int = 0;\n\n            if (input_axis_tready & input_axis_tvalid) begin\n                shift_in = 1;\n\n                if (input_axis_tvalid_d3) begin\n                    frame_ptr_next = 1;\n                    reset_crc = 0;\n                    update_crc = 1;\n                    if (input_axis_tlast) begin\n                        shift_reset = 1;\n                        reset_crc = 1;\n                        output_axis_tlast_int = 1;\n                        output_axis_tuser_int = input_axis_tuser;\n                        if ({input_axis_tdata, input_axis_tdata_d0, input_axis_tdata_d1, input_axis_tdata_d2} != ~crc_next) begin\n                            output_axis_tuser_int = 1;\n                            error_bad_fcs_next = 1;\n                        end\n                        input_axis_tready_next = output_axis_tready_int_early;\n                        state_next = STATE_IDLE;\n                    end else begin\n                        state_next = STATE_PAYLOAD;\n                    end\n                end else begin\n                    state_next = STATE_IDLE;\n                end\n            end else begin\n                state_next = STATE_IDLE;\n            end\n        end\n        STATE_PAYLOAD: begin\n            // transfer payload\n            input_axis_tready_next = output_axis_tready_int_early;\n\n            output_axis_tdata_int = input_axis_tdata_d3;\n            output_axis_tvalid_int = input_axis_tvalid_d3 & input_axis_tvalid;\n            output_axis_tlast_int = 0;\n            output_axis_tuser_int = 0;\n\n            if (input_axis_tready & input_axis_tvalid) begin\n                frame_ptr_next = frame_ptr_reg + 1;\n                shift_in = 1;\n                update_crc = 1;\n                if (input_axis_tlast) begin\n                    shift_reset = 1;\n                    reset_crc = 1;\n                    output_axis_tlast_int = 1;\n                    output_axis_tuser_int = input_axis_tuser;\n                    if ({input_axis_tdata, input_axis_tdata_d0, input_axis_tdata_d1, input_axis_tdata_d2} != ~crc_next) begin\n                        output_axis_tuser_int = 1;\n                        error_bad_fcs_next = 1;\n                    end\n                    input_axis_tready_next = output_axis_tready_int_early;\n                    state_next = STATE_IDLE;\n                end else begin\n                    state_next = STATE_PAYLOAD;\n                end\n            end else begin\n                state_next = STATE_PAYLOAD;\n            end\n        end\n    endcase\nend\n\nalways @(posedge clk) begin\n    if (rst) begin\n        state_reg <= STATE_IDLE;\n        \n"], "Clone Blocks": [], "Diff Content": {"Delete": [[117, "    reset_crc = 0;\n"], [118, "    update_crc = 0;\n"], [119, "    shift_in = 0;\n"], [120, "    shift_reset = 0;\n"], [122, "    frame_ptr_next = frame_ptr_reg;\n"], [124, "    input_axis_tready_next = 0;\n"], [126, "    output_axis_tdata_int = 0;\n"], [127, "    output_axis_tvalid_int = 0;\n"], [128, "    output_axis_tlast_int = 0;\n"], [129, "    output_axis_tuser_int = 0;\n"], [131, "    error_bad_fcs_next = 0;\n"], [137, "            frame_ptr_next = 0;\n"], [138, "            reset_crc = 1;\n"], [142, "            output_axis_tlast_int = 0;\n"], [143, "            output_axis_tuser_int = 0;\n"], [146, "                shift_in = 1;\n"], [149, "                    frame_ptr_next = 1;\n"], [150, "                    reset_crc = 0;\n"], [151, "                    update_crc = 1;\n"], [153, "                        shift_reset = 1;\n"], [154, "                        reset_crc = 1;\n"], [155, "                        output_axis_tlast_int = 1;\n"], [158, "                            output_axis_tuser_int = 1;\n"], [159, "                            error_bad_fcs_next = 1;\n"], [179, "            output_axis_tlast_int = 0;\n"], [180, "            output_axis_tuser_int = 0;\n"], [183, "                frame_ptr_next = frame_ptr_reg + 1;\n"], [184, "                shift_in = 1;\n"], [185, "                update_crc = 1;\n"], [187, "                    shift_reset = 1;\n"], [188, "                    reset_crc = 1;\n"], [189, "                    output_axis_tlast_int = 1;\n"], [192, "                        output_axis_tuser_int = 1;\n"], [193, "                        error_bad_fcs_next = 1;\n"]], "Add": [[122, "    reset_crc = 1'b0;\n"], [122, "    update_crc = 1'b0;\n"], [122, "    shift_in = 1'b0;\n"], [122, "    shift_reset = 1'b0;\n"], [124, "    input_axis_tready_next = 1'b0;\n"], [129, "    output_axis_tdata_int = 8'd0;\n"], [129, "    output_axis_tvalid_int = 1'b0;\n"], [129, "    output_axis_tlast_int = 1'b0;\n"], [129, "    output_axis_tuser_int = 1'b0;\n"], [131, "    error_bad_fcs_next = 1'b0;\n"], [138, "            reset_crc = 1'b1;\n"], [143, "            output_axis_tlast_int = 1'b0;\n"], [143, "            output_axis_tuser_int = 1'b0;\n"], [146, "                shift_in = 1'b1;\n"], [151, "                    reset_crc = 1'b0;\n"], [151, "                    update_crc = 1'b1;\n"], [155, "                        shift_reset = 1'b1;\n"], [155, "                        reset_crc = 1'b1;\n"], [155, "                        output_axis_tlast_int = 1'b1;\n"], [159, "                            output_axis_tuser_int = 1'b1;\n"], [159, "                            error_bad_fcs_next = 1'b1;\n"], [180, "            output_axis_tlast_int = 1'b0;\n"], [180, "            output_axis_tuser_int = 1'b0;\n"], [185, "                shift_in = 1'b1;\n"], [185, "                update_crc = 1'b1;\n"], [189, "                    shift_reset = 1'b1;\n"], [189, "                    reset_crc = 1'b1;\n"], [189, "                    output_axis_tlast_int = 1'b1;\n"], [193, "                        output_axis_tuser_int = 1'b1;\n"], [193, "                        error_bad_fcs_next = 1'b1;\n"]]}}